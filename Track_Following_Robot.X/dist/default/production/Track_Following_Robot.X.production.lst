

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 00:23:14 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     _D_CONSTANT:
    72                           	opt stack 0
    73  001001  FFFF               	dw	65535
    74  001003                     __end_of_D_CONSTANT:
    75                           	opt stack 0
    76  001003                     _I_CONSTANT:
    77                           	opt stack 0
    78  001003  04E2               	dw	1250
    79  001005                     __end_of_I_CONSTANT:
    80                           	opt stack 0
    81  001005                     _P_CONSTANT:
    82                           	opt stack 0
    83  001005  0096               	dw	150
    84  001007                     __end_of_P_CONSTANT:
    85                           	opt stack 0
    86  001007                     _TURN_TIME_ms:
    87                           	opt stack 0
    88  001007  0320               	dw	800
    89  001009                     __end_of_TURN_TIME_ms:
    90                           	opt stack 0
    91  001009                     _TURN_SPEED_DIVIDER:
    92                           	opt stack 0
    93  001009  00                 	db	0
    94  00100A                     __end_of_TURN_SPEED_DIVIDER:
    95                           	opt stack 0
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _CCP1CON	set	4029
   103  0000                     _CCP2CON	set	4026
   104  0000                     _CCPR1L	set	4030
   105  0000                     _CCPR2L	set	4027
   106  0000                     _HLVDCONbits	set	4050
   107  0000                     _INTCONbits	set	4082
   108  0000                     _IPR2bits	set	4002
   109  0000                     _OSCCONbits	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIE2bits	set	4000
   113  0000                     _PIR1bits	set	3998
   114  0000                     _PIR2bits	set	4001
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTD	set	3971
   117  0000                     _PORTDbits	set	3971
   118  0000                     _PORTEbits	set	3972
   119  0000                     _PR2	set	4043
   120  0000                     _RCONbits	set	4048
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _STKPTRbits	set	4092
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _T2CON	set	4042
   129  0000                     _T2CONbits	set	4042
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR2	set	4044
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISE	set	3990
   140  0000                     _TXSTA	set	4012
   141  0000                     _TXSTAbits	set	4012
   142  0000                     _TMR0IF	set	32658
   143  00100A                     STR_1:
   144  00100A  0A                 	db	10
   145  00100B  0D                 	db	13
   146  00100C  4B                 	db	75	;'K'
   147  00100D  77                 	db	119	;'w'
   148  00100E  61                 	db	97	;'a'
   149  00100F  6E                 	db	110	;'n'
   150  001010  74                 	db	116	;'t'
   151  001011  6C                 	db	108	;'l'
   152  001012  65                 	db	101	;'e'
   153  001013  6E                 	db	110	;'n'
   154  001014  20                 	db	32
   155  001015  41                 	db	65	;'A'
   156  001016  50                 	db	80	;'P'
   157  001017  53                 	db	83	;'S'
   158  001018  43                 	db	67	;'C'
   159  001019  31                 	db	49	;'1'
   160  00101A  32                 	db	50	;'2'
   161  00101B  39                 	db	57	;'9'
   162  00101C  39                 	db	57	;'9'
   163  00101D  20                 	db	32
   164  00101E  73                 	db	115	;'s'
   165  00101F  69                 	db	105	;'i'
   166  001020  6D                 	db	109	;'m'
   167  001021  70                 	db	112	;'p'
   168  001022  6C                 	db	108	;'l'
   169  001023  65                 	db	101	;'e'
   170  001024  20                 	db	32
   171  001025  63                 	db	99	;'c'
   172  001026  75                 	db	117	;'u'
   173  001027  72                 	db	114	;'r'
   174  001028  76                 	db	118	;'v'
   175  001029  65                 	db	101	;'e'
   176  00102A  20                 	db	32
   177  00102B  66                 	db	102	;'f'
   178  00102C  6F                 	db	111	;'o'
   179  00102D  6C                 	db	108	;'l'
   180  00102E  6C                 	db	108	;'l'
   181  00102F  6F                 	db	111	;'o'
   182  001030  77                 	db	119	;'w'
   183  001031  65                 	db	101	;'e'
   184  001032  72                 	db	114	;'r'
   185  001033  20                 	db	32
   186  001034  2D                 	db	45
   187  001035  2D                 	db	45
   188  001036  20                 	db	32
   189  001037  77                 	db	119	;'w'
   190  001038  69                 	db	105	;'i'
   191  001039  74                 	db	116	;'t'
   192  00103A  68                 	db	104	;'h'
   193  00103B  20                 	db	32
   194  00103C  65                 	db	101	;'e'
   195  00103D  72                 	db	114	;'r'
   196  00103E  72                 	db	114	;'r'
   197  00103F  6F                 	db	111	;'o'
   198  001040  72                 	db	114	;'r'
   199  001041  20                 	db	32
   200  001042  63                 	db	99	;'c'
   201  001043  6F                 	db	111	;'o'
   202  001044  64                 	db	100	;'d'
   203  001045  65                 	db	101	;'e'
   204  001046  73                 	db	115	;'s'
   205  001047  0A                 	db	10
   206  001048  0D                 	db	13
   207  001049  00                 	db	0
   208  00104A                     STR_6:
   209  00104A  20                 	db	32
   210  00104B  3C                 	db	60	;'<'
   211  00104C  72                 	db	114	;'r'
   212  00104D  65                 	db	101	;'e'
   213  00104E  73                 	db	115	;'s'
   214  00104F  65                 	db	101	;'e'
   215  001050  74                 	db	116	;'t'
   216  001051  3E                 	db	62	;'>'
   217  001052  20                 	db	32
   218  001053  00                 	db	0
   219  001054                     STR_5:
   220  001054  3C                 	db	60	;'<'
   221  001055  53                 	db	83	;'S'
   222  001056  54                 	db	84	;'T'
   223  001057  4B                 	db	75	;'K'
   224  001058  46                 	db	70	;'F'
   225  001059  55                 	db	85	;'U'
   226  00105A  4C                 	db	76	;'L'
   227  00105B  3E                 	db	62	;'>'
   228  00105C  00                 	db	0
   229  00105D                     STR_4:
   230  00105D  3C                 	db	60	;'<'
   231  00105E  57                 	db	87	;'W'
   232  00105F  44                 	db	68	;'D'
   233  001060  54                 	db	84	;'T'
   234  001061  20                 	db	32
   235  001062  54                 	db	84	;'T'
   236  001063  4F                 	db	79	;'O'
   237  001064  3E                 	db	62	;'>'
   238  001065  00                 	db	0
   239  001066                     STR_7:
   240  001066  5C                 	db	92	;'\'
   241  001067  3C                 	db	60	;'<'
   242  001068  4C                 	db	76	;'L'
   243  001069  56                 	db	86	;'V'
   244  00106A  44                 	db	68	;'D'
   245  00106B  3E                 	db	62	;'>'
   246  00106C  00                 	db	0
   247  00106D                     STR_3:
   248  00106D  3C                 	db	60	;'<'
   249  00106E  42                 	db	66	;'B'
   250  00106F  4F                 	db	79	;'O'
   251  001070  52                 	db	82	;'R'
   252  001071  3E                 	db	62	;'>'
   253  001072  00                 	db	0
   254  001073                     STR_2:
   255  001073  3C                 	db	60	;'<'
   256  001074  50                 	db	80	;'P'
   257  001075  4F                 	db	79	;'O'
   258  001076  52                 	db	82	;'R'
   259  001077  3E                 	db	62	;'>'
   260  001078  00                 	db	0
   261                           
   262                           ; #config settings
   263  001079  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  00223E                     __pcinit:
   267                           	opt stack 0
   268  00223E                     start_initialization:
   269                           	opt stack 0
   270  00223E                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (15 bytes)
   274  00223E  EE00  F041         	lfsr	0,__pbssCOMRAM
   275  002242  0E0F               	movlw	15
   276  002244                     clear_0:
   277  002244  6AEE               	clrf	postinc0,c
   278  002246  06E8               	decf	wreg,f,c
   279  002248  E1FD               	bnz	clear_0
   280  00224A                     end_of_initialization:
   281                           	opt stack 0
   282  00224A                     __end_of__initialization:
   283                           	opt stack 0
   284  00224A  0100               	movlb	0
   285  00224C  EF5B  F00B         	goto	_main	;jump to C main() function
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssCOMRAM
   290  000041                     __pbssCOMRAM:
   291                           	opt stack 0
   292  000041                     main@F4194:
   293                           	opt stack 0
   294  000041                     	ds	3
   295  000044                     PID_LineFollowing@D:
   296                           	opt stack 0
   297  000044                     	ds	2
   298  000046                     PID_LineFollowing@delta_velocity:
   299                           	opt stack 0
   300  000046                     	ds	2
   301  000048                     _I:
   302                           	opt stack 0
   303  000048                     	ds	2
   304  00004A                     _threshold:
   305                           	opt stack 0
   306  00004A                     	ds	2
   307  00004C                     _CCW_rotation_flag:
   308                           	opt stack 0
   309  00004C                     	ds	1
   310  00004D                     _CW_rotation_flag:
   311                           	opt stack 0
   312  00004D                     	ds	1
   313  00004E                     _SeeLine:
   314                           	opt stack 0
   315  00004E                     	ds	1
   316  00004F                     _lvd_flag:
   317                           	opt stack 0
   318  00004F                     	ds	1
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000001                     ??_high_isr:
   326  000001                     
   327                           ; 1 bytes @ 0x0
   328  000001                     	ds	14
   329  00000F                     ??_set_leds:
   330  00000F                     ??_SetChanADC:
   331  00000F                     ?_printf:
   332                           	opt stack 0
   333  00000F                     ?_ReadTimer0:
   334                           	opt stack 0
   335  00000F                     ?_ReadADC:
   336                           	opt stack 0
   337  00000F                     ?___aldiv:
   338                           	opt stack 0
   339  00000F                     OpenADC@config2:
   340                           	opt stack 0
   341  00000F                     OpenPWM1@period:
   342                           	opt stack 0
   343  00000F                     OpenPWM2@period:
   344                           	opt stack 0
   345  00000F                     OpenTimer0@config:
   346                           	opt stack 0
   347  00000F                     OpenTimer2@config:
   348                           	opt stack 0
   349  00000F                     set_osc_32MHz@i:
   350                           	opt stack 0
   351  00000F                     printf@f:
   352                           	opt stack 0
   353  00000F                     SetDCPWM1@dutycycle:
   354                           	opt stack 0
   355  00000F                     SetDCPWM2@dutycycle:
   356                           	opt stack 0
   357  00000F                     WriteTimer0@timer0:
   358                           	opt stack 0
   359  00000F                     OpenUSART@spbrg:
   360                           	opt stack 0
   361  00000F                     gtrap@count:
   362                           	opt stack 0
   363  00000F                     ___aldiv@dividend:
   364                           	opt stack 0
   365                           
   366                           ; 4 bytes @ 0xE
   367  00000F                     	ds	1
   368  000010                     OpenADC@portconfig:
   369                           	opt stack 0
   370  000010                     SetChanADC@channel:
   371                           	opt stack 0
   372  000010                     OpenPWM2@ccp2mx:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0xF
   376  000010                     	ds	1
   377  000011                     ??_SetDCPWM2:
   378  000011                     ??_SetDCPWM1:
   379  000011                     ??_OpenADC:
   380  000011                     ??_ReadADC:
   381  000011                     OpenUSART@config:
   382                           	opt stack 0
   383  000011                     printf@ap:
   384                           	opt stack 0
   385  000011                     ReadTimer0@timer:
   386                           	opt stack 0
   387  000011                     WriteTimer0@timer:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x10
   391  000011                     	ds	2
   392  000013                     ?_adc:
   393                           	opt stack 0
   394  000013                     ?___lwdiv:
   395                           	opt stack 0
   396  000013                     ?___lwmod:
   397                           	opt stack 0
   398  000013                     printf@c:
   399                           	opt stack 0
   400  000013                     OpenADC@config:
   401                           	opt stack 0
   402  000013                     SetDCPWM1@DCycle:
   403                           	opt stack 0
   404  000013                     SetDCPWM2@DCycle:
   405                           	opt stack 0
   406  000013                     ___lwdiv@dividend:
   407                           	opt stack 0
   408  000013                     ___lwmod@dividend:
   409                           	opt stack 0
   410  000013                     ___aldiv@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x12
   414  000013                     	ds	1
   415  000014                     PORtask@count1:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x13
   419  000014                     	ds	1
   420  000015                     adc@channel:
   421                           	opt stack 0
   422  000015                     ___lwdiv@divisor:
   423                           	opt stack 0
   424  000015                     ___lwmod@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x14
   428  000015                     	ds	1
   429  000016                     ??_check_sensors:
   430                           
   431                           ; 0 bytes @ 0x15
   432  000016                     	ds	1
   433  000017                     ___aldiv@counter:
   434                           	opt stack 0
   435  000017                     ___lwmod@counter:
   436                           	opt stack 0
   437  000017                     ___lwdiv@quotient:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x16
   441  000017                     	ds	1
   442  000018                     ___aldiv@sign:
   443                           	opt stack 0
   444  000018                     PORtask@count2:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0x17
   448  000018                     	ds	1
   449  000019                     ___lwdiv@counter:
   450                           	opt stack 0
   451  000019                     ___aldiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x18
   455  000019                     	ds	3
   456  00001C                     
   457                           ; 0 bytes @ 0x1B
   458  00001C                     	ds	1
   459  00001D                     ?___wmul:
   460                           	opt stack 0
   461  00001D                     ___wmul@multiplier:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x1C
   465  00001D                     	ds	2
   466  00001F                     ___wmul@multiplicand:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x1E
   470  00001F                     	ds	2
   471  000021                     ___wmul@product:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x20
   475  000021                     	ds	2
   476  000023                     ?___awdiv:
   477                           	opt stack 0
   478  000023                     ___awdiv@dividend:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x22
   482  000023                     	ds	2
   483  000025                     ___awdiv@divisor:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x24
   487  000025                     	ds	2
   488  000027                     ___awdiv@counter:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x26
   492  000027                     	ds	1
   493  000028                     ___awdiv@sign:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x27
   497  000028                     	ds	1
   498  000029                     ___awdiv@quotient:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x28
   502  000029                     	ds	2
   503  00002B                     MotorControl@delta_velocity:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x2A
   507  00002B                     	ds	2
   508  00002D                     MotorControl@speed_divider:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x2C
   512  00002D                     	ds	1
   513  00002E                     ??_MotorControl:
   514                           
   515                           ; 0 bytes @ 0x2D
   516  00002E                     	ds	1
   517  00002F                     MotorControl@left_dir_modifier:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x2E
   521  00002F                     	ds	1
   522  000030                     MotorControl@right_dir_modifier:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x2F
   526  000030                     	ds	1
   527  000031                     MotorControl@left_duty_cycle:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x30
   531  000031                     	ds	2
   532  000033                     MotorControl@right_duty_cycle:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x32
   536  000033                     	ds	2
   537  000035                     ??_SharpTurn:
   538  000035                     _AllSensorsTriggered$472:
   539                           	opt stack 0
   540  000035                     PID_LineFollowing@error:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x34
   544  000035                     	ds	1
   545  000036                     SharpTurn@direction:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x35
   549  000036                     	ds	1
   550  000037                     ??_PID_LineFollowing:
   551  000037                     SharpTurn@delta_velocity:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x36
   555  000037                     	ds	2
   556  000039                     GetBackonTrack@error:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x38
   560  000039                     	ds	2
   561  00003B                     ??_GetBackonTrack:
   562                           
   563                           ; 0 bytes @ 0x3A
   564  00003B                     	ds	1
   565  00003C                     GetBackonTrack@i:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x3B
   569  00003C                     	ds	2
   570  00003E                     main@error:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x3D
   574  00003E                     	ds	3
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           
   578 ;;
   579 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   580 ;;
   581 ;; *************** function _main *****************
   582 ;; Defined at:
   583 ;;		line 25 in file "../Robot Files/main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  error           3   61[COMRAM] char [3]
   588 ;; Return value:  Size  Location     Type
   589 ;;		None               void
   590 ;; Registers used:
   591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;Total ram usage:        3 bytes
   602 ;; Hardware stack levels required when called:    6
   603 ;; This function calls:
   604 ;;		_AllSensorsTriggered
   605 ;;		_GetBackonTrack
   606 ;;		_LVtrap
   607 ;;		_OpenTimer0
   608 ;;		_PID_LineFollowing
   609 ;;		_WriteTimer0
   610 ;;		_check_sensors
   611 ;;		_initialization
   612 ;;		_lvd_flag_set
   613 ;;		_printf
   614 ;;		_set_leds
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text0
   621  0016B6                     __ptext0:
   622                           	opt stack 0
   623  0016B6                     _main:
   624                           	opt stack 25
   625                           
   626                           ;main.c: 27: signed char error[3]={0};
   627                           
   628                           ;incstack = 0
   629  0016B6  C041  F03E         	movff	main@F4194,main@error
   630  0016BA  C042  F03F         	movff	main@F4194+1,main@error+1
   631  0016BE  C043  F040         	movff	main@F4194+2,main@error+2
   632                           
   633                           ;main.c: 30: initialization();
   634  0016C2  ECA4  F00D         	call	_initialization	;wreg free
   635                           
   636                           ;main.c: 35: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   637  0016C6  0E0A               	movlw	low STR_1
   638  0016C8  6E0F               	movwf	printf@f,c
   639  0016CA  0E10               	movlw	high STR_1
   640  0016CC  6E10               	movwf	printf@f+1,c
   641  0016CE  EC08  F010         	call	_printf	;wreg free
   642  0016D2  0004               	clrwdt		;# 
   643                           
   644                           ;main.c: 37: threshold = 575u;
   645  0016D4  0E02               	movlw	2
   646  0016D6  6E4B               	movwf	_threshold+1,c
   647  0016D8  0E3F               	movlw	63
   648  0016DA  6E4A               	movwf	_threshold,c
   649                           
   650                           ;main.c: 41: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   651  0016DC  0E16               	movlw	22
   652  0016DE  ECA4  F010         	call	_OpenTimer0
   653                           
   654                           ;main.c: 42: WriteTimer0(0);
   655  0016E2  0E00               	movlw	0
   656  0016E4  6E10               	movwf	WriteTimer0@timer0+1,c
   657  0016E6  0E00               	movlw	0
   658  0016E8  6E0F               	movwf	WriteTimer0@timer0,c
   659  0016EA  EC3A  F011         	call	_WriteTimer0	;wreg free
   660                           
   661                           ;main.c: 43: TMR0IF = 0;
   662  0016EE  94F2               	bcf	intcon,2,c	;volatile
   663  0016F0  D000               	goto	l2756
   664  0016F2                     l2756:
   665                           
   666                           ;main.c: 46: {
   667                           ;main.c: 47: check_sensors();
   668  0016F2  EC4C  F00C         	call	_check_sensors	;wreg free
   669                           
   670                           ;main.c: 54: switch(SeeLine.B)
   671  0016F6  D027               	goto	l2784
   672  0016F8                     l2758:
   673                           
   674                           ;main.c: 57: error[2]=1; break;
   675  0016F8  0E01               	movlw	1
   676  0016FA  D023               	goto	L7
   677  0016FC                     l2760:
   678                           
   679                           ;main.c: 59: error[2]=2; break;
   680  0016FC  0E02               	movlw	2
   681  0016FE  D021               	goto	L7
   682  001700                     l2762:
   683                           
   684                           ;main.c: 61: error[2]=3; break;
   685  001700  0E03               	movlw	3
   686  001702  D01F               	goto	L7
   687  001704                     l2764:
   688                           
   689                           ;main.c: 63: error[2]=4; break;
   690  001704  0E04               	movlw	4
   691  001706  D01D               	goto	L7
   692  001708                     l74:
   693                           
   694                           ;main.c: 65: error[2]=-1; break;
   695  001708  6840               	setf	main@error+2,c
   696  00170A  D044               	goto	l2786
   697  00170C                     l2766:
   698                           
   699                           ;main.c: 67: error[2]=-2; break;
   700  00170C  0EFE               	movlw	254
   701  00170E  D019               	goto	L7
   702  001710                     l2768:
   703                           
   704                           ;main.c: 69: error[2]=-3; break;
   705  001710  0EFD               	movlw	253
   706  001712  D017               	goto	L7
   707  001714                     l2770:
   708                           
   709                           ;main.c: 71: error[2]=-4; break;
   710  001714  0EFC               	movlw	252
   711  001716  D015               	goto	L7
   712  001718                     l2772:
   713                           
   714                           ;main.c: 73: {
   715                           ;main.c: 74: CW_rotation_flag = 1;
   716  001718  0E01               	movlw	1
   717  00171A  6E4D               	movwf	_CW_rotation_flag,c
   718                           
   719                           ;main.c: 75: CCW_rotation_flag = 0;
   720  00171C  0E00               	movlw	0
   721  00171E  6E4C               	movwf	_CCW_rotation_flag,c
   722                           
   723                           ;main.c: 76: }break;
   724  001720  D039               	goto	l2786
   725  001722                     l2774:
   726                           
   727                           ;main.c: 78: {
   728                           ;main.c: 79: CCW_rotation_flag = 1;
   729  001722  0E01               	movlw	1
   730  001724  6E4C               	movwf	_CCW_rotation_flag,c
   731                           
   732                           ;main.c: 80: CW_rotation_flag = 0;
   733  001726  0E00               	movlw	0
   734  001728  6E4D               	movwf	_CW_rotation_flag,c
   735                           
   736                           ;main.c: 81: }break;
   737  00172A  D034               	goto	l2786
   738  00172C                     l2776:
   739                           
   740                           ;main.c: 83: GetBackonTrack(error); break;
   741  00172C  0E3E               	movlw	low main@error
   742  00172E  6E39               	movwf	GetBackonTrack@error,c
   743  001730  0E00               	movlw	high main@error
   744  001732  6E3A               	movwf	GetBackonTrack@error+1,c
   745  001734  ECA8  F00A         	call	_GetBackonTrack	;wreg free
   746  001738  D02D               	goto	l2786
   747  00173A                     l2778:
   748                           
   749                           ;main.c: 85: AllSensorsTriggered(); break;
   750  00173A  EC6A  F00E         	call	_AllSensorsTriggered	;wreg free
   751  00173E  D02A               	goto	l2786
   752  001740                     l2780:
   753                           
   754                           ;main.c: 87: error[2]=0; break;
   755  001740  0E00               	movlw	0
   756  001742                     L7:
   757  001742  6E40               	movwf	main@error+2,c
   758                           
   759                           ;main.c: 88: }
   760  001744  D027               	goto	l2786
   761  001746                     l2784:
   762  001746  504E               	movf	_SeeLine,w,c
   763  001748  0B1F               	andlw	31
   764                           
   765                           ; Switch size 1, requested type "space"
   766                           ; Number of cases is 12, Range of values is 0 to 31
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte           37    19 (average)
   770                           ;	Chosen strategy is simple_byte
   771  00174A  0A00               	xorlw	0	; case 0
   772  00174C  B4D8               	btfsc	status,2,c
   773  00174E  D7EE               	goto	l2776
   774  001750  0A01               	xorlw	1	; case 1
   775  001752  B4D8               	btfsc	status,2,c
   776  001754  D7D7               	goto	l2764
   777  001756  0A03               	xorlw	3	; case 2
   778  001758  B4D8               	btfsc	status,2,c
   779  00175A  D7D0               	goto	l2760
   780  00175C  0A01               	xorlw	1	; case 3
   781  00175E  B4D8               	btfsc	status,2,c
   782  001760  D7CF               	goto	l2762
   783  001762  0A05               	xorlw	5	; case 6
   784  001764  B4D8               	btfsc	status,2,c
   785  001766  D7C8               	goto	l2758
   786  001768  0A01               	xorlw	1	; case 7
   787  00176A  B4D8               	btfsc	status,2,c
   788  00176C  D7D5               	goto	l2772
   789  00176E  0A0F               	xorlw	15	; case 8
   790  001770  B4D8               	btfsc	status,2,c
   791  001772  D7CC               	goto	l2766
   792  001774  0A04               	xorlw	4	; case 12
   793  001776  B4D8               	btfsc	status,2,c
   794  001778  D7C7               	goto	l74
   795  00177A  0A1C               	xorlw	28	; case 16
   796  00177C  B4D8               	btfsc	status,2,c
   797  00177E  D7CA               	goto	l2770
   798  001780  0A08               	xorlw	8	; case 24
   799  001782  B4D8               	btfsc	status,2,c
   800  001784  D7C5               	goto	l2768
   801  001786  0A04               	xorlw	4	; case 28
   802  001788  B4D8               	btfsc	status,2,c
   803  00178A  D7CB               	goto	l2774
   804  00178C  0A03               	xorlw	3	; case 31
   805  00178E  B4D8               	btfsc	status,2,c
   806  001790  D7D4               	goto	l2778
   807  001792  D7D6               	goto	l2780
   808  001794                     l2786:
   809                           
   810                           ;main.c: 89: set_leds();
   811  001794  ECEC  F00D         	call	_set_leds	;wreg free
   812                           
   813                           ;main.c: 90: PID_LineFollowing(error);
   814  001798  0E3E               	movlw	low main@error
   815  00179A  6E35               	movwf	PID_LineFollowing@error,c
   816  00179C  0E00               	movlw	high main@error
   817  00179E  6E36               	movwf	PID_LineFollowing@error+1,c
   818  0017A0  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   819  0017A4  0004               	clrwdt		;# 
   820                           
   821                           ;main.c: 93: if(lvd_flag_set()) LVtrap();
   822  0017A6  EC59  F011         	call	_lvd_flag_set	;wreg free
   823  0017AA  0900               	iorlw	0
   824  0017AC  B4D8               	btfsc	status,2,c
   825  0017AE  D7A1               	goto	l2756
   826  0017B0  ECB4  F010         	call	_LVtrap	;wreg free
   827  0017B4  D79E               	goto	l2756
   828  0017B6  EF0C  F000         	goto	start
   829  0017BA                     __end_of_main:
   830                           	opt stack 0
   831                           intcon	equ	0xFF2
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           status	equ	0xFD8
   835                           
   836 ;; *************** function _lvd_flag_set *****************
   837 ;; Defined at:
   838 ;;		line 47 in file "../Robot Files/interrupts.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      unsigned char 
   845 ;; Registers used:
   846 ;;		wreg, status,2
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    1
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text1
   867  0022B2                     __ptext1:
   868                           	opt stack 0
   869  0022B2                     _lvd_flag_set:
   870                           	opt stack 29
   871                           
   872                           ;interrupts.c: 49: return lvd_flag;
   873                           
   874                           ;incstack = 0
   875  0022B2  504F               	movf	_lvd_flag,w,c
   876  0022B4  D000               	goto	l380
   877  0022B6                     l380:
   878  0022B6  0012               	return		;funcret
   879  0022B8                     __end_of_lvd_flag_set:
   880                           	opt stack 0
   881                           intcon	equ	0xFF2
   882                           postinc0	equ	0xFEE
   883                           wreg	equ	0xFE8
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _initialization *****************
   887 ;; Defined at:
   888 ;;		line 65 in file "../Robot Files/sumovore.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;		None               void
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    5
   909 ;; This function calls:
   910 ;;		_OpenADC
   911 ;;		_OpenPWM1
   912 ;;		_OpenPWM2
   913 ;;		_OpenTimer2
   914 ;;		_OpenUSART
   915 ;;		_SetDCPWM1
   916 ;;		_SetDCPWM2
   917 ;;		_openLVD
   918 ;;		_openPORTA
   919 ;;		_openPORTB
   920 ;;		_openPORTCforPWM
   921 ;;		_openPORTCforUSART
   922 ;;		_openPORTD
   923 ;;		_openPORTE
   924 ;;		_reset_codes
   925 ;;		_set_osc_32MHz
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text2
   932  001B48                     __ptext2:
   933                           	opt stack 0
   934  001B48                     _initialization:
   935                           	opt stack 25
   936                           
   937                           ;sumovore.c: 67: SeeLine.B = 0;
   938                           
   939                           ;incstack = 0
   940  001B48  904E               	bcf	_SeeLine,0,c
   941  001B4A  924E               	bcf	_SeeLine,1,c
   942  001B4C  944E               	bcf	_SeeLine,2,c
   943  001B4E  964E               	bcf	_SeeLine,3,c
   944  001B50  984E               	bcf	_SeeLine,4,c
   945                           
   946                           ;sumovore.c: 68: RCONbits.IPEN = 1;
   947  001B52  8ED0               	bsf	4048,7,c	;volatile
   948                           
   949                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
   950  001B54  9EF2               	bcf	intcon,7,c	;volatile
   951                           
   952                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
   953  001B56  9CF2               	bcf	intcon,6,c	;volatile
   954                           
   955                           ;sumovore.c: 72: set_osc_32MHz();
   956  001B58  EC1F  F010         	call	_set_osc_32MHz	;wreg free
   957                           
   958                           ;sumovore.c: 73: openPORTCforUSART();
   959  001B5C  EC62  F011         	call	_openPORTCforUSART	;wreg free
   960                           
   961                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
   962                           ;sumovore.c: 76: 16 );
   963  001B60  0E00               	movlw	0
   964  001B62  6E10               	movwf	OpenUSART@spbrg+1,c
   965  001B64  0E10               	movlw	16
   966  001B66  6E0F               	movwf	OpenUSART@spbrg,c
   967  001B68  0E3C               	movlw	60
   968  001B6A  ECA5  F00E         	call	_OpenUSART
   969                           
   970                           ;sumovore.c: 82: openPORTD();
   971  001B6E  EC6B  F011         	call	_openPORTD	;wreg free
   972                           
   973                           ;sumovore.c: 83: PORTD = 0;
   974  001B72  0E00               	movlw	0
   975  001B74  6E83               	movwf	3971,c	;volatile
   976                           
   977                           ;sumovore.c: 85: reset_codes();
   978  001B76  EC91  F00F         	call	_reset_codes	;wreg free
   979                           
   980                           ;sumovore.c: 87: openPORTCforPWM();
   981  001B7A  EC4B  F011         	call	_openPORTCforPWM	;wreg free
   982                           
   983                           ;sumovore.c: 89: openPORTA();
   984  001B7E  EC68  F011         	call	_openPORTA	;wreg free
   985                           
   986                           ;sumovore.c: 90: openPORTB();
   987  001B82  EC65  F011         	call	_openPORTB	;wreg free
   988                           
   989                           ;sumovore.c: 91: openPORTE();
   990  001B86  EC5F  F011         	call	_openPORTE	;wreg free
   991                           
   992                           ;sumovore.c: 94: openLVD();
   993  001B8A  ECFD  F010         	call	_openLVD	;wreg free
   994                           
   995                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
   996  001B8E  0E0C               	movlw	12
   997  001B90  6E0F               	movwf	OpenADC@config2,c
   998  001B92  0E0A               	movlw	10
   999  001B94  6E10               	movwf	OpenADC@portconfig,c
  1000  001B96  0EA7               	movlw	167
  1001  001B98  EC0E  F00F         	call	_OpenADC
  1002                           
  1003                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1004  001B9C  9A82               	bcf	3970,5,c	;volatile
  1005                           
  1006                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1007  001B9E  9084               	bcf	3972,0,c	;volatile
  1008                           
  1009                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1010  001BA0  9082               	bcf	3970,0,c	;volatile
  1011                           
  1012                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1013  001BA2  9284               	bcf	3972,1,c	;volatile
  1014                           
  1015                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1016  001BA4  0E06               	movlw	6
  1017  001BA6  ECEF  F010         	call	_OpenTimer2
  1018                           
  1019                           ;sumovore.c: 110: OpenPWM1(199);
  1020  001BAA  0EC7               	movlw	199
  1021  001BAC  EC28  F011         	call	_OpenPWM1
  1022                           
  1023                           ;sumovore.c: 112: OpenPWM2(199);
  1024  001BB0  0EC7               	movlw	199
  1025  001BB2  ECEC  F00F         	call	_OpenPWM2
  1026                           
  1027                           ;sumovore.c: 113: SetDCPWM1(0);
  1028  001BB6  0E00               	movlw	0
  1029  001BB8  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1030  001BBA  0E00               	movlw	0
  1031  001BBC  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1032  001BBE  ECCF  F00F         	call	_SetDCPWM1	;wreg free
  1033                           
  1034                           ;sumovore.c: 116: SetDCPWM2(0);
  1035  001BC2  0E00               	movlw	0
  1036  001BC4  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1037  001BC6  0E00               	movlw	0
  1038  001BC8  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1039  001BCA  ECB2  F00F         	call	_SetDCPWM2	;wreg free
  1040                           
  1041                           ;sumovore.c: 117: threshold = 512u;
  1042  001BCE  0E02               	movlw	2
  1043  001BD0  6E4B               	movwf	_threshold+1,c
  1044  001BD2  0E00               	movlw	0
  1045  001BD4  6E4A               	movwf	_threshold,c
  1046  001BD6  0012               	return		;funcret
  1047  001BD8                     __end_of_initialization:
  1048                           	opt stack 0
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           status	equ	0xFD8
  1053                           
  1054 ;; *************** function _set_osc_32MHz *****************
  1055 ;; Defined at:
  1056 ;;		line 18 in file "../Robot Files/osc.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  i               2   14[COMRAM] int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;		None               void
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        2 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_initialization
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text3
  1085  00203E                     __ptext3:
  1086                           	opt stack 0
  1087  00203E                     _set_osc_32MHz:
  1088                           	opt stack 28
  1089                           
  1090                           ;osc.c: 20: int i;
  1091                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1092                           
  1093                           ;incstack = 0
  1094  00203E  8CD3               	bsf	4051,6,c	;volatile
  1095                           
  1096                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1097  002040  8AD3               	bsf	4051,5,c	;volatile
  1098                           
  1099                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1100  002042  88D3               	bsf	4051,4,c	;volatile
  1101                           
  1102                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1103  002044  8C9B               	bsf	3995,6,c	;volatile
  1104                           
  1105                           ;osc.c: 28: for(i=0;i<500;i++);
  1106  002046  0E00               	movlw	0
  1107  002048  6E10               	movwf	set_osc_32MHz@i+1,c
  1108  00204A  0E00               	movlw	0
  1109  00204C  6E0F               	movwf	set_osc_32MHz@i,c
  1110  00204E                     l1590:
  1111  00204E  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1112  002050  D008               	goto	l1594
  1113  002052  0EF4               	movlw	244
  1114  002054  5C0F               	subwf	set_osc_32MHz@i,w,c
  1115  002056  0E01               	movlw	1
  1116  002058  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1117  00205A  B0D8               	btfsc	status,0,c
  1118  00205C  D005               	goto	l389
  1119  00205E  D001               	goto	l1594
  1120  002060  D003               	goto	l389
  1121  002062                     l1594:
  1122  002062  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1123  002064  2A10               	incf	set_osc_32MHz@i+1,f,c
  1124  002066  D7F3               	goto	l1590
  1125  002068                     l389:
  1126  002068  0012               	return		;funcret
  1127  00206A                     __end_of_set_osc_32MHz:
  1128                           	opt stack 0
  1129                           intcon	equ	0xFF2
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           status	equ	0xFD8
  1133                           
  1134 ;; *************** function _reset_codes *****************
  1135 ;; Defined at:
  1136 ;;		line 282 in file "../Robot Files/sumovore.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;		None               void
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    4
  1157 ;; This function calls:
  1158 ;;		_BORtask
  1159 ;;		_PORtask
  1160 ;;		_RESETtask
  1161 ;;		_STKFULtask
  1162 ;;		_WDTtask
  1163 ;;		_isBOR
  1164 ;;		_isPOR
  1165 ;;		_isWDTTO
  1166 ;; This function is called by:
  1167 ;;		_initialization
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text4
  1172  001F22                     __ptext4:
  1173                           	opt stack 0
  1174  001F22                     _reset_codes:
  1175                           	opt stack 25
  1176                           
  1177                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1178                           
  1179                           ;incstack = 0
  1180  001F22  EC70  F010         	call	_isPOR	;wreg free
  1181  001F26  0900               	iorlw	0
  1182  001F28  B4D8               	btfsc	status,2,c
  1183  001F2A  D003               	goto	l2450
  1184  001F2C  ECAE  F00C         	call	_PORtask	;wreg free
  1185  001F30  D018               	goto	l320
  1186  001F32                     l2450:
  1187                           
  1188                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1189  001F32  EC09  F011         	call	_isBOR	;wreg free
  1190  001F36  0900               	iorlw	0
  1191  001F38  B4D8               	btfsc	status,2,c
  1192  001F3A  D003               	goto	l2454
  1193  001F3C  EC94  F010         	call	_BORtask	;wreg free
  1194  001F40  D010               	goto	l320
  1195  001F42                     l2454:
  1196                           
  1197                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1198  001F42  EC5D  F010         	call	_isWDTTO	;wreg free
  1199  001F46  0900               	iorlw	0
  1200  001F48  B4D8               	btfsc	status,2,c
  1201  001F4A  D003               	goto	l316
  1202  001F4C  ECD3  F010         	call	_WDTtask	;wreg free
  1203  001F50  D008               	goto	l320
  1204  001F52                     l316:
  1205                           
  1206                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1207  001F52  AEFC               	btfss	stkptr,7,c	;volatile
  1208  001F54  D003               	goto	l2460
  1209  001F56  ECC4  F010         	call	_STKFULtask	;wreg free
  1210  001F5A  D003               	goto	l320
  1211  001F5C                     l2460:
  1212                           
  1213                           ;sumovore.c: 297: else RESETtask();
  1214  001F5C  ECE1  F010         	call	_RESETtask	;wreg free
  1215  001F60  D000               	goto	l320
  1216  001F62                     l320:
  1217  001F62  0012               	return		;funcret
  1218  001F64                     __end_of_reset_codes:
  1219                           	opt stack 0
  1220                           stkptr	equ	0xFFC
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _isWDTTO *****************
  1227 ;; Defined at:
  1228 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      unsigned char 
  1235 ;; Registers used:
  1236 ;;		wreg
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_reset_codes
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text5
  1257  0020BA                     __ptext5:
  1258                           	opt stack 0
  1259  0020BA                     _isWDTTO:
  1260                           	opt stack 27
  1261                           
  1262                           ;incstack = 0
  1263  0020BA  A2D0               	btfss	4048,1,c	;volatile
  1264  0020BC  D00E               	goto	l1496
  1265  0020BE  A4D0               	btfss	4048,2,c	;volatile
  1266  0020C0  D00A               	goto	l1492
  1267  0020C2  A0D0               	btfss	4048,0,c	;volatile
  1268  0020C4  D006               	goto	l1488
  1269  0020C6  A6D0               	btfss	4048,3,c	;volatile
  1270  0020C8  D002               	goto	l1484
  1271  0020CA  D003               	goto	l1488
  1272  0020CC  D008               	goto	l606
  1273  0020CE                     l1484:
  1274  0020CE  0E01               	movlw	1
  1275  0020D0  D006               	goto	l606
  1276  0020D2                     l1488:
  1277  0020D2  0E00               	movlw	0
  1278  0020D4  D004               	goto	l606
  1279  0020D6                     l1492:
  1280  0020D6  0E00               	movlw	0
  1281  0020D8  D002               	goto	l606
  1282  0020DA                     l1496:
  1283  0020DA  0E00               	movlw	0
  1284  0020DC  D000               	goto	l606
  1285  0020DE                     l606:
  1286  0020DE  0012               	return		;funcret
  1287  0020E0                     __end_of_isWDTTO:
  1288                           	opt stack 0
  1289                           stkptr	equ	0xFFC
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function _isPOR *****************
  1296 ;; Defined at:
  1297 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      unsigned char 
  1304 ;; Registers used:
  1305 ;;		wreg
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_reset_codes
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text6
  1326  0020E0                     __ptext6:
  1327                           	opt stack 0
  1328  0020E0                     _isPOR:
  1329                           	opt stack 27
  1330                           
  1331                           ;incstack = 0
  1332  0020E0  B2D0               	btfsc	4048,1,c	;volatile
  1333  0020E2  D00E               	goto	l1404
  1334  0020E4  A4D0               	btfss	4048,2,c	;volatile
  1335  0020E6  D00A               	goto	l1400
  1336  0020E8  B0D0               	btfsc	4048,0,c	;volatile
  1337  0020EA  D006               	goto	l1396
  1338  0020EC  B6D0               	btfsc	4048,3,c	;volatile
  1339  0020EE  D002               	goto	l1392
  1340  0020F0  D003               	goto	l1396
  1341  0020F2  D008               	goto	l597
  1342  0020F4                     l1392:
  1343  0020F4  0E01               	movlw	1
  1344  0020F6  D006               	goto	l597
  1345  0020F8                     l1396:
  1346  0020F8  0E00               	movlw	0
  1347  0020FA  D004               	goto	l597
  1348  0020FC                     l1400:
  1349  0020FC  0E00               	movlw	0
  1350  0020FE  D002               	goto	l597
  1351  002100                     l1404:
  1352  002100  0E00               	movlw	0
  1353  002102  D000               	goto	l597
  1354  002104                     l597:
  1355  002104  0012               	return		;funcret
  1356  002106                     __end_of_isPOR:
  1357                           	opt stack 0
  1358                           stkptr	equ	0xFFC
  1359                           intcon	equ	0xFF2
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           status	equ	0xFD8
  1363                           
  1364 ;; *************** function _isBOR *****************
  1365 ;; Defined at:
  1366 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_reset_codes
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text7
  1395  002212                     __ptext7:
  1396                           	opt stack 0
  1397  002212                     _isBOR:
  1398                           	opt stack 27
  1399                           
  1400                           ;incstack = 0
  1401  002212  B0D0               	btfsc	4048,0,c	;volatile
  1402  002214  D006               	goto	l1452
  1403  002216  B2D0               	btfsc	4048,1,c	;volatile
  1404  002218  D002               	goto	l1448
  1405  00221A  D003               	goto	l1452
  1406  00221C  D004               	goto	l588
  1407  00221E                     l1448:
  1408  00221E  0E01               	movlw	1
  1409  002220  D002               	goto	l588
  1410  002222                     l1452:
  1411  002222  0E00               	movlw	0
  1412  002224  D000               	goto	l588
  1413  002226                     l588:
  1414  002226  0012               	return		;funcret
  1415  002228                     __end_of_isBOR:
  1416                           	opt stack 0
  1417                           stkptr	equ	0xFFC
  1418                           intcon	equ	0xFF2
  1419                           postinc0	equ	0xFEE
  1420                           wreg	equ	0xFE8
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _WDTtask *****************
  1424 ;; Defined at:
  1425 ;;		line 370 in file "../Robot Files/sumovore.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;		None               void
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    3
  1446 ;; This function calls:
  1447 ;;		_gtrap
  1448 ;;		_printf
  1449 ;; This function is called by:
  1450 ;;		_reset_codes
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text8
  1455  0021A6                     __ptext8:
  1456                           	opt stack 0
  1457  0021A6                     _WDTtask:
  1458                           	opt stack 25
  1459                           
  1460                           ;sumovore.c: 372: printf("<WDT TO>");
  1461                           
  1462                           ;incstack = 0
  1463  0021A6  0E5D               	movlw	low STR_4
  1464  0021A8  6E0F               	movwf	printf@f,c
  1465  0021AA  0E10               	movlw	high STR_4
  1466  0021AC  6E10               	movwf	printf@f+1,c
  1467  0021AE  EC08  F010         	call	_printf	;wreg free
  1468                           
  1469                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1470  0021B2  9083               	bcf	3971,0,c	;volatile
  1471                           
  1472                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1473  0021B4  8283               	bsf	3971,1,c	;volatile
  1474                           
  1475                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1476  0021B6  9483               	bcf	3971,2,c	;volatile
  1477                           
  1478                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1479  0021B8  8683               	bsf	3971,3,c	;volatile
  1480                           
  1481                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1482  0021BA  8883               	bsf	3971,4,c	;volatile
  1483                           
  1484                           ;sumovore.c: 378: gtrap();
  1485  0021BC  ECDD  F00E         	call	_gtrap	;wreg free
  1486  0021C0  0012               	return		;funcret
  1487  0021C2                     __end_of_WDTtask:
  1488                           	opt stack 0
  1489                           stkptr	equ	0xFFC
  1490                           intcon	equ	0xFF2
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _STKFULtask *****************
  1496 ;; Defined at:
  1497 ;;		line 389 in file "../Robot Files/sumovore.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;		None               void
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    3
  1518 ;; This function calls:
  1519 ;;		_gtrap
  1520 ;;		_printf
  1521 ;; This function is called by:
  1522 ;;		_reset_codes
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text9
  1527  002188                     __ptext9:
  1528                           	opt stack 0
  1529  002188                     _STKFULtask:
  1530                           	opt stack 25
  1531                           
  1532                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1533                           
  1534                           ;incstack = 0
  1535  002188  9EFC               	bcf	stkptr,7,c	;volatile
  1536                           
  1537                           ;sumovore.c: 393: printf("<STKFUL>");
  1538  00218A  0E54               	movlw	low STR_5
  1539  00218C  6E0F               	movwf	printf@f,c
  1540  00218E  0E10               	movlw	high STR_5
  1541  002190  6E10               	movwf	printf@f+1,c
  1542  002192  EC08  F010         	call	_printf	;wreg free
  1543                           
  1544                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1545  002196  9083               	bcf	3971,0,c	;volatile
  1546                           
  1547                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1548  002198  8283               	bsf	3971,1,c	;volatile
  1549                           
  1550                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1551  00219A  9483               	bcf	3971,2,c	;volatile
  1552                           
  1553                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1554  00219C  8683               	bsf	3971,3,c	;volatile
  1555                           
  1556                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1557  00219E  9883               	bcf	3971,4,c	;volatile
  1558                           
  1559                           ;sumovore.c: 399: gtrap();
  1560  0021A0  ECDD  F00E         	call	_gtrap	;wreg free
  1561  0021A4  0012               	return		;funcret
  1562  0021A6                     __end_of_STKFULtask:
  1563                           	opt stack 0
  1564                           stkptr	equ	0xFFC
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _RESETtask *****************
  1571 ;; Defined at:
  1572 ;;		line 405 in file "../Robot Files/sumovore.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		_gtrap
  1595 ;;		_printf
  1596 ;; This function is called by:
  1597 ;;		_reset_codes
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text10
  1602  0021C2                     __ptext10:
  1603                           	opt stack 0
  1604  0021C2                     _RESETtask:
  1605                           	opt stack 25
  1606                           
  1607                           ;sumovore.c: 408: printf(" <reset> ");
  1608                           
  1609                           ;incstack = 0
  1610  0021C2  0E4A               	movlw	low STR_6
  1611  0021C4  6E0F               	movwf	printf@f,c
  1612  0021C6  0E10               	movlw	high STR_6
  1613  0021C8  6E10               	movwf	printf@f+1,c
  1614  0021CA  EC08  F010         	call	_printf	;wreg free
  1615                           
  1616                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1617  0021CE  9083               	bcf	3971,0,c	;volatile
  1618                           
  1619                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1620  0021D0  8283               	bsf	3971,1,c	;volatile
  1621                           
  1622                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1623  0021D2  9483               	bcf	3971,2,c	;volatile
  1624                           
  1625                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1626  0021D4  9683               	bcf	3971,3,c	;volatile
  1627                           
  1628                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1629  0021D6  9883               	bcf	3971,4,c	;volatile
  1630                           
  1631                           ;sumovore.c: 414: gtrap();
  1632  0021D8  ECDD  F00E         	call	_gtrap	;wreg free
  1633  0021DC  0012               	return		;funcret
  1634  0021DE                     __end_of_RESETtask:
  1635                           	opt stack 0
  1636                           stkptr	equ	0xFFC
  1637                           intcon	equ	0xFF2
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           status	equ	0xFD8
  1641                           
  1642 ;; *************** function _PORtask *****************
  1643 ;; Defined at:
  1644 ;;		line 307 in file "../Robot Files/sumovore.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  count2          4   23[COMRAM] unsigned long 
  1649 ;;  count1          4   19[COMRAM] unsigned long 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;		None               void
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;Total ram usage:        8 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    3
  1666 ;; This function calls:
  1667 ;;		_StatusReset
  1668 ;;		_printf
  1669 ;; This function is called by:
  1670 ;;		_reset_codes
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text11
  1675  00195C                     __ptext11:
  1676                           	opt stack 0
  1677  00195C                     _PORtask:
  1678                           	opt stack 25
  1679                           
  1680                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1681                           
  1682                           ;incstack = 0
  1683  00195C  0E00               	movlw	0
  1684  00195E  6E14               	movwf	PORtask@count1,c
  1685  001960  0E00               	movlw	0
  1686  001962  6E15               	movwf	PORtask@count1+1,c
  1687  001964  0E00               	movlw	0
  1688  001966  6E16               	movwf	PORtask@count1+2,c
  1689  001968  0E00               	movlw	0
  1690  00196A  6E17               	movwf	PORtask@count1+3,c
  1691  00196C  0E00               	movlw	0
  1692  00196E  6E18               	movwf	PORtask@count2,c
  1693  001970  0E00               	movlw	0
  1694  001972  6E19               	movwf	PORtask@count2+1,c
  1695  001974  0E00               	movlw	0
  1696  001976  6E1A               	movwf	PORtask@count2+2,c
  1697  001978  0E00               	movlw	0
  1698  00197A  6E1B               	movwf	PORtask@count2+3,c
  1699                           
  1700                           ;sumovore.c: 310: StatusReset();
  1701  00197C  EC5C  F011         	call	_StatusReset	;wreg free
  1702                           
  1703                           ;sumovore.c: 312: printf("<POR>");
  1704  001980  0E73               	movlw	low STR_2
  1705  001982  6E0F               	movwf	printf@f,c
  1706  001984  0E10               	movlw	high STR_2
  1707  001986  6E10               	movwf	printf@f+1,c
  1708  001988  EC08  F010         	call	_printf	;wreg free
  1709                           
  1710                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1711  00198C  9083               	bcf	3971,0,c	;volatile
  1712                           
  1713                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1714  00198E  8283               	bsf	3971,1,c	;volatile
  1715                           
  1716                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1717  001990  8483               	bsf	3971,2,c	;volatile
  1718                           
  1719                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1720  001992  8683               	bsf	3971,3,c	;volatile
  1721                           
  1722                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1723  001994  8883               	bsf	3971,4,c	;volatile
  1724                           
  1725                           ;sumovore.c: 318: while(count1<10u)
  1726  001996  D02D               	goto	l323
  1727  001998                     l324:
  1728  001998  0004               	clrwdt		;# 
  1729                           
  1730                           ;sumovore.c: 321: if (count2==30000u)
  1731  00199A  0E30               	movlw	48
  1732  00199C  1818               	xorwf	PORtask@count2,w,c
  1733  00199E  E117               	bnz	l2288
  1734  0019A0  0E75               	movlw	117
  1735  0019A2  1819               	xorwf	PORtask@count2+1,w,c
  1736  0019A4  101A               	iorwf	PORtask@count2+2,w,c
  1737  0019A6  101B               	iorwf	PORtask@count2+3,w,c
  1738  0019A8  A4D8               	btfss	status,2,c
  1739  0019AA  D011               	goto	l2288
  1740                           
  1741                           ;sumovore.c: 322: {
  1742                           ;sumovore.c: 323: count2=0;
  1743  0019AC  0E00               	movlw	0
  1744  0019AE  6E18               	movwf	PORtask@count2,c
  1745  0019B0  0E00               	movlw	0
  1746  0019B2  6E19               	movwf	PORtask@count2+1,c
  1747  0019B4  0E00               	movlw	0
  1748  0019B6  6E1A               	movwf	PORtask@count2+2,c
  1749  0019B8  0E00               	movlw	0
  1750  0019BA  6E1B               	movwf	PORtask@count2+3,c
  1751                           
  1752                           ;sumovore.c: 324: count1++;
  1753  0019BC  0E01               	movlw	1
  1754  0019BE  2614               	addwf	PORtask@count1,f,c
  1755  0019C0  0E00               	movlw	0
  1756  0019C2  2215               	addwfc	PORtask@count1+1,f,c
  1757  0019C4  2216               	addwfc	PORtask@count1+2,f,c
  1758  0019C6  2217               	addwfc	PORtask@count1+3,f,c
  1759                           
  1760                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1761  0019C8  9083               	bcf	3971,0,c	;volatile
  1762                           
  1763                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1764  0019CA  8283               	bsf	3971,1,c	;volatile
  1765                           
  1766                           ;sumovore.c: 327: }
  1767  0019CC  D00C               	goto	l2292
  1768  0019CE                     l2288:
  1769                           
  1770                           ;sumovore.c: 328: else if (count2==15000u)
  1771  0019CE  0E98               	movlw	152
  1772  0019D0  1818               	xorwf	PORtask@count2,w,c
  1773  0019D2  E109               	bnz	l2292
  1774  0019D4  0E3A               	movlw	58
  1775  0019D6  1819               	xorwf	PORtask@count2+1,w,c
  1776  0019D8  101A               	iorwf	PORtask@count2+2,w,c
  1777  0019DA  101B               	iorwf	PORtask@count2+3,w,c
  1778  0019DC  A4D8               	btfss	status,2,c
  1779  0019DE  D003               	goto	l2292
  1780                           
  1781                           ;sumovore.c: 329: {
  1782                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1783  0019E0  8083               	bsf	3971,0,c	;volatile
  1784                           
  1785                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1786  0019E2  9283               	bcf	3971,1,c	;volatile
  1787  0019E4  D000               	goto	l2292
  1788  0019E6                     l2292:
  1789                           
  1790                           ;sumovore.c: 332: }
  1791                           ;sumovore.c: 333: count2++;
  1792  0019E6  0E01               	movlw	1
  1793  0019E8  2618               	addwf	PORtask@count2,f,c
  1794  0019EA  0E00               	movlw	0
  1795  0019EC  2219               	addwfc	PORtask@count2+1,f,c
  1796  0019EE  221A               	addwfc	PORtask@count2+2,f,c
  1797  0019F0  221B               	addwfc	PORtask@count2+3,f,c
  1798  0019F2                     l323:
  1799  0019F2  5017               	movf	PORtask@count1+3,w,c
  1800  0019F4  1016               	iorwf	PORtask@count1+2,w,c
  1801  0019F6  1015               	iorwf	PORtask@count1+1,w,c
  1802  0019F8  E106               	bnz	l329
  1803  0019FA  0E0A               	movlw	10
  1804  0019FC  5C14               	subwf	PORtask@count1,w,c
  1805  0019FE  B0D8               	btfsc	status,0,c
  1806  001A00  D002               	goto	l329
  1807  001A02  D7CA               	goto	l324
  1808  001A04  D000               	goto	l329
  1809  001A06                     l329:
  1810  001A06  0012               	return		;funcret
  1811  001A08                     __end_of_PORtask:
  1812                           	opt stack 0
  1813                           stkptr	equ	0xFFC
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           status	equ	0xFD8
  1818                           
  1819 ;; *************** function _BORtask *****************
  1820 ;; Defined at:
  1821 ;;		line 349 in file "../Robot Files/sumovore.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;		None               void
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    3
  1842 ;; This function calls:
  1843 ;;		_StatusReset
  1844 ;;		_gtrap
  1845 ;;		_printf
  1846 ;; This function is called by:
  1847 ;;		_reset_codes
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text12
  1852  002128                     __ptext12:
  1853                           	opt stack 0
  1854  002128                     _BORtask:
  1855                           	opt stack 25
  1856                           
  1857                           ;sumovore.c: 351: StatusReset();
  1858                           
  1859                           ;incstack = 0
  1860  002128  EC5C  F011         	call	_StatusReset	;wreg free
  1861                           
  1862                           ;sumovore.c: 353: printf("<BOR>");
  1863  00212C  0E6D               	movlw	low STR_3
  1864  00212E  6E0F               	movwf	printf@f,c
  1865  002130  0E10               	movlw	high STR_3
  1866  002132  6E10               	movwf	printf@f+1,c
  1867  002134  EC08  F010         	call	_printf	;wreg free
  1868                           
  1869                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1870  002138  8083               	bsf	3971,0,c	;volatile
  1871                           
  1872                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1873  00213A  8283               	bsf	3971,1,c	;volatile
  1874                           
  1875                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1876  00213C  8483               	bsf	3971,2,c	;volatile
  1877                           
  1878                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1879  00213E  8683               	bsf	3971,3,c	;volatile
  1880                           
  1881                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1882  002140  9883               	bcf	3971,4,c	;volatile
  1883                           
  1884                           ;sumovore.c: 359: gtrap();
  1885  002142  ECDD  F00E         	call	_gtrap	;wreg free
  1886  002146  0012               	return		;funcret
  1887  002148                     __end_of_BORtask:
  1888                           	opt stack 0
  1889                           stkptr	equ	0xFFC
  1890                           intcon	equ	0xFF2
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _StatusReset *****************
  1896 ;; Defined at:
  1897 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		None
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_PORtask
  1922 ;;		_BORtask
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text13
  1927  0022B8                     __ptext13:
  1928                           	opt stack 0
  1929  0022B8                     _StatusReset:
  1930                           	opt stack 26
  1931                           
  1932                           ;incstack = 0
  1933  0022B8  82D0               	bsf	4048,1,c	;volatile
  1934  0022BA  80D0               	bsf	4048,0,c	;volatile
  1935  0022BC  0012               	return		;funcret
  1936  0022BE                     __end_of_StatusReset:
  1937                           	opt stack 0
  1938                           stkptr	equ	0xFFC
  1939                           intcon	equ	0xFF2
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           status	equ	0xFD8
  1943                           
  1944 ;; *************** function _openPORTE *****************
  1945 ;; Defined at:
  1946 ;;		line 178 in file "../Robot Files/sumovore.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_initialization
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text14
  1975  0022BE                     __ptext14:
  1976                           	opt stack 0
  1977  0022BE                     _openPORTE:
  1978                           	opt stack 28
  1979                           
  1980                           ;sumovore.c: 180: TRISE = 0b000;
  1981                           
  1982                           ;incstack = 0
  1983  0022BE  0E00               	movlw	0
  1984  0022C0  6E96               	movwf	3990,c	;volatile
  1985  0022C2  0012               	return		;funcret
  1986  0022C4                     __end_of_openPORTE:
  1987                           	opt stack 0
  1988                           stkptr	equ	0xFFC
  1989                           intcon	equ	0xFF2
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _openPORTCforUSART *****************
  1995 ;; Defined at:
  1996 ;;		line 124 in file "../Robot Files/sumovore.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;		None               void
  2003 ;; Registers used:
  2004 ;;		None
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_initialization
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text15
  2025  0022C4                     __ptext15:
  2026                           	opt stack 0
  2027  0022C4                     _openPORTCforUSART:
  2028                           	opt stack 28
  2029                           
  2030                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2031                           
  2032                           ;incstack = 0
  2033  0022C4  9C94               	bcf	3988,6,c	;volatile
  2034                           
  2035                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2036  0022C6  8E94               	bsf	3988,7,c	;volatile
  2037  0022C8  0012               	return		;funcret
  2038  0022CA                     __end_of_openPORTCforUSART:
  2039                           	opt stack 0
  2040                           stkptr	equ	0xFFC
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _openPORTCforPWM *****************
  2047 ;; Defined at:
  2048 ;;		line 133 in file "../Robot Files/sumovore.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;		None               void
  2055 ;; Registers used:
  2056 ;;		None
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_initialization
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text16
  2077  002296                     __ptext16:
  2078                           	opt stack 0
  2079  002296                     _openPORTCforPWM:
  2080                           	opt stack 28
  2081                           
  2082                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2083                           
  2084                           ;incstack = 0
  2085  002296  9094               	bcf	3988,0,c	;volatile
  2086                           
  2087                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2088  002298  9294               	bcf	3988,1,c	;volatile
  2089                           
  2090                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2091  00229A  9494               	bcf	3988,2,c	;volatile
  2092                           
  2093                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2094  00229C  9694               	bcf	3988,3,c	;volatile
  2095                           
  2096                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2097  00229E  9894               	bcf	3988,4,c	;volatile
  2098                           
  2099                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2100  0022A0  9A94               	bcf	3988,5,c	;volatile
  2101  0022A2  0012               	return		;funcret
  2102  0022A4                     __end_of_openPORTCforPWM:
  2103                           	opt stack 0
  2104                           stkptr	equ	0xFFC
  2105                           intcon	equ	0xFF2
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _openPORTB *****************
  2111 ;; Defined at:
  2112 ;;		line 158 in file "../Robot Files/sumovore.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;		None               void
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    1
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_initialization
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text17
  2141  0022CA                     __ptext17:
  2142                           	opt stack 0
  2143  0022CA                     _openPORTB:
  2144                           	opt stack 28
  2145                           
  2146                           ;sumovore.c: 160: TRISB = 0B11000000;
  2147                           
  2148                           ;incstack = 0
  2149  0022CA  0EC0               	movlw	192
  2150  0022CC  6E93               	movwf	3987,c	;volatile
  2151  0022CE  0012               	return		;funcret
  2152  0022D0                     __end_of_openPORTB:
  2153                           	opt stack 0
  2154                           stkptr	equ	0xFFC
  2155                           intcon	equ	0xFF2
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _openPORTA *****************
  2161 ;; Defined at:
  2162 ;;		line 147 in file "../Robot Files/sumovore.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, status,2
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        0 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_initialization
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text18
  2191  0022D0                     __ptext18:
  2192                           	opt stack 0
  2193  0022D0                     _openPORTA:
  2194                           	opt stack 28
  2195                           
  2196                           ;sumovore.c: 149: TRISA = 0B11101111;
  2197                           
  2198                           ;incstack = 0
  2199  0022D0  0EEF               	movlw	239
  2200  0022D2  6E92               	movwf	3986,c	;volatile
  2201  0022D4  0012               	return		;funcret
  2202  0022D6                     __end_of_openPORTA:
  2203                           	opt stack 0
  2204                           stkptr	equ	0xFFC
  2205                           intcon	equ	0xFF2
  2206                           postinc0	equ	0xFEE
  2207                           wreg	equ	0xFE8
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _openLVD *****************
  2211 ;; Defined at:
  2212 ;;		line 428 in file "../Robot Files/sumovore.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;		None               void
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_initialization
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text19
  2241  0021FA                     __ptext19:
  2242                           	opt stack 0
  2243  0021FA                     _openLVD:
  2244                           	opt stack 28
  2245                           
  2246                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2247                           
  2248                           ;incstack = 0
  2249  0021FA  8ED0               	bsf	4048,7,c	;volatile
  2250                           
  2251                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2252  0021FC  88D2               	bsf	4050,4,c	;volatile
  2253                           
  2254                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2255  0021FE  84A2               	bsf	4002,2,c	;volatile
  2256                           
  2257                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2258  002200  9ED2               	bcf	4050,7,c	;volatile
  2259                           
  2260                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2261  002202  86D2               	bsf	4050,3,c	;volatile
  2262                           
  2263                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2264  002204  84D2               	bsf	4050,2,c	;volatile
  2265                           
  2266                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2267  002206  82D2               	bsf	4050,1,c	;volatile
  2268                           
  2269                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2270  002208  90D2               	bcf	4050,0,c	;volatile
  2271                           
  2272                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2273  00220A  94A1               	bcf	4001,2,c	;volatile
  2274                           
  2275                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2276  00220C  84A0               	bsf	4000,2,c	;volatile
  2277                           
  2278                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2279  00220E  8EF2               	bsf	intcon,7,c	;volatile
  2280  002210  0012               	return		;funcret
  2281  002212                     __end_of_openLVD:
  2282                           	opt stack 0
  2283                           stkptr	equ	0xFFC
  2284                           intcon	equ	0xFF2
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _OpenUSART *****************
  2290 ;; Defined at:
  2291 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  config          1    wreg     unsigned char 
  2294 ;;  spbrg           2   14[COMRAM] unsigned int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  config          1   16[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;		None               void
  2299 ;; Registers used:
  2300 ;;		wreg, status,2
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_initialization
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text20
  2321  001D4A                     __ptext20:
  2322                           	opt stack 0
  2323  001D4A                     _OpenUSART:
  2324                           	opt stack 28
  2325                           
  2326                           ;incstack = 0
  2327                           ;OpenUSART@config stored from wreg
  2328  001D4A  6E11               	movwf	OpenUSART@config,c
  2329  001D4C  0E00               	movlw	0
  2330  001D4E  6EAC               	movwf	4012,c	;volatile
  2331  001D50  0E00               	movlw	0
  2332  001D52  6EAB               	movwf	4011,c	;volatile
  2333  001D54  A011               	btfss	OpenUSART@config,0,c
  2334  001D56  D002               	goto	l2402
  2335  001D58  88AC               	bsf	4012,4,c	;volatile
  2336  001D5A  D000               	goto	l2402
  2337  001D5C                     l2402:
  2338  001D5C  A211               	btfss	OpenUSART@config,1,c
  2339  001D5E  D003               	goto	l2406
  2340  001D60  8CAC               	bsf	4012,6,c	;volatile
  2341  001D62  8CAB               	bsf	4011,6,c	;volatile
  2342  001D64  D000               	goto	l2406
  2343  001D66                     l2406:
  2344  001D66  A411               	btfss	OpenUSART@config,2,c
  2345  001D68  D002               	goto	l2410
  2346  001D6A  8EAC               	bsf	4012,7,c	;volatile
  2347  001D6C  D000               	goto	l2410
  2348  001D6E                     l2410:
  2349  001D6E  A611               	btfss	OpenUSART@config,3,c
  2350  001D70  D002               	goto	l572
  2351  001D72  88AB               	bsf	4011,4,c	;volatile
  2352  001D74  D002               	goto	l2414
  2353  001D76                     l572:
  2354  001D76  8AAB               	bsf	4011,5,c	;volatile
  2355  001D78  D000               	goto	l2414
  2356  001D7A                     l2414:
  2357  001D7A  B811               	btfsc	OpenUSART@config,4,c
  2358  001D7C  84AC               	bsf	4012,2,c	;volatile
  2359  001D7E  989E               	bcf	3998,4,c	;volatile
  2360  001D80  AA11               	btfss	OpenUSART@config,5,c
  2361  001D82  D002               	goto	l2422
  2362  001D84  86AB               	bsf	4011,3,c	;volatile
  2363  001D86  D000               	goto	l2422
  2364  001D88                     l2422:
  2365  001D88  AC11               	btfss	OpenUSART@config,6,c
  2366  001D8A  D002               	goto	l576
  2367  001D8C  8A9D               	bsf	3997,5,c	;volatile
  2368  001D8E  D001               	goto	l577
  2369  001D90                     l576:
  2370  001D90  9A9D               	bcf	3997,5,c	;volatile
  2371  001D92                     l577:
  2372  001D92  9A9E               	bcf	3998,5,c	;volatile
  2373  001D94  AE11               	btfss	OpenUSART@config,7,c
  2374  001D96  D002               	goto	l578
  2375  001D98  889D               	bsf	3997,4,c	;volatile
  2376  001D9A  D001               	goto	l579
  2377  001D9C                     l578:
  2378  001D9C  989D               	bcf	3997,4,c	;volatile
  2379  001D9E                     l579:
  2380  001D9E  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2381  001DA2  5010               	movf	OpenUSART@spbrg+1,w,c
  2382  001DA4  6EB0               	movwf	4016,c	;volatile
  2383  001DA6  8AAC               	bsf	4012,5,c	;volatile
  2384  001DA8  8EAB               	bsf	4011,7,c	;volatile
  2385  001DAA  9C94               	bcf	3988,6,c	;volatile
  2386  001DAC  8E94               	bsf	3988,7,c	;volatile
  2387  001DAE  B8AC               	btfsc	4012,4,c	;volatile
  2388  001DB0  BEAC               	btfsc	4012,7,c	;volatile
  2389  001DB2  D002               	goto	l581
  2390  001DB4  8C94               	bsf	3988,6,c	;volatile
  2391  001DB6  D000               	goto	l581
  2392  001DB8                     l581:
  2393  001DB8  0012               	return		;funcret
  2394  001DBA                     __end_of_OpenUSART:
  2395                           	opt stack 0
  2396                           stkptr	equ	0xFFC
  2397                           intcon	equ	0xFF2
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _OpenTimer2 *****************
  2403 ;; Defined at:
  2404 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  config          1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  config          1   14[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;		None               void
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    1
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_initialization
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text21
  2433  0021DE                     __ptext21:
  2434                           	opt stack 0
  2435  0021DE                     _OpenTimer2:
  2436                           	opt stack 28
  2437                           
  2438                           ;incstack = 0
  2439                           ;OpenTimer2@config stored from wreg
  2440  0021DE  6E0F               	movwf	OpenTimer2@config,c
  2441  0021E0  500F               	movf	OpenTimer2@config,w,c
  2442  0021E2  0BFB               	andlw	251
  2443  0021E4  6ECA               	movwf	4042,c	;volatile
  2444  0021E6  0E00               	movlw	0
  2445  0021E8  6ECC               	movwf	4044,c	;volatile
  2446  0021EA  929E               	bcf	3998,1,c	;volatile
  2447  0021EC  AE0F               	btfss	OpenTimer2@config,7,c
  2448  0021EE  D002               	goto	l546
  2449  0021F0  829D               	bsf	3997,1,c	;volatile
  2450  0021F2  D001               	goto	l547
  2451  0021F4                     l546:
  2452  0021F4  929D               	bcf	3997,1,c	;volatile
  2453  0021F6                     l547:
  2454  0021F6  84CA               	bsf	4042,2,c	;volatile
  2455  0021F8  0012               	return		;funcret
  2456  0021FA                     __end_of_OpenTimer2:
  2457                           	opt stack 0
  2458                           stkptr	equ	0xFFC
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _OpenPWM2 *****************
  2465 ;; Defined at:
  2466 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  period          1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  period          1   14[COMRAM] unsigned char 
  2471 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2472 ;;  pmmode          1    0        unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;		None               void
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_initialization
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text22
  2497  001FD8                     __ptext22:
  2498                           	opt stack 0
  2499  001FD8                     _OpenPWM2:
  2500                           	opt stack 28
  2501                           
  2502                           ;incstack = 0
  2503                           ;OpenPWM2@period stored from wreg
  2504  001FD8  6E0F               	movwf	OpenPWM2@period,c
  2505  001FDA  0E0C               	movlw	12
  2506  001FDC  6EBA               	movwf	4026,c	;volatile
  2507  001FDE  0E05               	movlw	5
  2508  001FE0  6EF6               	movwf	tblptrl,c
  2509  001FE2                     	if	1	;There is more than 1 active tblptr byte
  2510  001FE2  0E00               	movlw	0
  2511  001FE4  6EF7               	movwf	tblptrh,c
  2512  001FE6                     	endif
  2513  001FE6                     	if	1	;There are 3 active tblptr bytes
  2514  001FE6  0E30               	movlw	48
  2515  001FE8  6EF8               	movwf	tblptru,c
  2516  001FEA                     	endif
  2517  001FEA  0008               	tblrd		*
  2518  001FEC  0100               	movlb	12288	; () banked
  2519  001FEE  A0F5               	btfss	tablat,0,c
  2520  001FF0  D002               	goto	l1716
  2521                           
  2522                           ; BSR set to: 0
  2523  001FF2  6810               	setf	OpenPWM2@ccp2mx,c
  2524  001FF4  D002               	goto	l494
  2525  001FF6                     l1716:
  2526                           
  2527                           ; BSR set to: 0
  2528  001FF6  0E00               	movlw	0
  2529  001FF8  6E10               	movwf	OpenPWM2@ccp2mx,c
  2530  001FFA                     l494:
  2531                           
  2532                           ; BSR set to: 0
  2533  001FFA  5010               	movf	OpenPWM2@ccp2mx,w,c
  2534  001FFC  B4D8               	btfsc	status,2,c
  2535  001FFE  D002               	goto	l495
  2536                           
  2537                           ; BSR set to: 0
  2538  002000  9294               	bcf	3988,1,c	;volatile
  2539  002002  D001               	goto	l496
  2540  002004                     l495:
  2541                           
  2542                           ; BSR set to: 0
  2543  002004  9693               	bcf	3987,3,c	;volatile
  2544  002006                     l496:
  2545                           
  2546                           ; BSR set to: 0
  2547  002006  94CA               	bcf	4042,2,c	;volatile
  2548  002008  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2549  00200C  84CA               	bsf	4042,2,c	;volatile
  2550                           
  2551                           ; BSR set to: 0
  2552  00200E  0012               	return		;funcret
  2553  002010                     __end_of_OpenPWM2:
  2554                           	opt stack 0
  2555                           stkptr	equ	0xFFC
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           intcon	equ	0xFF2
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function _OpenPWM1 *****************
  2566 ;; Defined at:
  2567 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  period          1    wreg     unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  period          1   14[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:        1 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_initialization
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text23
  2596  002250                     __ptext23:
  2597                           	opt stack 0
  2598  002250                     _OpenPWM1:
  2599                           	opt stack 28
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;incstack = 0
  2603                           ;OpenPWM1@period stored from wreg
  2604  002250  6E0F               	movwf	OpenPWM1@period,c
  2605  002252  0E0C               	movlw	12
  2606  002254  12BD               	iorwf	4029,f,c	;volatile
  2607  002256  9494               	bcf	3988,2,c	;volatile
  2608  002258  94CA               	bcf	4042,2,c	;volatile
  2609  00225A  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2610  00225E  84CA               	bsf	4042,2,c	;volatile
  2611  002260  0012               	return		;funcret
  2612  002262                     __end_of_OpenPWM1:
  2613                           	opt stack 0
  2614                           stkptr	equ	0xFFC
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           intcon	equ	0xFF2
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _OpenADC *****************
  2625 ;; Defined at:
  2626 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  config          1    wreg     unsigned char 
  2629 ;;  config2         1   14[COMRAM] unsigned char 
  2630 ;;  portconfig      1   15[COMRAM] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  config          1   18[COMRAM] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        5 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_initialization
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text24
  2657  001E1C                     __ptext24:
  2658                           	opt stack 0
  2659  001E1C                     _OpenADC:
  2660                           	opt stack 28
  2661                           
  2662                           ;incstack = 0
  2663                           ;OpenADC@config stored from wreg
  2664  001E1C  6E13               	movwf	OpenADC@config,c
  2665  001E1E  0E00               	movlw	0
  2666  001E20  6EC2               	movwf	4034,c	;volatile
  2667  001E22  0E00               	movlw	0
  2668  001E24  6EC0               	movwf	4032,c	;volatile
  2669  001E26  90D8               	bcf	status,0,c
  2670  001E28  300F               	rrcf	OpenADC@config2,w,c
  2671  001E2A  0B3C               	andlw	60
  2672  001E2C  6EC2               	movwf	4034,c	;volatile
  2673  001E2E  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2674  001E32  3A11               	swapf	??_OpenADC,f,c
  2675  001E34  0EF0               	movlw	240
  2676  001E36  1611               	andwf	??_OpenADC,f,c
  2677  001E38  0E30               	movlw	48
  2678  001E3A  1611               	andwf	??_OpenADC,f,c
  2679  001E3C  5010               	movf	OpenADC@portconfig,w,c
  2680  001E3E  0B0F               	andlw	15
  2681  001E40  1011               	iorwf	??_OpenADC,w,c
  2682  001E42  6EC1               	movwf	4033,c	;volatile
  2683  001E44  C013  F011         	movff	OpenADC@config,??_OpenADC
  2684  001E48  90D8               	bcf	status,0,c
  2685  001E4A  3611               	rlcf	??_OpenADC,f,c
  2686  001E4C  90D8               	bcf	status,0,c
  2687  001E4E  3611               	rlcf	??_OpenADC,f,c
  2688  001E50  0E38               	movlw	56
  2689  001E52  1611               	andwf	??_OpenADC,f,c
  2690  001E54  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2691  001E58  3A12               	swapf	??_OpenADC+1,f,c
  2692  001E5A  0E0F               	movlw	15
  2693  001E5C  1612               	andwf	??_OpenADC+1,f,c
  2694  001E5E  0E07               	movlw	7
  2695  001E60  1612               	andwf	??_OpenADC+1,f,c
  2696  001E62  5013               	movf	OpenADC@config,w,c
  2697  001E64  0B80               	andlw	128
  2698  001E66  1012               	iorwf	??_OpenADC+1,w,c
  2699  001E68  1011               	iorwf	??_OpenADC,w,c
  2700  001E6A  6EC0               	movwf	4032,c	;volatile
  2701  001E6C  AE0F               	btfss	OpenADC@config2,7,c
  2702  001E6E  D003               	goto	l446
  2703  001E70  9C9E               	bcf	3998,6,c	;volatile
  2704  001E72  8C9D               	bsf	3997,6,c	;volatile
  2705  001E74  8CF2               	bsf	intcon,6,c	;volatile
  2706  001E76                     l446:
  2707  001E76  80C2               	bsf	4034,0,c	;volatile
  2708  001E78  0012               	return		;funcret
  2709  001E7A                     __end_of_OpenADC:
  2710                           	opt stack 0
  2711                           stkptr	equ	0xFFC
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           intcon	equ	0xFF2
  2717                           postinc0	equ	0xFEE
  2718                           wreg	equ	0xFE8
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _PID_LineFollowing *****************
  2722 ;; Defined at:
  2723 ;;		line 98 in file "../Robot Files/main.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  error           2   52[COMRAM] PTR char 
  2726 ;;		 -> main@error(3), 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;		None               void
  2731 ;; Registers used:
  2732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        7 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    3
  2745 ;; This function calls:
  2746 ;;		_MotorControl
  2747 ;;		_ReadTimer0
  2748 ;;		___aldiv
  2749 ;;		___lwdiv
  2750 ;;		___lwmod
  2751 ;;		___wmul
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text25
  2758  00107A                     __ptext25:
  2759                           	opt stack 0
  2760  00107A                     _PID_LineFollowing:
  2761                           	opt stack 27
  2762                           
  2763                           ;main.c: 100: static int delta_velocity = 0;
  2764                           ;main.c: 102: static int D = 0;
  2765                           ;main.c: 105: if ((ReadTimer0()%I_CONSTANT) < 2)
  2766                           
  2767                           ;incstack = 0
  2768  00107A  EC31  F011         	call	_ReadTimer0	;wreg free
  2769  00107E  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  2770  001082  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  2771  001086  0E03               	movlw	low _I_CONSTANT
  2772  001088  6EF6               	movwf	tblptrl,c
  2773  00108A                     	if	1	;There is more than 1 active tblptr byte
  2774  00108A  0E10               	movlw	high _I_CONSTANT
  2775  00108C  6EF7               	movwf	tblptrh,c
  2776  00108E                     	endif
  2777  00108E                     	if	1	;There are 3 active tblptr bytes
  2778  00108E  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2779  001090  6EF8               	movwf	tblptru,c
  2780  001092                     	endif
  2781  001092  0009               	tblrd		*+
  2782  001094  CFF5 F015          	movff	tablat,___lwmod@divisor
  2783  001098  000A               	tblrd		*-
  2784  00109A  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  2785  00109E  EC6B  F00F         	call	___lwmod	;wreg free
  2786  0010A2  5014               	movf	?___lwmod+1,w,c
  2787  0010A4  E17B               	bnz	l2708
  2788  0010A6  0E02               	movlw	2
  2789  0010A8  5C13               	subwf	?___lwmod,w,c
  2790  0010AA  B0D8               	btfsc	status,0,c
  2791  0010AC  D077               	goto	l2708
  2792                           
  2793                           ;main.c: 106: {
  2794                           ;main.c: 107: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=160
      +                          0 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2795  0010AE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2796  0010B0  D006               	goto	l2684
  2797  0010B2  0E40               	movlw	64
  2798  0010B4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2799  0010B6  0E06               	movlw	6
  2800  0010B8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2801  0010BA  B0D8               	btfsc	status,0,c
  2802  0010BC  D008               	goto	l2686
  2803  0010BE                     l2684:
  2804  0010BE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2805  0010C0  D006               	goto	l2686
  2806  0010C2  0E41               	movlw	65
  2807  0010C4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2808  0010C6  0E06               	movlw	6
  2809  0010C8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2810  0010CA  B0D8               	btfsc	status,0,c
  2811  0010CC  D024               	goto	l2694
  2812  0010CE                     l2686:
  2813  0010CE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2814  0010D0  D00F               	goto	l2690
  2815  0010D2  0E40               	movlw	64
  2816  0010D4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2817  0010D6  0E06               	movlw	6
  2818  0010D8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2819  0010DA  A0D8               	btfss	status,0,c
  2820  0010DC  D009               	goto	l2690
  2821  0010DE  EE20 F002          	lfsr	2,2
  2822  0010E2  5035               	movf	PID_LineFollowing@error,w,c
  2823  0010E4  26D9               	addwf	fsr2l,f,c
  2824  0010E6  5036               	movf	PID_LineFollowing@error+1,w,c
  2825  0010E8  22DA               	addwfc	fsr2h,f,c
  2826  0010EA  0E00               	movlw	0
  2827  0010EC  BEDB               	btfsc	plusw2,7,c
  2828  0010EE  D013               	goto	l2694
  2829  0010F0                     l2690:
  2830  0010F0  AE47               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2831  0010F2  D054               	goto	l2708
  2832  0010F4  0EC1               	movlw	193
  2833  0010F6  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2834  0010F8  0EF9               	movlw	249
  2835  0010FA  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2836  0010FC  B0D8               	btfsc	status,0,c
  2837  0010FE  D04E               	goto	l2708
  2838  001100  EE20 F002          	lfsr	2,2
  2839  001104  5035               	movf	PID_LineFollowing@error,w,c
  2840  001106  26D9               	addwf	fsr2l,f,c
  2841  001108  5036               	movf	PID_LineFollowing@error+1,w,c
  2842  00110A  22DA               	addwfc	fsr2h,f,c
  2843  00110C  50DF               	movf	indf2,w,c
  2844  00110E  0A80               	xorlw	128
  2845  001110  0F7F               	addlw	-129
  2846  001112  A0D8               	btfss	status,0,c
  2847  001114  D043               	goto	l2708
  2848  001116                     l2694:
  2849                           
  2850                           ;main.c: 109: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && erro
      +                          r[2]>0))
  2851  001116  BE49               	btfsc	_I+1,7,c
  2852  001118  D006               	goto	l2696
  2853  00111A  0EC9               	movlw	201
  2854  00111C  5C48               	subwf	_I,w,c
  2855  00111E  0E0C               	movlw	12
  2856  001120  5849               	subwfb	_I+1,w,c
  2857  001122  B0D8               	btfsc	status,0,c
  2858  001124  D008               	goto	l2698
  2859  001126                     l2696:
  2860  001126  AE49               	btfss	_I+1,7,c
  2861  001128  D02A               	goto	l2706
  2862  00112A  0E37               	movlw	55
  2863  00112C  5C48               	subwf	_I,w,c
  2864  00112E  0EF3               	movlw	243
  2865  001130  5849               	subwfb	_I+1,w,c
  2866  001132  B0D8               	btfsc	status,0,c
  2867  001134  D024               	goto	l2706
  2868  001136                     l2698:
  2869  001136  BE49               	btfsc	_I+1,7,c
  2870  001138  D00F               	goto	l2702
  2871  00113A  0EC9               	movlw	201
  2872  00113C  5C48               	subwf	_I,w,c
  2873  00113E  0E0C               	movlw	12
  2874  001140  5849               	subwfb	_I+1,w,c
  2875  001142  A0D8               	btfss	status,0,c
  2876  001144  D009               	goto	l2702
  2877  001146  EE20 F002          	lfsr	2,2
  2878  00114A  5035               	movf	PID_LineFollowing@error,w,c
  2879  00114C  26D9               	addwf	fsr2l,f,c
  2880  00114E  5036               	movf	PID_LineFollowing@error+1,w,c
  2881  001150  22DA               	addwfc	fsr2h,f,c
  2882  001152  0E00               	movlw	0
  2883  001154  BEDB               	btfsc	plusw2,7,c
  2884  001156  D013               	goto	l2706
  2885  001158                     l2702:
  2886  001158  AE49               	btfss	_I+1,7,c
  2887  00115A  D020               	goto	l2708
  2888  00115C  0E37               	movlw	55
  2889  00115E  5C48               	subwf	_I,w,c
  2890  001160  0EF3               	movlw	243
  2891  001162  5849               	subwfb	_I+1,w,c
  2892  001164  B0D8               	btfsc	status,0,c
  2893  001166  D01A               	goto	l2708
  2894  001168  EE20 F002          	lfsr	2,2
  2895  00116C  5035               	movf	PID_LineFollowing@error,w,c
  2896  00116E  26D9               	addwf	fsr2l,f,c
  2897  001170  5036               	movf	PID_LineFollowing@error+1,w,c
  2898  001172  22DA               	addwfc	fsr2h,f,c
  2899  001174  50DF               	movf	indf2,w,c
  2900  001176  0A80               	xorlw	128
  2901  001178  0F7F               	addlw	-129
  2902  00117A  A0D8               	btfss	status,0,c
  2903  00117C  D00F               	goto	l2708
  2904  00117E                     l2706:
  2905                           
  2906                           ;main.c: 111: I += error[2];
  2907  00117E  EE20 F002          	lfsr	2,2
  2908  001182  5035               	movf	PID_LineFollowing@error,w,c
  2909  001184  26D9               	addwf	fsr2l,f,c
  2910  001186  5036               	movf	PID_LineFollowing@error+1,w,c
  2911  001188  22DA               	addwfc	fsr2h,f,c
  2912  00118A  50DF               	movf	indf2,w,c
  2913  00118C  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2914  00118E  5037               	movf	??_PID_LineFollowing,w,c
  2915  001190  2648               	addwf	_I,f,c
  2916  001192  0E00               	movlw	0
  2917  001194  BE37               	btfsc	??_PID_LineFollowing,7,c
  2918  001196  0EFF               	movlw	255
  2919  001198  2249               	addwfc	_I+1,f,c
  2920  00119A  D000               	goto	l2708
  2921  00119C                     l2708:
  2922                           
  2923                           ;main.c: 112: }
  2924                           ;main.c: 115: if(error[1]!=error[2])
  2925  00119C  EE20 F002          	lfsr	2,2
  2926  0011A0  5035               	movf	PID_LineFollowing@error,w,c
  2927  0011A2  26D9               	addwf	fsr2l,f,c
  2928  0011A4  5036               	movf	PID_LineFollowing@error+1,w,c
  2929  0011A6  22DA               	addwfc	fsr2h,f,c
  2930  0011A8  EE10 F001          	lfsr	1,1
  2931  0011AC  5035               	movf	PID_LineFollowing@error,w,c
  2932  0011AE  26E1               	addwf	fsr1l,f,c
  2933  0011B0  5036               	movf	PID_LineFollowing@error+1,w,c
  2934  0011B2  22E2               	addwfc	fsr1h,f,c
  2935  0011B4  50DE               	movf	postinc2,w,c
  2936  0011B6  18E6               	xorwf	postinc1,w,c
  2937  0011B8  B4D8               	btfsc	status,2,c
  2938  0011BA  D058               	goto	l2716
  2939                           
  2940                           ;main.c: 116: {
  2941                           ;main.c: 117: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  2942  0011BC  EE20 F001          	lfsr	2,1
  2943  0011C0  5035               	movf	PID_LineFollowing@error,w,c
  2944  0011C2  26D9               	addwf	fsr2l,f,c
  2945  0011C4  5036               	movf	PID_LineFollowing@error+1,w,c
  2946  0011C6  22DA               	addwfc	fsr2h,f,c
  2947  0011C8  50DF               	movf	indf2,w,c
  2948  0011CA  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2949  0011CC  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  2950  0011CE  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  2951  0011D0  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  2952  0011D2  1E37               	comf	??_PID_LineFollowing,f,c
  2953  0011D4  1E38               	comf	??_PID_LineFollowing+1,f,c
  2954  0011D6  4A37               	infsnz	??_PID_LineFollowing,f,c
  2955  0011D8  2A38               	incf	??_PID_LineFollowing+1,f,c
  2956  0011DA  EE20 F002          	lfsr	2,2
  2957  0011DE  5035               	movf	PID_LineFollowing@error,w,c
  2958  0011E0  26D9               	addwf	fsr2l,f,c
  2959  0011E2  5036               	movf	PID_LineFollowing@error+1,w,c
  2960  0011E4  22DA               	addwfc	fsr2h,f,c
  2961  0011E6  50DF               	movf	indf2,w,c
  2962  0011E8  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  2963  0011EA  5037               	movf	??_PID_LineFollowing,w,c
  2964  0011EC  2439               	addwf	??_PID_LineFollowing+2,w,c
  2965  0011EE  6E1D               	movwf	___wmul@multiplier,c
  2966  0011F0  0E00               	movlw	0
  2967  0011F2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  2968  0011F4  0EFF               	movlw	255
  2969  0011F6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  2970  0011F8  6E1E               	movwf	___wmul@multiplier+1,c
  2971  0011FA  EC31  F011         	call	_ReadTimer0	;wreg free
  2972  0011FE  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  2973  001202  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  2974  001206  0E01               	movlw	low _D_CONSTANT
  2975  001208  6EF6               	movwf	tblptrl,c
  2976  00120A                     	if	1	;There is more than 1 active tblptr byte
  2977  00120A  0E10               	movlw	high _D_CONSTANT
  2978  00120C  6EF7               	movwf	tblptrh,c
  2979  00120E                     	endif
  2980  00120E                     	if	1	;There are 3 active tblptr bytes
  2981  00120E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  2982  001210  6EF8               	movwf	tblptru,c
  2983  001212                     	endif
  2984  001212  0009               	tblrd		*+
  2985  001214  CFF5 F013          	movff	tablat,___lwdiv@dividend
  2986  001218  000A               	tblrd		*-
  2987  00121A  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  2988  00121E  EC3D  F00F         	call	___lwdiv	;wreg free
  2989  001222  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  2990  001226  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  2991  00122A  EC49  F010         	call	___wmul	;wreg free
  2992  00122E  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  2993  001232  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  2994                           
  2995                           ;main.c: 120: error[0]=error[1];
  2996  001236  EE20 F001          	lfsr	2,1
  2997  00123A  5035               	movf	PID_LineFollowing@error,w,c
  2998  00123C  26D9               	addwf	fsr2l,f,c
  2999  00123E  5036               	movf	PID_LineFollowing@error+1,w,c
  3000  001240  22DA               	addwfc	fsr2h,f,c
  3001  001242  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3002  001246  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3003  00124A  CFDF FFE7          	movff	indf2,indf1
  3004                           
  3005                           ;main.c: 121: error[1]=error[2];
  3006  00124E  EE20 F002          	lfsr	2,2
  3007  001252  5035               	movf	PID_LineFollowing@error,w,c
  3008  001254  26D9               	addwf	fsr2l,f,c
  3009  001256  5036               	movf	PID_LineFollowing@error+1,w,c
  3010  001258  22DA               	addwfc	fsr2h,f,c
  3011  00125A  EE10 F001          	lfsr	1,1
  3012  00125E  5035               	movf	PID_LineFollowing@error,w,c
  3013  001260  26E1               	addwf	fsr1l,f,c
  3014  001262  5036               	movf	PID_LineFollowing@error+1,w,c
  3015  001264  22E2               	addwfc	fsr1h,f,c
  3016  001266  CFDF FFE7          	movff	indf2,indf1
  3017  00126A  D000               	goto	l2716
  3018  00126C                     l2716:
  3019                           
  3020                           ;main.c: 122: }
  3021                           ;main.c: 124: if(TMR0IF)
  3022  00126C  A4F2               	btfss	intcon,2,c	;volatile
  3023  00126E  D05E               	goto	l109
  3024                           
  3025                           ;main.c: 125: {
  3026                           ;main.c: 126: D = D_CONSTANT/65535*(error[1]-error[0]);
  3027  001270  C035  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3028  001274  C036  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3029  001278  50DF               	movf	indf2,w,c
  3030  00127A  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3031  00127C  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3032  00127E  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3033  001280  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3034  001282  1E37               	comf	??_PID_LineFollowing,f,c
  3035  001284  1E38               	comf	??_PID_LineFollowing+1,f,c
  3036  001286  4A37               	infsnz	??_PID_LineFollowing,f,c
  3037  001288  2A38               	incf	??_PID_LineFollowing+1,f,c
  3038  00128A  EE20 F001          	lfsr	2,1
  3039  00128E  5035               	movf	PID_LineFollowing@error,w,c
  3040  001290  26D9               	addwf	fsr2l,f,c
  3041  001292  5036               	movf	PID_LineFollowing@error+1,w,c
  3042  001294  22DA               	addwfc	fsr2h,f,c
  3043  001296  50DF               	movf	indf2,w,c
  3044  001298  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3045  00129A  5037               	movf	??_PID_LineFollowing,w,c
  3046  00129C  2439               	addwf	??_PID_LineFollowing+2,w,c
  3047  00129E  6E1D               	movwf	___wmul@multiplier,c
  3048  0012A0  0E00               	movlw	0
  3049  0012A2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3050  0012A4  0EFF               	movlw	255
  3051  0012A6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3052  0012A8  6E1E               	movwf	___wmul@multiplier+1,c
  3053  0012AA  0EFF               	movlw	255
  3054  0012AC  6E13               	movwf	___aldiv@divisor,c
  3055  0012AE  0EFF               	movlw	255
  3056  0012B0  6E14               	movwf	___aldiv@divisor+1,c
  3057  0012B2  0E00               	movlw	0
  3058  0012B4  6E15               	movwf	___aldiv@divisor+2,c
  3059  0012B6  0E00               	movlw	0
  3060  0012B8  6E16               	movwf	___aldiv@divisor+3,c
  3061  0012BA  0E01               	movlw	low _D_CONSTANT
  3062  0012BC  6EF6               	movwf	tblptrl,c
  3063  0012BE                     	if	1	;There is more than 1 active tblptr byte
  3064  0012BE  0E10               	movlw	high _D_CONSTANT
  3065  0012C0  6EF7               	movwf	tblptrh,c
  3066  0012C2                     	endif
  3067  0012C2                     	if	1	;There are 3 active tblptr bytes
  3068  0012C2  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3069  0012C4  6EF8               	movwf	tblptru,c
  3070  0012C6                     	endif
  3071  0012C6  0009               	tblrd		*+
  3072  0012C8  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+3
  3073  0012CC  0009               	tblrd		*+
  3074  0012CE  CFF5 F03B          	movff	tablat,??_PID_LineFollowing+4
  3075  0012D2  C03A  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3076  0012D6  C03B  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3077  0012DA  6A11               	clrf	___aldiv@dividend+2,c
  3078  0012DC  6A12               	clrf	___aldiv@dividend+3,c
  3079  0012DE  ECDD  F00B         	call	___aldiv	;wreg free
  3080  0012E2  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3081  0012E6  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3082  0012EA  EC49  F010         	call	___wmul	;wreg free
  3083  0012EE  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3084  0012F2  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3085                           
  3086                           ;main.c: 129: error[0]=error[1];
  3087  0012F6  EE20 F001          	lfsr	2,1
  3088  0012FA  5035               	movf	PID_LineFollowing@error,w,c
  3089  0012FC  26D9               	addwf	fsr2l,f,c
  3090  0012FE  5036               	movf	PID_LineFollowing@error+1,w,c
  3091  001300  22DA               	addwfc	fsr2h,f,c
  3092  001302  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3093  001306  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3094  00130A  CFDF FFE7          	movff	indf2,indf1
  3095                           
  3096                           ;main.c: 130: error[1]=error[2];
  3097  00130E  EE20 F002          	lfsr	2,2
  3098  001312  5035               	movf	PID_LineFollowing@error,w,c
  3099  001314  26D9               	addwf	fsr2l,f,c
  3100  001316  5036               	movf	PID_LineFollowing@error+1,w,c
  3101  001318  22DA               	addwfc	fsr2h,f,c
  3102  00131A  EE10 F001          	lfsr	1,1
  3103  00131E  5035               	movf	PID_LineFollowing@error,w,c
  3104  001320  26E1               	addwf	fsr1l,f,c
  3105  001322  5036               	movf	PID_LineFollowing@error+1,w,c
  3106  001324  22E2               	addwfc	fsr1h,f,c
  3107  001326  CFDF FFE7          	movff	indf2,indf1
  3108                           
  3109                           ;main.c: 132: TMR0IF = 0;
  3110  00132A  94F2               	bcf	intcon,2,c	;volatile
  3111  00132C                     l109:
  3112                           
  3113                           ;main.c: 133: }
  3114                           ;main.c: 137: delta_velocity = P_CONSTANT*error[2] + I + D;
  3115  00132C  EE20 F002          	lfsr	2,2
  3116  001330  5035               	movf	PID_LineFollowing@error,w,c
  3117  001332  26D9               	addwf	fsr2l,f,c
  3118  001334  5036               	movf	PID_LineFollowing@error+1,w,c
  3119  001336  22DA               	addwfc	fsr2h,f,c
  3120  001338  50DF               	movf	indf2,w,c
  3121  00133A  6E1D               	movwf	___wmul@multiplier,c
  3122  00133C  6A1E               	clrf	___wmul@multiplier+1,c
  3123  00133E  BE1D               	btfsc	___wmul@multiplier,7,c
  3124  001340  061E               	decf	___wmul@multiplier+1,f,c
  3125  001342  0E05               	movlw	low _P_CONSTANT
  3126  001344  6EF6               	movwf	tblptrl,c
  3127  001346                     	if	1	;There is more than 1 active tblptr byte
  3128  001346  0E10               	movlw	high _P_CONSTANT
  3129  001348  6EF7               	movwf	tblptrh,c
  3130  00134A                     	endif
  3131  00134A                     	if	1	;There are 3 active tblptr bytes
  3132  00134A  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3133  00134C  6EF8               	movwf	tblptru,c
  3134  00134E                     	endif
  3135  00134E  0009               	tblrd		*+
  3136  001350  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3137  001354  000A               	tblrd		*-
  3138  001356  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3139  00135A  EC49  F010         	call	___wmul	;wreg free
  3140  00135E  5048               	movf	_I,w,c
  3141  001360  261D               	addwf	?___wmul,f,c
  3142  001362  5049               	movf	_I+1,w,c
  3143  001364  221E               	addwfc	?___wmul+1,f,c
  3144  001366  5044               	movf	PID_LineFollowing@D,w,c
  3145  001368  241D               	addwf	?___wmul,w,c
  3146  00136A  6E46               	movwf	PID_LineFollowing@delta_velocity,c
  3147  00136C  5045               	movf	PID_LineFollowing@D+1,w,c
  3148  00136E  201E               	addwfc	?___wmul+1,w,c
  3149  001370  6E47               	movwf	PID_LineFollowing@delta_velocity+1,c
  3150                           
  3151                           ;main.c: 140: MotorControl(delta_velocity,0);
  3152  001372  C046  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3153  001376  C047  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3154  00137A  0E00               	movlw	0
  3155  00137C  6E2D               	movwf	MotorControl@speed_divider,c
  3156  00137E  ECC2  F009         	call	_MotorControl	;wreg free
  3157  001382  0012               	return		;funcret
  3158  001384                     __end_of_PID_LineFollowing:
  3159                           	opt stack 0
  3160                           stkptr	equ	0xFFC
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           intcon	equ	0xFF2
  3166                           postinc0	equ	0xFEE
  3167                           wreg	equ	0xFE8
  3168                           indf1	equ	0xFE7
  3169                           postinc1	equ	0xFE6
  3170                           fsr1h	equ	0xFE2
  3171                           fsr1l	equ	0xFE1
  3172                           indf2	equ	0xFDF
  3173                           postinc2	equ	0xFDE
  3174                           plusw2	equ	0xFDB
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function ___lwmod *****************
  3180 ;; Defined at:
  3181 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  dividend        2   18[COMRAM] unsigned int 
  3184 ;;  divisor         2   20[COMRAM] unsigned int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  counter         1   22[COMRAM] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   18[COMRAM] unsigned int 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:        5 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_PID_LineFollowing
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text26
  3211  001ED6                     __ptext26:
  3212                           	opt stack 0
  3213  001ED6                     ___lwmod:
  3214                           	opt stack 28
  3215                           
  3216                           ;incstack = 0
  3217  001ED6  5015               	movf	___lwmod@divisor,w,c
  3218  001ED8  1016               	iorwf	___lwmod@divisor+1,w,c
  3219  001EDA  B4D8               	btfsc	status,2,c
  3220  001EDC  D01D               	goto	l1142
  3221  001EDE  0E01               	movlw	1
  3222  001EE0  6E17               	movwf	___lwmod@counter,c
  3223  001EE2  D005               	goto	l2546
  3224  001EE4                     l2544:
  3225  001EE4  90D8               	bcf	status,0,c
  3226  001EE6  3615               	rlcf	___lwmod@divisor,f,c
  3227  001EE8  3616               	rlcf	___lwmod@divisor+1,f,c
  3228  001EEA  2A17               	incf	___lwmod@counter,f,c
  3229  001EEC  D000               	goto	l2546
  3230  001EEE                     l2546:
  3231  001EEE  BE16               	btfsc	___lwmod@divisor+1,7,c
  3232  001EF0  D002               	goto	l2548
  3233  001EF2  D7F8               	goto	l2544
  3234  001EF4  D000               	goto	l2548
  3235  001EF6                     l2548:
  3236  001EF6  5015               	movf	___lwmod@divisor,w,c
  3237  001EF8  5C13               	subwf	___lwmod@dividend,w,c
  3238  001EFA  5016               	movf	___lwmod@divisor+1,w,c
  3239  001EFC  5814               	subwfb	___lwmod@dividend+1,w,c
  3240  001EFE  A0D8               	btfss	status,0,c
  3241  001F00  D005               	goto	l2552
  3242  001F02  5015               	movf	___lwmod@divisor,w,c
  3243  001F04  5E13               	subwf	___lwmod@dividend,f,c
  3244  001F06  5016               	movf	___lwmod@divisor+1,w,c
  3245  001F08  5A14               	subwfb	___lwmod@dividend+1,f,c
  3246  001F0A  D000               	goto	l2552
  3247  001F0C                     l2552:
  3248  001F0C  90D8               	bcf	status,0,c
  3249  001F0E  3216               	rrcf	___lwmod@divisor+1,f,c
  3250  001F10  3215               	rrcf	___lwmod@divisor,f,c
  3251  001F12  2E17               	decfsz	___lwmod@counter,f,c
  3252  001F14  D7F0               	goto	l2548
  3253  001F16  D000               	goto	l1142
  3254  001F18                     l1142:
  3255  001F18  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3256  001F1C  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3257  001F20  0012               	return		;funcret
  3258  001F22                     __end_of___lwmod:
  3259                           	opt stack 0
  3260                           stkptr	equ	0xFFC
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           indf1	equ	0xFE7
  3269                           postinc1	equ	0xFE6
  3270                           fsr1h	equ	0xFE2
  3271                           fsr1l	equ	0xFE1
  3272                           indf2	equ	0xFDF
  3273                           postinc2	equ	0xFDE
  3274                           plusw2	equ	0xFDB
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function ___lwdiv *****************
  3280 ;; Defined at:
  3281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  dividend        2   18[COMRAM] unsigned int 
  3284 ;;  divisor         2   20[COMRAM] unsigned int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  quotient        2   22[COMRAM] unsigned int 
  3287 ;;  counter         1   24[COMRAM] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  2   18[COMRAM] unsigned int 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;Total ram usage:        7 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_PID_LineFollowing
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text27
  3312  001E7A                     __ptext27:
  3313                           	opt stack 0
  3314  001E7A                     ___lwdiv:
  3315                           	opt stack 28
  3316                           
  3317                           ;incstack = 0
  3318  001E7A  0E00               	movlw	0
  3319  001E7C  6E18               	movwf	___lwdiv@quotient+1,c
  3320  001E7E  0E00               	movlw	0
  3321  001E80  6E17               	movwf	___lwdiv@quotient,c
  3322  001E82  5015               	movf	___lwdiv@divisor,w,c
  3323  001E84  1016               	iorwf	___lwdiv@divisor+1,w,c
  3324  001E86  B4D8               	btfsc	status,2,c
  3325  001E88  D021               	goto	l1132
  3326  001E8A  0E01               	movlw	1
  3327  001E8C  6E19               	movwf	___lwdiv@counter,c
  3328  001E8E  D005               	goto	l2526
  3329  001E90                     l2524:
  3330  001E90  90D8               	bcf	status,0,c
  3331  001E92  3615               	rlcf	___lwdiv@divisor,f,c
  3332  001E94  3616               	rlcf	___lwdiv@divisor+1,f,c
  3333  001E96  2A19               	incf	___lwdiv@counter,f,c
  3334  001E98  D000               	goto	l2526
  3335  001E9A                     l2526:
  3336  001E9A  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3337  001E9C  D002               	goto	l2528
  3338  001E9E  D7F8               	goto	l2524
  3339  001EA0  D000               	goto	l2528
  3340  001EA2                     l2528:
  3341  001EA2  90D8               	bcf	status,0,c
  3342  001EA4  3617               	rlcf	___lwdiv@quotient,f,c
  3343  001EA6  3618               	rlcf	___lwdiv@quotient+1,f,c
  3344  001EA8  5015               	movf	___lwdiv@divisor,w,c
  3345  001EAA  5C13               	subwf	___lwdiv@dividend,w,c
  3346  001EAC  5016               	movf	___lwdiv@divisor+1,w,c
  3347  001EAE  5814               	subwfb	___lwdiv@dividend+1,w,c
  3348  001EB0  A0D8               	btfss	status,0,c
  3349  001EB2  D006               	goto	l2536
  3350  001EB4  5015               	movf	___lwdiv@divisor,w,c
  3351  001EB6  5E13               	subwf	___lwdiv@dividend,f,c
  3352  001EB8  5016               	movf	___lwdiv@divisor+1,w,c
  3353  001EBA  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3354  001EBC  8017               	bsf	___lwdiv@quotient,0,c
  3355  001EBE  D000               	goto	l2536
  3356  001EC0                     l2536:
  3357  001EC0  90D8               	bcf	status,0,c
  3358  001EC2  3216               	rrcf	___lwdiv@divisor+1,f,c
  3359  001EC4  3215               	rrcf	___lwdiv@divisor,f,c
  3360  001EC6  2E19               	decfsz	___lwdiv@counter,f,c
  3361  001EC8  D7EC               	goto	l2528
  3362  001ECA  D000               	goto	l1132
  3363  001ECC                     l1132:
  3364  001ECC  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3365  001ED0  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3366  001ED4  0012               	return		;funcret
  3367  001ED6                     __end_of___lwdiv:
  3368                           	opt stack 0
  3369                           stkptr	equ	0xFFC
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           intcon	equ	0xFF2
  3375                           postinc0	equ	0xFEE
  3376                           wreg	equ	0xFE8
  3377                           indf1	equ	0xFE7
  3378                           postinc1	equ	0xFE6
  3379                           fsr1h	equ	0xFE2
  3380                           fsr1l	equ	0xFE1
  3381                           indf2	equ	0xFDF
  3382                           postinc2	equ	0xFDE
  3383                           plusw2	equ	0xFDB
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function ___aldiv *****************
  3389 ;; Defined at:
  3390 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  dividend        4   14[COMRAM] long 
  3393 ;;  divisor         4   18[COMRAM] long 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  quotient        4   24[COMRAM] long 
  3396 ;;  sign            1   23[COMRAM] unsigned char 
  3397 ;;  counter         1   22[COMRAM] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  4   14[COMRAM] long 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;Total ram usage:       14 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    1
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_PID_LineFollowing
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text28
  3422  0017BA                     __ptext28:
  3423                           	opt stack 0
  3424  0017BA                     ___aldiv:
  3425                           	opt stack 28
  3426                           
  3427                           ;incstack = 0
  3428  0017BA  0E00               	movlw	0
  3429  0017BC  6E18               	movwf	___aldiv@sign,c
  3430  0017BE  AE16               	btfss	___aldiv@divisor+3,7,c
  3431  0017C0  D00B               	goto	l2482
  3432  0017C2  1E16               	comf	___aldiv@divisor+3,f,c
  3433  0017C4  1E15               	comf	___aldiv@divisor+2,f,c
  3434  0017C6  1E14               	comf	___aldiv@divisor+1,f,c
  3435  0017C8  6C13               	negf	___aldiv@divisor,c
  3436  0017CA  0E00               	movlw	0
  3437  0017CC  2214               	addwfc	___aldiv@divisor+1,f,c
  3438  0017CE  2215               	addwfc	___aldiv@divisor+2,f,c
  3439  0017D0  2216               	addwfc	___aldiv@divisor+3,f,c
  3440  0017D2  0E01               	movlw	1
  3441  0017D4  6E18               	movwf	___aldiv@sign,c
  3442  0017D6  D000               	goto	l2482
  3443  0017D8                     l2482:
  3444  0017D8  AE12               	btfss	___aldiv@dividend+3,7,c
  3445  0017DA  D00B               	goto	l2488
  3446  0017DC  1E12               	comf	___aldiv@dividend+3,f,c
  3447  0017DE  1E11               	comf	___aldiv@dividend+2,f,c
  3448  0017E0  1E10               	comf	___aldiv@dividend+1,f,c
  3449  0017E2  6C0F               	negf	___aldiv@dividend,c
  3450  0017E4  0E00               	movlw	0
  3451  0017E6  2210               	addwfc	___aldiv@dividend+1,f,c
  3452  0017E8  2211               	addwfc	___aldiv@dividend+2,f,c
  3453  0017EA  2212               	addwfc	___aldiv@dividend+3,f,c
  3454  0017EC  0E01               	movlw	1
  3455  0017EE  1A18               	xorwf	___aldiv@sign,f,c
  3456  0017F0  D000               	goto	l2488
  3457  0017F2                     l2488:
  3458  0017F2  0E00               	movlw	0
  3459  0017F4  6E19               	movwf	___aldiv@quotient,c
  3460  0017F6  0E00               	movlw	0
  3461  0017F8  6E1A               	movwf	___aldiv@quotient+1,c
  3462  0017FA  0E00               	movlw	0
  3463  0017FC  6E1B               	movwf	___aldiv@quotient+2,c
  3464  0017FE  0E00               	movlw	0
  3465  001800  6E1C               	movwf	___aldiv@quotient+3,c
  3466  001802  5013               	movf	___aldiv@divisor,w,c
  3467  001804  1014               	iorwf	___aldiv@divisor+1,w,c
  3468  001806  1015               	iorwf	___aldiv@divisor+2,w,c
  3469  001808  1016               	iorwf	___aldiv@divisor+3,w,c
  3470  00180A  B4D8               	btfsc	status,2,c
  3471  00180C  D02F               	goto	l2510
  3472  00180E  0E01               	movlw	1
  3473  001810  6E17               	movwf	___aldiv@counter,c
  3474  001812  D007               	goto	l2496
  3475  001814                     l2494:
  3476  001814  90D8               	bcf	status,0,c
  3477  001816  3613               	rlcf	___aldiv@divisor,f,c
  3478  001818  3614               	rlcf	___aldiv@divisor+1,f,c
  3479  00181A  3615               	rlcf	___aldiv@divisor+2,f,c
  3480  00181C  3616               	rlcf	___aldiv@divisor+3,f,c
  3481  00181E  2A17               	incf	___aldiv@counter,f,c
  3482  001820  D000               	goto	l2496
  3483  001822                     l2496:
  3484  001822  BE16               	btfsc	___aldiv@divisor+3,7,c
  3485  001824  D002               	goto	l2498
  3486  001826  D7F6               	goto	l2494
  3487  001828  D000               	goto	l2498
  3488  00182A                     l2498:
  3489  00182A  90D8               	bcf	status,0,c
  3490  00182C  3619               	rlcf	___aldiv@quotient,f,c
  3491  00182E  361A               	rlcf	___aldiv@quotient+1,f,c
  3492  001830  361B               	rlcf	___aldiv@quotient+2,f,c
  3493  001832  361C               	rlcf	___aldiv@quotient+3,f,c
  3494  001834  5013               	movf	___aldiv@divisor,w,c
  3495  001836  5C0F               	subwf	___aldiv@dividend,w,c
  3496  001838  5014               	movf	___aldiv@divisor+1,w,c
  3497  00183A  5810               	subwfb	___aldiv@dividend+1,w,c
  3498  00183C  5015               	movf	___aldiv@divisor+2,w,c
  3499  00183E  5811               	subwfb	___aldiv@dividend+2,w,c
  3500  001840  5016               	movf	___aldiv@divisor+3,w,c
  3501  001842  5812               	subwfb	___aldiv@dividend+3,w,c
  3502  001844  A0D8               	btfss	status,0,c
  3503  001846  D00A               	goto	l2506
  3504  001848  5013               	movf	___aldiv@divisor,w,c
  3505  00184A  5E0F               	subwf	___aldiv@dividend,f,c
  3506  00184C  5014               	movf	___aldiv@divisor+1,w,c
  3507  00184E  5A10               	subwfb	___aldiv@dividend+1,f,c
  3508  001850  5015               	movf	___aldiv@divisor+2,w,c
  3509  001852  5A11               	subwfb	___aldiv@dividend+2,f,c
  3510  001854  5016               	movf	___aldiv@divisor+3,w,c
  3511  001856  5A12               	subwfb	___aldiv@dividend+3,f,c
  3512  001858  8019               	bsf	___aldiv@quotient,0,c
  3513  00185A  D000               	goto	l2506
  3514  00185C                     l2506:
  3515  00185C  90D8               	bcf	status,0,c
  3516  00185E  3216               	rrcf	___aldiv@divisor+3,f,c
  3517  001860  3215               	rrcf	___aldiv@divisor+2,f,c
  3518  001862  3214               	rrcf	___aldiv@divisor+1,f,c
  3519  001864  3213               	rrcf	___aldiv@divisor,f,c
  3520  001866  2E17               	decfsz	___aldiv@counter,f,c
  3521  001868  D7E0               	goto	l2498
  3522  00186A  D000               	goto	l2510
  3523  00186C                     l2510:
  3524  00186C  5018               	movf	___aldiv@sign,w,c
  3525  00186E  B4D8               	btfsc	status,2,c
  3526  001870  D009               	goto	l2514
  3527  001872  1E1C               	comf	___aldiv@quotient+3,f,c
  3528  001874  1E1B               	comf	___aldiv@quotient+2,f,c
  3529  001876  1E1A               	comf	___aldiv@quotient+1,f,c
  3530  001878  6C19               	negf	___aldiv@quotient,c
  3531  00187A  0E00               	movlw	0
  3532  00187C  221A               	addwfc	___aldiv@quotient+1,f,c
  3533  00187E  221B               	addwfc	___aldiv@quotient+2,f,c
  3534  001880  221C               	addwfc	___aldiv@quotient+3,f,c
  3535  001882  D000               	goto	l2514
  3536  001884                     l2514:
  3537  001884  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  3538  001888  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  3539  00188C  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  3540  001890  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  3541  001894  D000               	goto	l683
  3542  001896                     l683:
  3543  001896  0012               	return		;funcret
  3544  001898                     __end_of___aldiv:
  3545                           	opt stack 0
  3546                           stkptr	equ	0xFFC
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           intcon	equ	0xFF2
  3552                           postinc0	equ	0xFEE
  3553                           wreg	equ	0xFE8
  3554                           indf1	equ	0xFE7
  3555                           postinc1	equ	0xFE6
  3556                           fsr1h	equ	0xFE2
  3557                           fsr1l	equ	0xFE1
  3558                           indf2	equ	0xFDF
  3559                           postinc2	equ	0xFDE
  3560                           plusw2	equ	0xFDB
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function _OpenTimer0 *****************
  3566 ;; Defined at:
  3567 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  config          1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  config          1   14[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text29
  3596  002148                     __ptext29:
  3597                           	opt stack 0
  3598  002148                     _OpenTimer0:
  3599                           	opt stack 29
  3600                           
  3601                           ;incstack = 0
  3602                           ;OpenTimer0@config stored from wreg
  3603  002148  6E0F               	movwf	OpenTimer0@config,c
  3604  00214A  500F               	movf	OpenTimer0@config,w,c
  3605  00214C  0B7F               	andlw	127
  3606  00214E  6ED5               	movwf	4053,c	;volatile
  3607  002150  0E00               	movlw	0
  3608  002152  6ED7               	movwf	4055,c	;volatile
  3609  002154  0E00               	movlw	0
  3610  002156  6ED6               	movwf	4054,c	;volatile
  3611  002158  94F2               	bcf	intcon,2,c	;volatile
  3612  00215A  AE0F               	btfss	OpenTimer0@config,7,c
  3613  00215C  D002               	goto	l517
  3614  00215E  8AF2               	bsf	intcon,5,c	;volatile
  3615  002160  D001               	goto	l518
  3616  002162                     l517:
  3617  002162  9AF2               	bcf	intcon,5,c	;volatile
  3618  002164                     l518:
  3619  002164  8ED5               	bsf	4053,7,c	;volatile
  3620  002166  0012               	return		;funcret
  3621  002168                     __end_of_OpenTimer0:
  3622                           	opt stack 0
  3623                           stkptr	equ	0xFFC
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           intcon	equ	0xFF2
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           indf1	equ	0xFE7
  3632                           postinc1	equ	0xFE6
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           indf2	equ	0xFDF
  3636                           postinc2	equ	0xFDE
  3637                           plusw2	equ	0xFDB
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8
  3641                           
  3642 ;; *************** function _LVtrap *****************
  3643 ;; Defined at:
  3644 ;;		line 449 in file "../Robot Files/sumovore.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;		None               void
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    3
  3665 ;; This function calls:
  3666 ;;		_gtrap
  3667 ;;		_openPORTD
  3668 ;;		_printf
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text30
  3675  002168                     __ptext30:
  3676                           	opt stack 0
  3677  002168                     _LVtrap:
  3678                           	opt stack 27
  3679                           
  3680                           ;sumovore.c: 451: printf("\\<LVD>");
  3681                           
  3682                           ;incstack = 0
  3683  002168  0E66               	movlw	low STR_7
  3684  00216A  6E0F               	movwf	printf@f,c
  3685  00216C  0E10               	movlw	high STR_7
  3686  00216E  6E10               	movwf	printf@f+1,c
  3687  002170  EC08  F010         	call	_printf	;wreg free
  3688                           
  3689                           ;sumovore.c: 452: openPORTD();
  3690  002174  EC6B  F011         	call	_openPORTD	;wreg free
  3691                           
  3692                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3693  002178  9083               	bcf	3971,0,c	;volatile
  3694                           
  3695                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3696  00217A  8283               	bsf	3971,1,c	;volatile
  3697                           
  3698                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3699  00217C  8483               	bsf	3971,2,c	;volatile
  3700                           
  3701                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3702  00217E  9683               	bcf	3971,3,c	;volatile
  3703                           
  3704                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3705  002180  8883               	bsf	3971,4,c	;volatile
  3706                           
  3707                           ;sumovore.c: 458: gtrap();
  3708  002182  ECDD  F00E         	call	_gtrap	;wreg free
  3709  002186  0012               	return		;funcret
  3710  002188                     __end_of_LVtrap:
  3711                           	opt stack 0
  3712                           stkptr	equ	0xFFC
  3713                           tblptru	equ	0xFF8
  3714                           tblptrh	equ	0xFF7
  3715                           tblptrl	equ	0xFF6
  3716                           tablat	equ	0xFF5
  3717                           intcon	equ	0xFF2
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           indf1	equ	0xFE7
  3721                           postinc1	equ	0xFE6
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           indf2	equ	0xFDF
  3725                           postinc2	equ	0xFDE
  3726                           plusw2	equ	0xFDB
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function _printf *****************
  3732 ;; Defined at:
  3733 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3736 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3737 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  tmpval          4    0        struct .
  3740 ;;  cp              3    0        PTR const unsigned char 
  3741 ;;  ap              2   16[COMRAM] PTR void [1]
  3742 ;;		 -> ?_printf(2), 
  3743 ;;  len             2    0        unsigned int 
  3744 ;;  val             2    0        unsigned int 
  3745 ;;  c               1   18[COMRAM] char 
  3746 ;;  flag            1    0        unsigned char 
  3747 ;;  prec            1    0        char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  2   14[COMRAM] int 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;Total ram usage:        5 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    2
  3764 ;; This function calls:
  3765 ;;		_putch
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;;		_PORtask
  3769 ;;		_BORtask
  3770 ;;		_WDTtask
  3771 ;;		_STKFULtask
  3772 ;;		_RESETtask
  3773 ;;		_LVtrap
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text31
  3778  002010                     __ptext31:
  3779                           	opt stack 0
  3780  002010                     _printf:
  3781                           	opt stack 28
  3782                           
  3783                           ;doprnt.c: 466: va_list ap;
  3784                           ;doprnt.c: 499: signed char c;
  3785                           ;doprnt.c: 506: signed char prec;
  3786                           ;doprnt.c: 508: unsigned char flag;
  3787                           ;doprnt.c: 523: union {
  3788                           ;doprnt.c: 524: unsigned long vd;
  3789                           ;doprnt.c: 525: double integ;
  3790                           ;doprnt.c: 526: } tmpval;
  3791                           ;doprnt.c: 528: unsigned int val;
  3792                           ;doprnt.c: 529: unsigned len;
  3793                           ;doprnt.c: 530: const char * cp;
  3794                           ;doprnt.c: 533: *ap = __va_start();
  3795                           
  3796                           ;incstack = 0
  3797  002010  0E11               	movlw	low (?_printf+2)
  3798  002012  6E11               	movwf	printf@ap,c
  3799  002014  0E00               	movlw	high (?_printf+2)
  3800  002016  6E12               	movwf	printf@ap+1,c
  3801                           
  3802                           ;doprnt.c: 536: while(c = *f++) {
  3803  002018  D004               	goto	l2128
  3804  00201A                     l2126:
  3805                           
  3806                           ;doprnt.c: 540: {
  3807                           ;doprnt.c: 541: (putch(c) );
  3808  00201A  5013               	movf	printf@c,w,c
  3809  00201C  EC70  F011         	call	_putch
  3810                           
  3811                           ;doprnt.c: 542: continue;
  3812  002020  D000               	goto	l2128
  3813  002022                     l2128:
  3814  002022  C00F  FFF6         	movff	printf@f,tblptrl
  3815  002026  C010  FFF7         	movff	printf@f+1,tblptrh
  3816  00202A  4A0F               	infsnz	printf@f,f,c
  3817  00202C  2A10               	incf	printf@f+1,f,c
  3818  00202E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3819  00202E  6AF8               	clrf	tblptru,c
  3820  002030                     	endif
  3821  002030                     	if	0	;tblptru may be non-zero
  3822  002030                     	endif
  3823  002030  0008               	tblrd		*
  3824  002032  CFF5 F013          	movff	tablat,printf@c
  3825  002036  5013               	movf	printf@c,w,c
  3826  002038  A4D8               	btfss	status,2,c
  3827  00203A  D7EF               	goto	l2126
  3828                           
  3829                           ;doprnt.c: 1469: }
  3830                           ;doprnt.c: 1533: }
  3831                           ;doprnt.c: 1540: return 0;
  3832                           ;	Return value of _printf is never used
  3833  00203C  0012               	return		;funcret
  3834  00203E                     __end_of_printf:
  3835                           	opt stack 0
  3836                           stkptr	equ	0xFFC
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           intcon	equ	0xFF2
  3842                           postinc0	equ	0xFEE
  3843                           wreg	equ	0xFE8
  3844                           indf1	equ	0xFE7
  3845                           postinc1	equ	0xFE6
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           indf2	equ	0xFDF
  3849                           postinc2	equ	0xFDE
  3850                           plusw2	equ	0xFDB
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _putch *****************
  3856 ;; Defined at:
  3857 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  c               1    wreg     unsigned char 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  c               1    0[COMRAM] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;		None               void
  3864 ;; Registers used:
  3865 ;;		wreg
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_printf
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text32
  3886  0022E0                     __ptext32:
  3887                           	opt stack 0
  3888  0022E0                     _putch:
  3889                           	opt stack 28
  3890                           
  3891                           ;incstack = 0
  3892  0022E0  0012               	return		;funcret
  3893  0022E2                     __end_of_putch:
  3894                           	opt stack 0
  3895                           stkptr	equ	0xFFC
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           indf1	equ	0xFE7
  3904                           postinc1	equ	0xFE6
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           postinc2	equ	0xFDE
  3909                           plusw2	equ	0xFDB
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914 ;; *************** function _openPORTD *****************
  3915 ;; Defined at:
  3916 ;;		line 168 in file "../Robot Files/sumovore.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;		None               void
  3923 ;; Registers used:
  3924 ;;		wreg, status,2
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_initialization
  3941 ;;		_LVtrap
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text33
  3946  0022D6                     __ptext33:
  3947                           	opt stack 0
  3948  0022D6                     _openPORTD:
  3949                           	opt stack 28
  3950                           
  3951                           ;sumovore.c: 170: TRISD = 0b01100000;
  3952                           
  3953                           ;incstack = 0
  3954  0022D6  0E60               	movlw	96
  3955  0022D8  6E95               	movwf	3989,c	;volatile
  3956  0022DA  0012               	return		;funcret
  3957  0022DC                     __end_of_openPORTD:
  3958                           	opt stack 0
  3959                           stkptr	equ	0xFFC
  3960                           tblptru	equ	0xFF8
  3961                           tblptrh	equ	0xFF7
  3962                           tblptrl	equ	0xFF6
  3963                           tablat	equ	0xFF5
  3964                           intcon	equ	0xFF2
  3965                           postinc0	equ	0xFEE
  3966                           wreg	equ	0xFE8
  3967                           indf1	equ	0xFE7
  3968                           postinc1	equ	0xFE6
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           indf2	equ	0xFDF
  3972                           postinc2	equ	0xFDE
  3973                           plusw2	equ	0xFDB
  3974                           fsr2h	equ	0xFDA
  3975                           fsr2l	equ	0xFD9
  3976                           status	equ	0xFD8
  3977                           
  3978 ;; *************** function _gtrap *****************
  3979 ;; Defined at:
  3980 ;;		line 464 in file "../Robot Files/sumovore.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  count           4   14[COMRAM] unsigned long 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;		None               void
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;Total ram usage:        4 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_BORtask
  4005 ;;		_WDTtask
  4006 ;;		_STKFULtask
  4007 ;;		_RESETtask
  4008 ;;		_LVtrap
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text34
  4013  001DBA                     __ptext34:
  4014                           	opt stack 0
  4015  001DBA                     _gtrap:
  4016                           	opt stack 26
  4017                           
  4018                           ;sumovore.c: 466: unsigned long count=0;
  4019                           
  4020                           ;incstack = 0
  4021  001DBA  0E00               	movlw	0
  4022  001DBC  6E0F               	movwf	gtrap@count,c
  4023  001DBE  0E00               	movlw	0
  4024  001DC0  6E10               	movwf	gtrap@count+1,c
  4025  001DC2  0E00               	movlw	0
  4026  001DC4  6E11               	movwf	gtrap@count+2,c
  4027  001DC6  0E00               	movlw	0
  4028  001DC8  6E12               	movwf	gtrap@count+3,c
  4029  001DCA                     l350:
  4030  001DCA  0004               	clrwdt		;# 
  4031                           
  4032                           ;sumovore.c: 471: if (count==30000u)
  4033  001DCC  0E30               	movlw	48
  4034  001DCE  180F               	xorwf	gtrap@count,w,c
  4035  001DD0  E111               	bnz	l1260
  4036  001DD2  0E75               	movlw	117
  4037  001DD4  1810               	xorwf	gtrap@count+1,w,c
  4038  001DD6  1011               	iorwf	gtrap@count+2,w,c
  4039  001DD8  1012               	iorwf	gtrap@count+3,w,c
  4040  001DDA  A4D8               	btfss	status,2,c
  4041  001DDC  D00B               	goto	l1260
  4042                           
  4043                           ;sumovore.c: 472: {
  4044                           ;sumovore.c: 473: count=0;
  4045  001DDE  0E00               	movlw	0
  4046  001DE0  6E0F               	movwf	gtrap@count,c
  4047  001DE2  0E00               	movlw	0
  4048  001DE4  6E10               	movwf	gtrap@count+1,c
  4049  001DE6  0E00               	movlw	0
  4050  001DE8  6E11               	movwf	gtrap@count+2,c
  4051  001DEA  0E00               	movlw	0
  4052  001DEC  6E12               	movwf	gtrap@count+3,c
  4053                           
  4054                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  4055  001DEE  9083               	bcf	3971,0,c	;volatile
  4056                           
  4057                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  4058  001DF0  8283               	bsf	3971,1,c	;volatile
  4059                           
  4060                           ;sumovore.c: 476: }
  4061  001DF2  D00C               	goto	l1264
  4062  001DF4                     l1260:
  4063                           
  4064                           ;sumovore.c: 477: else if (count==15000u)
  4065  001DF4  0E98               	movlw	152
  4066  001DF6  180F               	xorwf	gtrap@count,w,c
  4067  001DF8  E109               	bnz	l1264
  4068  001DFA  0E3A               	movlw	58
  4069  001DFC  1810               	xorwf	gtrap@count+1,w,c
  4070  001DFE  1011               	iorwf	gtrap@count+2,w,c
  4071  001E00  1012               	iorwf	gtrap@count+3,w,c
  4072  001E02  A4D8               	btfss	status,2,c
  4073  001E04  D003               	goto	l1264
  4074                           
  4075                           ;sumovore.c: 478: {
  4076                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  4077  001E06  8083               	bsf	3971,0,c	;volatile
  4078                           
  4079                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  4080  001E08  9283               	bcf	3971,1,c	;volatile
  4081  001E0A  D000               	goto	l1264
  4082  001E0C                     l1264:
  4083                           
  4084                           ;sumovore.c: 481: }
  4085                           ;sumovore.c: 482: count++;
  4086  001E0C  0E01               	movlw	1
  4087  001E0E  260F               	addwf	gtrap@count,f,c
  4088  001E10  0E00               	movlw	0
  4089  001E12  2210               	addwfc	gtrap@count+1,f,c
  4090  001E14  2211               	addwfc	gtrap@count+2,f,c
  4091  001E16  2212               	addwfc	gtrap@count+3,f,c
  4092  001E18  D7D8               	goto	l350
  4093  001E1A  0012               	return		;funcret
  4094  001E1C                     __end_of_gtrap:
  4095                           	opt stack 0
  4096                           stkptr	equ	0xFFC
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           intcon	equ	0xFF2
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf1	equ	0xFE7
  4105                           postinc1	equ	0xFE6
  4106                           fsr1h	equ	0xFE2
  4107                           fsr1l	equ	0xFE1
  4108                           indf2	equ	0xFDF
  4109                           postinc2	equ	0xFDE
  4110                           plusw2	equ	0xFDB
  4111                           fsr2h	equ	0xFDA
  4112                           fsr2l	equ	0xFD9
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function _GetBackonTrack *****************
  4116 ;; Defined at:
  4117 ;;		line 200 in file "../Robot Files/main.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  error           2   56[COMRAM] PTR char 
  4120 ;;		 -> main@error(3), 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  i               2   59[COMRAM] unsigned int 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;		None               void
  4125 ;; Registers used:
  4126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;Total ram usage:        5 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    5
  4139 ;; This function calls:
  4140 ;;		_MotorControl
  4141 ;;		_ReadTimer0
  4142 ;;		_SharpTurn
  4143 ;;		_WriteTimer0
  4144 ;;		_check_sensors
  4145 ;;		_motors_brake_all
  4146 ;;		_set_leds
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text35
  4153  001550                     __ptext35:
  4154                           	opt stack 0
  4155  001550                     _GetBackonTrack:
  4156                           	opt stack 25
  4157                           
  4158                           ;main.c: 202: if((error[2]>1) || (error[1]>1) || CW_rotation_flag)
  4159                           
  4160                           ;incstack = 0
  4161  001550  EE20 F002          	lfsr	2,2
  4162  001554  5039               	movf	GetBackonTrack@error,w,c
  4163  001556  26D9               	addwf	fsr2l,f,c
  4164  001558  503A               	movf	GetBackonTrack@error+1,w,c
  4165  00155A  22DA               	addwfc	fsr2h,f,c
  4166  00155C  50DF               	movf	indf2,w,c
  4167  00155E  0A80               	xorlw	128
  4168  001560  0F7E               	addlw	-130
  4169  001562  B0D8               	btfsc	status,0,c
  4170  001564  D00E               	goto	l2608
  4171  001566  EE20 F001          	lfsr	2,1
  4172  00156A  5039               	movf	GetBackonTrack@error,w,c
  4173  00156C  26D9               	addwf	fsr2l,f,c
  4174  00156E  503A               	movf	GetBackonTrack@error+1,w,c
  4175  001570  22DA               	addwfc	fsr2h,f,c
  4176  001572  50DF               	movf	indf2,w,c
  4177  001574  0A80               	xorlw	128
  4178  001576  0F7E               	addlw	-130
  4179  001578  B0D8               	btfsc	status,0,c
  4180  00157A  D003               	goto	l2608
  4181  00157C  504D               	movf	_CW_rotation_flag,w,c
  4182  00157E  B4D8               	btfsc	status,2,c
  4183  001580  D004               	goto	l2610
  4184  001582                     l2608:
  4185                           
  4186                           ;main.c: 203: SharpTurn(CW);
  4187  001582  0E01               	movlw	1
  4188  001584  EC04  F00D         	call	_SharpTurn
  4189  001588  D095               	goto	l146
  4190  00158A                     l2610:
  4191                           
  4192                           ;main.c: 204: else if((error[2]<-1) || (error[1]<-1) || CCW_rotation_flag)
  4193  00158A  EE20 F002          	lfsr	2,2
  4194  00158E  5039               	movf	GetBackonTrack@error,w,c
  4195  001590  26D9               	addwf	fsr2l,f,c
  4196  001592  503A               	movf	GetBackonTrack@error+1,w,c
  4197  001594  22DA               	addwfc	fsr2h,f,c
  4198  001596  50DF               	movf	indf2,w,c
  4199  001598  0A80               	xorlw	128
  4200  00159A  0F81               	addlw	129
  4201  00159C  A0D8               	btfss	status,0,c
  4202  00159E  D00E               	goto	l2616
  4203  0015A0  EE20 F001          	lfsr	2,1
  4204  0015A4  5039               	movf	GetBackonTrack@error,w,c
  4205  0015A6  26D9               	addwf	fsr2l,f,c
  4206  0015A8  503A               	movf	GetBackonTrack@error+1,w,c
  4207  0015AA  22DA               	addwfc	fsr2h,f,c
  4208  0015AC  50DF               	movf	indf2,w,c
  4209  0015AE  0A80               	xorlw	128
  4210  0015B0  0F81               	addlw	129
  4211  0015B2  A0D8               	btfss	status,0,c
  4212  0015B4  D003               	goto	l2616
  4213  0015B6  504C               	movf	_CCW_rotation_flag,w,c
  4214  0015B8  B4D8               	btfsc	status,2,c
  4215  0015BA  D004               	goto	l2618
  4216  0015BC                     l2616:
  4217                           
  4218                           ;main.c: 205: SharpTurn(CCW);
  4219  0015BC  0E00               	movlw	0
  4220  0015BE  EC04  F00D         	call	_SharpTurn
  4221  0015C2  D078               	goto	l146
  4222  0015C4                     l2618:
  4223                           
  4224                           ;main.c: 206: else
  4225                           ;main.c: 207: {
  4226                           ;main.c: 208: WriteTimer0(0);
  4227  0015C4  0E00               	movlw	0
  4228  0015C6  6E10               	movwf	WriteTimer0@timer0+1,c
  4229  0015C8  0E00               	movlw	0
  4230  0015CA  6E0F               	movwf	WriteTimer0@timer0,c
  4231  0015CC  EC3A  F011         	call	_WriteTimer0	;wreg free
  4232                           
  4233                           ;main.c: 209: TMR0IF = 0;
  4234  0015D0  94F2               	bcf	intcon,2,c	;volatile
  4235                           
  4236                           ;main.c: 210: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  4237  0015D2  D00D               	goto	l2626
  4238  0015D4                     l2622:
  4239                           
  4240                           ;main.c: 211: {
  4241                           ;main.c: 212: check_sensors();
  4242  0015D4  EC4C  F00C         	call	_check_sensors	;wreg free
  4243                           
  4244                           ;main.c: 213: set_leds();
  4245  0015D8  ECEC  F00D         	call	_set_leds	;wreg free
  4246                           
  4247                           ;main.c: 214: MotorControl(0,0);
  4248  0015DC  0E00               	movlw	0
  4249  0015DE  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4250  0015E0  0E00               	movlw	0
  4251  0015E2  6E2B               	movwf	MotorControl@delta_velocity,c
  4252  0015E4  0E00               	movlw	0
  4253  0015E6  6E2D               	movwf	MotorControl@speed_divider,c
  4254  0015E8  ECC2  F009         	call	_MotorControl	;wreg free
  4255  0015EC  D000               	goto	l2626
  4256  0015EE                     l2626:
  4257  0015EE  504E               	movf	_SeeLine,w,c
  4258  0015F0  0B1F               	andlw	31
  4259  0015F2  0900               	iorlw	0
  4260  0015F4  A4D8               	btfss	status,2,c
  4261  0015F6  D00C               	goto	l2632
  4262  0015F8  A4F2               	btfss	intcon,2,c	;volatile
  4263  0015FA  D7EC               	goto	l2622
  4264  0015FC  EC31  F011         	call	_ReadTimer0	;wreg free
  4265  001600  0E3B               	movlw	59
  4266  001602  5C0F               	subwf	?_ReadTimer0,w,c
  4267  001604  0EE8               	movlw	232
  4268  001606  5810               	subwfb	?_ReadTimer0+1,w,c
  4269  001608  B0D8               	btfsc	status,0,c
  4270  00160A  D002               	goto	l2632
  4271  00160C  D7E3               	goto	l2622
  4272  00160E  D000               	goto	l2632
  4273  001610                     l2632:
  4274                           
  4275                           ;main.c: 215: }
  4276                           ;main.c: 217: if(!SeeLine.B)
  4277  001610  504E               	movf	_SeeLine,w,c
  4278  001612  0B1F               	andlw	31
  4279  001614  0900               	iorlw	0
  4280  001616  A4D8               	btfss	status,2,c
  4281  001618  D04D               	goto	l146
  4282                           
  4283                           ;main.c: 218: {
  4284                           ;main.c: 219: motors_brake_all();
  4285  00161A  EC83  F010         	call	_motors_brake_all	;wreg free
  4286                           
  4287                           ;main.c: 220: _delay(50000);
  4288  00161E  0E41               	movlw	65
  4289  001620  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4290  001622  0EEE               	movlw	238
  4291  001624                     u2497:
  4292  001624  2EE8               	decfsz	wreg,f,c
  4293  001626  D7FE               	goto	u2497
  4294  001628  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4295  00162A  D7FC               	goto	u2497
  4296  00162C  D000               	nop2	
  4297                           
  4298                           ;main.c: 221: MotorControl(1600, TURN_SPEED_DIVIDER);
  4299  00162E  0E06               	movlw	6
  4300  001630  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4301  001632  0E40               	movlw	64
  4302  001634  6E2B               	movwf	MotorControl@delta_velocity,c
  4303  001636  0E09               	movlw	low _TURN_SPEED_DIVIDER
  4304  001638  6EF6               	movwf	tblptrl,c
  4305  00163A                     	if	1	;There is more than 1 active tblptr byte
  4306  00163A  0E10               	movlw	high _TURN_SPEED_DIVIDER
  4307  00163C  6EF7               	movwf	tblptrh,c
  4308  00163E                     	endif
  4309  00163E                     	if	1	;There are 3 active tblptr bytes
  4310  00163E  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  4311  001640  6EF8               	movwf	tblptru,c
  4312  001642                     	endif
  4313  001642  0008               	tblrd		*
  4314  001644  CFF5 F02D          	movff	tablat,MotorControl@speed_divider
  4315  001648  ECC2  F009         	call	_MotorControl	;wreg free
  4316                           
  4317                           ;main.c: 223: for(unsigned int i=0; i < TURN_TIME_ms; i++)
  4318  00164C  0E00               	movlw	0
  4319  00164E  6E3D               	movwf	GetBackonTrack@i+1,c
  4320  001650  0E00               	movlw	0
  4321  001652  6E3C               	movwf	GetBackonTrack@i,c
  4322  001654                     l2642:
  4323  001654  0E07               	movlw	low _TURN_TIME_ms
  4324  001656  6EF6               	movwf	tblptrl,c
  4325  001658                     	if	1	;There is more than 1 active tblptr byte
  4326  001658  0E10               	movlw	high _TURN_TIME_ms
  4327  00165A  6EF7               	movwf	tblptrh,c
  4328  00165C                     	endif
  4329  00165C                     	if	1	;There are 3 active tblptr bytes
  4330  00165C  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4331  00165E  6EF8               	movwf	tblptru,c
  4332  001660                     	endif
  4333  001660  0009               	tblrd		*+
  4334  001662  50F5               	movf	tablat,w,c
  4335  001664  5C3C               	subwf	GetBackonTrack@i,w,c
  4336  001666  0009               	tblrd		*+
  4337  001668  50F5               	movf	tablat,w,c
  4338  00166A  583D               	subwfb	GetBackonTrack@i+1,w,c
  4339  00166C  B0D8               	btfsc	status,0,c
  4340  00166E  D01B               	goto	l2656
  4341  001670  D001               	goto	l2646
  4342  001672  D019               	goto	l2656
  4343  001674                     l2646:
  4344                           
  4345                           ;main.c: 224: _delay(7991);
  4346  001674  0E0B               	movlw	11
  4347  001676  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4348  001678  0E5F               	movlw	95
  4349  00167A                     u2507:
  4350  00167A  2EE8               	decfsz	wreg,f,c
  4351  00167C  D7FE               	goto	u2507
  4352  00167E  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4353  001680  D7FC               	goto	u2507
  4354  001682  D000               	nop2	
  4355  001684  4A3C               	infsnz	GetBackonTrack@i,f,c
  4356  001686  2A3D               	incf	GetBackonTrack@i+1,f,c
  4357  001688  D7E5               	goto	l2642
  4358                           
  4359                           ;main.c: 226: while (!SeeLine.B)
  4360  00168A  D00D               	goto	l2656
  4361  00168C                     l2652:
  4362                           
  4363                           ;main.c: 227: {
  4364                           ;main.c: 228: check_sensors();
  4365  00168C  EC4C  F00C         	call	_check_sensors	;wreg free
  4366                           
  4367                           ;main.c: 229: set_leds();
  4368  001690  ECEC  F00D         	call	_set_leds	;wreg free
  4369                           
  4370                           ;main.c: 230: MotorControl(0,0);
  4371  001694  0E00               	movlw	0
  4372  001696  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4373  001698  0E00               	movlw	0
  4374  00169A  6E2B               	movwf	MotorControl@delta_velocity,c
  4375  00169C  0E00               	movlw	0
  4376  00169E  6E2D               	movwf	MotorControl@speed_divider,c
  4377  0016A0  ECC2  F009         	call	_MotorControl	;wreg free
  4378  0016A4  D000               	goto	l2656
  4379  0016A6                     l2656:
  4380  0016A6  504E               	movf	_SeeLine,w,c
  4381  0016A8  0B1F               	andlw	31
  4382  0016AA  0900               	iorlw	0
  4383  0016AC  A4D8               	btfss	status,2,c
  4384  0016AE  D002               	goto	l146
  4385  0016B0  D7ED               	goto	l2652
  4386  0016B2  D000               	goto	l146
  4387  0016B4                     l146:
  4388  0016B4  0012               	return		;funcret
  4389  0016B6                     __end_of_GetBackonTrack:
  4390                           	opt stack 0
  4391                           stkptr	equ	0xFFC
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           intcon	equ	0xFF2
  4397                           postinc0	equ	0xFEE
  4398                           wreg	equ	0xFE8
  4399                           indf1	equ	0xFE7
  4400                           postinc1	equ	0xFE6
  4401                           fsr1h	equ	0xFE2
  4402                           fsr1l	equ	0xFE1
  4403                           indf2	equ	0xFDF
  4404                           postinc2	equ	0xFDE
  4405                           plusw2	equ	0xFDB
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _SharpTurn *****************
  4411 ;; Defined at:
  4412 ;;		line 237 in file "../Robot Files/main.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  direction       1    wreg     enum E4173
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  direction       1   53[COMRAM] enum E4173
  4417 ;;  delta_veloci    2   54[COMRAM] int 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;Total ram usage:        4 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    4
  4434 ;; This function calls:
  4435 ;;		_MotorControl
  4436 ;;		_check_sensors
  4437 ;;		_motors_brake_all
  4438 ;;		_set_leds
  4439 ;; This function is called by:
  4440 ;;		_GetBackonTrack
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text36
  4445  001A08                     __ptext36:
  4446                           	opt stack 0
  4447  001A08                     _SharpTurn:
  4448                           	opt stack 25
  4449                           
  4450                           ;incstack = 0
  4451                           ;SharpTurn@direction stored from wreg
  4452  001A08  6E36               	movwf	SharpTurn@direction,c
  4453                           
  4454                           ;main.c: 239: int delta_velocity;
  4455                           ;main.c: 255: motors_brake_all();
  4456  001A0A  EC83  F010         	call	_motors_brake_all	;wreg free
  4457                           
  4458                           ;main.c: 256: _delay(50000);
  4459  001A0E  0E41               	movlw	65
  4460  001A10  6E35               	movwf	??_SharpTurn& (0+255),c
  4461  001A12  0EEE               	movlw	238
  4462  001A14                     u2517:
  4463  001A14  2EE8               	decfsz	wreg,f,c
  4464  001A16  D7FE               	goto	u2517
  4465  001A18  2E35               	decfsz	??_SharpTurn& (0+255),f,c
  4466  001A1A  D7FC               	goto	u2517
  4467  001A1C  D000               	nop2	
  4468                           
  4469                           ;main.c: 257: if(direction)
  4470  001A1E  5036               	movf	SharpTurn@direction,w,c
  4471  001A20  B4D8               	btfsc	status,2,c
  4472  001A22  D022               	goto	l2380
  4473                           
  4474                           ;main.c: 258: {
  4475                           ;main.c: 259: delta_velocity = 1600;
  4476  001A24  0E06               	movlw	6
  4477  001A26  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4478  001A28  0E40               	movlw	64
  4479  001A2A  6E37               	movwf	SharpTurn@delta_velocity,c
  4480                           
  4481                           ;main.c: 260: while (!SeeLine.b.CntLeft && delta_velocity)
  4482  001A2C  D012               	goto	l2374
  4483  001A2E                     l2366:
  4484                           
  4485                           ;main.c: 262: {
  4486                           ;main.c: 263: check_sensors();
  4487  001A2E  EC4C  F00C         	call	_check_sensors	;wreg free
  4488                           
  4489                           ;main.c: 264: set_leds();
  4490  001A32  ECEC  F00D         	call	_set_leds	;wreg free
  4491                           
  4492                           ;main.c: 265: MotorControl(delta_velocity,0);
  4493  001A36  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4494  001A3A  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4495  001A3E  0E00               	movlw	0
  4496  001A40  6E2D               	movwf	MotorControl@speed_divider,c
  4497  001A42  ECC2  F009         	call	_MotorControl	;wreg free
  4498                           
  4499                           ;main.c: 266: if (SeeLine.b.Center)
  4500  001A46  A44E               	btfss	_SeeLine,2,c
  4501  001A48  D004               	goto	l2374
  4502                           
  4503                           ;main.c: 267: delta_velocity--;
  4504  001A4A  0637               	decf	SharpTurn@delta_velocity,f,c
  4505  001A4C  A0D8               	btfss	status,0,c
  4506  001A4E  0638               	decf	SharpTurn@delta_velocity+1,f,c
  4507  001A50  D000               	goto	l2374
  4508  001A52                     l2374:
  4509  001A52  B64E               	btfsc	_SeeLine,3,c
  4510  001A54  D006               	goto	l2378
  4511  001A56  5037               	movf	SharpTurn@delta_velocity,w,c
  4512  001A58  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4513  001A5A  B4D8               	btfsc	status,2,c
  4514  001A5C  D002               	goto	l2378
  4515  001A5E  D7E7               	goto	l2366
  4516  001A60  D000               	goto	l2378
  4517  001A62                     l2378:
  4518                           
  4519                           ;main.c: 268: }
  4520                           ;main.c: 269: CW_rotation_flag = 0;
  4521  001A62  0E00               	movlw	0
  4522  001A64  6E4D               	movwf	_CW_rotation_flag,c
  4523                           
  4524                           ;main.c: 270: }
  4525  001A66  D020               	goto	l156
  4526  001A68                     l2380:
  4527                           
  4528                           ;main.c: 271: else
  4529                           ;main.c: 272: {
  4530                           ;main.c: 273: delta_velocity = -1600;
  4531  001A68  0EF9               	movlw	249
  4532  001A6A  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4533  001A6C  0EC0               	movlw	192
  4534  001A6E  6E37               	movwf	SharpTurn@delta_velocity,c
  4535                           
  4536                           ;main.c: 274: while (!SeeLine.b.CntRight && delta_velocity)
  4537  001A70  D011               	goto	l2390
  4538  001A72                     l2382:
  4539                           
  4540                           ;main.c: 276: {
  4541                           ;main.c: 277: check_sensors();
  4542  001A72  EC4C  F00C         	call	_check_sensors	;wreg free
  4543                           
  4544                           ;main.c: 278: set_leds();
  4545  001A76  ECEC  F00D         	call	_set_leds	;wreg free
  4546                           
  4547                           ;main.c: 279: MotorControl(delta_velocity,0);
  4548  001A7A  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4549  001A7E  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4550  001A82  0E00               	movlw	0
  4551  001A84  6E2D               	movwf	MotorControl@speed_divider,c
  4552  001A86  ECC2  F009         	call	_MotorControl	;wreg free
  4553                           
  4554                           ;main.c: 280: if (SeeLine.b.Center)
  4555  001A8A  A44E               	btfss	_SeeLine,2,c
  4556  001A8C  D003               	goto	l2390
  4557                           
  4558                           ;main.c: 281: delta_velocity++;
  4559  001A8E  4A37               	infsnz	SharpTurn@delta_velocity,f,c
  4560  001A90  2A38               	incf	SharpTurn@delta_velocity+1,f,c
  4561  001A92  D000               	goto	l2390
  4562  001A94                     l2390:
  4563  001A94  B24E               	btfsc	_SeeLine,1,c
  4564  001A96  D006               	goto	l2394
  4565  001A98  5037               	movf	SharpTurn@delta_velocity,w,c
  4566  001A9A  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4567  001A9C  B4D8               	btfsc	status,2,c
  4568  001A9E  D002               	goto	l2394
  4569  001AA0  D7E8               	goto	l2382
  4570  001AA2  D000               	goto	l2394
  4571  001AA4                     l2394:
  4572                           
  4573                           ;main.c: 282: }
  4574                           ;main.c: 283: CCW_rotation_flag = 0;
  4575  001AA4  0E00               	movlw	0
  4576  001AA6  6E4C               	movwf	_CCW_rotation_flag,c
  4577  001AA8                     l156:
  4578                           
  4579                           ;main.c: 284: }
  4580                           ;main.c: 285: I = 0;
  4581  001AA8  0E00               	movlw	0
  4582  001AAA  6E49               	movwf	_I+1,c
  4583  001AAC  0E00               	movlw	0
  4584  001AAE  6E48               	movwf	_I,c
  4585  001AB0  0012               	return		;funcret
  4586  001AB2                     __end_of_SharpTurn:
  4587                           	opt stack 0
  4588                           stkptr	equ	0xFFC
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           intcon	equ	0xFF2
  4594                           postinc0	equ	0xFEE
  4595                           wreg	equ	0xFE8
  4596                           indf1	equ	0xFE7
  4597                           postinc1	equ	0xFE6
  4598                           fsr1h	equ	0xFE2
  4599                           fsr1l	equ	0xFE1
  4600                           indf2	equ	0xFDF
  4601                           postinc2	equ	0xFDE
  4602                           plusw2	equ	0xFDB
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _ReadTimer0 *****************
  4608 ;; Defined at:
  4609 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  timer           2   16[COMRAM] struct Timers
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  2   14[COMRAM] unsigned int 
  4616 ;; Registers used:
  4617 ;;		None
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        4 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_PID_LineFollowing
  4634 ;;		_GetBackonTrack
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text37
  4639  002262                     __ptext37:
  4640                           	opt stack 0
  4641  002262                     _ReadTimer0:
  4642                           	opt stack 28
  4643                           
  4644                           ;incstack = 0
  4645  002262  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4646  002266  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4647  00226A  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4648  00226E  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4649  002272  0012               	return		;funcret
  4650  002274                     __end_of_ReadTimer0:
  4651                           	opt stack 0
  4652                           stkptr	equ	0xFFC
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           intcon	equ	0xFF2
  4658                           postinc0	equ	0xFEE
  4659                           wreg	equ	0xFE8
  4660                           indf1	equ	0xFE7
  4661                           postinc1	equ	0xFE6
  4662                           fsr1h	equ	0xFE2
  4663                           fsr1l	equ	0xFE1
  4664                           indf2	equ	0xFDF
  4665                           postinc2	equ	0xFDE
  4666                           plusw2	equ	0xFDB
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function _AllSensorsTriggered *****************
  4672 ;; Defined at:
  4673 ;;		line 290 in file "../Robot Files/main.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;		None               void
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;Total ram usage:        1 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    4
  4694 ;; This function calls:
  4695 ;;		_MotorControl
  4696 ;;		_WriteTimer0
  4697 ;;		_check_sensors
  4698 ;;		_motors_brake_all
  4699 ;;		_set_leds
  4700 ;; This function is called by:
  4701 ;;		_main
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text38
  4706  001CD4                     __ptext38:
  4707                           	opt stack 0
  4708  001CD4                     _AllSensorsTriggered:
  4709                           	opt stack 26
  4710                           
  4711                           ;main.c: 292: WriteTimer0(0);
  4712                           
  4713                           ;incstack = 0
  4714  001CD4  0E00               	movlw	0
  4715  001CD6  6E10               	movwf	WriteTimer0@timer0+1,c
  4716  001CD8  0E00               	movlw	0
  4717  001CDA  6E0F               	movwf	WriteTimer0@timer0,c
  4718  001CDC  EC3A  F011         	call	_WriteTimer0	;wreg free
  4719                           
  4720                           ;main.c: 293: TMR0IF = 0;
  4721  001CE0  94F2               	bcf	intcon,2,c	;volatile
  4722                           
  4723                           ;main.c: 294: while (SeeLine.B=0b11111u && !(TMR0IF))
  4724  001CE2  D00D               	goto	l2666
  4725  001CE4                     l2662:
  4726                           
  4727                           ;main.c: 295: {
  4728                           ;main.c: 296: check_sensors();
  4729  001CE4  EC4C  F00C         	call	_check_sensors	;wreg free
  4730                           
  4731                           ;main.c: 297: set_leds();
  4732  001CE8  ECEC  F00D         	call	_set_leds	;wreg free
  4733                           
  4734                           ;main.c: 298: MotorControl(0,0);
  4735  001CEC  0E00               	movlw	0
  4736  001CEE  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4737  001CF0  0E00               	movlw	0
  4738  001CF2  6E2B               	movwf	MotorControl@delta_velocity,c
  4739  001CF4  0E00               	movlw	0
  4740  001CF6  6E2D               	movwf	MotorControl@speed_divider,c
  4741  001CF8  ECC2  F009         	call	_MotorControl	;wreg free
  4742  001CFC  D000               	goto	l2666
  4743  001CFE                     l2666:
  4744  001CFE  0E00               	movlw	0
  4745  001D00  6E35               	movwf	_AllSensorsTriggered$472,c
  4746  001D02  B4F2               	btfsc	intcon,2,c	;volatile
  4747  001D04  D003               	goto	l2672
  4748  001D06  0E01               	movlw	1
  4749  001D08  6E35               	movwf	_AllSensorsTriggered$472,c
  4750  001D0A  D000               	goto	l2672
  4751  001D0C                     l2672:
  4752  001D0C  504E               	movf	_SeeLine,w,c
  4753  001D0E  1835               	xorwf	_AllSensorsTriggered$472,w,c
  4754  001D10  0BE0               	andlw	-32
  4755  001D12  1835               	xorwf	_AllSensorsTriggered$472,w,c
  4756  001D14  6E4E               	movwf	_SeeLine,c
  4757  001D16  504E               	movf	_SeeLine,w,c
  4758  001D18  0B1F               	andlw	31
  4759  001D1A  0900               	iorlw	0
  4760  001D1C  A4D8               	btfss	status,2,c
  4761  001D1E  D7E2               	goto	l2662
  4762                           
  4763                           ;main.c: 299: }
  4764                           ;main.c: 300: if (SeeLine.B=0b11111u)
  4765  001D20  804E               	bsf	_SeeLine,0,c
  4766  001D22  824E               	bsf	_SeeLine,1,c
  4767  001D24  844E               	bsf	_SeeLine,2,c
  4768  001D26  864E               	bsf	_SeeLine,3,c
  4769  001D28  884E               	bsf	_SeeLine,4,c
  4770                           
  4771                           ;main.c: 301: {
  4772                           ;main.c: 302: motors_brake_all();
  4773  001D2A  EC83  F010         	call	_motors_brake_all	;wreg free
  4774                           
  4775                           ;main.c: 303: while (SeeLine.B=0b11111u)
  4776  001D2E  D005               	goto	l2678
  4777  001D30                     l2676:
  4778                           
  4779                           ;main.c: 304: {
  4780                           ;main.c: 305: check_sensors();
  4781  001D30  EC4C  F00C         	call	_check_sensors	;wreg free
  4782                           
  4783                           ;main.c: 306: set_leds();
  4784  001D34  ECEC  F00D         	call	_set_leds	;wreg free
  4785  001D38  D000               	goto	l2678
  4786  001D3A                     l2678:
  4787  001D3A  804E               	bsf	_SeeLine,0,c
  4788  001D3C  824E               	bsf	_SeeLine,1,c
  4789  001D3E  844E               	bsf	_SeeLine,2,c
  4790  001D40  864E               	bsf	_SeeLine,3,c
  4791  001D42  884E               	bsf	_SeeLine,4,c
  4792  001D44  D7F5               	goto	l2676
  4793  001D46  D000               	goto	l175
  4794  001D48                     l175:
  4795  001D48  0012               	return		;funcret
  4796  001D4A                     __end_of_AllSensorsTriggered:
  4797                           	opt stack 0
  4798                           stkptr	equ	0xFFC
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           intcon	equ	0xFF2
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           indf1	equ	0xFE7
  4807                           postinc1	equ	0xFE6
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           plusw2	equ	0xFDB
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function _set_leds *****************
  4818 ;; Defined at:
  4819 ;;		line 256 in file "../Robot Files/sumovore.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        1 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;;		_GetBackonTrack
  4845 ;;		_SharpTurn
  4846 ;;		_AllSensorsTriggered
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text39
  4851  001BD8                     __ptext39:
  4852                           	opt stack 0
  4853  001BD8                     _set_leds:
  4854                           	opt stack 29
  4855                           
  4856                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4857                           
  4858                           ;incstack = 0
  4859  001BD8  B84E               	btfsc	_SeeLine,4,c
  4860  001BDA  D003               	goto	u1590
  4861  001BDC  6A0F               	clrf	??_set_leds& (0+255),c
  4862  001BDE  2A0F               	incf	??_set_leds& (0+255),f,c
  4863  001BE0  D001               	goto	u1608
  4864  001BE2                     u1590:
  4865  001BE2  6A0F               	clrf	??_set_leds& (0+255),c
  4866  001BE4                     u1608:
  4867  001BE4  5083               	movf	3971,w,c	;volatile
  4868  001BE6  180F               	xorwf	??_set_leds,w,c
  4869  001BE8  0BFE               	andlw	-2
  4870  001BEA  180F               	xorwf	??_set_leds,w,c
  4871  001BEC  6E83               	movwf	3971,c	;volatile
  4872                           
  4873                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  4874  001BEE  B64E               	btfsc	_SeeLine,3,c
  4875  001BF0  D003               	goto	u1610
  4876  001BF2  6A0F               	clrf	??_set_leds& (0+255),c
  4877  001BF4  2A0F               	incf	??_set_leds& (0+255),f,c
  4878  001BF6  D001               	goto	u1628
  4879  001BF8                     u1610:
  4880  001BF8  6A0F               	clrf	??_set_leds& (0+255),c
  4881  001BFA                     u1628:
  4882  001BFA  460F               	rlncf	??_set_leds,f,c
  4883  001BFC  5083               	movf	3971,w,c	;volatile
  4884  001BFE  180F               	xorwf	??_set_leds,w,c
  4885  001C00  0BFD               	andlw	-3
  4886  001C02  180F               	xorwf	??_set_leds,w,c
  4887  001C04  6E83               	movwf	3971,c	;volatile
  4888                           
  4889                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  4890  001C06  B44E               	btfsc	_SeeLine,2,c
  4891  001C08  D003               	goto	u1630
  4892  001C0A  6A0F               	clrf	??_set_leds& (0+255),c
  4893  001C0C  2A0F               	incf	??_set_leds& (0+255),f,c
  4894  001C0E  D001               	goto	u1648
  4895  001C10                     u1630:
  4896  001C10  6A0F               	clrf	??_set_leds& (0+255),c
  4897  001C12                     u1648:
  4898  001C12  460F               	rlncf	??_set_leds,f,c
  4899  001C14  460F               	rlncf	??_set_leds,f,c
  4900  001C16  5083               	movf	3971,w,c	;volatile
  4901  001C18  180F               	xorwf	??_set_leds,w,c
  4902  001C1A  0BFB               	andlw	-5
  4903  001C1C  180F               	xorwf	??_set_leds,w,c
  4904  001C1E  6E83               	movwf	3971,c	;volatile
  4905                           
  4906                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  4907  001C20  B24E               	btfsc	_SeeLine,1,c
  4908  001C22  D003               	goto	u1650
  4909  001C24  6A0F               	clrf	??_set_leds& (0+255),c
  4910  001C26  2A0F               	incf	??_set_leds& (0+255),f,c
  4911  001C28  D001               	goto	u1668
  4912  001C2A                     u1650:
  4913  001C2A  6A0F               	clrf	??_set_leds& (0+255),c
  4914  001C2C                     u1668:
  4915  001C2C  460F               	rlncf	??_set_leds,f,c
  4916  001C2E  460F               	rlncf	??_set_leds,f,c
  4917  001C30  460F               	rlncf	??_set_leds,f,c
  4918  001C32  5083               	movf	3971,w,c	;volatile
  4919  001C34  180F               	xorwf	??_set_leds,w,c
  4920  001C36  0BF7               	andlw	-9
  4921  001C38  180F               	xorwf	??_set_leds,w,c
  4922  001C3A  6E83               	movwf	3971,c	;volatile
  4923                           
  4924                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  4925  001C3C  B04E               	btfsc	_SeeLine,0,c
  4926  001C3E  D003               	goto	u1670
  4927  001C40  6A0F               	clrf	??_set_leds& (0+255),c
  4928  001C42  2A0F               	incf	??_set_leds& (0+255),f,c
  4929  001C44  D001               	goto	u1688
  4930  001C46                     u1670:
  4931  001C46  6A0F               	clrf	??_set_leds& (0+255),c
  4932  001C48                     u1688:
  4933  001C48  3A0F               	swapf	??_set_leds,f,c
  4934  001C4A  5083               	movf	3971,w,c	;volatile
  4935  001C4C  180F               	xorwf	??_set_leds,w,c
  4936  001C4E  0BEF               	andlw	-17
  4937  001C50  180F               	xorwf	??_set_leds,w,c
  4938  001C52  6E83               	movwf	3971,c	;volatile
  4939  001C54  0012               	return		;funcret
  4940  001C56                     __end_of_set_leds:
  4941                           	opt stack 0
  4942                           stkptr	equ	0xFFC
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postinc1	equ	0xFE6
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           plusw2	equ	0xFDB
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _motors_brake_all *****************
  4962 ;; Defined at:
  4963 ;;		line 219 in file "../Robot Files/sumovore.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;		None               void
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    2
  4984 ;; This function calls:
  4985 ;;		_SetDCPWM1
  4986 ;;		_SetDCPWM2
  4987 ;; This function is called by:
  4988 ;;		_GetBackonTrack
  4989 ;;		_SharpTurn
  4990 ;;		_AllSensorsTriggered
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text40
  4995  002106                     __ptext40:
  4996                           	opt stack 0
  4997  002106                     _motors_brake_all:
  4998                           	opt stack 27
  4999                           
  5000                           ;sumovore.c: 221: SetDCPWM1(800u );
  5001                           
  5002                           ;incstack = 0
  5003  002106  0E03               	movlw	3
  5004  002108  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  5005  00210A  0E20               	movlw	32
  5006  00210C  6E0F               	movwf	SetDCPWM1@dutycycle,c
  5007  00210E  ECCF  F00F         	call	_SetDCPWM1	;wreg free
  5008                           
  5009                           ;sumovore.c: 222: SetDCPWM2(800u );
  5010  002112  0E03               	movlw	3
  5011  002114  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  5012  002116  0E20               	movlw	32
  5013  002118  6E0F               	movwf	SetDCPWM2@dutycycle,c
  5014  00211A  ECB2  F00F         	call	_SetDCPWM2	;wreg free
  5015                           
  5016                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  5017  00211E  9284               	bcf	3972,1,c	;volatile
  5018                           
  5019                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  5020  002120  9082               	bcf	3970,0,c	;volatile
  5021                           
  5022                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  5023  002122  9084               	bcf	3972,0,c	;volatile
  5024                           
  5025                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  5026  002124  9A82               	bcf	3970,5,c	;volatile
  5027  002126  0012               	return		;funcret
  5028  002128                     __end_of_motors_brake_all:
  5029                           	opt stack 0
  5030                           stkptr	equ	0xFFC
  5031                           tblptru	equ	0xFF8
  5032                           tblptrh	equ	0xFF7
  5033                           tblptrl	equ	0xFF6
  5034                           tablat	equ	0xFF5
  5035                           intcon	equ	0xFF2
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           indf1	equ	0xFE7
  5039                           postinc1	equ	0xFE6
  5040                           fsr1h	equ	0xFE2
  5041                           fsr1l	equ	0xFE1
  5042                           indf2	equ	0xFDF
  5043                           postinc2	equ	0xFDE
  5044                           plusw2	equ	0xFDB
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function _check_sensors *****************
  5050 ;; Defined at:
  5051 ;;		line 242 in file "../Robot Files/sumovore.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;		None               void
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;Total ram usage:        1 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    3
  5072 ;; This function calls:
  5073 ;;		_adc
  5074 ;; This function is called by:
  5075 ;;		_main
  5076 ;;		_GetBackonTrack
  5077 ;;		_SharpTurn
  5078 ;;		_AllSensorsTriggered
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text41
  5083  001898                     __ptext41:
  5084                           	opt stack 0
  5085  001898                     _check_sensors:
  5086                           	opt stack 27
  5087                           
  5088                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5089                           
  5090                           ;incstack = 0
  5091  001898  0E87               	movlw	135
  5092  00189A  EC35  F010         	call	_adc
  5093  00189E  5013               	movf	?_adc,w,c
  5094  0018A0  5C4A               	subwf	_threshold,w,c
  5095  0018A2  5014               	movf	?_adc+1,w,c
  5096  0018A4  584B               	subwfb	_threshold+1,w,c
  5097  0018A6  B0D8               	btfsc	status,0,c
  5098  0018A8  D003               	goto	u1490
  5099  0018AA  6A16               	clrf	??_check_sensors& (0+255),c
  5100  0018AC  2A16               	incf	??_check_sensors& (0+255),f,c
  5101  0018AE  D001               	goto	u1508
  5102  0018B0                     u1490:
  5103  0018B0  6A16               	clrf	??_check_sensors& (0+255),c
  5104  0018B2                     u1508:
  5105  0018B2  3A16               	swapf	??_check_sensors,f,c
  5106  0018B4  504E               	movf	_SeeLine,w,c
  5107  0018B6  1816               	xorwf	??_check_sensors,w,c
  5108  0018B8  0BEF               	andlw	-17
  5109  0018BA  1816               	xorwf	??_check_sensors,w,c
  5110  0018BC  6E4E               	movwf	_SeeLine,c
  5111                           
  5112                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5113  0018BE  0E8F               	movlw	143
  5114  0018C0  EC35  F010         	call	_adc
  5115  0018C4  5013               	movf	?_adc,w,c
  5116  0018C6  5C4A               	subwf	_threshold,w,c
  5117  0018C8  5014               	movf	?_adc+1,w,c
  5118  0018CA  584B               	subwfb	_threshold+1,w,c
  5119  0018CC  B0D8               	btfsc	status,0,c
  5120  0018CE  D003               	goto	u1510
  5121  0018D0  6A16               	clrf	??_check_sensors& (0+255),c
  5122  0018D2  2A16               	incf	??_check_sensors& (0+255),f,c
  5123  0018D4  D001               	goto	u1528
  5124  0018D6                     u1510:
  5125  0018D6  6A16               	clrf	??_check_sensors& (0+255),c
  5126  0018D8                     u1528:
  5127  0018D8  4616               	rlncf	??_check_sensors,f,c
  5128  0018DA  4616               	rlncf	??_check_sensors,f,c
  5129  0018DC  4616               	rlncf	??_check_sensors,f,c
  5130  0018DE  504E               	movf	_SeeLine,w,c
  5131  0018E0  1816               	xorwf	??_check_sensors,w,c
  5132  0018E2  0BF7               	andlw	-9
  5133  0018E4  1816               	xorwf	??_check_sensors,w,c
  5134  0018E6  6E4E               	movwf	_SeeLine,c
  5135                           
  5136                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5137  0018E8  0E97               	movlw	151
  5138  0018EA  EC35  F010         	call	_adc
  5139  0018EE  5013               	movf	?_adc,w,c
  5140  0018F0  5C4A               	subwf	_threshold,w,c
  5141  0018F2  5014               	movf	?_adc+1,w,c
  5142  0018F4  584B               	subwfb	_threshold+1,w,c
  5143  0018F6  B0D8               	btfsc	status,0,c
  5144  0018F8  D003               	goto	u1530
  5145  0018FA  6A16               	clrf	??_check_sensors& (0+255),c
  5146  0018FC  2A16               	incf	??_check_sensors& (0+255),f,c
  5147  0018FE  D001               	goto	u1548
  5148  001900                     u1530:
  5149  001900  6A16               	clrf	??_check_sensors& (0+255),c
  5150  001902                     u1548:
  5151  001902  4616               	rlncf	??_check_sensors,f,c
  5152  001904  4616               	rlncf	??_check_sensors,f,c
  5153  001906  504E               	movf	_SeeLine,w,c
  5154  001908  1816               	xorwf	??_check_sensors,w,c
  5155  00190A  0BFB               	andlw	-5
  5156  00190C  1816               	xorwf	??_check_sensors,w,c
  5157  00190E  6E4E               	movwf	_SeeLine,c
  5158                           
  5159                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5160  001910  0E9F               	movlw	159
  5161  001912  EC35  F010         	call	_adc
  5162  001916  5013               	movf	?_adc,w,c
  5163  001918  5C4A               	subwf	_threshold,w,c
  5164  00191A  5014               	movf	?_adc+1,w,c
  5165  00191C  584B               	subwfb	_threshold+1,w,c
  5166  00191E  B0D8               	btfsc	status,0,c
  5167  001920  D003               	goto	u1550
  5168  001922  6A16               	clrf	??_check_sensors& (0+255),c
  5169  001924  2A16               	incf	??_check_sensors& (0+255),f,c
  5170  001926  D001               	goto	u1568
  5171  001928                     u1550:
  5172  001928  6A16               	clrf	??_check_sensors& (0+255),c
  5173  00192A                     u1568:
  5174  00192A  4616               	rlncf	??_check_sensors,f,c
  5175  00192C  504E               	movf	_SeeLine,w,c
  5176  00192E  1816               	xorwf	??_check_sensors,w,c
  5177  001930  0BFD               	andlw	-3
  5178  001932  1816               	xorwf	??_check_sensors,w,c
  5179  001934  6E4E               	movwf	_SeeLine,c
  5180                           
  5181                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5182  001936  0EA7               	movlw	167
  5183  001938  EC35  F010         	call	_adc
  5184  00193C  5013               	movf	?_adc,w,c
  5185  00193E  5C4A               	subwf	_threshold,w,c
  5186  001940  5014               	movf	?_adc+1,w,c
  5187  001942  584B               	subwfb	_threshold+1,w,c
  5188  001944  B0D8               	btfsc	status,0,c
  5189  001946  D003               	goto	u1570
  5190  001948  6A16               	clrf	??_check_sensors& (0+255),c
  5191  00194A  2A16               	incf	??_check_sensors& (0+255),f,c
  5192  00194C  D001               	goto	u1588
  5193  00194E                     u1570:
  5194  00194E  6A16               	clrf	??_check_sensors& (0+255),c
  5195  001950                     u1588:
  5196  001950  504E               	movf	_SeeLine,w,c
  5197  001952  1816               	xorwf	??_check_sensors,w,c
  5198  001954  0BFE               	andlw	-2
  5199  001956  1816               	xorwf	??_check_sensors,w,c
  5200  001958  6E4E               	movwf	_SeeLine,c
  5201  00195A  0012               	return		;funcret
  5202  00195C                     __end_of_check_sensors:
  5203                           	opt stack 0
  5204                           stkptr	equ	0xFFC
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           intcon	equ	0xFF2
  5210                           postinc0	equ	0xFEE
  5211                           wreg	equ	0xFE8
  5212                           indf1	equ	0xFE7
  5213                           postinc1	equ	0xFE6
  5214                           fsr1h	equ	0xFE2
  5215                           fsr1l	equ	0xFE1
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           plusw2	equ	0xFDB
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _adc *****************
  5224 ;; Defined at:
  5225 ;;		line 230 in file "../Robot Files/sumovore.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  channel         1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  channel         1   20[COMRAM] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  2   18[COMRAM] unsigned int 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;Total ram usage:        3 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    2
  5246 ;; This function calls:
  5247 ;;		_BusyADC
  5248 ;;		_ConvertADC
  5249 ;;		_ReadADC
  5250 ;;		_SetChanADC
  5251 ;; This function is called by:
  5252 ;;		_check_sensors
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text42
  5257  00206A                     __ptext42:
  5258                           	opt stack 0
  5259  00206A                     _adc:
  5260                           	opt stack 27
  5261                           
  5262                           ;incstack = 0
  5263                           ;adc@channel stored from wreg
  5264  00206A  6E15               	movwf	adc@channel,c
  5265                           
  5266                           ;sumovore.c: 232: SetChanADC( channel );
  5267  00206C  5015               	movf	adc@channel,w,c
  5268  00206E  EC14  F011         	call	_SetChanADC
  5269                           
  5270                           ;sumovore.c: 233: ConvertADC();
  5271  002072  EC6E  F011         	call	_ConvertADC	;wreg free
  5272                           
  5273                           ;sumovore.c: 234: while( BusyADC() );
  5274  002076  D000               	goto	l2142
  5275  002078                     l2142:
  5276  002078  EC52  F011         	call	_BusyADC	;wreg free
  5277  00207C  0900               	iorlw	0
  5278  00207E  A4D8               	btfss	status,2,c
  5279  002080  D7FB               	goto	l2142
  5280                           
  5281                           ;sumovore.c: 236: return ReadADC();
  5282  002082  EC43  F011         	call	_ReadADC	;wreg free
  5283  002086  C00F  F013         	movff	?_ReadADC,?_adc
  5284  00208A  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5285  00208E  D000               	goto	l303
  5286  002090                     l303:
  5287  002090  0012               	return		;funcret
  5288  002092                     __end_of_adc:
  5289                           	opt stack 0
  5290                           stkptr	equ	0xFFC
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           intcon	equ	0xFF2
  5296                           postinc0	equ	0xFEE
  5297                           wreg	equ	0xFE8
  5298                           indf1	equ	0xFE7
  5299                           postinc1	equ	0xFE6
  5300                           fsr1h	equ	0xFE2
  5301                           fsr1l	equ	0xFE1
  5302                           indf2	equ	0xFDF
  5303                           postinc2	equ	0xFDE
  5304                           plusw2	equ	0xFDB
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function _SetChanADC *****************
  5310 ;; Defined at:
  5311 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  channel         1    wreg     unsigned char 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  channel         1   15[COMRAM] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;		None               void
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;Total ram usage:        2 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_adc
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text43
  5340  002228                     __ptext43:
  5341                           	opt stack 0
  5342  002228                     _SetChanADC:
  5343                           	opt stack 27
  5344                           
  5345                           ;incstack = 0
  5346                           ;SetChanADC@channel stored from wreg
  5347  002228  6E10               	movwf	SetChanADC@channel,c
  5348  00222A  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5349  00222E  0EC3               	movlw	195
  5350  002230  160F               	andwf	??_SetChanADC,f,c
  5351  002232  90D8               	bcf	status,0,c
  5352  002234  3010               	rrcf	SetChanADC@channel,w,c
  5353  002236  0B3C               	andlw	60
  5354  002238  100F               	iorwf	??_SetChanADC,w,c
  5355  00223A  6EC2               	movwf	4034,c	;volatile
  5356  00223C  0012               	return		;funcret
  5357  00223E                     __end_of_SetChanADC:
  5358                           	opt stack 0
  5359                           stkptr	equ	0xFFC
  5360                           tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           intcon	equ	0xFF2
  5365                           postinc0	equ	0xFEE
  5366                           wreg	equ	0xFE8
  5367                           indf1	equ	0xFE7
  5368                           postinc1	equ	0xFE6
  5369                           fsr1h	equ	0xFE2
  5370                           fsr1l	equ	0xFE1
  5371                           indf2	equ	0xFDF
  5372                           postinc2	equ	0xFDE
  5373                           plusw2	equ	0xFDB
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function _ReadADC *****************
  5379 ;; Defined at:
  5380 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  2   14[COMRAM] int 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;Total ram usage:        4 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_adc
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text44
  5409  002286                     __ptext44:
  5410                           	opt stack 0
  5411  002286                     _ReadADC:
  5412                           	opt stack 27
  5413                           
  5414                           ;incstack = 0
  5415  002286  50C4               	movf	4036,w,c	;volatile
  5416  002288  6E11               	movwf	??_ReadADC& (0+255),c
  5417  00228A  50C3               	movf	4035,w,c	;volatile
  5418  00228C  6E0F               	movwf	?_ReadADC,c
  5419  00228E  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5420  002292  D000               	goto	l454
  5421  002294                     l454:
  5422  002294  0012               	return		;funcret
  5423  002296                     __end_of_ReadADC:
  5424                           	opt stack 0
  5425                           stkptr	equ	0xFFC
  5426                           tblptru	equ	0xFF8
  5427                           tblptrh	equ	0xFF7
  5428                           tblptrl	equ	0xFF6
  5429                           tablat	equ	0xFF5
  5430                           intcon	equ	0xFF2
  5431                           postinc0	equ	0xFEE
  5432                           wreg	equ	0xFE8
  5433                           indf1	equ	0xFE7
  5434                           postinc1	equ	0xFE6
  5435                           fsr1h	equ	0xFE2
  5436                           fsr1l	equ	0xFE1
  5437                           indf2	equ	0xFDF
  5438                           postinc2	equ	0xFDE
  5439                           plusw2	equ	0xFDB
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444 ;; *************** function _ConvertADC *****************
  5445 ;; Defined at:
  5446 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;		None
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;		None
  5451 ;; Return value:  Size  Location     Type
  5452 ;;		None               void
  5453 ;; Registers used:
  5454 ;;		None
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        0 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_adc
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text45
  5475  0022DC                     __ptext45:
  5476                           	opt stack 0
  5477  0022DC                     _ConvertADC:
  5478                           	opt stack 27
  5479                           
  5480                           ;incstack = 0
  5481  0022DC  82C2               	bsf	4034,1,c	;volatile
  5482  0022DE  0012               	return		;funcret
  5483  0022E0                     __end_of_ConvertADC:
  5484                           	opt stack 0
  5485                           stkptr	equ	0xFFC
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           intcon	equ	0xFF2
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           indf1	equ	0xFE7
  5494                           postinc1	equ	0xFE6
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           plusw2	equ	0xFDB
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _BusyADC *****************
  5505 ;; Defined at:
  5506 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;		None
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      unsigned char 
  5513 ;; Registers used:
  5514 ;;		wreg
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;Total ram usage:        0 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_adc
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text46
  5535  0022A4                     __ptext46:
  5536                           	opt stack 0
  5537  0022A4                     _BusyADC:
  5538                           	opt stack 27
  5539                           
  5540                           ;incstack = 0
  5541  0022A4  A2C2               	btfss	4034,1,c	;volatile
  5542  0022A6  D002               	goto	u1380
  5543  0022A8  0E01               	movlw	1
  5544  0022AA  D002               	goto	l424
  5545  0022AC                     u1380:
  5546  0022AC  0E00               	movlw	0
  5547  0022AE  D000               	goto	l424
  5548  0022B0                     l424:
  5549  0022B0  0012               	return		;funcret
  5550  0022B2                     __end_of_BusyADC:
  5551                           	opt stack 0
  5552                           stkptr	equ	0xFFC
  5553                           tblptru	equ	0xFF8
  5554                           tblptrh	equ	0xFF7
  5555                           tblptrl	equ	0xFF6
  5556                           tablat	equ	0xFF5
  5557                           intcon	equ	0xFF2
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           postinc1	equ	0xFE6
  5562                           fsr1h	equ	0xFE2
  5563                           fsr1l	equ	0xFE1
  5564                           indf2	equ	0xFDF
  5565                           postinc2	equ	0xFDE
  5566                           plusw2	equ	0xFDB
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _WriteTimer0 *****************
  5572 ;; Defined at:
  5573 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  timer0          2   14[COMRAM] unsigned int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  timer           2   16[COMRAM] struct Timers
  5578 ;; Return value:  Size  Location     Type
  5579 ;;		None               void
  5580 ;; Registers used:
  5581 ;;		None
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;Total ram usage:        4 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_main
  5598 ;;		_GetBackonTrack
  5599 ;;		_AllSensorsTriggered
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text47
  5604  002274                     __ptext47:
  5605                           	opt stack 0
  5606  002274                     _WriteTimer0:
  5607                           	opt stack 29
  5608                           
  5609                           ;incstack = 0
  5610  002274  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5611  002278  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5612  00227C  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5613  002280  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5614  002284  0012               	return		;funcret
  5615  002286                     __end_of_WriteTimer0:
  5616                           	opt stack 0
  5617                           stkptr	equ	0xFFC
  5618                           tblptru	equ	0xFF8
  5619                           tblptrh	equ	0xFF7
  5620                           tblptrl	equ	0xFF6
  5621                           tablat	equ	0xFF5
  5622                           intcon	equ	0xFF2
  5623                           postinc0	equ	0xFEE
  5624                           wreg	equ	0xFE8
  5625                           indf1	equ	0xFE7
  5626                           postinc1	equ	0xFE6
  5627                           fsr1h	equ	0xFE2
  5628                           fsr1l	equ	0xFE1
  5629                           indf2	equ	0xFDF
  5630                           postinc2	equ	0xFDE
  5631                           plusw2	equ	0xFDB
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function _MotorControl *****************
  5637 ;; Defined at:
  5638 ;;		line 144 in file "../Robot Files/main.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  delta_veloci    2   42[COMRAM] int 
  5641 ;;  speed_divide    1   44[COMRAM] unsigned char 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  right_duty_c    2   50[COMRAM] int 
  5644 ;;  left_duty_cy    2   48[COMRAM] int 
  5645 ;;  right_dir_mo    1   47[COMRAM] enum E4173
  5646 ;;  left_dir_mod    1   46[COMRAM] enum E4173
  5647 ;; Return value:  Size  Location     Type
  5648 ;;		None               void
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5656 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;Total ram usage:       10 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    2
  5663 ;; This function calls:
  5664 ;;		_SetDCPWM1
  5665 ;;		_SetDCPWM2
  5666 ;;		___awdiv
  5667 ;;		___wmul
  5668 ;; This function is called by:
  5669 ;;		_PID_LineFollowing
  5670 ;;		_GetBackonTrack
  5671 ;;		_SharpTurn
  5672 ;;		_AllSensorsTriggered
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text48
  5677  001384                     __ptext48:
  5678                           	opt stack 0
  5679  001384                     _MotorControl:
  5680                           	opt stack 27
  5681                           
  5682                           ;main.c: 146: int left_duty_cycle = 700, right_duty_cycle = 700;
  5683                           
  5684                           ;incstack = 0
  5685  001384  0E02               	movlw	2
  5686  001386  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5687  001388  0EBC               	movlw	188
  5688  00138A  6E31               	movwf	MotorControl@left_duty_cycle,c
  5689  00138C  0E02               	movlw	2
  5690  00138E  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5691  001390  0EBC               	movlw	188
  5692  001392  6E33               	movwf	MotorControl@right_duty_cycle,c
  5693                           
  5694                           ;main.c: 147: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5695  001394  0E01               	movlw	1
  5696  001396  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5697  001398  0E01               	movlw	1
  5698  00139A  6E30               	movwf	MotorControl@right_dir_modifier,c
  5699                           
  5700                           ;main.c: 150: if ( delta_velocity < 0 )
  5701  00139C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5702  00139E  D023               	goto	l2210
  5703                           
  5704                           ;main.c: 151: {
  5705                           ;main.c: 152: left_duty_cycle += delta_velocity*15/16;
  5706  0013A0  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5707  0013A4  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5708  0013A8  0E00               	movlw	0
  5709  0013AA  6E20               	movwf	___wmul@multiplicand+1,c
  5710  0013AC  0E0F               	movlw	15
  5711  0013AE  6E1F               	movwf	___wmul@multiplicand,c
  5712  0013B0  EC49  F010         	call	___wmul	;wreg free
  5713  0013B4  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5714  0013B8  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5715  0013BC  0E00               	movlw	0
  5716  0013BE  6E26               	movwf	___awdiv@divisor+1,c
  5717  0013C0  0E10               	movlw	16
  5718  0013C2  6E25               	movwf	___awdiv@divisor,c
  5719  0013C4  EC59  F00D         	call	___awdiv	;wreg free
  5720  0013C8  5023               	movf	?___awdiv,w,c
  5721  0013CA  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5722  0013CC  5024               	movf	?___awdiv+1,w,c
  5723  0013CE  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5724                           
  5725                           ;main.c: 153: right_duty_cycle -= delta_velocity/16;
  5726  0013D0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5727  0013D4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5728  0013D8  0E00               	movlw	0
  5729  0013DA  6E26               	movwf	___awdiv@divisor+1,c
  5730  0013DC  0E10               	movlw	16
  5731  0013DE  6E25               	movwf	___awdiv@divisor,c
  5732  0013E0  EC59  F00D         	call	___awdiv	;wreg free
  5733  0013E4  D022               	goto	L8
  5734  0013E6                     l2210:
  5735                           
  5736                           ;main.c: 156: else
  5737                           ;main.c: 157: {
  5738                           ;main.c: 158: left_duty_cycle += delta_velocity/16;
  5739  0013E6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5740  0013EA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5741  0013EE  0E00               	movlw	0
  5742  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  5743  0013F2  0E10               	movlw	16
  5744  0013F4  6E25               	movwf	___awdiv@divisor,c
  5745  0013F6  EC59  F00D         	call	___awdiv	;wreg free
  5746  0013FA  5023               	movf	?___awdiv,w,c
  5747  0013FC  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5748  0013FE  5024               	movf	?___awdiv+1,w,c
  5749  001400  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5750                           
  5751                           ;main.c: 159: right_duty_cycle -= delta_velocity*15/16;
  5752  001402  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5753  001406  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5754  00140A  0E00               	movlw	0
  5755  00140C  6E20               	movwf	___wmul@multiplicand+1,c
  5756  00140E  0E0F               	movlw	15
  5757  001410  6E1F               	movwf	___wmul@multiplicand,c
  5758  001412  EC49  F010         	call	___wmul	;wreg free
  5759  001416  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5760  00141A  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5761  00141E  0E00               	movlw	0
  5762  001420  6E26               	movwf	___awdiv@divisor+1,c
  5763  001422  0E10               	movlw	16
  5764  001424  6E25               	movwf	___awdiv@divisor,c
  5765  001426  EC59  F00D         	call	___awdiv	;wreg free
  5766  00142A                     L8:
  5767  00142A  5023               	movf	?___awdiv,w,c
  5768  00142C  5E33               	subwf	MotorControl@right_duty_cycle,f,c
  5769  00142E  5024               	movf	?___awdiv+1,w,c
  5770  001430  5A34               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5771  001432  D000               	goto	l2214
  5772  001434                     l2214:
  5773                           
  5774                           ;main.c: 160: }
  5775                           ;main.c: 166: if (speed_divider)
  5776  001434  502D               	movf	MotorControl@speed_divider,w,c
  5777  001436  B4D8               	btfsc	status,2,c
  5778  001438  D01B               	goto	l2218
  5779                           
  5780                           ;main.c: 167: {
  5781                           ;main.c: 168: left_duty_cycle /= speed_divider;
  5782  00143A  C031  F023         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  5783  00143E  C032  F024         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  5784  001442  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5785  001446  6A26               	clrf	___awdiv@divisor+1,c
  5786  001448  EC59  F00D         	call	___awdiv	;wreg free
  5787  00144C  C023  F031         	movff	?___awdiv,MotorControl@left_duty_cycle
  5788  001450  C024  F032         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  5789                           
  5790                           ;main.c: 169: right_duty_cycle /= speed_divider;
  5791  001454  C033  F023         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  5792  001458  C034  F024         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  5793  00145C  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5794  001460  6A26               	clrf	___awdiv@divisor+1,c
  5795  001462  EC59  F00D         	call	___awdiv	;wreg free
  5796  001466  C023  F033         	movff	?___awdiv,MotorControl@right_duty_cycle
  5797  00146A  C024  F034         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  5798  00146E  D000               	goto	l2218
  5799  001470                     l2218:
  5800                           
  5801                           ;main.c: 170: }
  5802                           ;main.c: 173: if ( left_duty_cycle < 0 )
  5803  001470  AE32               	btfss	MotorControl@left_duty_cycle+1,7,c
  5804  001472  D010               	goto	l2224
  5805                           
  5806                           ;main.c: 174: {
  5807                           ;main.c: 175: left_dir_modifier = reverse;
  5808  001474  0E00               	movlw	0
  5809  001476  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5810                           
  5811                           ;main.c: 176: left_duty_cycle *= -1;
  5812  001478  C031  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5813  00147C  C032  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5814  001480  0EFF               	movlw	255
  5815  001482  6E20               	movwf	___wmul@multiplicand+1,c
  5816  001484  681F               	setf	___wmul@multiplicand,c
  5817  001486  EC49  F010         	call	___wmul	;wreg free
  5818  00148A  C01D  F031         	movff	?___wmul,MotorControl@left_duty_cycle
  5819  00148E  C01E  F032         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5820  001492  D000               	goto	l2224
  5821  001494                     l2224:
  5822                           
  5823                           ;main.c: 177: }
  5824                           ;main.c: 178: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5825  001494  BE32               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5826  001496  D00B               	goto	l2228
  5827  001498  0E21               	movlw	33
  5828  00149A  5C31               	subwf	MotorControl@left_duty_cycle,w,c
  5829  00149C  0E03               	movlw	3
  5830  00149E  5832               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5831  0014A0  A0D8               	btfss	status,0,c
  5832  0014A2  D005               	goto	l2228
  5833  0014A4  0E03               	movlw	3
  5834  0014A6  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5835  0014A8  0E20               	movlw	32
  5836  0014AA  6E31               	movwf	MotorControl@left_duty_cycle,c
  5837  0014AC  D000               	goto	l2228
  5838  0014AE                     l2228:
  5839                           
  5840                           ;main.c: 180: SetDCPWM2((unsigned int) left_duty_cycle );
  5841  0014AE  C031  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5842  0014B2  C032  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5843  0014B6  ECB2  F00F         	call	_SetDCPWM2	;wreg free
  5844                           
  5845                           ;main.c: 181: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5846  0014BA  502F               	movf	MotorControl@left_dir_modifier,w,c
  5847  0014BC  A4D8               	btfss	status,2,c
  5848  0014BE  D002               	goto	l118
  5849  0014C0  9082               	bcf	3970,0,c	;volatile
  5850  0014C2  D002               	goto	l2234
  5851  0014C4                     l118:
  5852                           
  5853                           ;main.c: 182: else PORTCbits.RC0 = 0b1;
  5854  0014C4  8082               	bsf	3970,0,c	;volatile
  5855  0014C6  D000               	goto	l2234
  5856  0014C8                     l2234:
  5857                           
  5858                           ;main.c: 183: PORTEbits.RE1 = !PORTCbits.RC0;
  5859  0014C8  B082               	btfsc	3970,0,c	;volatile
  5860  0014CA  D003               	goto	u1740
  5861  0014CC  6A2E               	clrf	??_MotorControl& (0+255),c
  5862  0014CE  2A2E               	incf	??_MotorControl& (0+255),f,c
  5863  0014D0  D001               	goto	u1758
  5864  0014D2                     u1740:
  5865  0014D2  6A2E               	clrf	??_MotorControl& (0+255),c
  5866  0014D4                     u1758:
  5867  0014D4  462E               	rlncf	??_MotorControl,f,c
  5868  0014D6  5084               	movf	3972,w,c	;volatile
  5869  0014D8  182E               	xorwf	??_MotorControl,w,c
  5870  0014DA  0BFD               	andlw	-3
  5871  0014DC  182E               	xorwf	??_MotorControl,w,c
  5872  0014DE  6E84               	movwf	3972,c	;volatile
  5873                           
  5874                           ;main.c: 186: if ( right_duty_cycle < 0 )
  5875  0014E0  AE34               	btfss	MotorControl@right_duty_cycle+1,7,c
  5876  0014E2  D010               	goto	l2240
  5877                           
  5878                           ;main.c: 187: {
  5879                           ;main.c: 188: right_dir_modifier = reverse;
  5880  0014E4  0E00               	movlw	0
  5881  0014E6  6E30               	movwf	MotorControl@right_dir_modifier,c
  5882                           
  5883                           ;main.c: 189: right_duty_cycle *= -1;
  5884  0014E8  C033  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5885  0014EC  C034  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5886  0014F0  0EFF               	movlw	255
  5887  0014F2  6E20               	movwf	___wmul@multiplicand+1,c
  5888  0014F4  681F               	setf	___wmul@multiplicand,c
  5889  0014F6  EC49  F010         	call	___wmul	;wreg free
  5890  0014FA  C01D  F033         	movff	?___wmul,MotorControl@right_duty_cycle
  5891  0014FE  C01E  F034         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5892  001502  D000               	goto	l2240
  5893  001504                     l2240:
  5894                           
  5895                           ;main.c: 190: }
  5896                           ;main.c: 191: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5897  001504  BE34               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5898  001506  D00B               	goto	l2244
  5899  001508  0E21               	movlw	33
  5900  00150A  5C33               	subwf	MotorControl@right_duty_cycle,w,c
  5901  00150C  0E03               	movlw	3
  5902  00150E  5834               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5903  001510  A0D8               	btfss	status,0,c
  5904  001512  D005               	goto	l2244
  5905  001514  0E03               	movlw	3
  5906  001516  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5907  001518  0E20               	movlw	32
  5908  00151A  6E33               	movwf	MotorControl@right_duty_cycle,c
  5909  00151C  D000               	goto	l2244
  5910  00151E                     l2244:
  5911                           
  5912                           ;main.c: 193: SetDCPWM1((unsigned int) right_duty_cycle );
  5913  00151E  C033  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5914  001522  C034  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5915  001526  ECCF  F00F         	call	_SetDCPWM1	;wreg free
  5916                           
  5917                           ;main.c: 194: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5918  00152A  5030               	movf	MotorControl@right_dir_modifier,w,c
  5919  00152C  A4D8               	btfss	status,2,c
  5920  00152E  D002               	goto	l122
  5921  001530  9A82               	bcf	3970,5,c	;volatile
  5922  001532  D002               	goto	l2250
  5923  001534                     l122:
  5924                           
  5925                           ;main.c: 195: else PORTCbits.RC5 = 0b1;
  5926  001534  8A82               	bsf	3970,5,c	;volatile
  5927  001536  D000               	goto	l2250
  5928  001538                     l2250:
  5929                           
  5930                           ;main.c: 196: PORTEbits.RE0 = !PORTCbits.RC5;
  5931  001538  BA82               	btfsc	3970,5,c	;volatile
  5932  00153A  D003               	goto	u1790
  5933  00153C  6A2E               	clrf	??_MotorControl& (0+255),c
  5934  00153E  2A2E               	incf	??_MotorControl& (0+255),f,c
  5935  001540  D001               	goto	u1808
  5936  001542                     u1790:
  5937  001542  6A2E               	clrf	??_MotorControl& (0+255),c
  5938  001544                     u1808:
  5939  001544  5084               	movf	3972,w,c	;volatile
  5940  001546  182E               	xorwf	??_MotorControl,w,c
  5941  001548  0BFE               	andlw	-2
  5942  00154A  182E               	xorwf	??_MotorControl,w,c
  5943  00154C  6E84               	movwf	3972,c	;volatile
  5944  00154E  0012               	return		;funcret
  5945  001550                     __end_of_MotorControl:
  5946                           	opt stack 0
  5947                           stkptr	equ	0xFFC
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           intcon	equ	0xFF2
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           indf1	equ	0xFE7
  5956                           postinc1	equ	0xFE6
  5957                           fsr1h	equ	0xFE2
  5958                           fsr1l	equ	0xFE1
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           plusw2	equ	0xFDB
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function ___wmul *****************
  5967 ;; Defined at:
  5968 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  multiplier      2   28[COMRAM] unsigned int 
  5971 ;;  multiplicand    2   30[COMRAM] unsigned int 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  product         2   32[COMRAM] unsigned int 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2   28[COMRAM] unsigned int 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0, prodl, prodh
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        6 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_PID_LineFollowing
  5994 ;;		_MotorControl
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text49
  5999  002092                     __ptext49:
  6000                           	opt stack 0
  6001  002092                     ___wmul:
  6002                           	opt stack 28
  6003                           
  6004                           ;incstack = 0
  6005  002092  501D               	movf	___wmul@multiplier,w,c
  6006  002094  021F               	mulwf	___wmul@multiplicand,c
  6007  002096  CFF3 F021          	movff	prodl,___wmul@product
  6008  00209A  CFF4 F022          	movff	prodh,___wmul@product+1
  6009  00209E  501D               	movf	___wmul@multiplier,w,c
  6010  0020A0  0220               	mulwf	___wmul@multiplicand+1,c
  6011  0020A2  50F3               	movf	prodl,w,c
  6012  0020A4  2622               	addwf	___wmul@product+1,f,c
  6013  0020A6  501E               	movf	___wmul@multiplier+1,w,c
  6014  0020A8  021F               	mulwf	___wmul@multiplicand,c
  6015  0020AA  50F3               	movf	prodl,w,c
  6016  0020AC  2622               	addwf	___wmul@product+1,f,c
  6017  0020AE  C021  F01D         	movff	___wmul@product,?___wmul
  6018  0020B2  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6019  0020B6  D000               	goto	l614
  6020  0020B8                     l614:
  6021  0020B8  0012               	return		;funcret
  6022  0020BA                     __end_of___wmul:
  6023                           	opt stack 0
  6024                           stkptr	equ	0xFFC
  6025                           tblptru	equ	0xFF8
  6026                           tblptrh	equ	0xFF7
  6027                           tblptrl	equ	0xFF6
  6028                           tablat	equ	0xFF5
  6029                           prodh	equ	0xFF4
  6030                           prodl	equ	0xFF3
  6031                           intcon	equ	0xFF2
  6032                           postinc0	equ	0xFEE
  6033                           wreg	equ	0xFE8
  6034                           indf1	equ	0xFE7
  6035                           postinc1	equ	0xFE6
  6036                           fsr1h	equ	0xFE2
  6037                           fsr1l	equ	0xFE1
  6038                           indf2	equ	0xFDF
  6039                           postinc2	equ	0xFDE
  6040                           plusw2	equ	0xFDB
  6041                           fsr2h	equ	0xFDA
  6042                           fsr2l	equ	0xFD9
  6043                           status	equ	0xFD8
  6044                           
  6045 ;; *************** function ___awdiv *****************
  6046 ;; Defined at:
  6047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  dividend        2   34[COMRAM] int 
  6050 ;;  divisor         2   36[COMRAM] int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  quotient        2   40[COMRAM] int 
  6053 ;;  sign            1   39[COMRAM] unsigned char 
  6054 ;;  counter         1   38[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2   34[COMRAM] int 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;Total ram usage:        8 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_MotorControl
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text50
  6079  001AB2                     __ptext50:
  6080                           	opt stack 0
  6081  001AB2                     ___awdiv:
  6082                           	opt stack 27
  6083                           
  6084                           ;incstack = 0
  6085  001AB2  0E00               	movlw	0
  6086  001AB4  6E28               	movwf	___awdiv@sign,c
  6087  001AB6  AE26               	btfss	___awdiv@divisor+1,7,c
  6088  001AB8  D007               	goto	l2162
  6089  001ABA  6C25               	negf	___awdiv@divisor,c
  6090  001ABC  1E26               	comf	___awdiv@divisor+1,f,c
  6091  001ABE  B0D8               	btfsc	status,0,c
  6092  001AC0  2A26               	incf	___awdiv@divisor+1,f,c
  6093  001AC2  0E01               	movlw	1
  6094  001AC4  6E28               	movwf	___awdiv@sign,c
  6095  001AC6  D000               	goto	l2162
  6096  001AC8                     l2162:
  6097  001AC8  AE24               	btfss	___awdiv@dividend+1,7,c
  6098  001ACA  D007               	goto	l2168
  6099  001ACC  6C23               	negf	___awdiv@dividend,c
  6100  001ACE  1E24               	comf	___awdiv@dividend+1,f,c
  6101  001AD0  B0D8               	btfsc	status,0,c
  6102  001AD2  2A24               	incf	___awdiv@dividend+1,f,c
  6103  001AD4  0E01               	movlw	1
  6104  001AD6  1A28               	xorwf	___awdiv@sign,f,c
  6105  001AD8  D000               	goto	l2168
  6106  001ADA                     l2168:
  6107  001ADA  0E00               	movlw	0
  6108  001ADC  6E2A               	movwf	___awdiv@quotient+1,c
  6109  001ADE  0E00               	movlw	0
  6110  001AE0  6E29               	movwf	___awdiv@quotient,c
  6111  001AE2  5025               	movf	___awdiv@divisor,w,c
  6112  001AE4  1026               	iorwf	___awdiv@divisor+1,w,c
  6113  001AE6  B4D8               	btfsc	status,2,c
  6114  001AE8  D021               	goto	l2190
  6115  001AEA  0E01               	movlw	1
  6116  001AEC  6E27               	movwf	___awdiv@counter,c
  6117  001AEE  D005               	goto	l2176
  6118  001AF0                     l2174:
  6119  001AF0  90D8               	bcf	status,0,c
  6120  001AF2  3625               	rlcf	___awdiv@divisor,f,c
  6121  001AF4  3626               	rlcf	___awdiv@divisor+1,f,c
  6122  001AF6  2A27               	incf	___awdiv@counter,f,c
  6123  001AF8  D000               	goto	l2176
  6124  001AFA                     l2176:
  6125  001AFA  BE26               	btfsc	___awdiv@divisor+1,7,c
  6126  001AFC  D002               	goto	l2178
  6127  001AFE  D7F8               	goto	l2174
  6128  001B00  D000               	goto	l2178
  6129  001B02                     l2178:
  6130  001B02  90D8               	bcf	status,0,c
  6131  001B04  3629               	rlcf	___awdiv@quotient,f,c
  6132  001B06  362A               	rlcf	___awdiv@quotient+1,f,c
  6133  001B08  5025               	movf	___awdiv@divisor,w,c
  6134  001B0A  5C23               	subwf	___awdiv@dividend,w,c
  6135  001B0C  5026               	movf	___awdiv@divisor+1,w,c
  6136  001B0E  5824               	subwfb	___awdiv@dividend+1,w,c
  6137  001B10  A0D8               	btfss	status,0,c
  6138  001B12  D006               	goto	l2186
  6139  001B14  5025               	movf	___awdiv@divisor,w,c
  6140  001B16  5E23               	subwf	___awdiv@dividend,f,c
  6141  001B18  5026               	movf	___awdiv@divisor+1,w,c
  6142  001B1A  5A24               	subwfb	___awdiv@dividend+1,f,c
  6143  001B1C  8029               	bsf	___awdiv@quotient,0,c
  6144  001B1E  D000               	goto	l2186
  6145  001B20                     l2186:
  6146  001B20  90D8               	bcf	status,0,c
  6147  001B22  3226               	rrcf	___awdiv@divisor+1,f,c
  6148  001B24  3225               	rrcf	___awdiv@divisor,f,c
  6149  001B26  2E27               	decfsz	___awdiv@counter,f,c
  6150  001B28  D7EC               	goto	l2178
  6151  001B2A  D000               	goto	l2190
  6152  001B2C                     l2190:
  6153  001B2C  5028               	movf	___awdiv@sign,w,c
  6154  001B2E  B4D8               	btfsc	status,2,c
  6155  001B30  D005               	goto	l2194
  6156  001B32  6C29               	negf	___awdiv@quotient,c
  6157  001B34  1E2A               	comf	___awdiv@quotient+1,f,c
  6158  001B36  B0D8               	btfsc	status,0,c
  6159  001B38  2A2A               	incf	___awdiv@quotient+1,f,c
  6160  001B3A  D000               	goto	l2194
  6161  001B3C                     l2194:
  6162  001B3C  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6163  001B40  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6164  001B44  D000               	goto	l807
  6165  001B46                     l807:
  6166  001B46  0012               	return		;funcret
  6167  001B48                     __end_of___awdiv:
  6168                           	opt stack 0
  6169                           stkptr	equ	0xFFC
  6170                           tblptru	equ	0xFF8
  6171                           tblptrh	equ	0xFF7
  6172                           tblptrl	equ	0xFF6
  6173                           tablat	equ	0xFF5
  6174                           prodh	equ	0xFF4
  6175                           prodl	equ	0xFF3
  6176                           intcon	equ	0xFF2
  6177                           postinc0	equ	0xFEE
  6178                           wreg	equ	0xFE8
  6179                           indf1	equ	0xFE7
  6180                           postinc1	equ	0xFE6
  6181                           fsr1h	equ	0xFE2
  6182                           fsr1l	equ	0xFE1
  6183                           indf2	equ	0xFDF
  6184                           postinc2	equ	0xFDE
  6185                           plusw2	equ	0xFDB
  6186                           fsr2h	equ	0xFDA
  6187                           fsr2l	equ	0xFD9
  6188                           status	equ	0xFD8
  6189                           
  6190 ;; *************** function _SetDCPWM2 *****************
  6191 ;; Defined at:
  6192 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6197 ;; Return value:  Size  Location     Type
  6198 ;;		None               void
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;Total ram usage:        6 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_MotorControl
  6217 ;;		_initialization
  6218 ;;		_motors_brake_all
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text51
  6223  001F64                     __ptext51:
  6224                           	opt stack 0
  6225  001F64                     _SetDCPWM2:
  6226                           	opt stack 28
  6227                           
  6228                           ;incstack = 0
  6229  001F64  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6230  001F68  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6231  001F6C  0E06               	movlw	6
  6232  001F6E                     u1405:
  6233  001F6E  90D8               	bcf	status,0,c
  6234  001F70  3611               	rlcf	??_SetDCPWM2,f,c
  6235  001F72  3612               	rlcf	??_SetDCPWM2+1,f,c
  6236  001F74  2EE8               	decfsz	wreg,f,c
  6237  001F76  D7FB               	goto	u1405
  6238  001F78  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6239  001F7C  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6240  001F80  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6241  001F84  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6242  001F88  90D8               	bcf	status,0,c
  6243  001F8A  3211               	rrcf	??_SetDCPWM2,f,c
  6244  001F8C  90D8               	bcf	status,0,c
  6245  001F8E  3211               	rrcf	??_SetDCPWM2,f,c
  6246  001F90  0E30               	movlw	48
  6247  001F92  1611               	andwf	??_SetDCPWM2,f,c
  6248  001F94  50BA               	movf	4026,w,c	;volatile
  6249  001F96  0BCF               	andlw	207
  6250  001F98  1011               	iorwf	??_SetDCPWM2,w,c
  6251  001F9A  6EBA               	movwf	4026,c	;volatile
  6252  001F9C  0012               	return		;funcret
  6253  001F9E                     __end_of_SetDCPWM2:
  6254                           	opt stack 0
  6255                           stkptr	equ	0xFFC
  6256                           tblptru	equ	0xFF8
  6257                           tblptrh	equ	0xFF7
  6258                           tblptrl	equ	0xFF6
  6259                           tablat	equ	0xFF5
  6260                           prodh	equ	0xFF4
  6261                           prodl	equ	0xFF3
  6262                           intcon	equ	0xFF2
  6263                           postinc0	equ	0xFEE
  6264                           wreg	equ	0xFE8
  6265                           indf1	equ	0xFE7
  6266                           postinc1	equ	0xFE6
  6267                           fsr1h	equ	0xFE2
  6268                           fsr1l	equ	0xFE1
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           plusw2	equ	0xFDB
  6272                           fsr2h	equ	0xFDA
  6273                           fsr2l	equ	0xFD9
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function _SetDCPWM1 *****************
  6277 ;; Defined at:
  6278 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6283 ;; Return value:  Size  Location     Type
  6284 ;;		None               void
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;Total ram usage:        6 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    1
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_MotorControl
  6303 ;;		_initialization
  6304 ;;		_motors_brake_all
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text52
  6309  001F9E                     __ptext52:
  6310                           	opt stack 0
  6311  001F9E                     _SetDCPWM1:
  6312                           	opt stack 28
  6313                           
  6314                           ;incstack = 0
  6315  001F9E  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6316  001FA2  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6317  001FA6  0E06               	movlw	6
  6318  001FA8                     u1415:
  6319  001FA8  90D8               	bcf	status,0,c
  6320  001FAA  3611               	rlcf	??_SetDCPWM1,f,c
  6321  001FAC  3612               	rlcf	??_SetDCPWM1+1,f,c
  6322  001FAE  2EE8               	decfsz	wreg,f,c
  6323  001FB0  D7FB               	goto	u1415
  6324  001FB2  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6325  001FB6  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6326  001FBA  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6327  001FBE  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6328  001FC2  90D8               	bcf	status,0,c
  6329  001FC4  3211               	rrcf	??_SetDCPWM1,f,c
  6330  001FC6  90D8               	bcf	status,0,c
  6331  001FC8  3211               	rrcf	??_SetDCPWM1,f,c
  6332  001FCA  0E30               	movlw	48
  6333  001FCC  1611               	andwf	??_SetDCPWM1,f,c
  6334  001FCE  50BD               	movf	4029,w,c	;volatile
  6335  001FD0  0BCF               	andlw	207
  6336  001FD2  1011               	iorwf	??_SetDCPWM1,w,c
  6337  001FD4  6EBD               	movwf	4029,c	;volatile
  6338  001FD6  0012               	return		;funcret
  6339  001FD8                     __end_of_SetDCPWM1:
  6340                           	opt stack 0
  6341                           stkptr	equ	0xFFC
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           postinc0	equ	0xFEE
  6350                           wreg	equ	0xFE8
  6351                           indf1	equ	0xFE7
  6352                           postinc1	equ	0xFE6
  6353                           fsr1h	equ	0xFE2
  6354                           fsr1l	equ	0xFE1
  6355                           indf2	equ	0xFDF
  6356                           postinc2	equ	0xFDE
  6357                           plusw2	equ	0xFDB
  6358                           fsr2h	equ	0xFDA
  6359                           fsr2l	equ	0xFD9
  6360                           status	equ	0xFD8
  6361                           
  6362 ;; *************** function _high_isr *****************
  6363 ;; Defined at:
  6364 ;;		line 24 in file "../Robot Files/interrupts.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;		None               void
  6371 ;; Registers used:
  6372 ;;		wreg, status,2
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;Total ram usage:       14 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		Interrupt level 2
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	intcode
  6392  000008                     __pintcode:
  6393                           	opt stack 0
  6394  000008                     _high_isr:
  6395                           	opt stack 25
  6396                           
  6397                           ;incstack = 0
  6398  000008  CFFA F001          	movff	pclath,??_high_isr
  6399  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6400  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6401  000014  ED2B  F00E         	call	int_func,f	;refresh shadow registers
  6402                           stkptr	equ	0xFFC
  6403                           pclatu	equ	0xFFB
  6404                           pclath	equ	0xFFA
  6405                           tblptru	equ	0xFF8
  6406                           tblptrh	equ	0xFF7
  6407                           tblptrl	equ	0xFF6
  6408                           tablat	equ	0xFF5
  6409                           prodh	equ	0xFF4
  6410                           prodl	equ	0xFF3
  6411                           intcon	equ	0xFF2
  6412                           postinc0	equ	0xFEE
  6413                           fsr0l	equ	0xFE9
  6414                           wreg	equ	0xFE8
  6415                           indf1	equ	0xFE7
  6416                           postinc1	equ	0xFE6
  6417                           fsr1h	equ	0xFE2
  6418                           fsr1l	equ	0xFE1
  6419                           indf2	equ	0xFDF
  6420                           postinc2	equ	0xFDE
  6421                           plusw2	equ	0xFDB
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8
  6425                           
  6426                           	psect	intcode_body
  6427  001C56                     __pintcode_body:
  6428                           	opt stack 25
  6429  001C56                     int_func:
  6430                           	opt stack 25
  6431  001C56  0006               	pop		; remove dummy address from shadow register refresh
  6432  001C58  CFEA F004          	movff	fsr0h,??_high_isr+3
  6433  001C5C  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6434  001C60  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6435  001C64  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6436  001C68  CFDA F008          	movff	fsr2h,??_high_isr+7
  6437  001C6C  CFF3 F009          	movff	prodl,??_high_isr+8
  6438  001C70  CFF4 F00A          	movff	prodh,??_high_isr+9
  6439  001C74  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6440  001C78  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6441  001C7C  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6442  001C80  CFF5 F00E          	movff	tablat,??_high_isr+13
  6443                           
  6444                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6445  001C84  94A1               	bcf	4001,2,c	;volatile
  6446                           
  6447                           ;interrupts.c: 27: TRISA = 0xff;
  6448  001C86  6892               	setf	3986,c	;volatile
  6449                           
  6450                           ;interrupts.c: 28: TRISB = 0xff;
  6451  001C88  6893               	setf	3987,c	;volatile
  6452                           
  6453                           ;interrupts.c: 29: TRISC = 0xff;
  6454  001C8A  6894               	setf	3988,c	;volatile
  6455                           
  6456                           ;interrupts.c: 30: TRISD = 0xff;
  6457  001C8C  6895               	setf	3989,c	;volatile
  6458                           
  6459                           ;interrupts.c: 31: TRISE = 0x03;
  6460  001C8E  0E03               	movlw	3
  6461  001C90  6E96               	movwf	3990,c	;volatile
  6462                           
  6463                           ;interrupts.c: 32: lvd_flag =1;
  6464  001C92  0E01               	movlw	1
  6465  001C94  6E4F               	movwf	_lvd_flag,c
  6466                           
  6467                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6468  001C96  94A0               	bcf	4000,2,c	;volatile
  6469                           
  6470                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6471  001C98  98D2               	bcf	4050,4,c	;volatile
  6472  001C9A  C00E  FFF5         	movff	??_high_isr+13,tablat
  6473  001C9E  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6474  001CA2  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6475  001CA6  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6476  001CAA  C00A  FFF4         	movff	??_high_isr+9,prodh
  6477  001CAE  C009  FFF3         	movff	??_high_isr+8,prodl
  6478  001CB2  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6479  001CB6  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6480  001CBA  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6481  001CBE  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6482  001CC2  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6483  001CC6  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6484  001CCA  C002  FFFB         	movff	??_high_isr+1,pclatu
  6485  001CCE  C001  FFFA         	movff	??_high_isr,pclath
  6486  001CD2  0011               	retfie		f
  6487  001CD4                     __end_of_high_isr:
  6488                           	opt stack 0
  6489                           stkptr	equ	0xFFC
  6490                           pclatu	equ	0xFFB
  6491                           pclath	equ	0xFFA
  6492                           tblptru	equ	0xFF8
  6493                           tblptrh	equ	0xFF7
  6494                           tblptrl	equ	0xFF6
  6495                           tablat	equ	0xFF5
  6496                           prodh	equ	0xFF4
  6497                           prodl	equ	0xFF3
  6498                           intcon	equ	0xFF2
  6499                           postinc0	equ	0xFEE
  6500                           fsr0h	equ	0xFEA
  6501                           fsr0l	equ	0xFE9
  6502                           wreg	equ	0xFE8
  6503                           indf1	equ	0xFE7
  6504                           postinc1	equ	0xFE6
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           plusw2	equ	0xFDB
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8
  6513                           stkptr	equ	0xFFC
  6514                           pclatu	equ	0xFFB
  6515                           pclath	equ	0xFFA
  6516                           tblptru	equ	0xFF8
  6517                           tblptrh	equ	0xFF7
  6518                           tblptrl	equ	0xFF6
  6519                           tablat	equ	0xFF5
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           postinc0	equ	0xFEE
  6524                           fsr0h	equ	0xFEA
  6525                           fsr0l	equ	0xFE9
  6526                           wreg	equ	0xFE8
  6527                           indf1	equ	0xFE7
  6528                           postinc1	equ	0xFE6
  6529                           fsr1h	equ	0xFE2
  6530                           fsr1l	equ	0xFE1
  6531                           indf2	equ	0xFDF
  6532                           postinc2	equ	0xFDE
  6533                           plusw2	equ	0xFDB
  6534                           fsr2h	equ	0xFDA
  6535                           fsr2l	equ	0xFD9
  6536                           status	equ	0xFD8
  6537                           
  6538                           	psect	rparam
  6539  0000                     stkptr	equ	0xFFC
  6540                           pclatu	equ	0xFFB
  6541                           pclath	equ	0xFFA
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           prodh	equ	0xFF4
  6547                           prodl	equ	0xFF3
  6548                           intcon	equ	0xFF2
  6549                           postinc0	equ	0xFEE
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           postinc1	equ	0xFE6
  6555                           fsr1h	equ	0xFE2
  6556                           fsr1l	equ	0xFE1
  6557                           indf2	equ	0xFDF
  6558                           postinc2	equ	0xFDE
  6559                           plusw2	equ	0xFDB
  6560                           fsr2h	equ	0xFDA
  6561                           fsr2l	equ	0xFD9
  6562                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   26679
                                             61 COMRAM     3     3      0
                _AllSensorsTriggered
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    6606
                                             52 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9737
                                             56 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4673
                                             52 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  1     1      0    4843
                                             52 COMRAM     1     1      0
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      44
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      44
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     260
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3995
                                             42 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      4F       1       62.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 00:23:14 2020

                     _STKPTRbits 000FFC                                _I 0048  
                             l74 1708                     ___awdiv@sign 0028  
            ___wmul@multiplicand 001F                      __CFG_BORV$0 000000  
                            l122 1534                              l109 132C  
                            l118 14C4                              l303 2090  
                            l320 1F62                              l146 16B4  
                            l323 19F2                              l156 1AA8  
                            l324 1998                              l316 1F52  
                            l350 1DCA                              l175 1D48  
                            l424 22B0                              l329 1A06  
                            l380 22B6                              l517 2162  
                            l614 20B8                              l454 2294  
                            l518 2164                              l446 1E76  
                            l606 20DE                              l546 21F4  
                            l547 21F6                              l572 1D76  
                            l581 1DB8                              l389 2068  
                            l494 1FFA                              l807 1B46  
                            l495 2004                              l496 2006  
                            l576 1D90                              l577 1D92  
                            l578 1D9C                              l683 1896  
                            l579 1D9E                              l588 2226  
                            l597 2104                              _PR2 000FCB  
           __size_of_WriteTimer0 0012                              _adc 206A  
                            wreg 000FE8                  ReadTimer0@timer 0011  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           ?_adc 0013                             l1132 1ECC  
                           l1142 1F18                             l1400 20FC  
                           l2210 13E6                             l1260 1DF4  
                           l1404 2100                             l2214 1434  
                           l2142 2078                             l2126 201A  
                           l2240 1504                             l2224 1494  
                           l1264 1E0C                             l2128 2022  
                           l2162 1AC8                             l2250 1538  
                           l2234 14C8                             l2218 1470  
                           l2410 1D6E                             l2402 1D5C  
                           l2244 151E                             l2228 14AE  
                           l1452 2222                             l2174 1AF0  
                           l2190 1B2C                             l2510 186C  
                           l2422 1D88                             l2414 1D7A  
                           l2406 1D66                             l2176 1AFA  
                           l2168 1ADA                             l1448 221E  
                           l1392 20F4                             l2194 1B3C  
                           l2186 1B20                             l2178 1B02  
                           l2610 158A                             l2514 1884  
                           l2506 185C                             l2450 1F32  
                           l2380 1A68                             l2524 1E90  
                           l1716 1FF6                             l2292 19E6  
                           l1396 20F8                             l1484 20CE  
                           l1492 20D6                             l2460 1F5C  
                           l2382 1A72                             l2390 1A94  
                           l2366 1A2E                             l2374 1A52  
                           l2622 15D4                             l2526 1E9A  
                           l2702 1158                             l2454 1F42  
                           l1590 204E                             l2632 1610  
                           l2616 15BC                             l2608 1582  
                           l2536 1EC0                             l2528 1EA2  
                           l2552 1F0C                             l2544 1EE4  
                           l2288 19CE                             l1488 20D2  
                           l1496 20DA                             l2394 1AA4  
                           l2378 1A62                             l2642 1654  
                           l2626 15EE                             l2618 15C4  
                           l2482 17D8                             l2546 1EEE  
                           l2706 117E                             l1594 2062  
                           l2652 168C                             l2548 1EF6  
                           l2716 126C                             l2708 119C  
                           l2662 1CE4                             l2646 1674  
                           l2494 1814                             l2672 1D0C  
                           l2656 16A6                             l2496 1822  
                           l2488 17F2                             l2760 16FC  
                           l2666 1CFE                             l2498 182A  
                           l2690 10F0                             l2770 1714  
                           l2762 1700                             l2676 1D30  
                           l2684 10BE                             l2780 1740  
                           l2772 1718                             l2764 1704  
                           l2756 16F2                             l2678 1D3A  
                           l2694 1116                             l2686 10CE  
                           l2774 1722                             l2766 170C  
                           l2758 16F8                             l2696 1126  
                           l2776 172C                             l2768 1710  
                           l2784 1746                             l2698 1136  
                           l2778 173A                             l2786 1794  
                __end_of_BORtask 2148                             STR_1 100A  
                           STR_2 1073                             STR_3 106D  
                           STR_4 105D                             STR_5 1054  
                           STR_6 104A                             STR_7 1066  
                           u1405 1F6E                             u1510 18D6  
                           u1415 1FA8                             u1530 1900  
                           u1610 1BF8                             u1380 22AC  
                           u1508 18B2                             u1550 1928  
                           u1630 1C10                             u1528 18D8  
                           u1608 1BE4                             u1570 194E  
                           u1490 18B0                             u1650 1C2A  
                           u2507 167A                             u1740 14D2  
                           u1548 1902                             u1628 1BFA  
                           u2517 1A14                             u1670 1C46  
                           u1590 1BE2                             u1808 1544  
                           u1568 192A                             u1648 1C12  
                           u1588 1950                             u1668 1C2C  
                           u1790 1542                             u1758 14D4  
                           u1688 1C48                             u2497 1624  
                ?_GetBackonTrack 0039                             _TMR2 000FCC  
                   __CFG_WDTPS$8 000000                 ??_initialization 001C  
                           _main 16B6            __end_of_check_sensors 195C  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                    __CFG_BOREN$ON 000000  
                __end_of_PORtask 1A08                             prodh 000FF4  
                           prodl 000FF3       MotorControl@delta_velocity 002B  
                           start 0018                  __end_of_WDTtask 21C2  
                   ___param_bank 000010                  __end_of_BusyADC 22B2  
                __end_of_ReadADC 2296                  __end_of_OpenADC 1E7A  
                          ??_adc 0015           PID_LineFollowing@error 0035  
                __end_of___aldiv 1898                            ?_main 0001  
                __end_of___awdiv 1B48                            _T0CON 000FD5  
                ___awdiv@divisor 0025                            _T2CON 000FCA  
                __end_of___lwdiv 1ED6                  __end_of___lwmod 1F22  
                ___awdiv@counter 0027               __size_of_RESETtask 001C  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TXSTA 000FAC                  __end_of_isWDTTO 20E0  
        __end_of_openPORTCforPWM 22A4                            _isBOR 2212  
                          _isPOR 20E0                            _gtrap 1DBA  
                          _putch 22E0                  __end_of_openLVD 2212  
                   _TURN_TIME_ms 1007                       _ConvertADC 22DC  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 223E                     __end_of_main 17BA  
                     _ReadTimer0 2262                 __end_of_OpenPWM1 2262  
               __end_of_OpenPWM2 2010                           ??_main 003E  
                  __activetblptr 000003                       _SetChanADC 2228  
                      ??_BORtask 0014        MotorControl@speed_divider 002D  
                         ?_isBOR 0001              GetBackonTrack@error 0039  
                         ?_isPOR 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_gtrap 0001                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                 ___awdiv@dividend 0023  
                         ?_putch 0001                        ??_PORtask 0014  
                      ??_WDTtask 0014                       _OpenTimer0 2148  
                     _OpenTimer2 21DE                           _TMR0IF 007F92  
                         _SPBRGH 000FB0               __size_of_SetDCPWM1 003A  
             __size_of_SetDCPWM2 003A                        ??_BusyADC 000F  
                      ??_ReadADC 0011                           _LVtrap 2168  
              __end_of_RESETtask 21DE                        ??_OpenADC 0011  
                   ?_reset_codes 0001                 __end_of_high_isr 1CD4  
             __size_of_OpenUSART 0070                        ??___aldiv 0017  
                         ___wmul 2092                        ??___awdiv 0027  
                 __CFG_STVREN$ON 000000                 OpenTimer0@config 000F  
                      ??___lwdiv 0017                        ??___lwmod 0017  
             __size_of_SharpTurn 00AA                 OpenTimer2@config 000F  
                         clear_0 2244                 ___awdiv@quotient 0029  
                      ??_isWDTTO 000F                           _printf 2010  
               __end_of_set_leds 1C56                        ??_openLVD 000F  
            __size_of_STKFULtask 001E                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_openPORTCforPWM 0001  
              ?_motors_brake_all 0001                           putch@c 0001  
             ??_motors_brake_all 0015                      ?_ConvertADC 0001  
                     __accesstop 0080          __end_of__initialization 224A  
                     adc@channel 0015                    ___rparam_used 000001  
          __end_of_set_osc_32MHz 206A                   __pcstackCOMRAM 0001  
                    ?_ReadTimer0 000F                    __end_of_isBOR 2228  
                  __end_of_isPOR 2106                    __end_of_gtrap 1E1C  
        _AllSensorsTriggered$472 0035                    __end_of_putch 22E2  
   __size_of_AllSensorsTriggered 0076                __end_of_SetDCPWM1 1FD8  
              __end_of_SetDCPWM2 1F9E                    ??_StatusReset 000F  
                    ?_SetChanADC 0001                 ??_GetBackonTrack 003B  
                  ?_lvd_flag_set 0001                          ??_isBOR 000F  
                        ??_isPOR 000F                __end_of_OpenUSART 1DBA  
                        ??_gtrap 000F                          ??_putch 000F  
                    ?_OpenTimer0 0001                      ?_OpenTimer2 0001  
              __end_of_SharpTurn 1AB2                        ?_OpenPWM1 0001  
                      ?_OpenPWM2 0001                          ?_LVtrap 0001  
                  ?_MotorControl 002B               __end_of_D_CONSTANT 1003  
             __size_of_openPORTA 0006               __size_of_openPORTB 0006  
             __size_of_openPORTD 0006               __size_of_openPORTE 0006  
                        ?___wmul 001D                          _CCP1CON 000FBD  
                        _CCP2CON 000FBA                 WriteTimer0@timer 0011  
                  ??_WriteTimer0 0011                _CCW_rotation_flag 004C  
            __size_of_ConvertADC 0004                          ?_printf 000F  
                        _BORtask 2128                   ??_lvd_flag_set 000F  
                      ?_high_isr 0001              __end_of_StatusReset 22BE  
            __size_of_ReadTimer0 0012                          _PORtask 195C  
             __end_of_I_CONSTANT 1005                          _WDTtask 21A6  
                        _BusyADC 22A4                          _ReadADC 2286  
                     ??_OpenPWM1 000F                       ??_OpenPWM2 000F  
                   ??_STKFULtask 0014                          _SeeLine 004E  
                 ??_MotorControl 002E                          _OpenADC 1E1C  
                __size_of_LVtrap 0020                          __Hparam 0000  
            __size_of_SetChanADC 0016                          __Lparam 0000  
                      ?_set_leds 0001             __size_of_reset_codes 0042  
                        ___aldiv 17BA                          ___awdiv 1AB2  
                __size_of___wmul 0028                          ___lwdiv 1E7A  
                        ___lwmod 1ED6                     __psmallconst 1000  
                        __pcinit 223E                          _isWDTTO 20BA  
                        __ramtop 1000              __size_of_OpenTimer0 0020  
            __size_of_OpenTimer2 001C                          __ptext0 16B6  
                        __ptext1 22B2                          __ptext2 1B48  
                        __ptext3 203E                          __ptext4 1F22  
                        __ptext5 20BA                          __ptext6 20E0  
                        __ptext7 2212                          __ptext8 21A6  
                        __ptext9 2188                  __size_of_printf 002E  
                      _T0CONbits 000FD5                     __size_of_adc 0028  
                      _T2CONbits 000FCA           __size_of_check_sensors 00C4  
                        _openLVD 21FA                 ___aldiv@dividend 000F  
            __end_of_WriteTimer0 2286               __end_of_STKFULtask 21A6  
             __end_of_P_CONSTANT 1007                __end_of_openPORTA 22D6  
              __end_of_openPORTB 22D0                __end_of_openPORTD 22DC  
              __end_of_openPORTE 22C4                   OpenADC@config2 000F  
                     ??_high_isr 0001                   __pintcode_body 1C56  
           end_of_initialization 224A                          int_func 1C56  
                     ??_set_leds 000F                        _RCSTAbits 000FAB  
                        printf@c 0013                          printf@f 000F  
               ___aldiv@quotient 0019                        _RESETtask 21C2  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE          __size_of_initialization 0090  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
                      _PORTEbits 000F84                   set_osc_32MHz@i 000F  
                    _StatusReset 22B8                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     ??_ConvertADC 000F  
    MotorControl@left_duty_cycle 0031                _PID_LineFollowing 107A  
  MotorControl@left_dir_modifier 002F              _AllSensorsTriggered 1CD4  
             ?_PID_LineFollowing 0035                        _TXSTAbits 000FAC  
                  _check_sensors 1898        __size_of_motors_brake_all 0022  
                 __end_of_LVtrap 2188             __end_of_lvd_flag_set 22B8  
 MotorControl@right_dir_modifier 0030              ??_PID_LineFollowing 0037  
                   ??_ReadTimer0 0011                       ?_RESETtask 0001  
                 __end_of___wmul 20BA                      _WriteTimer0 2274  
           ?_AllSensorsTriggered 0001               __end_of_ConvertADC 22E0  
                   ??_SetChanADC 000F                   __end_of_printf 203E  
            start_initialization 223E             __end_of_MotorControl 1550  
                      _SetDCPWM1 1F9E                        _SetDCPWM2 1F64  
                SetDCPWM1@DCycle 0013                      __end_of_adc 2092  
                SetDCPWM2@DCycle 0013        __end_of_PID_LineFollowing 1384  
                   ??_OpenTimer0 000F                     ??_OpenTimer2 000F  
             __end_of_ReadTimer0 2274                        _OpenUSART 1D4A  
       __size_of_openPORTCforPWM 000E                   ?_check_sensors 0001  
               __CFG_OSC$INTIO67 000000                         ??_LVtrap 0014  
                      _SharpTurn 1A08               __end_of_SetChanADC 223E  
              __size_of_OpenPWM1 0012                __size_of_OpenPWM2 0038  
                       ??___wmul 0021       __end_of_TURN_SPEED_DIVIDER 100A  
          ??_AllSensorsTriggered 0035                         ??_printf 0011  
                     gtrap@count 000F               __end_of_OpenTimer0 2168  
             __end_of_OpenTimer2 21FA               SharpTurn@direction 0036  
                    __pbssCOMRAM 0041                         ?_BORtask 0001  
                     ?_SetDCPWM1 000F                       ?_SetDCPWM2 000F  
                  PORtask@count1 0014                    PORtask@count2 0018  
         __size_of_set_osc_32MHz 002C                         ?_PORtask 0001  
                       ?_WDTtask 0001                       ?_OpenUSART 000F  
              __size_of_high_isr 1CCC                         ?_BusyADC 0001  
                       ?_ReadADC 000F                       ?_SharpTurn 0001  
              OpenADC@portconfig 0010                         ?_OpenADC 000F  
               ___lwdiv@dividend 0013                        __pintcode 0008  
                    ??_RESETtask 0014                         ?___aldiv 000F  
                       ?___awdiv 0023                   _initialization 1B48  
              __size_of_set_leds 007E                         ?___lwdiv 0013  
                       ?___lwmod 0013                         ?_isWDTTO 0001  
                    __smallconst 1000                WriteTimer0@timer0 000F  
             PID_LineFollowing@D 0044                         ?_openLVD 0001  
        SharpTurn@delta_velocity 0037       __size_of_PID_LineFollowing 030A  
                 __size_of_isBOR 0016                 ___lwdiv@quotient 0017  
                 __size_of_isPOR 0026                   __size_of_gtrap 0062  
                 __size_of_putch 0002                  ??_check_sensors 0016  
                ___aldiv@divisor 0013                        _openPORTA 22D0  
                      _openPORTB 22CA                        _openPORTD 22D6  
                      _openPORTE 22BE                  ___aldiv@counter 0017  
                 ___wmul@product 0021                    OpenADC@config 0013  
          __size_of_lvd_flag_set 0006          __size_of_GetBackonTrack 0166  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                    ??_reset_codes 001C  
               _motors_brake_all 2106                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1           __end_of_initialization 1BD8  
                       _RCONbits 000FD0                ??_openPORTCforPWM 000F  
                  _set_osc_32MHz 203E                        main@F4194 0041  
                    _HLVDCONbits 000FD2                        _threshold 004A  
          __size_of_MotorControl 01CC                       _ADCON0bits 000FC2  
              ___wmul@multiplier 001D                     ?_StatusReset 0001  
                GetBackonTrack@i 003C                        main@error 003E  
   MotorControl@right_duty_cycle 0033                      ??_SetDCPWM1 0011  
                    ??_SetDCPWM2 0011                 __size_of_BORtask 0020  
                   _lvd_flag_set 22B2                 __size_of_PORtask 00AC  
                    ??_OpenUSART 0011               SetDCPWM1@dutycycle 000F  
                     ?_openPORTA 0001                       ?_openPORTB 0001  
                     ?_openPORTD 0001                       ?_openPORTE 0001  
               __size_of_WDTtask 001C                  OpenUSART@config 0011  
                       _OpenPWM1 2250                         _OpenPWM2 1FD8  
PID_LineFollowing@delta_velocity 0046                 __size_of_BusyADC 000E  
                    ??_SharpTurn 0035                 __size_of_ReadADC 0010  
                       __Hrparam 0000                 __size_of_OpenADC 005E  
                   _MotorControl 1384                  ?_initialization 0001  
                       __Lrparam 0000               SetDCPWM2@dutycycle 000F  
                 ?_set_osc_32MHz 0001                 __size_of___aldiv 00DE  
            __end_of_reset_codes 1F64                 __size_of___awdiv 0096  
               __size_of___lwdiv 005C                 __size_of___lwmod 004C  
                   ?_WriteTimer0 000F                   OpenPWM2@ccp2mx 0010  
               __size_of_isWDTTO 0026                   OpenPWM1@period 000F  
                 OpenPWM2@period 000F                  ___lwdiv@divisor 0015  
               __size_of_openLVD 0018                  ___lwdiv@counter 0019  
                       __ptext10 21C2                         __ptext11 195C  
                       __ptext20 1D4A                         __ptext12 2128  
                       __ptext21 21DE                         __ptext13 22B8  
                       __ptext30 2168                         __ptext22 1FD8  
                       __ptext14 22BE                         __ptext31 2010  
                       __ptext23 2250                         __ptext15 22C4  
                       __ptext40 2106                         __ptext32 22E0  
                       __ptext24 1E1C                         __ptext16 2296  
                       __ptext41 1898                         __ptext33 22D6  
                       __ptext25 107A                         __ptext17 22CA  
                       __ptext50 1AB2                         __ptext42 206A  
                       __ptext34 1DBA                         __ptext26 1ED6  
                       __ptext18 22D0                         __ptext51 1F64  
                       __ptext43 2228                         __ptext35 1550  
                       __ptext27 1E7A                         __ptext19 21FA  
                       __ptext52 1F9E                         __ptext44 2286  
                       __ptext36 1A08                         __ptext28 17BA  
                       __ptext45 22DC                         __ptext37 2262  
                       __ptext29 2148                         __ptext46 22A4  
                       __ptext38 1CD4                         __ptext47 2274  
                       __ptext39 1BD8                         __ptext48 1384  
                       __ptext49 2092                         _high_isr 0008  
               _CW_rotation_flag 004D                    __size_of_main 0104  
                       _lvd_flag 004F                         _set_leds 1BD8  
           __end_of_TURN_TIME_ms 1009                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                       _D_CONSTANT 1001  
                 OpenUSART@spbrg 000F               _TURN_SPEED_DIVIDER 1009  
                       intlevel2 0000                      ??_openPORTA 000F  
                    ??_openPORTB 000F                      ??_openPORTD 000F  
                    ??_openPORTE 000F                 ___lwmod@dividend 0013  
                 _GetBackonTrack 1550                _openPORTCforUSART 22C4  
              SetChanADC@channel 0010                  ??_set_osc_32MHz 000F  
                    _reset_codes 1F22                       _OSCCONbits 000FD3  
             ?_openPORTCforUSART 0001      __end_of_AllSensorsTriggered 1D4A  
                     _I_CONSTANT 1003                         printf@ap 0011  
            ??_openPORTCforUSART 000F                  ___lwmod@divisor 0015  
                ___lwmod@counter 0017         __end_of_motors_brake_all 2128  
                   ___aldiv@sign 0018             __size_of_StatusReset 0006  
         __end_of_GetBackonTrack 16B6                  _openPORTCforPWM 2296  
      __end_of_openPORTCforUSART 22CA                       _STKFULtask 2188  
                     _P_CONSTANT 1005  
