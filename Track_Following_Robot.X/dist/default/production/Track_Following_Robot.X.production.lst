

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 02:20:54 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	smallconst
    69  001000                     __psmallconst:
    70                           	opt stack 0
    71  001000  00                 	db	0
    72  001001                     _D_CONSTANT:
    73                           	opt stack 0
    74  001001  FFFF               	dw	65535
    75  001003                     __end_of_D_CONSTANT:
    76                           	opt stack 0
    77  001003                     _I_CONSTANT:
    78                           	opt stack 0
    79  001003  04E2               	dw	1250
    80  001005                     __end_of_I_CONSTANT:
    81                           	opt stack 0
    82  001005                     _P_CONSTANT:
    83                           	opt stack 0
    84  001005  0096               	dw	150
    85  001007                     __end_of_P_CONSTANT:
    86                           	opt stack 0
    87  001007                     _TURN_TIME_ms:
    88                           	opt stack 0
    89  001007  0320               	dw	800
    90  001009                     __end_of_TURN_TIME_ms:
    91                           	opt stack 0
    92  001009                     _TURN_SPEED_DIVIDER:
    93                           	opt stack 0
    94  001009  00                 	db	0
    95  00100A                     __end_of_TURN_SPEED_DIVIDER:
    96                           	opt stack 0
    97  0000                     _ADCON0	set	4034
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _CCP1CON	set	4029
   104  0000                     _CCP2CON	set	4026
   105  0000                     _CCPR1L	set	4030
   106  0000                     _CCPR2L	set	4027
   107  0000                     _HLVDCONbits	set	4050
   108  0000                     _INTCONbits	set	4082
   109  0000                     _IPR2bits	set	4002
   110  0000                     _OSCCONbits	set	4051
   111  0000                     _OSCTUNEbits	set	3995
   112  0000                     _PIE1bits	set	3997
   113  0000                     _PIE2bits	set	4000
   114  0000                     _PIR1bits	set	3998
   115  0000                     _PIR2bits	set	4001
   116  0000                     _PORTCbits	set	3970
   117  0000                     _PORTD	set	3971
   118  0000                     _PORTDbits	set	3971
   119  0000                     _PORTEbits	set	3972
   120  0000                     _PR2	set	4043
   121  0000                     _RCONbits	set	4048
   122  0000                     _RCSTA	set	4011
   123  0000                     _RCSTAbits	set	4011
   124  0000                     _SPBRG	set	4015
   125  0000                     _SPBRGH	set	4016
   126  0000                     _STKPTRbits	set	4092
   127  0000                     _T0CON	set	4053
   128  0000                     _T0CONbits	set	4053
   129  0000                     _T2CON	set	4042
   130  0000                     _T2CONbits	set	4042
   131  0000                     _TMR0H	set	4055
   132  0000                     _TMR0L	set	4054
   133  0000                     _TMR2	set	4044
   134  0000                     _TRISA	set	3986
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISBbits	set	3987
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISCbits	set	3988
   139  0000                     _TRISD	set	3989
   140  0000                     _TRISE	set	3990
   141  0000                     _TXSTA	set	4012
   142  0000                     _TXSTAbits	set	4012
   143  0000                     _TMR0IF	set	32658
   144  00100A                     STR_1:
   145  00100A  0A                 	db	10
   146  00100B  0D                 	db	13
   147  00100C  4B                 	db	75	;'K'
   148  00100D  77                 	db	119	;'w'
   149  00100E  61                 	db	97	;'a'
   150  00100F  6E                 	db	110	;'n'
   151  001010  74                 	db	116	;'t'
   152  001011  6C                 	db	108	;'l'
   153  001012  65                 	db	101	;'e'
   154  001013  6E                 	db	110	;'n'
   155  001014  20                 	db	32
   156  001015  41                 	db	65	;'A'
   157  001016  50                 	db	80	;'P'
   158  001017  53                 	db	83	;'S'
   159  001018  43                 	db	67	;'C'
   160  001019  31                 	db	49	;'1'
   161  00101A  32                 	db	50	;'2'
   162  00101B  39                 	db	57	;'9'
   163  00101C  39                 	db	57	;'9'
   164  00101D  20                 	db	32
   165  00101E  73                 	db	115	;'s'
   166  00101F  69                 	db	105	;'i'
   167  001020  6D                 	db	109	;'m'
   168  001021  70                 	db	112	;'p'
   169  001022  6C                 	db	108	;'l'
   170  001023  65                 	db	101	;'e'
   171  001024  20                 	db	32
   172  001025  63                 	db	99	;'c'
   173  001026  75                 	db	117	;'u'
   174  001027  72                 	db	114	;'r'
   175  001028  76                 	db	118	;'v'
   176  001029  65                 	db	101	;'e'
   177  00102A  20                 	db	32
   178  00102B  66                 	db	102	;'f'
   179  00102C  6F                 	db	111	;'o'
   180  00102D  6C                 	db	108	;'l'
   181  00102E  6C                 	db	108	;'l'
   182  00102F  6F                 	db	111	;'o'
   183  001030  77                 	db	119	;'w'
   184  001031  65                 	db	101	;'e'
   185  001032  72                 	db	114	;'r'
   186  001033  20                 	db	32
   187  001034  2D                 	db	45
   188  001035  2D                 	db	45
   189  001036  20                 	db	32
   190  001037  77                 	db	119	;'w'
   191  001038  69                 	db	105	;'i'
   192  001039  74                 	db	116	;'t'
   193  00103A  68                 	db	104	;'h'
   194  00103B  20                 	db	32
   195  00103C  65                 	db	101	;'e'
   196  00103D  72                 	db	114	;'r'
   197  00103E  72                 	db	114	;'r'
   198  00103F  6F                 	db	111	;'o'
   199  001040  72                 	db	114	;'r'
   200  001041  20                 	db	32
   201  001042  63                 	db	99	;'c'
   202  001043  6F                 	db	111	;'o'
   203  001044  64                 	db	100	;'d'
   204  001045  65                 	db	101	;'e'
   205  001046  73                 	db	115	;'s'
   206  001047  0A                 	db	10
   207  001048  0D                 	db	13
   208  001049  00                 	db	0
   209  00104A                     STR_6:
   210  00104A  20                 	db	32
   211  00104B  3C                 	db	60	;'<'
   212  00104C  72                 	db	114	;'r'
   213  00104D  65                 	db	101	;'e'
   214  00104E  73                 	db	115	;'s'
   215  00104F  65                 	db	101	;'e'
   216  001050  74                 	db	116	;'t'
   217  001051  3E                 	db	62	;'>'
   218  001052  20                 	db	32
   219  001053  00                 	db	0
   220  001054                     STR_5:
   221  001054  3C                 	db	60	;'<'
   222  001055  53                 	db	83	;'S'
   223  001056  54                 	db	84	;'T'
   224  001057  4B                 	db	75	;'K'
   225  001058  46                 	db	70	;'F'
   226  001059  55                 	db	85	;'U'
   227  00105A  4C                 	db	76	;'L'
   228  00105B  3E                 	db	62	;'>'
   229  00105C  00                 	db	0
   230  00105D                     STR_4:
   231  00105D  3C                 	db	60	;'<'
   232  00105E  57                 	db	87	;'W'
   233  00105F  44                 	db	68	;'D'
   234  001060  54                 	db	84	;'T'
   235  001061  20                 	db	32
   236  001062  54                 	db	84	;'T'
   237  001063  4F                 	db	79	;'O'
   238  001064  3E                 	db	62	;'>'
   239  001065  00                 	db	0
   240  001066                     STR_7:
   241  001066  5C                 	db	92	;'\'
   242  001067  3C                 	db	60	;'<'
   243  001068  4C                 	db	76	;'L'
   244  001069  56                 	db	86	;'V'
   245  00106A  44                 	db	68	;'D'
   246  00106B  3E                 	db	62	;'>'
   247  00106C  00                 	db	0
   248  00106D                     STR_3:
   249  00106D  3C                 	db	60	;'<'
   250  00106E  42                 	db	66	;'B'
   251  00106F  4F                 	db	79	;'O'
   252  001070  52                 	db	82	;'R'
   253  001071  3E                 	db	62	;'>'
   254  001072  00                 	db	0
   255  001073                     STR_2:
   256  001073  3C                 	db	60	;'<'
   257  001074  50                 	db	80	;'P'
   258  001075  4F                 	db	79	;'O'
   259  001076  52                 	db	82	;'R'
   260  001077  3E                 	db	62	;'>'
   261  001078  00                 	db	0
   262                           
   263                           ; #config settings
   264  001079  00                 	db	0	; dummy byte at the end
   265  0000                     
   266                           	psect	cinit
   267  00228C                     __pcinit:
   268                           	opt stack 0
   269  00228C                     start_initialization:
   270                           	opt stack 0
   271  00228C                     __initialization:
   272                           	opt stack 0
   273                           
   274                           ; Clear objects allocated to COMRAM (15 bytes)
   275  00228C  EE00  F041         	lfsr	0,__pbssCOMRAM
   276  002290  0E0F               	movlw	15
   277  002292                     clear_0:
   278  002292  6AEE               	clrf	postinc0,c
   279  002294  06E8               	decf	wreg,f,c
   280  002296  E1FD               	bnz	clear_0
   281  002298                     end_of_initialization:
   282                           	opt stack 0
   283  002298                     __end_of__initialization:
   284                           	opt stack 0
   285  002298  0100               	movlb	0
   286  00229A  EF5B  F00B         	goto	_main	;jump to C main() function
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	bssCOMRAM
   291  000041                     __pbssCOMRAM:
   292                           	opt stack 0
   293  000041                     main@F4195:
   294                           	opt stack 0
   295  000041                     	ds	3
   296  000044                     PID_LineFollowing@D:
   297                           	opt stack 0
   298  000044                     	ds	2
   299  000046                     PID_LineFollowing@delta_velocity:
   300                           	opt stack 0
   301  000046                     	ds	2
   302  000048                     _I:
   303                           	opt stack 0
   304  000048                     	ds	2
   305  00004A                     _threshold:
   306                           	opt stack 0
   307  00004A                     	ds	2
   308  00004C                     _CCW_rotation_flag:
   309                           	opt stack 0
   310  00004C                     	ds	1
   311  00004D                     _CW_rotation_flag:
   312                           	opt stack 0
   313  00004D                     	ds	1
   314  00004E                     _SeeLine:
   315                           	opt stack 0
   316  00004E                     	ds	1
   317  00004F                     _lvd_flag:
   318                           	opt stack 0
   319  00004F                     	ds	1
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt stack 0
   326  000001                     ??_high_isr:
   327  000001                     
   328                           ; 1 bytes @ 0x0
   329  000001                     	ds	14
   330  00000F                     ??_set_leds:
   331  00000F                     ??_SetChanADC:
   332  00000F                     ?_printf:
   333                           	opt stack 0
   334  00000F                     ?_ReadTimer0:
   335                           	opt stack 0
   336  00000F                     ?_ReadADC:
   337                           	opt stack 0
   338  00000F                     ?___aldiv:
   339                           	opt stack 0
   340  00000F                     OpenADC@config2:
   341                           	opt stack 0
   342  00000F                     OpenPWM1@period:
   343                           	opt stack 0
   344  00000F                     OpenPWM2@period:
   345                           	opt stack 0
   346  00000F                     OpenTimer0@config:
   347                           	opt stack 0
   348  00000F                     OpenTimer2@config:
   349                           	opt stack 0
   350  00000F                     set_osc_32MHz@i:
   351                           	opt stack 0
   352  00000F                     printf@f:
   353                           	opt stack 0
   354  00000F                     SetDCPWM1@dutycycle:
   355                           	opt stack 0
   356  00000F                     SetDCPWM2@dutycycle:
   357                           	opt stack 0
   358  00000F                     WriteTimer0@timer0:
   359                           	opt stack 0
   360  00000F                     OpenUSART@spbrg:
   361                           	opt stack 0
   362  00000F                     gtrap@count:
   363                           	opt stack 0
   364  00000F                     ___aldiv@dividend:
   365                           	opt stack 0
   366                           
   367                           ; 4 bytes @ 0xE
   368  00000F                     	ds	1
   369  000010                     OpenADC@portconfig:
   370                           	opt stack 0
   371  000010                     SetChanADC@channel:
   372                           	opt stack 0
   373  000010                     OpenPWM2@ccp2mx:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0xF
   377  000010                     	ds	1
   378  000011                     ??_SetDCPWM2:
   379  000011                     ??_SetDCPWM1:
   380  000011                     ??_OpenADC:
   381  000011                     ??_ReadADC:
   382  000011                     OpenUSART@config:
   383                           	opt stack 0
   384  000011                     printf@ap:
   385                           	opt stack 0
   386  000011                     ReadTimer0@timer:
   387                           	opt stack 0
   388  000011                     WriteTimer0@timer:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x10
   392  000011                     	ds	2
   393  000013                     ?_adc:
   394                           	opt stack 0
   395  000013                     ?___lwdiv:
   396                           	opt stack 0
   397  000013                     ?___lwmod:
   398                           	opt stack 0
   399  000013                     printf@c:
   400                           	opt stack 0
   401  000013                     OpenADC@config:
   402                           	opt stack 0
   403  000013                     SetDCPWM1@DCycle:
   404                           	opt stack 0
   405  000013                     SetDCPWM2@DCycle:
   406                           	opt stack 0
   407  000013                     ___lwdiv@dividend:
   408                           	opt stack 0
   409  000013                     ___lwmod@dividend:
   410                           	opt stack 0
   411  000013                     ___aldiv@divisor:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0x12
   415  000013                     	ds	1
   416  000014                     PORtask@count1:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x13
   420  000014                     	ds	1
   421  000015                     adc@channel:
   422                           	opt stack 0
   423  000015                     ___lwdiv@divisor:
   424                           	opt stack 0
   425  000015                     ___lwmod@divisor:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x14
   429  000015                     	ds	1
   430  000016                     ??_check_sensors:
   431                           
   432                           ; 0 bytes @ 0x15
   433  000016                     	ds	1
   434  000017                     ___aldiv@counter:
   435                           	opt stack 0
   436  000017                     ___lwmod@counter:
   437                           	opt stack 0
   438  000017                     ___lwdiv@quotient:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x16
   442  000017                     	ds	1
   443  000018                     ___aldiv@sign:
   444                           	opt stack 0
   445  000018                     PORtask@count2:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x17
   449  000018                     	ds	1
   450  000019                     ___lwdiv@counter:
   451                           	opt stack 0
   452  000019                     ___aldiv@quotient:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0x18
   456  000019                     	ds	3
   457  00001C                     
   458                           ; 0 bytes @ 0x1B
   459  00001C                     	ds	1
   460  00001D                     ?___wmul:
   461                           	opt stack 0
   462  00001D                     ___wmul@multiplier:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x1C
   466  00001D                     	ds	2
   467  00001F                     ___wmul@multiplicand:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x1E
   471  00001F                     	ds	2
   472  000021                     ___wmul@product:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x20
   476  000021                     	ds	2
   477  000023                     ?___awdiv:
   478                           	opt stack 0
   479  000023                     ___awdiv@dividend:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x22
   483  000023                     	ds	2
   484  000025                     ___awdiv@divisor:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x24
   488  000025                     	ds	2
   489  000027                     ___awdiv@counter:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x26
   493  000027                     	ds	1
   494  000028                     ___awdiv@sign:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x27
   498  000028                     	ds	1
   499  000029                     ___awdiv@quotient:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x28
   503  000029                     	ds	2
   504  00002B                     MotorControl@delta_velocity:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x2A
   508  00002B                     	ds	2
   509  00002D                     MotorControl@speed_divider:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x2C
   513  00002D                     	ds	1
   514  00002E                     ??_MotorControl:
   515                           
   516                           ; 0 bytes @ 0x2D
   517  00002E                     	ds	1
   518  00002F                     MotorControl@left_dir_modifier:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x2E
   522  00002F                     	ds	1
   523  000030                     MotorControl@right_dir_modifier:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x2F
   527  000030                     	ds	1
   528  000031                     MotorControl@left_duty_cycle:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x30
   532  000031                     	ds	2
   533  000033                     MotorControl@right_duty_cycle:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x32
   537  000033                     	ds	2
   538  000035                     ??_SharpTurn:
   539  000035                     _AllSensorsTriggered$476:
   540                           	opt stack 0
   541  000035                     PID_LineFollowing@error:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x34
   545  000035                     	ds	1
   546  000036                     SharpTurn@direction:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x35
   550  000036                     	ds	1
   551  000037                     ??_PID_LineFollowing:
   552  000037                     SharpTurn@delta_velocity:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x36
   556  000037                     	ds	2
   557  000039                     GetBackonTrack@error:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x38
   561  000039                     	ds	2
   562  00003B                     ??_GetBackonTrack:
   563                           
   564                           ; 0 bytes @ 0x3A
   565  00003B                     	ds	1
   566  00003C                     GetBackonTrack@i:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x3B
   570  00003C                     	ds	2
   571  00003E                     main@error:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x3D
   575  00003E                     	ds	3
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           
   579 ;;
   580 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   581 ;;
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 27 in file "../Robot Files/main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  error           3   61[COMRAM] char [3]
   589 ;; Return value:  Size  Location     Type
   590 ;;		None               void
   591 ;; Registers used:
   592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;Total ram usage:        3 bytes
   603 ;; Hardware stack levels required when called:    6
   604 ;; This function calls:
   605 ;;		_AllSensorsTriggered
   606 ;;		_FilterNearbyTrack
   607 ;;		_GetBackonTrack
   608 ;;		_LVtrap
   609 ;;		_OpenTimer0
   610 ;;		_PID_LineFollowing
   611 ;;		_WriteTimer0
   612 ;;		_check_sensors
   613 ;;		_initialization
   614 ;;		_lvd_flag_set
   615 ;;		_printf
   616 ;;		_set_leds
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text0
   623  0016B6                     __ptext0:
   624                           	opt stack 0
   625  0016B6                     _main:
   626                           	opt stack 25
   627                           
   628                           ;main.c: 29: signed char error[3]={0};
   629                           
   630                           ;incstack = 0
   631  0016B6  C041  F03E         	movff	main@F4195,main@error
   632  0016BA  C042  F03F         	movff	main@F4195+1,main@error+1
   633  0016BE  C043  F040         	movff	main@F4195+2,main@error+2
   634                           
   635                           ;main.c: 32: initialization();
   636  0016C2  ECBB  F00D         	call	_initialization	;wreg free
   637                           
   638                           ;main.c: 37: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   639  0016C6  0E0A               	movlw	low STR_1
   640  0016C8  6E0F               	movwf	printf@f,c
   641  0016CA  0E10               	movlw	high STR_1
   642  0016CC  6E10               	movwf	printf@f+1,c
   643  0016CE  EC1F  F010         	call	_printf	;wreg free
   644  0016D2  0004               	clrwdt		;# 
   645                           
   646                           ;main.c: 39: threshold = 575u;
   647  0016D4  0E02               	movlw	2
   648  0016D6  6E4B               	movwf	_threshold+1,c
   649  0016D8  0E3F               	movlw	63
   650  0016DA  6E4A               	movwf	_threshold,c
   651                           
   652                           ;main.c: 43: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   653  0016DC  0E16               	movlw	22
   654  0016DE  ECBB  F010         	call	_OpenTimer0
   655                           
   656                           ;main.c: 44: WriteTimer0(0);
   657  0016E2  0E00               	movlw	0
   658  0016E4  6E10               	movwf	WriteTimer0@timer0+1,c
   659  0016E6  0E00               	movlw	0
   660  0016E8  6E0F               	movwf	WriteTimer0@timer0,c
   661  0016EA  EC61  F011         	call	_WriteTimer0	;wreg free
   662                           
   663                           ;main.c: 45: TMR0IF = 0;
   664  0016EE  94F2               	bcf	intcon,2,c	;volatile
   665  0016F0  D000               	goto	l2798
   666  0016F2                     l2798:
   667                           
   668                           ;main.c: 48: {
   669                           ;main.c: 49: check_sensors();
   670  0016F2  EC63  F00C         	call	_check_sensors	;wreg free
   671                           
   672                           ;main.c: 51: FilterNearbyTrack();
   673  0016F6  ECDB  F010         	call	_FilterNearbyTrack	;wreg free
   674                           
   675                           ;main.c: 58: switch(SeeLine.B)
   676  0016FA  D035               	goto	l2840
   677  0016FC                     l2802:
   678                           
   679                           ;main.c: 61: error[2]=1; break;
   680  0016FC  0E01               	movlw	1
   681  0016FE  D031               	goto	L7
   682  001700                     l2804:
   683                           
   684                           ;main.c: 63: error[2]=2; break;
   685  001700  0E02               	movlw	2
   686  001702  D02F               	goto	L7
   687  001704                     l2806:
   688                           
   689                           ;main.c: 65: error[2]=3; break;
   690  001704  0E03               	movlw	3
   691  001706  D02D               	goto	L7
   692  001708                     l2808:
   693                           
   694                           ;main.c: 67: error[2]=4; break;
   695  001708  0E04               	movlw	4
   696  00170A  D02B               	goto	L7
   697  00170C                     l76:
   698                           
   699                           ;main.c: 69: error[2]=-1; break;
   700  00170C  6840               	setf	main@error+2,c
   701  00170E  D052               	goto	l72
   702  001710                     l2810:
   703                           
   704                           ;main.c: 71: error[2]=-2; break;
   705  001710  0EFE               	movlw	254
   706  001712  D027               	goto	L7
   707  001714                     l2812:
   708                           
   709                           ;main.c: 73: error[2]=-3; break;
   710  001714  0EFD               	movlw	253
   711  001716  D025               	goto	L7
   712  001718                     l2814:
   713                           
   714                           ;main.c: 75: error[2]=-4; break;
   715  001718  0EFC               	movlw	252
   716  00171A  D023               	goto	L7
   717  00171C                     l2816:
   718                           
   719                           ;main.c: 77: {
   720                           ;main.c: 78: WriteTimer0(0);
   721  00171C  0E00               	movlw	0
   722  00171E  6E10               	movwf	WriteTimer0@timer0+1,c
   723  001720  0E00               	movlw	0
   724  001722  6E0F               	movwf	WriteTimer0@timer0,c
   725  001724  EC61  F011         	call	_WriteTimer0	;wreg free
   726                           
   727                           ;main.c: 79: TMR0IF = 0;
   728  001728  94F2               	bcf	intcon,2,c	;volatile
   729                           
   730                           ;main.c: 80: CW_rotation_flag = 1;
   731  00172A  0E01               	movlw	1
   732  00172C  6E4D               	movwf	_CW_rotation_flag,c
   733                           
   734                           ;main.c: 81: CCW_rotation_flag = 0;
   735  00172E  0E00               	movlw	0
   736  001730  6E4C               	movwf	_CCW_rotation_flag,c
   737                           
   738                           ;main.c: 82: }break;
   739  001732  D040               	goto	l72
   740  001734                     l2824:
   741                           
   742                           ;main.c: 84: {
   743                           ;main.c: 85: WriteTimer0(0);
   744  001734  0E00               	movlw	0
   745  001736  6E10               	movwf	WriteTimer0@timer0+1,c
   746  001738  0E00               	movlw	0
   747  00173A  6E0F               	movwf	WriteTimer0@timer0,c
   748  00173C  EC61  F011         	call	_WriteTimer0	;wreg free
   749                           
   750                           ;main.c: 86: TMR0IF = 0;
   751  001740  94F2               	bcf	intcon,2,c	;volatile
   752                           
   753                           ;main.c: 87: CCW_rotation_flag = 1;
   754  001742  0E01               	movlw	1
   755  001744  6E4C               	movwf	_CCW_rotation_flag,c
   756                           
   757                           ;main.c: 88: CW_rotation_flag = 0;
   758  001746  0E00               	movlw	0
   759  001748  6E4D               	movwf	_CW_rotation_flag,c
   760                           
   761                           ;main.c: 89: }break;
   762  00174A  D034               	goto	l72
   763  00174C                     l2832:
   764                           
   765                           ;main.c: 91: GetBackonTrack(error); break;
   766  00174C  0E3E               	movlw	low main@error
   767  00174E  6E39               	movwf	GetBackonTrack@error,c
   768  001750  0E00               	movlw	high main@error
   769  001752  6E3A               	movwf	GetBackonTrack@error+1,c
   770  001754  ECA8  F00A         	call	_GetBackonTrack	;wreg free
   771  001758  D02D               	goto	l72
   772  00175A                     l2834:
   773                           
   774                           ;main.c: 93: AllSensorsTriggered(); break;
   775  00175A  EC81  F00E         	call	_AllSensorsTriggered	;wreg free
   776  00175E  D02A               	goto	l72
   777  001760                     l2836:
   778                           
   779                           ;main.c: 95: error[2]=0; break;
   780  001760  0E00               	movlw	0
   781  001762                     L7:
   782  001762  6E40               	movwf	main@error+2,c
   783                           
   784                           ;main.c: 96: }
   785  001764  D027               	goto	l72
   786  001766                     l2840:
   787  001766  504E               	movf	_SeeLine,w,c
   788  001768  0B1F               	andlw	31
   789                           
   790                           ; Switch size 1, requested type "space"
   791                           ; Number of cases is 12, Range of values is 0 to 31
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte           37    19 (average)
   795                           ;	Chosen strategy is simple_byte
   796  00176A  0A00               	xorlw	0	; case 0
   797  00176C  B4D8               	btfsc	status,2,c
   798  00176E  D7EE               	goto	l2832
   799  001770  0A01               	xorlw	1	; case 1
   800  001772  B4D8               	btfsc	status,2,c
   801  001774  D7C9               	goto	l2808
   802  001776  0A03               	xorlw	3	; case 2
   803  001778  B4D8               	btfsc	status,2,c
   804  00177A  D7C2               	goto	l2804
   805  00177C  0A01               	xorlw	1	; case 3
   806  00177E  B4D8               	btfsc	status,2,c
   807  001780  D7C1               	goto	l2806
   808  001782  0A05               	xorlw	5	; case 6
   809  001784  B4D8               	btfsc	status,2,c
   810  001786  D7BA               	goto	l2802
   811  001788  0A01               	xorlw	1	; case 7
   812  00178A  B4D8               	btfsc	status,2,c
   813  00178C  D7C7               	goto	l2816
   814  00178E  0A0F               	xorlw	15	; case 8
   815  001790  B4D8               	btfsc	status,2,c
   816  001792  D7BE               	goto	l2810
   817  001794  0A04               	xorlw	4	; case 12
   818  001796  B4D8               	btfsc	status,2,c
   819  001798  D7B9               	goto	l76
   820  00179A  0A1C               	xorlw	28	; case 16
   821  00179C  B4D8               	btfsc	status,2,c
   822  00179E  D7BC               	goto	l2814
   823  0017A0  0A08               	xorlw	8	; case 24
   824  0017A2  B4D8               	btfsc	status,2,c
   825  0017A4  D7B7               	goto	l2812
   826  0017A6  0A04               	xorlw	4	; case 28
   827  0017A8  B4D8               	btfsc	status,2,c
   828  0017AA  D7C4               	goto	l2824
   829  0017AC  0A03               	xorlw	3	; case 31
   830  0017AE  B4D8               	btfsc	status,2,c
   831  0017B0  D7D4               	goto	l2834
   832  0017B2  D7D6               	goto	l2836
   833  0017B4                     l72:
   834                           
   835                           ;main.c: 98: if(TMR0IF)
   836  0017B4  A4F2               	btfss	intcon,2,c	;volatile
   837  0017B6  D005               	goto	l2844
   838                           
   839                           ;main.c: 99: {
   840                           ;main.c: 100: CW_rotation_flag = 0;
   841  0017B8  0E00               	movlw	0
   842  0017BA  6E4D               	movwf	_CW_rotation_flag,c
   843                           
   844                           ;main.c: 101: CCW_rotation_flag = 0;
   845  0017BC  0E00               	movlw	0
   846  0017BE  6E4C               	movwf	_CCW_rotation_flag,c
   847  0017C0  D000               	goto	l2844
   848  0017C2                     l2844:
   849                           
   850                           ;main.c: 102: }
   851                           ;main.c: 104: set_leds();
   852  0017C2  EC03  F00E         	call	_set_leds	;wreg free
   853                           
   854                           ;main.c: 105: PID_LineFollowing(error);
   855  0017C6  0E3E               	movlw	low main@error
   856  0017C8  6E35               	movwf	PID_LineFollowing@error,c
   857  0017CA  0E00               	movlw	high main@error
   858  0017CC  6E36               	movwf	PID_LineFollowing@error+1,c
   859  0017CE  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   860  0017D2  0004               	clrwdt		;# 
   861                           
   862                           ;main.c: 108: if(lvd_flag_set()) LVtrap();
   863  0017D4  EC80  F011         	call	_lvd_flag_set	;wreg free
   864  0017D8  0900               	iorlw	0
   865  0017DA  B4D8               	btfsc	status,2,c
   866  0017DC  D78A               	goto	l2798
   867  0017DE  ECCB  F010         	call	_LVtrap	;wreg free
   868  0017E2  D787               	goto	l2798
   869  0017E4  EF0C  F000         	goto	start
   870  0017E8                     __end_of_main:
   871                           	opt stack 0
   872                           intcon	equ	0xFF2
   873                           postinc0	equ	0xFEE
   874                           wreg	equ	0xFE8
   875                           status	equ	0xFD8
   876                           
   877 ;; *************** function _lvd_flag_set *****************
   878 ;; Defined at:
   879 ;;		line 47 in file "../Robot Files/interrupts.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      unsigned char 
   886 ;; Registers used:
   887 ;;		wreg, status,2
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text1
   908  002300                     __ptext1:
   909                           	opt stack 0
   910  002300                     _lvd_flag_set:
   911                           	opt stack 29
   912                           
   913                           ;interrupts.c: 49: return lvd_flag;
   914                           
   915                           ;incstack = 0
   916  002300  504F               	movf	_lvd_flag,w,c
   917  002302  D000               	goto	l392
   918  002304                     l392:
   919  002304  0012               	return		;funcret
   920  002306                     __end_of_lvd_flag_set:
   921                           	opt stack 0
   922                           intcon	equ	0xFF2
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           status	equ	0xFD8
   926                           
   927 ;; *************** function _initialization *****************
   928 ;; Defined at:
   929 ;;		line 65 in file "../Robot Files/sumovore.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;		None               void
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    5
   950 ;; This function calls:
   951 ;;		_OpenADC
   952 ;;		_OpenPWM1
   953 ;;		_OpenPWM2
   954 ;;		_OpenTimer2
   955 ;;		_OpenUSART
   956 ;;		_SetDCPWM1
   957 ;;		_SetDCPWM2
   958 ;;		_openLVD
   959 ;;		_openPORTA
   960 ;;		_openPORTB
   961 ;;		_openPORTCforPWM
   962 ;;		_openPORTCforUSART
   963 ;;		_openPORTD
   964 ;;		_openPORTE
   965 ;;		_reset_codes
   966 ;;		_set_osc_32MHz
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text2
   973  001B76                     __ptext2:
   974                           	opt stack 0
   975  001B76                     _initialization:
   976                           	opt stack 25
   977                           
   978                           ;sumovore.c: 67: SeeLine.B = 0;
   979                           
   980                           ;incstack = 0
   981  001B76  904E               	bcf	_SeeLine,0,c
   982  001B78  924E               	bcf	_SeeLine,1,c
   983  001B7A  944E               	bcf	_SeeLine,2,c
   984  001B7C  964E               	bcf	_SeeLine,3,c
   985  001B7E  984E               	bcf	_SeeLine,4,c
   986                           
   987                           ;sumovore.c: 68: RCONbits.IPEN = 1;
   988  001B80  8ED0               	bsf	4048,7,c	;volatile
   989                           
   990                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
   991  001B82  9EF2               	bcf	intcon,7,c	;volatile
   992                           
   993                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
   994  001B84  9CF2               	bcf	intcon,6,c	;volatile
   995                           
   996                           ;sumovore.c: 72: set_osc_32MHz();
   997  001B86  EC36  F010         	call	_set_osc_32MHz	;wreg free
   998                           
   999                           ;sumovore.c: 73: openPORTCforUSART();
  1000  001B8A  EC89  F011         	call	_openPORTCforUSART	;wreg free
  1001                           
  1002                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1003                           ;sumovore.c: 76: 16 );
  1004  001B8E  0E00               	movlw	0
  1005  001B90  6E10               	movwf	OpenUSART@spbrg+1,c
  1006  001B92  0E10               	movlw	16
  1007  001B94  6E0F               	movwf	OpenUSART@spbrg,c
  1008  001B96  0E3C               	movlw	60
  1009  001B98  ECBC  F00E         	call	_OpenUSART
  1010                           
  1011                           ;sumovore.c: 82: openPORTD();
  1012  001B9C  EC92  F011         	call	_openPORTD	;wreg free
  1013                           
  1014                           ;sumovore.c: 83: PORTD = 0;
  1015  001BA0  0E00               	movlw	0
  1016  001BA2  6E83               	movwf	3971,c	;volatile
  1017                           
  1018                           ;sumovore.c: 85: reset_codes();
  1019  001BA4  ECA8  F00F         	call	_reset_codes	;wreg free
  1020                           
  1021                           ;sumovore.c: 87: openPORTCforPWM();
  1022  001BA8  EC72  F011         	call	_openPORTCforPWM	;wreg free
  1023                           
  1024                           ;sumovore.c: 89: openPORTA();
  1025  001BAC  EC8F  F011         	call	_openPORTA	;wreg free
  1026                           
  1027                           ;sumovore.c: 90: openPORTB();
  1028  001BB0  EC8C  F011         	call	_openPORTB	;wreg free
  1029                           
  1030                           ;sumovore.c: 91: openPORTE();
  1031  001BB4  EC86  F011         	call	_openPORTE	;wreg free
  1032                           
  1033                           ;sumovore.c: 94: openLVD();
  1034  001BB8  EC24  F011         	call	_openLVD	;wreg free
  1035                           
  1036                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1037  001BBC  0E0C               	movlw	12
  1038  001BBE  6E0F               	movwf	OpenADC@config2,c
  1039  001BC0  0E0A               	movlw	10
  1040  001BC2  6E10               	movwf	OpenADC@portconfig,c
  1041  001BC4  0EA7               	movlw	167
  1042  001BC6  EC25  F00F         	call	_OpenADC
  1043                           
  1044                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1045  001BCA  9A82               	bcf	3970,5,c	;volatile
  1046                           
  1047                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1048  001BCC  9084               	bcf	3972,0,c	;volatile
  1049                           
  1050                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1051  001BCE  9082               	bcf	3970,0,c	;volatile
  1052                           
  1053                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1054  001BD0  9284               	bcf	3972,1,c	;volatile
  1055                           
  1056                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1057  001BD2  0E06               	movlw	6
  1058  001BD4  EC16  F011         	call	_OpenTimer2
  1059                           
  1060                           ;sumovore.c: 110: OpenPWM1(199);
  1061  001BD8  0EC7               	movlw	199
  1062  001BDA  EC4F  F011         	call	_OpenPWM1
  1063                           
  1064                           ;sumovore.c: 112: OpenPWM2(199);
  1065  001BDE  0EC7               	movlw	199
  1066  001BE0  EC03  F010         	call	_OpenPWM2
  1067                           
  1068                           ;sumovore.c: 113: SetDCPWM1(0);
  1069  001BE4  0E00               	movlw	0
  1070  001BE6  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1071  001BE8  0E00               	movlw	0
  1072  001BEA  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1073  001BEC  ECE6  F00F         	call	_SetDCPWM1	;wreg free
  1074                           
  1075                           ;sumovore.c: 116: SetDCPWM2(0);
  1076  001BF0  0E00               	movlw	0
  1077  001BF2  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1078  001BF4  0E00               	movlw	0
  1079  001BF6  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1080  001BF8  ECC9  F00F         	call	_SetDCPWM2	;wreg free
  1081                           
  1082                           ;sumovore.c: 117: threshold = 512u;
  1083  001BFC  0E02               	movlw	2
  1084  001BFE  6E4B               	movwf	_threshold+1,c
  1085  001C00  0E00               	movlw	0
  1086  001C02  6E4A               	movwf	_threshold,c
  1087  001C04  0012               	return		;funcret
  1088  001C06                     __end_of_initialization:
  1089                           	opt stack 0
  1090                           intcon	equ	0xFF2
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _set_osc_32MHz *****************
  1096 ;; Defined at:
  1097 ;;		line 18 in file "../Robot Files/osc.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  i               2   14[COMRAM] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        2 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_initialization
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text3
  1126  00206C                     __ptext3:
  1127                           	opt stack 0
  1128  00206C                     _set_osc_32MHz:
  1129                           	opt stack 28
  1130                           
  1131                           ;osc.c: 20: int i;
  1132                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1133                           
  1134                           ;incstack = 0
  1135  00206C  8CD3               	bsf	4051,6,c	;volatile
  1136                           
  1137                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1138  00206E  8AD3               	bsf	4051,5,c	;volatile
  1139                           
  1140                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1141  002070  88D3               	bsf	4051,4,c	;volatile
  1142                           
  1143                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1144  002072  8C9B               	bsf	3995,6,c	;volatile
  1145                           
  1146                           ;osc.c: 28: for(i=0;i<500;i++);
  1147  002074  0E00               	movlw	0
  1148  002076  6E10               	movwf	set_osc_32MHz@i+1,c
  1149  002078  0E00               	movlw	0
  1150  00207A  6E0F               	movwf	set_osc_32MHz@i,c
  1151  00207C                     l1602:
  1152  00207C  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1153  00207E  D008               	goto	l1606
  1154  002080  0EF4               	movlw	244
  1155  002082  5C0F               	subwf	set_osc_32MHz@i,w,c
  1156  002084  0E01               	movlw	1
  1157  002086  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1158  002088  B0D8               	btfsc	status,0,c
  1159  00208A  D005               	goto	l401
  1160  00208C  D001               	goto	l1606
  1161  00208E  D003               	goto	l401
  1162  002090                     l1606:
  1163  002090  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1164  002092  2A10               	incf	set_osc_32MHz@i+1,f,c
  1165  002094  D7F3               	goto	l1602
  1166  002096                     l401:
  1167  002096  0012               	return		;funcret
  1168  002098                     __end_of_set_osc_32MHz:
  1169                           	opt stack 0
  1170                           intcon	equ	0xFF2
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function _reset_codes *****************
  1176 ;; Defined at:
  1177 ;;		line 282 in file "../Robot Files/sumovore.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;		None               void
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    4
  1198 ;; This function calls:
  1199 ;;		_BORtask
  1200 ;;		_PORtask
  1201 ;;		_RESETtask
  1202 ;;		_STKFULtask
  1203 ;;		_WDTtask
  1204 ;;		_isBOR
  1205 ;;		_isPOR
  1206 ;;		_isWDTTO
  1207 ;; This function is called by:
  1208 ;;		_initialization
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text4
  1213  001F50                     __ptext4:
  1214                           	opt stack 0
  1215  001F50                     _reset_codes:
  1216                           	opt stack 25
  1217                           
  1218                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1219                           
  1220                           ;incstack = 0
  1221  001F50  EC87  F010         	call	_isPOR	;wreg free
  1222  001F54  0900               	iorlw	0
  1223  001F56  B4D8               	btfsc	status,2,c
  1224  001F58  D003               	goto	l2492
  1225  001F5A  ECC5  F00C         	call	_PORtask	;wreg free
  1226  001F5E  D018               	goto	l332
  1227  001F60                     l2492:
  1228                           
  1229                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1230  001F60  EC30  F011         	call	_isBOR	;wreg free
  1231  001F64  0900               	iorlw	0
  1232  001F66  B4D8               	btfsc	status,2,c
  1233  001F68  D003               	goto	l2496
  1234  001F6A  ECAB  F010         	call	_BORtask	;wreg free
  1235  001F6E  D010               	goto	l332
  1236  001F70                     l2496:
  1237                           
  1238                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1239  001F70  EC74  F010         	call	_isWDTTO	;wreg free
  1240  001F74  0900               	iorlw	0
  1241  001F76  B4D8               	btfsc	status,2,c
  1242  001F78  D003               	goto	l328
  1243  001F7A  ECFA  F010         	call	_WDTtask	;wreg free
  1244  001F7E  D008               	goto	l332
  1245  001F80                     l328:
  1246                           
  1247                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1248  001F80  AEFC               	btfss	stkptr,7,c	;volatile
  1249  001F82  D003               	goto	l2502
  1250  001F84  ECEB  F010         	call	_STKFULtask	;wreg free
  1251  001F88  D003               	goto	l332
  1252  001F8A                     l2502:
  1253                           
  1254                           ;sumovore.c: 297: else RESETtask();
  1255  001F8A  EC08  F011         	call	_RESETtask	;wreg free
  1256  001F8E  D000               	goto	l332
  1257  001F90                     l332:
  1258  001F90  0012               	return		;funcret
  1259  001F92                     __end_of_reset_codes:
  1260                           	opt stack 0
  1261                           stkptr	equ	0xFFC
  1262                           intcon	equ	0xFF2
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           status	equ	0xFD8
  1266                           
  1267 ;; *************** function _isWDTTO *****************
  1268 ;; Defined at:
  1269 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      unsigned char 
  1276 ;; Registers used:
  1277 ;;		wreg
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_reset_codes
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text5
  1298  0020E8                     __ptext5:
  1299                           	opt stack 0
  1300  0020E8                     _isWDTTO:
  1301                           	opt stack 27
  1302                           
  1303                           ;incstack = 0
  1304  0020E8  A2D0               	btfss	4048,1,c	;volatile
  1305  0020EA  D00E               	goto	l1508
  1306  0020EC  A4D0               	btfss	4048,2,c	;volatile
  1307  0020EE  D00A               	goto	l1504
  1308  0020F0  A0D0               	btfss	4048,0,c	;volatile
  1309  0020F2  D006               	goto	l1500
  1310  0020F4  A6D0               	btfss	4048,3,c	;volatile
  1311  0020F6  D002               	goto	l1496
  1312  0020F8  D003               	goto	l1500
  1313  0020FA  D008               	goto	l618
  1314  0020FC                     l1496:
  1315  0020FC  0E01               	movlw	1
  1316  0020FE  D006               	goto	l618
  1317  002100                     l1500:
  1318  002100  0E00               	movlw	0
  1319  002102  D004               	goto	l618
  1320  002104                     l1504:
  1321  002104  0E00               	movlw	0
  1322  002106  D002               	goto	l618
  1323  002108                     l1508:
  1324  002108  0E00               	movlw	0
  1325  00210A  D000               	goto	l618
  1326  00210C                     l618:
  1327  00210C  0012               	return		;funcret
  1328  00210E                     __end_of_isWDTTO:
  1329                           	opt stack 0
  1330                           stkptr	equ	0xFFC
  1331                           intcon	equ	0xFF2
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function _isPOR *****************
  1337 ;; Defined at:
  1338 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      unsigned char 
  1345 ;; Registers used:
  1346 ;;		wreg
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_reset_codes
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text6
  1367  00210E                     __ptext6:
  1368                           	opt stack 0
  1369  00210E                     _isPOR:
  1370                           	opt stack 27
  1371                           
  1372                           ;incstack = 0
  1373  00210E  B2D0               	btfsc	4048,1,c	;volatile
  1374  002110  D00E               	goto	l1416
  1375  002112  A4D0               	btfss	4048,2,c	;volatile
  1376  002114  D00A               	goto	l1412
  1377  002116  B0D0               	btfsc	4048,0,c	;volatile
  1378  002118  D006               	goto	l1408
  1379  00211A  B6D0               	btfsc	4048,3,c	;volatile
  1380  00211C  D002               	goto	l1404
  1381  00211E  D003               	goto	l1408
  1382  002120  D008               	goto	l609
  1383  002122                     l1404:
  1384  002122  0E01               	movlw	1
  1385  002124  D006               	goto	l609
  1386  002126                     l1408:
  1387  002126  0E00               	movlw	0
  1388  002128  D004               	goto	l609
  1389  00212A                     l1412:
  1390  00212A  0E00               	movlw	0
  1391  00212C  D002               	goto	l609
  1392  00212E                     l1416:
  1393  00212E  0E00               	movlw	0
  1394  002130  D000               	goto	l609
  1395  002132                     l609:
  1396  002132  0012               	return		;funcret
  1397  002134                     __end_of_isPOR:
  1398                           	opt stack 0
  1399                           stkptr	equ	0xFFC
  1400                           intcon	equ	0xFF2
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _isBOR *****************
  1406 ;; Defined at:
  1407 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_reset_codes
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text7
  1436  002260                     __ptext7:
  1437                           	opt stack 0
  1438  002260                     _isBOR:
  1439                           	opt stack 27
  1440                           
  1441                           ;incstack = 0
  1442  002260  B0D0               	btfsc	4048,0,c	;volatile
  1443  002262  D006               	goto	l1464
  1444  002264  B2D0               	btfsc	4048,1,c	;volatile
  1445  002266  D002               	goto	l1460
  1446  002268  D003               	goto	l1464
  1447  00226A  D004               	goto	l600
  1448  00226C                     l1460:
  1449  00226C  0E01               	movlw	1
  1450  00226E  D002               	goto	l600
  1451  002270                     l1464:
  1452  002270  0E00               	movlw	0
  1453  002272  D000               	goto	l600
  1454  002274                     l600:
  1455  002274  0012               	return		;funcret
  1456  002276                     __end_of_isBOR:
  1457                           	opt stack 0
  1458                           stkptr	equ	0xFFC
  1459                           intcon	equ	0xFF2
  1460                           postinc0	equ	0xFEE
  1461                           wreg	equ	0xFE8
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function _WDTtask *****************
  1465 ;; Defined at:
  1466 ;;		line 370 in file "../Robot Files/sumovore.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;		None               void
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    3
  1487 ;; This function calls:
  1488 ;;		_gtrap
  1489 ;;		_printf
  1490 ;; This function is called by:
  1491 ;;		_reset_codes
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text8
  1496  0021F4                     __ptext8:
  1497                           	opt stack 0
  1498  0021F4                     _WDTtask:
  1499                           	opt stack 25
  1500                           
  1501                           ;sumovore.c: 372: printf("<WDT TO>");
  1502                           
  1503                           ;incstack = 0
  1504  0021F4  0E5D               	movlw	low STR_4
  1505  0021F6  6E0F               	movwf	printf@f,c
  1506  0021F8  0E10               	movlw	high STR_4
  1507  0021FA  6E10               	movwf	printf@f+1,c
  1508  0021FC  EC1F  F010         	call	_printf	;wreg free
  1509                           
  1510                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1511  002200  9083               	bcf	3971,0,c	;volatile
  1512                           
  1513                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1514  002202  8283               	bsf	3971,1,c	;volatile
  1515                           
  1516                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1517  002204  9483               	bcf	3971,2,c	;volatile
  1518                           
  1519                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1520  002206  8683               	bsf	3971,3,c	;volatile
  1521                           
  1522                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1523  002208  8883               	bsf	3971,4,c	;volatile
  1524                           
  1525                           ;sumovore.c: 378: gtrap();
  1526  00220A  ECF4  F00E         	call	_gtrap	;wreg free
  1527  00220E  0012               	return		;funcret
  1528  002210                     __end_of_WDTtask:
  1529                           	opt stack 0
  1530                           stkptr	equ	0xFFC
  1531                           intcon	equ	0xFF2
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _STKFULtask *****************
  1537 ;; Defined at:
  1538 ;;		line 389 in file "../Robot Files/sumovore.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;		None               void
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    3
  1559 ;; This function calls:
  1560 ;;		_gtrap
  1561 ;;		_printf
  1562 ;; This function is called by:
  1563 ;;		_reset_codes
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text9
  1568  0021D6                     __ptext9:
  1569                           	opt stack 0
  1570  0021D6                     _STKFULtask:
  1571                           	opt stack 25
  1572                           
  1573                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1574                           
  1575                           ;incstack = 0
  1576  0021D6  9EFC               	bcf	stkptr,7,c	;volatile
  1577                           
  1578                           ;sumovore.c: 393: printf("<STKFUL>");
  1579  0021D8  0E54               	movlw	low STR_5
  1580  0021DA  6E0F               	movwf	printf@f,c
  1581  0021DC  0E10               	movlw	high STR_5
  1582  0021DE  6E10               	movwf	printf@f+1,c
  1583  0021E0  EC1F  F010         	call	_printf	;wreg free
  1584                           
  1585                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1586  0021E4  9083               	bcf	3971,0,c	;volatile
  1587                           
  1588                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1589  0021E6  8283               	bsf	3971,1,c	;volatile
  1590                           
  1591                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1592  0021E8  9483               	bcf	3971,2,c	;volatile
  1593                           
  1594                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1595  0021EA  8683               	bsf	3971,3,c	;volatile
  1596                           
  1597                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1598  0021EC  9883               	bcf	3971,4,c	;volatile
  1599                           
  1600                           ;sumovore.c: 399: gtrap();
  1601  0021EE  ECF4  F00E         	call	_gtrap	;wreg free
  1602  0021F2  0012               	return		;funcret
  1603  0021F4                     __end_of_STKFULtask:
  1604                           	opt stack 0
  1605                           stkptr	equ	0xFFC
  1606                           intcon	equ	0xFF2
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _RESETtask *****************
  1612 ;; Defined at:
  1613 ;;		line 405 in file "../Robot Files/sumovore.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		_gtrap
  1636 ;;		_printf
  1637 ;; This function is called by:
  1638 ;;		_reset_codes
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text10
  1643  002210                     __ptext10:
  1644                           	opt stack 0
  1645  002210                     _RESETtask:
  1646                           	opt stack 25
  1647                           
  1648                           ;sumovore.c: 408: printf(" <reset> ");
  1649                           
  1650                           ;incstack = 0
  1651  002210  0E4A               	movlw	low STR_6
  1652  002212  6E0F               	movwf	printf@f,c
  1653  002214  0E10               	movlw	high STR_6
  1654  002216  6E10               	movwf	printf@f+1,c
  1655  002218  EC1F  F010         	call	_printf	;wreg free
  1656                           
  1657                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1658  00221C  9083               	bcf	3971,0,c	;volatile
  1659                           
  1660                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1661  00221E  8283               	bsf	3971,1,c	;volatile
  1662                           
  1663                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1664  002220  9483               	bcf	3971,2,c	;volatile
  1665                           
  1666                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1667  002222  9683               	bcf	3971,3,c	;volatile
  1668                           
  1669                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1670  002224  9883               	bcf	3971,4,c	;volatile
  1671                           
  1672                           ;sumovore.c: 414: gtrap();
  1673  002226  ECF4  F00E         	call	_gtrap	;wreg free
  1674  00222A  0012               	return		;funcret
  1675  00222C                     __end_of_RESETtask:
  1676                           	opt stack 0
  1677                           stkptr	equ	0xFFC
  1678                           intcon	equ	0xFF2
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function _PORtask *****************
  1684 ;; Defined at:
  1685 ;;		line 307 in file "../Robot Files/sumovore.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  count2          4   23[COMRAM] unsigned long 
  1690 ;;  count1          4   19[COMRAM] unsigned long 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;		None               void
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;Total ram usage:        8 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    3
  1707 ;; This function calls:
  1708 ;;		_StatusReset
  1709 ;;		_printf
  1710 ;; This function is called by:
  1711 ;;		_reset_codes
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text11
  1716  00198A                     __ptext11:
  1717                           	opt stack 0
  1718  00198A                     _PORtask:
  1719                           	opt stack 25
  1720                           
  1721                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1722                           
  1723                           ;incstack = 0
  1724  00198A  0E00               	movlw	0
  1725  00198C  6E14               	movwf	PORtask@count1,c
  1726  00198E  0E00               	movlw	0
  1727  001990  6E15               	movwf	PORtask@count1+1,c
  1728  001992  0E00               	movlw	0
  1729  001994  6E16               	movwf	PORtask@count1+2,c
  1730  001996  0E00               	movlw	0
  1731  001998  6E17               	movwf	PORtask@count1+3,c
  1732  00199A  0E00               	movlw	0
  1733  00199C  6E18               	movwf	PORtask@count2,c
  1734  00199E  0E00               	movlw	0
  1735  0019A0  6E19               	movwf	PORtask@count2+1,c
  1736  0019A2  0E00               	movlw	0
  1737  0019A4  6E1A               	movwf	PORtask@count2+2,c
  1738  0019A6  0E00               	movlw	0
  1739  0019A8  6E1B               	movwf	PORtask@count2+3,c
  1740                           
  1741                           ;sumovore.c: 310: StatusReset();
  1742  0019AA  EC83  F011         	call	_StatusReset	;wreg free
  1743                           
  1744                           ;sumovore.c: 312: printf("<POR>");
  1745  0019AE  0E73               	movlw	low STR_2
  1746  0019B0  6E0F               	movwf	printf@f,c
  1747  0019B2  0E10               	movlw	high STR_2
  1748  0019B4  6E10               	movwf	printf@f+1,c
  1749  0019B6  EC1F  F010         	call	_printf	;wreg free
  1750                           
  1751                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1752  0019BA  9083               	bcf	3971,0,c	;volatile
  1753                           
  1754                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1755  0019BC  8283               	bsf	3971,1,c	;volatile
  1756                           
  1757                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1758  0019BE  8483               	bsf	3971,2,c	;volatile
  1759                           
  1760                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1761  0019C0  8683               	bsf	3971,3,c	;volatile
  1762                           
  1763                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1764  0019C2  8883               	bsf	3971,4,c	;volatile
  1765                           
  1766                           ;sumovore.c: 318: while(count1<10u)
  1767  0019C4  D02D               	goto	l335
  1768  0019C6                     l336:
  1769  0019C6  0004               	clrwdt		;# 
  1770                           
  1771                           ;sumovore.c: 321: if (count2==30000u)
  1772  0019C8  0E30               	movlw	48
  1773  0019CA  1818               	xorwf	PORtask@count2,w,c
  1774  0019CC  E117               	bnz	l2330
  1775  0019CE  0E75               	movlw	117
  1776  0019D0  1819               	xorwf	PORtask@count2+1,w,c
  1777  0019D2  101A               	iorwf	PORtask@count2+2,w,c
  1778  0019D4  101B               	iorwf	PORtask@count2+3,w,c
  1779  0019D6  A4D8               	btfss	status,2,c
  1780  0019D8  D011               	goto	l2330
  1781                           
  1782                           ;sumovore.c: 322: {
  1783                           ;sumovore.c: 323: count2=0;
  1784  0019DA  0E00               	movlw	0
  1785  0019DC  6E18               	movwf	PORtask@count2,c
  1786  0019DE  0E00               	movlw	0
  1787  0019E0  6E19               	movwf	PORtask@count2+1,c
  1788  0019E2  0E00               	movlw	0
  1789  0019E4  6E1A               	movwf	PORtask@count2+2,c
  1790  0019E6  0E00               	movlw	0
  1791  0019E8  6E1B               	movwf	PORtask@count2+3,c
  1792                           
  1793                           ;sumovore.c: 324: count1++;
  1794  0019EA  0E01               	movlw	1
  1795  0019EC  2614               	addwf	PORtask@count1,f,c
  1796  0019EE  0E00               	movlw	0
  1797  0019F0  2215               	addwfc	PORtask@count1+1,f,c
  1798  0019F2  2216               	addwfc	PORtask@count1+2,f,c
  1799  0019F4  2217               	addwfc	PORtask@count1+3,f,c
  1800                           
  1801                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1802  0019F6  9083               	bcf	3971,0,c	;volatile
  1803                           
  1804                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1805  0019F8  8283               	bsf	3971,1,c	;volatile
  1806                           
  1807                           ;sumovore.c: 327: }
  1808  0019FA  D00C               	goto	l2334
  1809  0019FC                     l2330:
  1810                           
  1811                           ;sumovore.c: 328: else if (count2==15000u)
  1812  0019FC  0E98               	movlw	152
  1813  0019FE  1818               	xorwf	PORtask@count2,w,c
  1814  001A00  E109               	bnz	l2334
  1815  001A02  0E3A               	movlw	58
  1816  001A04  1819               	xorwf	PORtask@count2+1,w,c
  1817  001A06  101A               	iorwf	PORtask@count2+2,w,c
  1818  001A08  101B               	iorwf	PORtask@count2+3,w,c
  1819  001A0A  A4D8               	btfss	status,2,c
  1820  001A0C  D003               	goto	l2334
  1821                           
  1822                           ;sumovore.c: 329: {
  1823                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1824  001A0E  8083               	bsf	3971,0,c	;volatile
  1825                           
  1826                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1827  001A10  9283               	bcf	3971,1,c	;volatile
  1828  001A12  D000               	goto	l2334
  1829  001A14                     l2334:
  1830                           
  1831                           ;sumovore.c: 332: }
  1832                           ;sumovore.c: 333: count2++;
  1833  001A14  0E01               	movlw	1
  1834  001A16  2618               	addwf	PORtask@count2,f,c
  1835  001A18  0E00               	movlw	0
  1836  001A1A  2219               	addwfc	PORtask@count2+1,f,c
  1837  001A1C  221A               	addwfc	PORtask@count2+2,f,c
  1838  001A1E  221B               	addwfc	PORtask@count2+3,f,c
  1839  001A20                     l335:
  1840  001A20  5017               	movf	PORtask@count1+3,w,c
  1841  001A22  1016               	iorwf	PORtask@count1+2,w,c
  1842  001A24  1015               	iorwf	PORtask@count1+1,w,c
  1843  001A26  E106               	bnz	l341
  1844  001A28  0E0A               	movlw	10
  1845  001A2A  5C14               	subwf	PORtask@count1,w,c
  1846  001A2C  B0D8               	btfsc	status,0,c
  1847  001A2E  D002               	goto	l341
  1848  001A30  D7CA               	goto	l336
  1849  001A32  D000               	goto	l341
  1850  001A34                     l341:
  1851  001A34  0012               	return		;funcret
  1852  001A36                     __end_of_PORtask:
  1853                           	opt stack 0
  1854                           stkptr	equ	0xFFC
  1855                           intcon	equ	0xFF2
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _BORtask *****************
  1861 ;; Defined at:
  1862 ;;		line 349 in file "../Robot Files/sumovore.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;		None               void
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    3
  1883 ;; This function calls:
  1884 ;;		_StatusReset
  1885 ;;		_gtrap
  1886 ;;		_printf
  1887 ;; This function is called by:
  1888 ;;		_reset_codes
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text12
  1893  002156                     __ptext12:
  1894                           	opt stack 0
  1895  002156                     _BORtask:
  1896                           	opt stack 25
  1897                           
  1898                           ;sumovore.c: 351: StatusReset();
  1899                           
  1900                           ;incstack = 0
  1901  002156  EC83  F011         	call	_StatusReset	;wreg free
  1902                           
  1903                           ;sumovore.c: 353: printf("<BOR>");
  1904  00215A  0E6D               	movlw	low STR_3
  1905  00215C  6E0F               	movwf	printf@f,c
  1906  00215E  0E10               	movlw	high STR_3
  1907  002160  6E10               	movwf	printf@f+1,c
  1908  002162  EC1F  F010         	call	_printf	;wreg free
  1909                           
  1910                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1911  002166  8083               	bsf	3971,0,c	;volatile
  1912                           
  1913                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1914  002168  8283               	bsf	3971,1,c	;volatile
  1915                           
  1916                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1917  00216A  8483               	bsf	3971,2,c	;volatile
  1918                           
  1919                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1920  00216C  8683               	bsf	3971,3,c	;volatile
  1921                           
  1922                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1923  00216E  9883               	bcf	3971,4,c	;volatile
  1924                           
  1925                           ;sumovore.c: 359: gtrap();
  1926  002170  ECF4  F00E         	call	_gtrap	;wreg free
  1927  002174  0012               	return		;funcret
  1928  002176                     __end_of_BORtask:
  1929                           	opt stack 0
  1930                           stkptr	equ	0xFFC
  1931                           intcon	equ	0xFF2
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function _StatusReset *****************
  1937 ;; Defined at:
  1938 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		None
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_PORtask
  1963 ;;		_BORtask
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text13
  1968  002306                     __ptext13:
  1969                           	opt stack 0
  1970  002306                     _StatusReset:
  1971                           	opt stack 26
  1972                           
  1973                           ;incstack = 0
  1974  002306  82D0               	bsf	4048,1,c	;volatile
  1975  002308  80D0               	bsf	4048,0,c	;volatile
  1976  00230A  0012               	return		;funcret
  1977  00230C                     __end_of_StatusReset:
  1978                           	opt stack 0
  1979                           stkptr	equ	0xFFC
  1980                           intcon	equ	0xFF2
  1981                           postinc0	equ	0xFEE
  1982                           wreg	equ	0xFE8
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _openPORTE *****************
  1986 ;; Defined at:
  1987 ;;		line 178 in file "../Robot Files/sumovore.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;		None               void
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_initialization
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text14
  2016  00230C                     __ptext14:
  2017                           	opt stack 0
  2018  00230C                     _openPORTE:
  2019                           	opt stack 28
  2020                           
  2021                           ;sumovore.c: 180: TRISE = 0b000;
  2022                           
  2023                           ;incstack = 0
  2024  00230C  0E00               	movlw	0
  2025  00230E  6E96               	movwf	3990,c	;volatile
  2026  002310  0012               	return		;funcret
  2027  002312                     __end_of_openPORTE:
  2028                           	opt stack 0
  2029                           stkptr	equ	0xFFC
  2030                           intcon	equ	0xFF2
  2031                           postinc0	equ	0xFEE
  2032                           wreg	equ	0xFE8
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _openPORTCforUSART *****************
  2036 ;; Defined at:
  2037 ;;		line 124 in file "../Robot Files/sumovore.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;		None               void
  2044 ;; Registers used:
  2045 ;;		None
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    1
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_initialization
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text15
  2066  002312                     __ptext15:
  2067                           	opt stack 0
  2068  002312                     _openPORTCforUSART:
  2069                           	opt stack 28
  2070                           
  2071                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2072                           
  2073                           ;incstack = 0
  2074  002312  9C94               	bcf	3988,6,c	;volatile
  2075                           
  2076                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2077  002314  8E94               	bsf	3988,7,c	;volatile
  2078  002316  0012               	return		;funcret
  2079  002318                     __end_of_openPORTCforUSART:
  2080                           	opt stack 0
  2081                           stkptr	equ	0xFFC
  2082                           intcon	equ	0xFF2
  2083                           postinc0	equ	0xFEE
  2084                           wreg	equ	0xFE8
  2085                           status	equ	0xFD8
  2086                           
  2087 ;; *************** function _openPORTCforPWM *****************
  2088 ;; Defined at:
  2089 ;;		line 133 in file "../Robot Files/sumovore.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;		None               void
  2096 ;; Registers used:
  2097 ;;		None
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_initialization
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text16
  2118  0022E4                     __ptext16:
  2119                           	opt stack 0
  2120  0022E4                     _openPORTCforPWM:
  2121                           	opt stack 28
  2122                           
  2123                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2124                           
  2125                           ;incstack = 0
  2126  0022E4  9094               	bcf	3988,0,c	;volatile
  2127                           
  2128                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2129  0022E6  9294               	bcf	3988,1,c	;volatile
  2130                           
  2131                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2132  0022E8  9494               	bcf	3988,2,c	;volatile
  2133                           
  2134                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2135  0022EA  9694               	bcf	3988,3,c	;volatile
  2136                           
  2137                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2138  0022EC  9894               	bcf	3988,4,c	;volatile
  2139                           
  2140                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2141  0022EE  9A94               	bcf	3988,5,c	;volatile
  2142  0022F0  0012               	return		;funcret
  2143  0022F2                     __end_of_openPORTCforPWM:
  2144                           	opt stack 0
  2145                           stkptr	equ	0xFFC
  2146                           intcon	equ	0xFF2
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _openPORTB *****************
  2152 ;; Defined at:
  2153 ;;		line 158 in file "../Robot Files/sumovore.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, status,2
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_initialization
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text17
  2182  002318                     __ptext17:
  2183                           	opt stack 0
  2184  002318                     _openPORTB:
  2185                           	opt stack 28
  2186                           
  2187                           ;sumovore.c: 160: TRISB = 0B11000000;
  2188                           
  2189                           ;incstack = 0
  2190  002318  0EC0               	movlw	192
  2191  00231A  6E93               	movwf	3987,c	;volatile
  2192  00231C  0012               	return		;funcret
  2193  00231E                     __end_of_openPORTB:
  2194                           	opt stack 0
  2195                           stkptr	equ	0xFFC
  2196                           intcon	equ	0xFF2
  2197                           postinc0	equ	0xFEE
  2198                           wreg	equ	0xFE8
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _openPORTA *****************
  2202 ;; Defined at:
  2203 ;;		line 147 in file "../Robot Files/sumovore.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, status,2
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_initialization
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text18
  2232  00231E                     __ptext18:
  2233                           	opt stack 0
  2234  00231E                     _openPORTA:
  2235                           	opt stack 28
  2236                           
  2237                           ;sumovore.c: 149: TRISA = 0B11101111;
  2238                           
  2239                           ;incstack = 0
  2240  00231E  0EEF               	movlw	239
  2241  002320  6E92               	movwf	3986,c	;volatile
  2242  002322  0012               	return		;funcret
  2243  002324                     __end_of_openPORTA:
  2244                           	opt stack 0
  2245                           stkptr	equ	0xFFC
  2246                           intcon	equ	0xFF2
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _openLVD *****************
  2252 ;; Defined at:
  2253 ;;		line 428 in file "../Robot Files/sumovore.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;		None               void
  2260 ;; Registers used:
  2261 ;;		None
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_initialization
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text19
  2282  002248                     __ptext19:
  2283                           	opt stack 0
  2284  002248                     _openLVD:
  2285                           	opt stack 28
  2286                           
  2287                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2288                           
  2289                           ;incstack = 0
  2290  002248  8ED0               	bsf	4048,7,c	;volatile
  2291                           
  2292                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2293  00224A  88D2               	bsf	4050,4,c	;volatile
  2294                           
  2295                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2296  00224C  84A2               	bsf	4002,2,c	;volatile
  2297                           
  2298                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2299  00224E  9ED2               	bcf	4050,7,c	;volatile
  2300                           
  2301                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2302  002250  86D2               	bsf	4050,3,c	;volatile
  2303                           
  2304                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2305  002252  84D2               	bsf	4050,2,c	;volatile
  2306                           
  2307                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2308  002254  82D2               	bsf	4050,1,c	;volatile
  2309                           
  2310                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2311  002256  90D2               	bcf	4050,0,c	;volatile
  2312                           
  2313                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2314  002258  94A1               	bcf	4001,2,c	;volatile
  2315                           
  2316                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2317  00225A  84A0               	bsf	4000,2,c	;volatile
  2318                           
  2319                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2320  00225C  8EF2               	bsf	intcon,7,c	;volatile
  2321  00225E  0012               	return		;funcret
  2322  002260                     __end_of_openLVD:
  2323                           	opt stack 0
  2324                           stkptr	equ	0xFFC
  2325                           intcon	equ	0xFF2
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _OpenUSART *****************
  2331 ;; Defined at:
  2332 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  config          1    wreg     unsigned char 
  2335 ;;  spbrg           2   14[COMRAM] unsigned int 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  config          1   16[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;		None               void
  2340 ;; Registers used:
  2341 ;;		wreg, status,2
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        3 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_initialization
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text20
  2362  001D78                     __ptext20:
  2363                           	opt stack 0
  2364  001D78                     _OpenUSART:
  2365                           	opt stack 28
  2366                           
  2367                           ;incstack = 0
  2368                           ;OpenUSART@config stored from wreg
  2369  001D78  6E11               	movwf	OpenUSART@config,c
  2370  001D7A  0E00               	movlw	0
  2371  001D7C  6EAC               	movwf	4012,c	;volatile
  2372  001D7E  0E00               	movlw	0
  2373  001D80  6EAB               	movwf	4011,c	;volatile
  2374  001D82  A011               	btfss	OpenUSART@config,0,c
  2375  001D84  D002               	goto	l2444
  2376  001D86  88AC               	bsf	4012,4,c	;volatile
  2377  001D88  D000               	goto	l2444
  2378  001D8A                     l2444:
  2379  001D8A  A211               	btfss	OpenUSART@config,1,c
  2380  001D8C  D003               	goto	l2448
  2381  001D8E  8CAC               	bsf	4012,6,c	;volatile
  2382  001D90  8CAB               	bsf	4011,6,c	;volatile
  2383  001D92  D000               	goto	l2448
  2384  001D94                     l2448:
  2385  001D94  A411               	btfss	OpenUSART@config,2,c
  2386  001D96  D002               	goto	l2452
  2387  001D98  8EAC               	bsf	4012,7,c	;volatile
  2388  001D9A  D000               	goto	l2452
  2389  001D9C                     l2452:
  2390  001D9C  A611               	btfss	OpenUSART@config,3,c
  2391  001D9E  D002               	goto	l584
  2392  001DA0  88AB               	bsf	4011,4,c	;volatile
  2393  001DA2  D002               	goto	l2456
  2394  001DA4                     l584:
  2395  001DA4  8AAB               	bsf	4011,5,c	;volatile
  2396  001DA6  D000               	goto	l2456
  2397  001DA8                     l2456:
  2398  001DA8  B811               	btfsc	OpenUSART@config,4,c
  2399  001DAA  84AC               	bsf	4012,2,c	;volatile
  2400  001DAC  989E               	bcf	3998,4,c	;volatile
  2401  001DAE  AA11               	btfss	OpenUSART@config,5,c
  2402  001DB0  D002               	goto	l2464
  2403  001DB2  86AB               	bsf	4011,3,c	;volatile
  2404  001DB4  D000               	goto	l2464
  2405  001DB6                     l2464:
  2406  001DB6  AC11               	btfss	OpenUSART@config,6,c
  2407  001DB8  D002               	goto	l588
  2408  001DBA  8A9D               	bsf	3997,5,c	;volatile
  2409  001DBC  D001               	goto	l589
  2410  001DBE                     l588:
  2411  001DBE  9A9D               	bcf	3997,5,c	;volatile
  2412  001DC0                     l589:
  2413  001DC0  9A9E               	bcf	3998,5,c	;volatile
  2414  001DC2  AE11               	btfss	OpenUSART@config,7,c
  2415  001DC4  D002               	goto	l590
  2416  001DC6  889D               	bsf	3997,4,c	;volatile
  2417  001DC8  D001               	goto	l591
  2418  001DCA                     l590:
  2419  001DCA  989D               	bcf	3997,4,c	;volatile
  2420  001DCC                     l591:
  2421  001DCC  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2422  001DD0  5010               	movf	OpenUSART@spbrg+1,w,c
  2423  001DD2  6EB0               	movwf	4016,c	;volatile
  2424  001DD4  8AAC               	bsf	4012,5,c	;volatile
  2425  001DD6  8EAB               	bsf	4011,7,c	;volatile
  2426  001DD8  9C94               	bcf	3988,6,c	;volatile
  2427  001DDA  8E94               	bsf	3988,7,c	;volatile
  2428  001DDC  B8AC               	btfsc	4012,4,c	;volatile
  2429  001DDE  BEAC               	btfsc	4012,7,c	;volatile
  2430  001DE0  D002               	goto	l593
  2431  001DE2  8C94               	bsf	3988,6,c	;volatile
  2432  001DE4  D000               	goto	l593
  2433  001DE6                     l593:
  2434  001DE6  0012               	return		;funcret
  2435  001DE8                     __end_of_OpenUSART:
  2436                           	opt stack 0
  2437                           stkptr	equ	0xFFC
  2438                           intcon	equ	0xFF2
  2439                           postinc0	equ	0xFEE
  2440                           wreg	equ	0xFE8
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function _OpenTimer2 *****************
  2444 ;; Defined at:
  2445 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  config          1    wreg     unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  config          1   14[COMRAM] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:        1 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_initialization
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text21
  2474  00222C                     __ptext21:
  2475                           	opt stack 0
  2476  00222C                     _OpenTimer2:
  2477                           	opt stack 28
  2478                           
  2479                           ;incstack = 0
  2480                           ;OpenTimer2@config stored from wreg
  2481  00222C  6E0F               	movwf	OpenTimer2@config,c
  2482  00222E  500F               	movf	OpenTimer2@config,w,c
  2483  002230  0BFB               	andlw	251
  2484  002232  6ECA               	movwf	4042,c	;volatile
  2485  002234  0E00               	movlw	0
  2486  002236  6ECC               	movwf	4044,c	;volatile
  2487  002238  929E               	bcf	3998,1,c	;volatile
  2488  00223A  AE0F               	btfss	OpenTimer2@config,7,c
  2489  00223C  D002               	goto	l558
  2490  00223E  829D               	bsf	3997,1,c	;volatile
  2491  002240  D001               	goto	l559
  2492  002242                     l558:
  2493  002242  929D               	bcf	3997,1,c	;volatile
  2494  002244                     l559:
  2495  002244  84CA               	bsf	4042,2,c	;volatile
  2496  002246  0012               	return		;funcret
  2497  002248                     __end_of_OpenTimer2:
  2498                           	opt stack 0
  2499                           stkptr	equ	0xFFC
  2500                           intcon	equ	0xFF2
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _OpenPWM2 *****************
  2506 ;; Defined at:
  2507 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  period          1    wreg     unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  period          1   14[COMRAM] unsigned char 
  2512 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2513 ;;  pmmode          1    0        unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;		None               void
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;Total ram usage:        2 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_initialization
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text22
  2538  002006                     __ptext22:
  2539                           	opt stack 0
  2540  002006                     _OpenPWM2:
  2541                           	opt stack 28
  2542                           
  2543                           ;incstack = 0
  2544                           ;OpenPWM2@period stored from wreg
  2545  002006  6E0F               	movwf	OpenPWM2@period,c
  2546  002008  0E0C               	movlw	12
  2547  00200A  6EBA               	movwf	4026,c	;volatile
  2548  00200C  0E05               	movlw	5
  2549  00200E  6EF6               	movwf	tblptrl,c
  2550  002010                     	if	1	;There is more than 1 active tblptr byte
  2551  002010  0E00               	movlw	0
  2552  002012  6EF7               	movwf	tblptrh,c
  2553  002014                     	endif
  2554  002014                     	if	1	;There are 3 active tblptr bytes
  2555  002014  0E30               	movlw	48
  2556  002016  6EF8               	movwf	tblptru,c
  2557  002018                     	endif
  2558  002018  0008               	tblrd		*
  2559  00201A  0100               	movlb	12288	; () banked
  2560  00201C  A0F5               	btfss	tablat,0,c
  2561  00201E  D002               	goto	l1728
  2562                           
  2563                           ; BSR set to: 0
  2564  002020  6810               	setf	OpenPWM2@ccp2mx,c
  2565  002022  D002               	goto	l506
  2566  002024                     l1728:
  2567                           
  2568                           ; BSR set to: 0
  2569  002024  0E00               	movlw	0
  2570  002026  6E10               	movwf	OpenPWM2@ccp2mx,c
  2571  002028                     l506:
  2572                           
  2573                           ; BSR set to: 0
  2574  002028  5010               	movf	OpenPWM2@ccp2mx,w,c
  2575  00202A  B4D8               	btfsc	status,2,c
  2576  00202C  D002               	goto	l507
  2577                           
  2578                           ; BSR set to: 0
  2579  00202E  9294               	bcf	3988,1,c	;volatile
  2580  002030  D001               	goto	l508
  2581  002032                     l507:
  2582                           
  2583                           ; BSR set to: 0
  2584  002032  9693               	bcf	3987,3,c	;volatile
  2585  002034                     l508:
  2586                           
  2587                           ; BSR set to: 0
  2588  002034  94CA               	bcf	4042,2,c	;volatile
  2589  002036  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2590  00203A  84CA               	bsf	4042,2,c	;volatile
  2591                           
  2592                           ; BSR set to: 0
  2593  00203C  0012               	return		;funcret
  2594  00203E                     __end_of_OpenPWM2:
  2595                           	opt stack 0
  2596                           stkptr	equ	0xFFC
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           intcon	equ	0xFF2
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _OpenPWM1 *****************
  2607 ;; Defined at:
  2608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  period          1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  period          1   14[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    1
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_initialization
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text23
  2637  00229E                     __ptext23:
  2638                           	opt stack 0
  2639  00229E                     _OpenPWM1:
  2640                           	opt stack 28
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;incstack = 0
  2644                           ;OpenPWM1@period stored from wreg
  2645  00229E  6E0F               	movwf	OpenPWM1@period,c
  2646  0022A0  0E0C               	movlw	12
  2647  0022A2  12BD               	iorwf	4029,f,c	;volatile
  2648  0022A4  9494               	bcf	3988,2,c	;volatile
  2649  0022A6  94CA               	bcf	4042,2,c	;volatile
  2650  0022A8  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2651  0022AC  84CA               	bsf	4042,2,c	;volatile
  2652  0022AE  0012               	return		;funcret
  2653  0022B0                     __end_of_OpenPWM1:
  2654                           	opt stack 0
  2655                           stkptr	equ	0xFFC
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           intcon	equ	0xFF2
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _OpenADC *****************
  2666 ;; Defined at:
  2667 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  config          1    wreg     unsigned char 
  2670 ;;  config2         1   14[COMRAM] unsigned char 
  2671 ;;  portconfig      1   15[COMRAM] unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  config          1   18[COMRAM] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;		None               void
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        5 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_initialization
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text24
  2698  001E4A                     __ptext24:
  2699                           	opt stack 0
  2700  001E4A                     _OpenADC:
  2701                           	opt stack 28
  2702                           
  2703                           ;incstack = 0
  2704                           ;OpenADC@config stored from wreg
  2705  001E4A  6E13               	movwf	OpenADC@config,c
  2706  001E4C  0E00               	movlw	0
  2707  001E4E  6EC2               	movwf	4034,c	;volatile
  2708  001E50  0E00               	movlw	0
  2709  001E52  6EC0               	movwf	4032,c	;volatile
  2710  001E54  90D8               	bcf	status,0,c
  2711  001E56  300F               	rrcf	OpenADC@config2,w,c
  2712  001E58  0B3C               	andlw	60
  2713  001E5A  6EC2               	movwf	4034,c	;volatile
  2714  001E5C  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2715  001E60  3A11               	swapf	??_OpenADC,f,c
  2716  001E62  0EF0               	movlw	240
  2717  001E64  1611               	andwf	??_OpenADC,f,c
  2718  001E66  0E30               	movlw	48
  2719  001E68  1611               	andwf	??_OpenADC,f,c
  2720  001E6A  5010               	movf	OpenADC@portconfig,w,c
  2721  001E6C  0B0F               	andlw	15
  2722  001E6E  1011               	iorwf	??_OpenADC,w,c
  2723  001E70  6EC1               	movwf	4033,c	;volatile
  2724  001E72  C013  F011         	movff	OpenADC@config,??_OpenADC
  2725  001E76  90D8               	bcf	status,0,c
  2726  001E78  3611               	rlcf	??_OpenADC,f,c
  2727  001E7A  90D8               	bcf	status,0,c
  2728  001E7C  3611               	rlcf	??_OpenADC,f,c
  2729  001E7E  0E38               	movlw	56
  2730  001E80  1611               	andwf	??_OpenADC,f,c
  2731  001E82  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2732  001E86  3A12               	swapf	??_OpenADC+1,f,c
  2733  001E88  0E0F               	movlw	15
  2734  001E8A  1612               	andwf	??_OpenADC+1,f,c
  2735  001E8C  0E07               	movlw	7
  2736  001E8E  1612               	andwf	??_OpenADC+1,f,c
  2737  001E90  5013               	movf	OpenADC@config,w,c
  2738  001E92  0B80               	andlw	128
  2739  001E94  1012               	iorwf	??_OpenADC+1,w,c
  2740  001E96  1011               	iorwf	??_OpenADC,w,c
  2741  001E98  6EC0               	movwf	4032,c	;volatile
  2742  001E9A  AE0F               	btfss	OpenADC@config2,7,c
  2743  001E9C  D003               	goto	l458
  2744  001E9E  9C9E               	bcf	3998,6,c	;volatile
  2745  001EA0  8C9D               	bsf	3997,6,c	;volatile
  2746  001EA2  8CF2               	bsf	intcon,6,c	;volatile
  2747  001EA4                     l458:
  2748  001EA4  80C2               	bsf	4034,0,c	;volatile
  2749  001EA6  0012               	return		;funcret
  2750  001EA8                     __end_of_OpenADC:
  2751                           	opt stack 0
  2752                           stkptr	equ	0xFFC
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           intcon	equ	0xFF2
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           status	equ	0xFD8
  2761                           
  2762 ;; *************** function _PID_LineFollowing *****************
  2763 ;; Defined at:
  2764 ;;		line 113 in file "../Robot Files/main.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  error           2   52[COMRAM] PTR char 
  2767 ;;		 -> main@error(3), 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;		None               void
  2772 ;; Registers used:
  2773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        7 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    3
  2786 ;; This function calls:
  2787 ;;		_MotorControl
  2788 ;;		_ReadTimer0
  2789 ;;		___aldiv
  2790 ;;		___lwdiv
  2791 ;;		___lwmod
  2792 ;;		___wmul
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text25
  2799  00107A                     __ptext25:
  2800                           	opt stack 0
  2801  00107A                     _PID_LineFollowing:
  2802                           	opt stack 27
  2803                           
  2804                           ;main.c: 115: static int delta_velocity = 0;
  2805                           ;main.c: 117: static int D = 0;
  2806                           ;main.c: 120: if ((ReadTimer0()%I_CONSTANT) < 2)
  2807                           
  2808                           ;incstack = 0
  2809  00107A  EC58  F011         	call	_ReadTimer0	;wreg free
  2810  00107E  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  2811  001082  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  2812  001086  0E03               	movlw	low _I_CONSTANT
  2813  001088  6EF6               	movwf	tblptrl,c
  2814  00108A                     	if	1	;There is more than 1 active tblptr byte
  2815  00108A  0E10               	movlw	high _I_CONSTANT
  2816  00108C  6EF7               	movwf	tblptrh,c
  2817  00108E                     	endif
  2818  00108E                     	if	1	;There are 3 active tblptr bytes
  2819  00108E  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2820  001090  6EF8               	movwf	tblptru,c
  2821  001092                     	endif
  2822  001092  0009               	tblrd		*+
  2823  001094  CFF5 F015          	movff	tablat,___lwmod@divisor
  2824  001098  000A               	tblrd		*-
  2825  00109A  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  2826  00109E  EC82  F00F         	call	___lwmod	;wreg free
  2827  0010A2  5014               	movf	?___lwmod+1,w,c
  2828  0010A4  E17B               	bnz	l2750
  2829  0010A6  0E02               	movlw	2
  2830  0010A8  5C13               	subwf	?___lwmod,w,c
  2831  0010AA  B0D8               	btfsc	status,0,c
  2832  0010AC  D077               	goto	l2750
  2833                           
  2834                           ;main.c: 121: {
  2835                           ;main.c: 122: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=160
      +                          0 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2836  0010AE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2837  0010B0  D006               	goto	l2726
  2838  0010B2  0E40               	movlw	64
  2839  0010B4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2840  0010B6  0E06               	movlw	6
  2841  0010B8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2842  0010BA  B0D8               	btfsc	status,0,c
  2843  0010BC  D008               	goto	l2728
  2844  0010BE                     l2726:
  2845  0010BE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2846  0010C0  D006               	goto	l2728
  2847  0010C2  0E41               	movlw	65
  2848  0010C4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2849  0010C6  0E06               	movlw	6
  2850  0010C8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2851  0010CA  B0D8               	btfsc	status,0,c
  2852  0010CC  D024               	goto	l2736
  2853  0010CE                     l2728:
  2854  0010CE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2855  0010D0  D00F               	goto	l2732
  2856  0010D2  0E40               	movlw	64
  2857  0010D4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2858  0010D6  0E06               	movlw	6
  2859  0010D8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2860  0010DA  A0D8               	btfss	status,0,c
  2861  0010DC  D009               	goto	l2732
  2862  0010DE  EE20 F002          	lfsr	2,2
  2863  0010E2  5035               	movf	PID_LineFollowing@error,w,c
  2864  0010E4  26D9               	addwf	fsr2l,f,c
  2865  0010E6  5036               	movf	PID_LineFollowing@error+1,w,c
  2866  0010E8  22DA               	addwfc	fsr2h,f,c
  2867  0010EA  0E00               	movlw	0
  2868  0010EC  BEDB               	btfsc	plusw2,7,c
  2869  0010EE  D013               	goto	l2736
  2870  0010F0                     l2732:
  2871  0010F0  AE47               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2872  0010F2  D054               	goto	l2750
  2873  0010F4  0EC1               	movlw	193
  2874  0010F6  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2875  0010F8  0EF9               	movlw	249
  2876  0010FA  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2877  0010FC  B0D8               	btfsc	status,0,c
  2878  0010FE  D04E               	goto	l2750
  2879  001100  EE20 F002          	lfsr	2,2
  2880  001104  5035               	movf	PID_LineFollowing@error,w,c
  2881  001106  26D9               	addwf	fsr2l,f,c
  2882  001108  5036               	movf	PID_LineFollowing@error+1,w,c
  2883  00110A  22DA               	addwfc	fsr2h,f,c
  2884  00110C  50DF               	movf	indf2,w,c
  2885  00110E  0A80               	xorlw	128
  2886  001110  0F7F               	addlw	-129
  2887  001112  A0D8               	btfss	status,0,c
  2888  001114  D043               	goto	l2750
  2889  001116                     l2736:
  2890                           
  2891                           ;main.c: 124: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && erro
      +                          r[2]>0))
  2892  001116  BE49               	btfsc	_I+1,7,c
  2893  001118  D006               	goto	l2738
  2894  00111A  0EC9               	movlw	201
  2895  00111C  5C48               	subwf	_I,w,c
  2896  00111E  0E0C               	movlw	12
  2897  001120  5849               	subwfb	_I+1,w,c
  2898  001122  B0D8               	btfsc	status,0,c
  2899  001124  D008               	goto	l2740
  2900  001126                     l2738:
  2901  001126  AE49               	btfss	_I+1,7,c
  2902  001128  D02A               	goto	l2748
  2903  00112A  0E37               	movlw	55
  2904  00112C  5C48               	subwf	_I,w,c
  2905  00112E  0EF3               	movlw	243
  2906  001130  5849               	subwfb	_I+1,w,c
  2907  001132  B0D8               	btfsc	status,0,c
  2908  001134  D024               	goto	l2748
  2909  001136                     l2740:
  2910  001136  BE49               	btfsc	_I+1,7,c
  2911  001138  D00F               	goto	l2744
  2912  00113A  0EC9               	movlw	201
  2913  00113C  5C48               	subwf	_I,w,c
  2914  00113E  0E0C               	movlw	12
  2915  001140  5849               	subwfb	_I+1,w,c
  2916  001142  A0D8               	btfss	status,0,c
  2917  001144  D009               	goto	l2744
  2918  001146  EE20 F002          	lfsr	2,2
  2919  00114A  5035               	movf	PID_LineFollowing@error,w,c
  2920  00114C  26D9               	addwf	fsr2l,f,c
  2921  00114E  5036               	movf	PID_LineFollowing@error+1,w,c
  2922  001150  22DA               	addwfc	fsr2h,f,c
  2923  001152  0E00               	movlw	0
  2924  001154  BEDB               	btfsc	plusw2,7,c
  2925  001156  D013               	goto	l2748
  2926  001158                     l2744:
  2927  001158  AE49               	btfss	_I+1,7,c
  2928  00115A  D020               	goto	l2750
  2929  00115C  0E37               	movlw	55
  2930  00115E  5C48               	subwf	_I,w,c
  2931  001160  0EF3               	movlw	243
  2932  001162  5849               	subwfb	_I+1,w,c
  2933  001164  B0D8               	btfsc	status,0,c
  2934  001166  D01A               	goto	l2750
  2935  001168  EE20 F002          	lfsr	2,2
  2936  00116C  5035               	movf	PID_LineFollowing@error,w,c
  2937  00116E  26D9               	addwf	fsr2l,f,c
  2938  001170  5036               	movf	PID_LineFollowing@error+1,w,c
  2939  001172  22DA               	addwfc	fsr2h,f,c
  2940  001174  50DF               	movf	indf2,w,c
  2941  001176  0A80               	xorlw	128
  2942  001178  0F7F               	addlw	-129
  2943  00117A  A0D8               	btfss	status,0,c
  2944  00117C  D00F               	goto	l2750
  2945  00117E                     l2748:
  2946                           
  2947                           ;main.c: 126: I += error[2];
  2948  00117E  EE20 F002          	lfsr	2,2
  2949  001182  5035               	movf	PID_LineFollowing@error,w,c
  2950  001184  26D9               	addwf	fsr2l,f,c
  2951  001186  5036               	movf	PID_LineFollowing@error+1,w,c
  2952  001188  22DA               	addwfc	fsr2h,f,c
  2953  00118A  50DF               	movf	indf2,w,c
  2954  00118C  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2955  00118E  5037               	movf	??_PID_LineFollowing,w,c
  2956  001190  2648               	addwf	_I,f,c
  2957  001192  0E00               	movlw	0
  2958  001194  BE37               	btfsc	??_PID_LineFollowing,7,c
  2959  001196  0EFF               	movlw	255
  2960  001198  2249               	addwfc	_I+1,f,c
  2961  00119A  D000               	goto	l2750
  2962  00119C                     l2750:
  2963                           
  2964                           ;main.c: 127: }
  2965                           ;main.c: 130: if(error[1]!=error[2])
  2966  00119C  EE20 F002          	lfsr	2,2
  2967  0011A0  5035               	movf	PID_LineFollowing@error,w,c
  2968  0011A2  26D9               	addwf	fsr2l,f,c
  2969  0011A4  5036               	movf	PID_LineFollowing@error+1,w,c
  2970  0011A6  22DA               	addwfc	fsr2h,f,c
  2971  0011A8  EE10 F001          	lfsr	1,1
  2972  0011AC  5035               	movf	PID_LineFollowing@error,w,c
  2973  0011AE  26E1               	addwf	fsr1l,f,c
  2974  0011B0  5036               	movf	PID_LineFollowing@error+1,w,c
  2975  0011B2  22E2               	addwfc	fsr1h,f,c
  2976  0011B4  50DE               	movf	postinc2,w,c
  2977  0011B6  18E6               	xorwf	postinc1,w,c
  2978  0011B8  B4D8               	btfsc	status,2,c
  2979  0011BA  D058               	goto	l2758
  2980                           
  2981                           ;main.c: 131: {
  2982                           ;main.c: 132: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  2983  0011BC  EE20 F001          	lfsr	2,1
  2984  0011C0  5035               	movf	PID_LineFollowing@error,w,c
  2985  0011C2  26D9               	addwf	fsr2l,f,c
  2986  0011C4  5036               	movf	PID_LineFollowing@error+1,w,c
  2987  0011C6  22DA               	addwfc	fsr2h,f,c
  2988  0011C8  50DF               	movf	indf2,w,c
  2989  0011CA  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2990  0011CC  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  2991  0011CE  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  2992  0011D0  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  2993  0011D2  1E37               	comf	??_PID_LineFollowing,f,c
  2994  0011D4  1E38               	comf	??_PID_LineFollowing+1,f,c
  2995  0011D6  4A37               	infsnz	??_PID_LineFollowing,f,c
  2996  0011D8  2A38               	incf	??_PID_LineFollowing+1,f,c
  2997  0011DA  EE20 F002          	lfsr	2,2
  2998  0011DE  5035               	movf	PID_LineFollowing@error,w,c
  2999  0011E0  26D9               	addwf	fsr2l,f,c
  3000  0011E2  5036               	movf	PID_LineFollowing@error+1,w,c
  3001  0011E4  22DA               	addwfc	fsr2h,f,c
  3002  0011E6  50DF               	movf	indf2,w,c
  3003  0011E8  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3004  0011EA  5037               	movf	??_PID_LineFollowing,w,c
  3005  0011EC  2439               	addwf	??_PID_LineFollowing+2,w,c
  3006  0011EE  6E1D               	movwf	___wmul@multiplier,c
  3007  0011F0  0E00               	movlw	0
  3008  0011F2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3009  0011F4  0EFF               	movlw	255
  3010  0011F6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3011  0011F8  6E1E               	movwf	___wmul@multiplier+1,c
  3012  0011FA  EC58  F011         	call	_ReadTimer0	;wreg free
  3013  0011FE  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  3014  001202  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  3015  001206  0E01               	movlw	low _D_CONSTANT
  3016  001208  6EF6               	movwf	tblptrl,c
  3017  00120A                     	if	1	;There is more than 1 active tblptr byte
  3018  00120A  0E10               	movlw	high _D_CONSTANT
  3019  00120C  6EF7               	movwf	tblptrh,c
  3020  00120E                     	endif
  3021  00120E                     	if	1	;There are 3 active tblptr bytes
  3022  00120E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3023  001210  6EF8               	movwf	tblptru,c
  3024  001212                     	endif
  3025  001212  0009               	tblrd		*+
  3026  001214  CFF5 F013          	movff	tablat,___lwdiv@dividend
  3027  001218  000A               	tblrd		*-
  3028  00121A  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  3029  00121E  EC54  F00F         	call	___lwdiv	;wreg free
  3030  001222  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  3031  001226  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3032  00122A  EC60  F010         	call	___wmul	;wreg free
  3033  00122E  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3034  001232  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3035                           
  3036                           ;main.c: 135: error[0]=error[1];
  3037  001236  EE20 F001          	lfsr	2,1
  3038  00123A  5035               	movf	PID_LineFollowing@error,w,c
  3039  00123C  26D9               	addwf	fsr2l,f,c
  3040  00123E  5036               	movf	PID_LineFollowing@error+1,w,c
  3041  001240  22DA               	addwfc	fsr2h,f,c
  3042  001242  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3043  001246  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3044  00124A  CFDF FFE7          	movff	indf2,indf1
  3045                           
  3046                           ;main.c: 136: error[1]=error[2];
  3047  00124E  EE20 F002          	lfsr	2,2
  3048  001252  5035               	movf	PID_LineFollowing@error,w,c
  3049  001254  26D9               	addwf	fsr2l,f,c
  3050  001256  5036               	movf	PID_LineFollowing@error+1,w,c
  3051  001258  22DA               	addwfc	fsr2h,f,c
  3052  00125A  EE10 F001          	lfsr	1,1
  3053  00125E  5035               	movf	PID_LineFollowing@error,w,c
  3054  001260  26E1               	addwf	fsr1l,f,c
  3055  001262  5036               	movf	PID_LineFollowing@error+1,w,c
  3056  001264  22E2               	addwfc	fsr1h,f,c
  3057  001266  CFDF FFE7          	movff	indf2,indf1
  3058  00126A  D000               	goto	l2758
  3059  00126C                     l2758:
  3060                           
  3061                           ;main.c: 137: }
  3062                           ;main.c: 139: if(TMR0IF)
  3063  00126C  A4F2               	btfss	intcon,2,c	;volatile
  3064  00126E  D05E               	goto	l112
  3065                           
  3066                           ;main.c: 140: {
  3067                           ;main.c: 141: D = D_CONSTANT/65535*(error[1]-error[0]);
  3068  001270  C035  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3069  001274  C036  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3070  001278  50DF               	movf	indf2,w,c
  3071  00127A  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3072  00127C  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3073  00127E  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3074  001280  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3075  001282  1E37               	comf	??_PID_LineFollowing,f,c
  3076  001284  1E38               	comf	??_PID_LineFollowing+1,f,c
  3077  001286  4A37               	infsnz	??_PID_LineFollowing,f,c
  3078  001288  2A38               	incf	??_PID_LineFollowing+1,f,c
  3079  00128A  EE20 F001          	lfsr	2,1
  3080  00128E  5035               	movf	PID_LineFollowing@error,w,c
  3081  001290  26D9               	addwf	fsr2l,f,c
  3082  001292  5036               	movf	PID_LineFollowing@error+1,w,c
  3083  001294  22DA               	addwfc	fsr2h,f,c
  3084  001296  50DF               	movf	indf2,w,c
  3085  001298  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3086  00129A  5037               	movf	??_PID_LineFollowing,w,c
  3087  00129C  2439               	addwf	??_PID_LineFollowing+2,w,c
  3088  00129E  6E1D               	movwf	___wmul@multiplier,c
  3089  0012A0  0E00               	movlw	0
  3090  0012A2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3091  0012A4  0EFF               	movlw	255
  3092  0012A6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3093  0012A8  6E1E               	movwf	___wmul@multiplier+1,c
  3094  0012AA  0EFF               	movlw	255
  3095  0012AC  6E13               	movwf	___aldiv@divisor,c
  3096  0012AE  0EFF               	movlw	255
  3097  0012B0  6E14               	movwf	___aldiv@divisor+1,c
  3098  0012B2  0E00               	movlw	0
  3099  0012B4  6E15               	movwf	___aldiv@divisor+2,c
  3100  0012B6  0E00               	movlw	0
  3101  0012B8  6E16               	movwf	___aldiv@divisor+3,c
  3102  0012BA  0E01               	movlw	low _D_CONSTANT
  3103  0012BC  6EF6               	movwf	tblptrl,c
  3104  0012BE                     	if	1	;There is more than 1 active tblptr byte
  3105  0012BE  0E10               	movlw	high _D_CONSTANT
  3106  0012C0  6EF7               	movwf	tblptrh,c
  3107  0012C2                     	endif
  3108  0012C2                     	if	1	;There are 3 active tblptr bytes
  3109  0012C2  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3110  0012C4  6EF8               	movwf	tblptru,c
  3111  0012C6                     	endif
  3112  0012C6  0009               	tblrd		*+
  3113  0012C8  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+3
  3114  0012CC  0009               	tblrd		*+
  3115  0012CE  CFF5 F03B          	movff	tablat,??_PID_LineFollowing+4
  3116  0012D2  C03A  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3117  0012D6  C03B  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3118  0012DA  6A11               	clrf	___aldiv@dividend+2,c
  3119  0012DC  6A12               	clrf	___aldiv@dividend+3,c
  3120  0012DE  ECF4  F00B         	call	___aldiv	;wreg free
  3121  0012E2  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3122  0012E6  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3123  0012EA  EC60  F010         	call	___wmul	;wreg free
  3124  0012EE  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3125  0012F2  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3126                           
  3127                           ;main.c: 144: error[0]=error[1];
  3128  0012F6  EE20 F001          	lfsr	2,1
  3129  0012FA  5035               	movf	PID_LineFollowing@error,w,c
  3130  0012FC  26D9               	addwf	fsr2l,f,c
  3131  0012FE  5036               	movf	PID_LineFollowing@error+1,w,c
  3132  001300  22DA               	addwfc	fsr2h,f,c
  3133  001302  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3134  001306  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3135  00130A  CFDF FFE7          	movff	indf2,indf1
  3136                           
  3137                           ;main.c: 145: error[1]=error[2];
  3138  00130E  EE20 F002          	lfsr	2,2
  3139  001312  5035               	movf	PID_LineFollowing@error,w,c
  3140  001314  26D9               	addwf	fsr2l,f,c
  3141  001316  5036               	movf	PID_LineFollowing@error+1,w,c
  3142  001318  22DA               	addwfc	fsr2h,f,c
  3143  00131A  EE10 F001          	lfsr	1,1
  3144  00131E  5035               	movf	PID_LineFollowing@error,w,c
  3145  001320  26E1               	addwf	fsr1l,f,c
  3146  001322  5036               	movf	PID_LineFollowing@error+1,w,c
  3147  001324  22E2               	addwfc	fsr1h,f,c
  3148  001326  CFDF FFE7          	movff	indf2,indf1
  3149                           
  3150                           ;main.c: 147: TMR0IF = 0;
  3151  00132A  94F2               	bcf	intcon,2,c	;volatile
  3152  00132C                     l112:
  3153                           
  3154                           ;main.c: 148: }
  3155                           ;main.c: 152: delta_velocity = P_CONSTANT*error[2] + I + D;
  3156  00132C  EE20 F002          	lfsr	2,2
  3157  001330  5035               	movf	PID_LineFollowing@error,w,c
  3158  001332  26D9               	addwf	fsr2l,f,c
  3159  001334  5036               	movf	PID_LineFollowing@error+1,w,c
  3160  001336  22DA               	addwfc	fsr2h,f,c
  3161  001338  50DF               	movf	indf2,w,c
  3162  00133A  6E1D               	movwf	___wmul@multiplier,c
  3163  00133C  6A1E               	clrf	___wmul@multiplier+1,c
  3164  00133E  BE1D               	btfsc	___wmul@multiplier,7,c
  3165  001340  061E               	decf	___wmul@multiplier+1,f,c
  3166  001342  0E05               	movlw	low _P_CONSTANT
  3167  001344  6EF6               	movwf	tblptrl,c
  3168  001346                     	if	1	;There is more than 1 active tblptr byte
  3169  001346  0E10               	movlw	high _P_CONSTANT
  3170  001348  6EF7               	movwf	tblptrh,c
  3171  00134A                     	endif
  3172  00134A                     	if	1	;There are 3 active tblptr bytes
  3173  00134A  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3174  00134C  6EF8               	movwf	tblptru,c
  3175  00134E                     	endif
  3176  00134E  0009               	tblrd		*+
  3177  001350  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3178  001354  000A               	tblrd		*-
  3179  001356  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3180  00135A  EC60  F010         	call	___wmul	;wreg free
  3181  00135E  5048               	movf	_I,w,c
  3182  001360  261D               	addwf	?___wmul,f,c
  3183  001362  5049               	movf	_I+1,w,c
  3184  001364  221E               	addwfc	?___wmul+1,f,c
  3185  001366  5044               	movf	PID_LineFollowing@D,w,c
  3186  001368  241D               	addwf	?___wmul,w,c
  3187  00136A  6E46               	movwf	PID_LineFollowing@delta_velocity,c
  3188  00136C  5045               	movf	PID_LineFollowing@D+1,w,c
  3189  00136E  201E               	addwfc	?___wmul+1,w,c
  3190  001370  6E47               	movwf	PID_LineFollowing@delta_velocity+1,c
  3191                           
  3192                           ;main.c: 155: MotorControl(delta_velocity,0);
  3193  001372  C046  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3194  001376  C047  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3195  00137A  0E00               	movlw	0
  3196  00137C  6E2D               	movwf	MotorControl@speed_divider,c
  3197  00137E  ECC2  F009         	call	_MotorControl	;wreg free
  3198  001382  0012               	return		;funcret
  3199  001384                     __end_of_PID_LineFollowing:
  3200                           	opt stack 0
  3201                           stkptr	equ	0xFFC
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           indf1	equ	0xFE7
  3210                           postinc1	equ	0xFE6
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           plusw2	equ	0xFDB
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function ___lwmod *****************
  3221 ;; Defined at:
  3222 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  dividend        2   18[COMRAM] unsigned int 
  3225 ;;  divisor         2   20[COMRAM] unsigned int 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  counter         1   22[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2   18[COMRAM] unsigned int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;Total ram usage:        5 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_PID_LineFollowing
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text26
  3252  001F04                     __ptext26:
  3253                           	opt stack 0
  3254  001F04                     ___lwmod:
  3255                           	opt stack 28
  3256                           
  3257                           ;incstack = 0
  3258  001F04  5015               	movf	___lwmod@divisor,w,c
  3259  001F06  1016               	iorwf	___lwmod@divisor+1,w,c
  3260  001F08  B4D8               	btfsc	status,2,c
  3261  001F0A  D01D               	goto	l1154
  3262  001F0C  0E01               	movlw	1
  3263  001F0E  6E17               	movwf	___lwmod@counter,c
  3264  001F10  D005               	goto	l2588
  3265  001F12                     l2586:
  3266  001F12  90D8               	bcf	status,0,c
  3267  001F14  3615               	rlcf	___lwmod@divisor,f,c
  3268  001F16  3616               	rlcf	___lwmod@divisor+1,f,c
  3269  001F18  2A17               	incf	___lwmod@counter,f,c
  3270  001F1A  D000               	goto	l2588
  3271  001F1C                     l2588:
  3272  001F1C  BE16               	btfsc	___lwmod@divisor+1,7,c
  3273  001F1E  D002               	goto	l2590
  3274  001F20  D7F8               	goto	l2586
  3275  001F22  D000               	goto	l2590
  3276  001F24                     l2590:
  3277  001F24  5015               	movf	___lwmod@divisor,w,c
  3278  001F26  5C13               	subwf	___lwmod@dividend,w,c
  3279  001F28  5016               	movf	___lwmod@divisor+1,w,c
  3280  001F2A  5814               	subwfb	___lwmod@dividend+1,w,c
  3281  001F2C  A0D8               	btfss	status,0,c
  3282  001F2E  D005               	goto	l2594
  3283  001F30  5015               	movf	___lwmod@divisor,w,c
  3284  001F32  5E13               	subwf	___lwmod@dividend,f,c
  3285  001F34  5016               	movf	___lwmod@divisor+1,w,c
  3286  001F36  5A14               	subwfb	___lwmod@dividend+1,f,c
  3287  001F38  D000               	goto	l2594
  3288  001F3A                     l2594:
  3289  001F3A  90D8               	bcf	status,0,c
  3290  001F3C  3216               	rrcf	___lwmod@divisor+1,f,c
  3291  001F3E  3215               	rrcf	___lwmod@divisor,f,c
  3292  001F40  2E17               	decfsz	___lwmod@counter,f,c
  3293  001F42  D7F0               	goto	l2590
  3294  001F44  D000               	goto	l1154
  3295  001F46                     l1154:
  3296  001F46  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3297  001F4A  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3298  001F4E  0012               	return		;funcret
  3299  001F50                     __end_of___lwmod:
  3300                           	opt stack 0
  3301                           stkptr	equ	0xFFC
  3302                           tblptru	equ	0xFF8
  3303                           tblptrh	equ	0xFF7
  3304                           tblptrl	equ	0xFF6
  3305                           tablat	equ	0xFF5
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           indf1	equ	0xFE7
  3310                           postinc1	equ	0xFE6
  3311                           fsr1h	equ	0xFE2
  3312                           fsr1l	equ	0xFE1
  3313                           indf2	equ	0xFDF
  3314                           postinc2	equ	0xFDE
  3315                           plusw2	equ	0xFDB
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function ___lwdiv *****************
  3321 ;; Defined at:
  3322 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  dividend        2   18[COMRAM] unsigned int 
  3325 ;;  divisor         2   20[COMRAM] unsigned int 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  quotient        2   22[COMRAM] unsigned int 
  3328 ;;  counter         1   24[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   18[COMRAM] unsigned int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;Total ram usage:        7 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_PID_LineFollowing
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text27
  3353  001EA8                     __ptext27:
  3354                           	opt stack 0
  3355  001EA8                     ___lwdiv:
  3356                           	opt stack 28
  3357                           
  3358                           ;incstack = 0
  3359  001EA8  0E00               	movlw	0
  3360  001EAA  6E18               	movwf	___lwdiv@quotient+1,c
  3361  001EAC  0E00               	movlw	0
  3362  001EAE  6E17               	movwf	___lwdiv@quotient,c
  3363  001EB0  5015               	movf	___lwdiv@divisor,w,c
  3364  001EB2  1016               	iorwf	___lwdiv@divisor+1,w,c
  3365  001EB4  B4D8               	btfsc	status,2,c
  3366  001EB6  D021               	goto	l1144
  3367  001EB8  0E01               	movlw	1
  3368  001EBA  6E19               	movwf	___lwdiv@counter,c
  3369  001EBC  D005               	goto	l2568
  3370  001EBE                     l2566:
  3371  001EBE  90D8               	bcf	status,0,c
  3372  001EC0  3615               	rlcf	___lwdiv@divisor,f,c
  3373  001EC2  3616               	rlcf	___lwdiv@divisor+1,f,c
  3374  001EC4  2A19               	incf	___lwdiv@counter,f,c
  3375  001EC6  D000               	goto	l2568
  3376  001EC8                     l2568:
  3377  001EC8  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3378  001ECA  D002               	goto	l2570
  3379  001ECC  D7F8               	goto	l2566
  3380  001ECE  D000               	goto	l2570
  3381  001ED0                     l2570:
  3382  001ED0  90D8               	bcf	status,0,c
  3383  001ED2  3617               	rlcf	___lwdiv@quotient,f,c
  3384  001ED4  3618               	rlcf	___lwdiv@quotient+1,f,c
  3385  001ED6  5015               	movf	___lwdiv@divisor,w,c
  3386  001ED8  5C13               	subwf	___lwdiv@dividend,w,c
  3387  001EDA  5016               	movf	___lwdiv@divisor+1,w,c
  3388  001EDC  5814               	subwfb	___lwdiv@dividend+1,w,c
  3389  001EDE  A0D8               	btfss	status,0,c
  3390  001EE0  D006               	goto	l2578
  3391  001EE2  5015               	movf	___lwdiv@divisor,w,c
  3392  001EE4  5E13               	subwf	___lwdiv@dividend,f,c
  3393  001EE6  5016               	movf	___lwdiv@divisor+1,w,c
  3394  001EE8  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3395  001EEA  8017               	bsf	___lwdiv@quotient,0,c
  3396  001EEC  D000               	goto	l2578
  3397  001EEE                     l2578:
  3398  001EEE  90D8               	bcf	status,0,c
  3399  001EF0  3216               	rrcf	___lwdiv@divisor+1,f,c
  3400  001EF2  3215               	rrcf	___lwdiv@divisor,f,c
  3401  001EF4  2E19               	decfsz	___lwdiv@counter,f,c
  3402  001EF6  D7EC               	goto	l2570
  3403  001EF8  D000               	goto	l1144
  3404  001EFA                     l1144:
  3405  001EFA  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3406  001EFE  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3407  001F02  0012               	return		;funcret
  3408  001F04                     __end_of___lwdiv:
  3409                           	opt stack 0
  3410                           stkptr	equ	0xFFC
  3411                           tblptru	equ	0xFF8
  3412                           tblptrh	equ	0xFF7
  3413                           tblptrl	equ	0xFF6
  3414                           tablat	equ	0xFF5
  3415                           intcon	equ	0xFF2
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           indf1	equ	0xFE7
  3419                           postinc1	equ	0xFE6
  3420                           fsr1h	equ	0xFE2
  3421                           fsr1l	equ	0xFE1
  3422                           indf2	equ	0xFDF
  3423                           postinc2	equ	0xFDE
  3424                           plusw2	equ	0xFDB
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           status	equ	0xFD8
  3428                           
  3429 ;; *************** function ___aldiv *****************
  3430 ;; Defined at:
  3431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  dividend        4   14[COMRAM] long 
  3434 ;;  divisor         4   18[COMRAM] long 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  quotient        4   24[COMRAM] long 
  3437 ;;  sign            1   23[COMRAM] unsigned char 
  3438 ;;  counter         1   22[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  4   14[COMRAM] long 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3448 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;Total ram usage:       14 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    1
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_PID_LineFollowing
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text28
  3463  0017E8                     __ptext28:
  3464                           	opt stack 0
  3465  0017E8                     ___aldiv:
  3466                           	opt stack 28
  3467                           
  3468                           ;incstack = 0
  3469  0017E8  0E00               	movlw	0
  3470  0017EA  6E18               	movwf	___aldiv@sign,c
  3471  0017EC  AE16               	btfss	___aldiv@divisor+3,7,c
  3472  0017EE  D00B               	goto	l2524
  3473  0017F0  1E16               	comf	___aldiv@divisor+3,f,c
  3474  0017F2  1E15               	comf	___aldiv@divisor+2,f,c
  3475  0017F4  1E14               	comf	___aldiv@divisor+1,f,c
  3476  0017F6  6C13               	negf	___aldiv@divisor,c
  3477  0017F8  0E00               	movlw	0
  3478  0017FA  2214               	addwfc	___aldiv@divisor+1,f,c
  3479  0017FC  2215               	addwfc	___aldiv@divisor+2,f,c
  3480  0017FE  2216               	addwfc	___aldiv@divisor+3,f,c
  3481  001800  0E01               	movlw	1
  3482  001802  6E18               	movwf	___aldiv@sign,c
  3483  001804  D000               	goto	l2524
  3484  001806                     l2524:
  3485  001806  AE12               	btfss	___aldiv@dividend+3,7,c
  3486  001808  D00B               	goto	l2530
  3487  00180A  1E12               	comf	___aldiv@dividend+3,f,c
  3488  00180C  1E11               	comf	___aldiv@dividend+2,f,c
  3489  00180E  1E10               	comf	___aldiv@dividend+1,f,c
  3490  001810  6C0F               	negf	___aldiv@dividend,c
  3491  001812  0E00               	movlw	0
  3492  001814  2210               	addwfc	___aldiv@dividend+1,f,c
  3493  001816  2211               	addwfc	___aldiv@dividend+2,f,c
  3494  001818  2212               	addwfc	___aldiv@dividend+3,f,c
  3495  00181A  0E01               	movlw	1
  3496  00181C  1A18               	xorwf	___aldiv@sign,f,c
  3497  00181E  D000               	goto	l2530
  3498  001820                     l2530:
  3499  001820  0E00               	movlw	0
  3500  001822  6E19               	movwf	___aldiv@quotient,c
  3501  001824  0E00               	movlw	0
  3502  001826  6E1A               	movwf	___aldiv@quotient+1,c
  3503  001828  0E00               	movlw	0
  3504  00182A  6E1B               	movwf	___aldiv@quotient+2,c
  3505  00182C  0E00               	movlw	0
  3506  00182E  6E1C               	movwf	___aldiv@quotient+3,c
  3507  001830  5013               	movf	___aldiv@divisor,w,c
  3508  001832  1014               	iorwf	___aldiv@divisor+1,w,c
  3509  001834  1015               	iorwf	___aldiv@divisor+2,w,c
  3510  001836  1016               	iorwf	___aldiv@divisor+3,w,c
  3511  001838  B4D8               	btfsc	status,2,c
  3512  00183A  D02F               	goto	l2552
  3513  00183C  0E01               	movlw	1
  3514  00183E  6E17               	movwf	___aldiv@counter,c
  3515  001840  D007               	goto	l2538
  3516  001842                     l2536:
  3517  001842  90D8               	bcf	status,0,c
  3518  001844  3613               	rlcf	___aldiv@divisor,f,c
  3519  001846  3614               	rlcf	___aldiv@divisor+1,f,c
  3520  001848  3615               	rlcf	___aldiv@divisor+2,f,c
  3521  00184A  3616               	rlcf	___aldiv@divisor+3,f,c
  3522  00184C  2A17               	incf	___aldiv@counter,f,c
  3523  00184E  D000               	goto	l2538
  3524  001850                     l2538:
  3525  001850  BE16               	btfsc	___aldiv@divisor+3,7,c
  3526  001852  D002               	goto	l2540
  3527  001854  D7F6               	goto	l2536
  3528  001856  D000               	goto	l2540
  3529  001858                     l2540:
  3530  001858  90D8               	bcf	status,0,c
  3531  00185A  3619               	rlcf	___aldiv@quotient,f,c
  3532  00185C  361A               	rlcf	___aldiv@quotient+1,f,c
  3533  00185E  361B               	rlcf	___aldiv@quotient+2,f,c
  3534  001860  361C               	rlcf	___aldiv@quotient+3,f,c
  3535  001862  5013               	movf	___aldiv@divisor,w,c
  3536  001864  5C0F               	subwf	___aldiv@dividend,w,c
  3537  001866  5014               	movf	___aldiv@divisor+1,w,c
  3538  001868  5810               	subwfb	___aldiv@dividend+1,w,c
  3539  00186A  5015               	movf	___aldiv@divisor+2,w,c
  3540  00186C  5811               	subwfb	___aldiv@dividend+2,w,c
  3541  00186E  5016               	movf	___aldiv@divisor+3,w,c
  3542  001870  5812               	subwfb	___aldiv@dividend+3,w,c
  3543  001872  A0D8               	btfss	status,0,c
  3544  001874  D00A               	goto	l2548
  3545  001876  5013               	movf	___aldiv@divisor,w,c
  3546  001878  5E0F               	subwf	___aldiv@dividend,f,c
  3547  00187A  5014               	movf	___aldiv@divisor+1,w,c
  3548  00187C  5A10               	subwfb	___aldiv@dividend+1,f,c
  3549  00187E  5015               	movf	___aldiv@divisor+2,w,c
  3550  001880  5A11               	subwfb	___aldiv@dividend+2,f,c
  3551  001882  5016               	movf	___aldiv@divisor+3,w,c
  3552  001884  5A12               	subwfb	___aldiv@dividend+3,f,c
  3553  001886  8019               	bsf	___aldiv@quotient,0,c
  3554  001888  D000               	goto	l2548
  3555  00188A                     l2548:
  3556  00188A  90D8               	bcf	status,0,c
  3557  00188C  3216               	rrcf	___aldiv@divisor+3,f,c
  3558  00188E  3215               	rrcf	___aldiv@divisor+2,f,c
  3559  001890  3214               	rrcf	___aldiv@divisor+1,f,c
  3560  001892  3213               	rrcf	___aldiv@divisor,f,c
  3561  001894  2E17               	decfsz	___aldiv@counter,f,c
  3562  001896  D7E0               	goto	l2540
  3563  001898  D000               	goto	l2552
  3564  00189A                     l2552:
  3565  00189A  5018               	movf	___aldiv@sign,w,c
  3566  00189C  B4D8               	btfsc	status,2,c
  3567  00189E  D009               	goto	l2556
  3568  0018A0  1E1C               	comf	___aldiv@quotient+3,f,c
  3569  0018A2  1E1B               	comf	___aldiv@quotient+2,f,c
  3570  0018A4  1E1A               	comf	___aldiv@quotient+1,f,c
  3571  0018A6  6C19               	negf	___aldiv@quotient,c
  3572  0018A8  0E00               	movlw	0
  3573  0018AA  221A               	addwfc	___aldiv@quotient+1,f,c
  3574  0018AC  221B               	addwfc	___aldiv@quotient+2,f,c
  3575  0018AE  221C               	addwfc	___aldiv@quotient+3,f,c
  3576  0018B0  D000               	goto	l2556
  3577  0018B2                     l2556:
  3578  0018B2  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  3579  0018B6  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  3580  0018BA  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  3581  0018BE  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  3582  0018C2  D000               	goto	l695
  3583  0018C4                     l695:
  3584  0018C4  0012               	return		;funcret
  3585  0018C6                     __end_of___aldiv:
  3586                           	opt stack 0
  3587                           stkptr	equ	0xFFC
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           intcon	equ	0xFF2
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           indf1	equ	0xFE7
  3596                           postinc1	equ	0xFE6
  3597                           fsr1h	equ	0xFE2
  3598                           fsr1l	equ	0xFE1
  3599                           indf2	equ	0xFDF
  3600                           postinc2	equ	0xFDE
  3601                           plusw2	equ	0xFDB
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function _OpenTimer0 *****************
  3607 ;; Defined at:
  3608 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  config          1    wreg     unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  config          1   14[COMRAM] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;Total ram usage:        1 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text29
  3637  002176                     __ptext29:
  3638                           	opt stack 0
  3639  002176                     _OpenTimer0:
  3640                           	opt stack 29
  3641                           
  3642                           ;incstack = 0
  3643                           ;OpenTimer0@config stored from wreg
  3644  002176  6E0F               	movwf	OpenTimer0@config,c
  3645  002178  500F               	movf	OpenTimer0@config,w,c
  3646  00217A  0B7F               	andlw	127
  3647  00217C  6ED5               	movwf	4053,c	;volatile
  3648  00217E  0E00               	movlw	0
  3649  002180  6ED7               	movwf	4055,c	;volatile
  3650  002182  0E00               	movlw	0
  3651  002184  6ED6               	movwf	4054,c	;volatile
  3652  002186  94F2               	bcf	intcon,2,c	;volatile
  3653  002188  AE0F               	btfss	OpenTimer0@config,7,c
  3654  00218A  D002               	goto	l529
  3655  00218C  8AF2               	bsf	intcon,5,c	;volatile
  3656  00218E  D001               	goto	l530
  3657  002190                     l529:
  3658  002190  9AF2               	bcf	intcon,5,c	;volatile
  3659  002192                     l530:
  3660  002192  8ED5               	bsf	4053,7,c	;volatile
  3661  002194  0012               	return		;funcret
  3662  002196                     __end_of_OpenTimer0:
  3663                           	opt stack 0
  3664                           stkptr	equ	0xFFC
  3665                           tblptru	equ	0xFF8
  3666                           tblptrh	equ	0xFF7
  3667                           tblptrl	equ	0xFF6
  3668                           tablat	equ	0xFF5
  3669                           intcon	equ	0xFF2
  3670                           postinc0	equ	0xFEE
  3671                           wreg	equ	0xFE8
  3672                           indf1	equ	0xFE7
  3673                           postinc1	equ	0xFE6
  3674                           fsr1h	equ	0xFE2
  3675                           fsr1l	equ	0xFE1
  3676                           indf2	equ	0xFDF
  3677                           postinc2	equ	0xFDE
  3678                           plusw2	equ	0xFDB
  3679                           fsr2h	equ	0xFDA
  3680                           fsr2l	equ	0xFD9
  3681                           status	equ	0xFD8
  3682                           
  3683 ;; *************** function _LVtrap *****************
  3684 ;; Defined at:
  3685 ;;		line 449 in file "../Robot Files/sumovore.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;		None               void
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    3
  3706 ;; This function calls:
  3707 ;;		_gtrap
  3708 ;;		_openPORTD
  3709 ;;		_printf
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text30
  3716  002196                     __ptext30:
  3717                           	opt stack 0
  3718  002196                     _LVtrap:
  3719                           	opt stack 27
  3720                           
  3721                           ;sumovore.c: 451: printf("\\<LVD>");
  3722                           
  3723                           ;incstack = 0
  3724  002196  0E66               	movlw	low STR_7
  3725  002198  6E0F               	movwf	printf@f,c
  3726  00219A  0E10               	movlw	high STR_7
  3727  00219C  6E10               	movwf	printf@f+1,c
  3728  00219E  EC1F  F010         	call	_printf	;wreg free
  3729                           
  3730                           ;sumovore.c: 452: openPORTD();
  3731  0021A2  EC92  F011         	call	_openPORTD	;wreg free
  3732                           
  3733                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3734  0021A6  9083               	bcf	3971,0,c	;volatile
  3735                           
  3736                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3737  0021A8  8283               	bsf	3971,1,c	;volatile
  3738                           
  3739                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3740  0021AA  8483               	bsf	3971,2,c	;volatile
  3741                           
  3742                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3743  0021AC  9683               	bcf	3971,3,c	;volatile
  3744                           
  3745                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3746  0021AE  8883               	bsf	3971,4,c	;volatile
  3747                           
  3748                           ;sumovore.c: 458: gtrap();
  3749  0021B0  ECF4  F00E         	call	_gtrap	;wreg free
  3750  0021B4  0012               	return		;funcret
  3751  0021B6                     __end_of_LVtrap:
  3752                           	opt stack 0
  3753                           stkptr	equ	0xFFC
  3754                           tblptru	equ	0xFF8
  3755                           tblptrh	equ	0xFF7
  3756                           tblptrl	equ	0xFF6
  3757                           tablat	equ	0xFF5
  3758                           intcon	equ	0xFF2
  3759                           postinc0	equ	0xFEE
  3760                           wreg	equ	0xFE8
  3761                           indf1	equ	0xFE7
  3762                           postinc1	equ	0xFE6
  3763                           fsr1h	equ	0xFE2
  3764                           fsr1l	equ	0xFE1
  3765                           indf2	equ	0xFDF
  3766                           postinc2	equ	0xFDE
  3767                           plusw2	equ	0xFDB
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _printf *****************
  3773 ;; Defined at:
  3774 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3777 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3778 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  tmpval          4    0        struct .
  3781 ;;  cp              3    0        PTR const unsigned char 
  3782 ;;  ap              2   16[COMRAM] PTR void [1]
  3783 ;;		 -> ?_printf(2), 
  3784 ;;  len             2    0        unsigned int 
  3785 ;;  val             2    0        unsigned int 
  3786 ;;  c               1   18[COMRAM] char 
  3787 ;;  flag            1    0        unsigned char 
  3788 ;;  prec            1    0        char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2   14[COMRAM] int 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;Total ram usage:        5 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    2
  3805 ;; This function calls:
  3806 ;;		_putch
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;;		_PORtask
  3810 ;;		_BORtask
  3811 ;;		_WDTtask
  3812 ;;		_STKFULtask
  3813 ;;		_RESETtask
  3814 ;;		_LVtrap
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text31
  3819  00203E                     __ptext31:
  3820                           	opt stack 0
  3821  00203E                     _printf:
  3822                           	opt stack 28
  3823                           
  3824                           ;doprnt.c: 466: va_list ap;
  3825                           ;doprnt.c: 499: signed char c;
  3826                           ;doprnt.c: 506: signed char prec;
  3827                           ;doprnt.c: 508: unsigned char flag;
  3828                           ;doprnt.c: 523: union {
  3829                           ;doprnt.c: 524: unsigned long vd;
  3830                           ;doprnt.c: 525: double integ;
  3831                           ;doprnt.c: 526: } tmpval;
  3832                           ;doprnt.c: 528: unsigned int val;
  3833                           ;doprnt.c: 529: unsigned len;
  3834                           ;doprnt.c: 530: const char * cp;
  3835                           ;doprnt.c: 533: *ap = __va_start();
  3836                           
  3837                           ;incstack = 0
  3838  00203E  0E11               	movlw	low (?_printf+2)
  3839  002040  6E11               	movwf	printf@ap,c
  3840  002042  0E00               	movlw	high (?_printf+2)
  3841  002044  6E12               	movwf	printf@ap+1,c
  3842                           
  3843                           ;doprnt.c: 536: while(c = *f++) {
  3844  002046  D004               	goto	l2170
  3845  002048                     l2168:
  3846                           
  3847                           ;doprnt.c: 540: {
  3848                           ;doprnt.c: 541: (putch(c) );
  3849  002048  5013               	movf	printf@c,w,c
  3850  00204A  EC97  F011         	call	_putch
  3851                           
  3852                           ;doprnt.c: 542: continue;
  3853  00204E  D000               	goto	l2170
  3854  002050                     l2170:
  3855  002050  C00F  FFF6         	movff	printf@f,tblptrl
  3856  002054  C010  FFF7         	movff	printf@f+1,tblptrh
  3857  002058  4A0F               	infsnz	printf@f,f,c
  3858  00205A  2A10               	incf	printf@f+1,f,c
  3859  00205C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3860  00205C  6AF8               	clrf	tblptru,c
  3861  00205E                     	endif
  3862  00205E                     	if	0	;tblptru may be non-zero
  3863  00205E                     	endif
  3864  00205E  0008               	tblrd		*
  3865  002060  CFF5 F013          	movff	tablat,printf@c
  3866  002064  5013               	movf	printf@c,w,c
  3867  002066  A4D8               	btfss	status,2,c
  3868  002068  D7EF               	goto	l2168
  3869                           
  3870                           ;doprnt.c: 1469: }
  3871                           ;doprnt.c: 1533: }
  3872                           ;doprnt.c: 1540: return 0;
  3873                           ;	Return value of _printf is never used
  3874  00206A  0012               	return		;funcret
  3875  00206C                     __end_of_printf:
  3876                           	opt stack 0
  3877                           stkptr	equ	0xFFC
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           intcon	equ	0xFF2
  3883                           postinc0	equ	0xFEE
  3884                           wreg	equ	0xFE8
  3885                           indf1	equ	0xFE7
  3886                           postinc1	equ	0xFE6
  3887                           fsr1h	equ	0xFE2
  3888                           fsr1l	equ	0xFE1
  3889                           indf2	equ	0xFDF
  3890                           postinc2	equ	0xFDE
  3891                           plusw2	equ	0xFDB
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function _putch *****************
  3897 ;; Defined at:
  3898 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  c               1    wreg     unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  c               1    0[COMRAM] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_printf
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text32
  3927  00232E                     __ptext32:
  3928                           	opt stack 0
  3929  00232E                     _putch:
  3930                           	opt stack 28
  3931                           
  3932                           ;incstack = 0
  3933  00232E  0012               	return		;funcret
  3934  002330                     __end_of_putch:
  3935                           	opt stack 0
  3936                           stkptr	equ	0xFFC
  3937                           tblptru	equ	0xFF8
  3938                           tblptrh	equ	0xFF7
  3939                           tblptrl	equ	0xFF6
  3940                           tablat	equ	0xFF5
  3941                           intcon	equ	0xFF2
  3942                           postinc0	equ	0xFEE
  3943                           wreg	equ	0xFE8
  3944                           indf1	equ	0xFE7
  3945                           postinc1	equ	0xFE6
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           plusw2	equ	0xFDB
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _openPORTD *****************
  3956 ;; Defined at:
  3957 ;;		line 168 in file "../Robot Files/sumovore.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, status,2
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_initialization
  3982 ;;		_LVtrap
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text33
  3987  002324                     __ptext33:
  3988                           	opt stack 0
  3989  002324                     _openPORTD:
  3990                           	opt stack 28
  3991                           
  3992                           ;sumovore.c: 170: TRISD = 0b01100000;
  3993                           
  3994                           ;incstack = 0
  3995  002324  0E60               	movlw	96
  3996  002326  6E95               	movwf	3989,c	;volatile
  3997  002328  0012               	return		;funcret
  3998  00232A                     __end_of_openPORTD:
  3999                           	opt stack 0
  4000                           stkptr	equ	0xFFC
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           intcon	equ	0xFF2
  4006                           postinc0	equ	0xFEE
  4007                           wreg	equ	0xFE8
  4008                           indf1	equ	0xFE7
  4009                           postinc1	equ	0xFE6
  4010                           fsr1h	equ	0xFE2
  4011                           fsr1l	equ	0xFE1
  4012                           indf2	equ	0xFDF
  4013                           postinc2	equ	0xFDE
  4014                           plusw2	equ	0xFDB
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019 ;; *************** function _gtrap *****************
  4020 ;; Defined at:
  4021 ;;		line 464 in file "../Robot Files/sumovore.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  count           4   14[COMRAM] unsigned long 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;		None               void
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        4 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_BORtask
  4046 ;;		_WDTtask
  4047 ;;		_STKFULtask
  4048 ;;		_RESETtask
  4049 ;;		_LVtrap
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text34
  4054  001DE8                     __ptext34:
  4055                           	opt stack 0
  4056  001DE8                     _gtrap:
  4057                           	opt stack 26
  4058                           
  4059                           ;sumovore.c: 466: unsigned long count=0;
  4060                           
  4061                           ;incstack = 0
  4062  001DE8  0E00               	movlw	0
  4063  001DEA  6E0F               	movwf	gtrap@count,c
  4064  001DEC  0E00               	movlw	0
  4065  001DEE  6E10               	movwf	gtrap@count+1,c
  4066  001DF0  0E00               	movlw	0
  4067  001DF2  6E11               	movwf	gtrap@count+2,c
  4068  001DF4  0E00               	movlw	0
  4069  001DF6  6E12               	movwf	gtrap@count+3,c
  4070  001DF8                     l362:
  4071  001DF8  0004               	clrwdt		;# 
  4072                           
  4073                           ;sumovore.c: 471: if (count==30000u)
  4074  001DFA  0E30               	movlw	48
  4075  001DFC  180F               	xorwf	gtrap@count,w,c
  4076  001DFE  E111               	bnz	l1272
  4077  001E00  0E75               	movlw	117
  4078  001E02  1810               	xorwf	gtrap@count+1,w,c
  4079  001E04  1011               	iorwf	gtrap@count+2,w,c
  4080  001E06  1012               	iorwf	gtrap@count+3,w,c
  4081  001E08  A4D8               	btfss	status,2,c
  4082  001E0A  D00B               	goto	l1272
  4083                           
  4084                           ;sumovore.c: 472: {
  4085                           ;sumovore.c: 473: count=0;
  4086  001E0C  0E00               	movlw	0
  4087  001E0E  6E0F               	movwf	gtrap@count,c
  4088  001E10  0E00               	movlw	0
  4089  001E12  6E10               	movwf	gtrap@count+1,c
  4090  001E14  0E00               	movlw	0
  4091  001E16  6E11               	movwf	gtrap@count+2,c
  4092  001E18  0E00               	movlw	0
  4093  001E1A  6E12               	movwf	gtrap@count+3,c
  4094                           
  4095                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  4096  001E1C  9083               	bcf	3971,0,c	;volatile
  4097                           
  4098                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  4099  001E1E  8283               	bsf	3971,1,c	;volatile
  4100                           
  4101                           ;sumovore.c: 476: }
  4102  001E20  D00C               	goto	l1276
  4103  001E22                     l1272:
  4104                           
  4105                           ;sumovore.c: 477: else if (count==15000u)
  4106  001E22  0E98               	movlw	152
  4107  001E24  180F               	xorwf	gtrap@count,w,c
  4108  001E26  E109               	bnz	l1276
  4109  001E28  0E3A               	movlw	58
  4110  001E2A  1810               	xorwf	gtrap@count+1,w,c
  4111  001E2C  1011               	iorwf	gtrap@count+2,w,c
  4112  001E2E  1012               	iorwf	gtrap@count+3,w,c
  4113  001E30  A4D8               	btfss	status,2,c
  4114  001E32  D003               	goto	l1276
  4115                           
  4116                           ;sumovore.c: 478: {
  4117                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  4118  001E34  8083               	bsf	3971,0,c	;volatile
  4119                           
  4120                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  4121  001E36  9283               	bcf	3971,1,c	;volatile
  4122  001E38  D000               	goto	l1276
  4123  001E3A                     l1276:
  4124                           
  4125                           ;sumovore.c: 481: }
  4126                           ;sumovore.c: 482: count++;
  4127  001E3A  0E01               	movlw	1
  4128  001E3C  260F               	addwf	gtrap@count,f,c
  4129  001E3E  0E00               	movlw	0
  4130  001E40  2210               	addwfc	gtrap@count+1,f,c
  4131  001E42  2211               	addwfc	gtrap@count+2,f,c
  4132  001E44  2212               	addwfc	gtrap@count+3,f,c
  4133  001E46  D7D8               	goto	l362
  4134  001E48  0012               	return		;funcret
  4135  001E4A                     __end_of_gtrap:
  4136                           	opt stack 0
  4137                           stkptr	equ	0xFFC
  4138                           tblptru	equ	0xFF8
  4139                           tblptrh	equ	0xFF7
  4140                           tblptrl	equ	0xFF6
  4141                           tablat	equ	0xFF5
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           indf1	equ	0xFE7
  4146                           postinc1	equ	0xFE6
  4147                           fsr1h	equ	0xFE2
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           postinc2	equ	0xFDE
  4151                           plusw2	equ	0xFDB
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _GetBackonTrack *****************
  4157 ;; Defined at:
  4158 ;;		line 215 in file "../Robot Files/main.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  error           2   56[COMRAM] PTR char 
  4161 ;;		 -> main@error(3), 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  i               2   59[COMRAM] unsigned int 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;Total ram usage:        5 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    5
  4180 ;; This function calls:
  4181 ;;		_MotorControl
  4182 ;;		_ReadTimer0
  4183 ;;		_SharpTurn
  4184 ;;		_WriteTimer0
  4185 ;;		_check_sensors
  4186 ;;		_motors_brake_all
  4187 ;;		_set_leds
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text35
  4194  001550                     __ptext35:
  4195                           	opt stack 0
  4196  001550                     _GetBackonTrack:
  4197                           	opt stack 25
  4198                           
  4199                           ;main.c: 217: if((error[2]>1) || (error[1]>1) || CW_rotation_flag)
  4200                           
  4201                           ;incstack = 0
  4202  001550  EE20 F002          	lfsr	2,2
  4203  001554  5039               	movf	GetBackonTrack@error,w,c
  4204  001556  26D9               	addwf	fsr2l,f,c
  4205  001558  503A               	movf	GetBackonTrack@error+1,w,c
  4206  00155A  22DA               	addwfc	fsr2h,f,c
  4207  00155C  50DF               	movf	indf2,w,c
  4208  00155E  0A80               	xorlw	128
  4209  001560  0F7E               	addlw	-130
  4210  001562  B0D8               	btfsc	status,0,c
  4211  001564  D00E               	goto	l2650
  4212  001566  EE20 F001          	lfsr	2,1
  4213  00156A  5039               	movf	GetBackonTrack@error,w,c
  4214  00156C  26D9               	addwf	fsr2l,f,c
  4215  00156E  503A               	movf	GetBackonTrack@error+1,w,c
  4216  001570  22DA               	addwfc	fsr2h,f,c
  4217  001572  50DF               	movf	indf2,w,c
  4218  001574  0A80               	xorlw	128
  4219  001576  0F7E               	addlw	-130
  4220  001578  B0D8               	btfsc	status,0,c
  4221  00157A  D003               	goto	l2650
  4222  00157C  504D               	movf	_CW_rotation_flag,w,c
  4223  00157E  B4D8               	btfsc	status,2,c
  4224  001580  D004               	goto	l2652
  4225  001582                     l2650:
  4226                           
  4227                           ;main.c: 218: SharpTurn(CW);
  4228  001582  0E01               	movlw	1
  4229  001584  EC1B  F00D         	call	_SharpTurn
  4230  001588  D095               	goto	l149
  4231  00158A                     l2652:
  4232                           
  4233                           ;main.c: 219: else if((error[2]<-1) || (error[1]<-1) || CCW_rotation_flag)
  4234  00158A  EE20 F002          	lfsr	2,2
  4235  00158E  5039               	movf	GetBackonTrack@error,w,c
  4236  001590  26D9               	addwf	fsr2l,f,c
  4237  001592  503A               	movf	GetBackonTrack@error+1,w,c
  4238  001594  22DA               	addwfc	fsr2h,f,c
  4239  001596  50DF               	movf	indf2,w,c
  4240  001598  0A80               	xorlw	128
  4241  00159A  0F81               	addlw	129
  4242  00159C  A0D8               	btfss	status,0,c
  4243  00159E  D00E               	goto	l2658
  4244  0015A0  EE20 F001          	lfsr	2,1
  4245  0015A4  5039               	movf	GetBackonTrack@error,w,c
  4246  0015A6  26D9               	addwf	fsr2l,f,c
  4247  0015A8  503A               	movf	GetBackonTrack@error+1,w,c
  4248  0015AA  22DA               	addwfc	fsr2h,f,c
  4249  0015AC  50DF               	movf	indf2,w,c
  4250  0015AE  0A80               	xorlw	128
  4251  0015B0  0F81               	addlw	129
  4252  0015B2  A0D8               	btfss	status,0,c
  4253  0015B4  D003               	goto	l2658
  4254  0015B6  504C               	movf	_CCW_rotation_flag,w,c
  4255  0015B8  B4D8               	btfsc	status,2,c
  4256  0015BA  D004               	goto	l2660
  4257  0015BC                     l2658:
  4258                           
  4259                           ;main.c: 220: SharpTurn(CCW);
  4260  0015BC  0E00               	movlw	0
  4261  0015BE  EC1B  F00D         	call	_SharpTurn
  4262  0015C2  D078               	goto	l149
  4263  0015C4                     l2660:
  4264                           
  4265                           ;main.c: 221: else
  4266                           ;main.c: 222: {
  4267                           ;main.c: 223: WriteTimer0(0);
  4268  0015C4  0E00               	movlw	0
  4269  0015C6  6E10               	movwf	WriteTimer0@timer0+1,c
  4270  0015C8  0E00               	movlw	0
  4271  0015CA  6E0F               	movwf	WriteTimer0@timer0,c
  4272  0015CC  EC61  F011         	call	_WriteTimer0	;wreg free
  4273                           
  4274                           ;main.c: 224: TMR0IF = 0;
  4275  0015D0  94F2               	bcf	intcon,2,c	;volatile
  4276                           
  4277                           ;main.c: 225: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  4278  0015D2  D00D               	goto	l2668
  4279  0015D4                     l2664:
  4280                           
  4281                           ;main.c: 226: {
  4282                           ;main.c: 227: check_sensors();
  4283  0015D4  EC63  F00C         	call	_check_sensors	;wreg free
  4284                           
  4285                           ;main.c: 228: set_leds();
  4286  0015D8  EC03  F00E         	call	_set_leds	;wreg free
  4287                           
  4288                           ;main.c: 229: MotorControl(0,0);
  4289  0015DC  0E00               	movlw	0
  4290  0015DE  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4291  0015E0  0E00               	movlw	0
  4292  0015E2  6E2B               	movwf	MotorControl@delta_velocity,c
  4293  0015E4  0E00               	movlw	0
  4294  0015E6  6E2D               	movwf	MotorControl@speed_divider,c
  4295  0015E8  ECC2  F009         	call	_MotorControl	;wreg free
  4296  0015EC  D000               	goto	l2668
  4297  0015EE                     l2668:
  4298  0015EE  504E               	movf	_SeeLine,w,c
  4299  0015F0  0B1F               	andlw	31
  4300  0015F2  0900               	iorlw	0
  4301  0015F4  A4D8               	btfss	status,2,c
  4302  0015F6  D00C               	goto	l2674
  4303  0015F8  A4F2               	btfss	intcon,2,c	;volatile
  4304  0015FA  D7EC               	goto	l2664
  4305  0015FC  EC58  F011         	call	_ReadTimer0	;wreg free
  4306  001600  0E3B               	movlw	59
  4307  001602  5C0F               	subwf	?_ReadTimer0,w,c
  4308  001604  0EE8               	movlw	232
  4309  001606  5810               	subwfb	?_ReadTimer0+1,w,c
  4310  001608  B0D8               	btfsc	status,0,c
  4311  00160A  D002               	goto	l2674
  4312  00160C  D7E3               	goto	l2664
  4313  00160E  D000               	goto	l2674
  4314  001610                     l2674:
  4315                           
  4316                           ;main.c: 230: }
  4317                           ;main.c: 232: if(!SeeLine.B)
  4318  001610  504E               	movf	_SeeLine,w,c
  4319  001612  0B1F               	andlw	31
  4320  001614  0900               	iorlw	0
  4321  001616  A4D8               	btfss	status,2,c
  4322  001618  D04D               	goto	l149
  4323                           
  4324                           ;main.c: 233: {
  4325                           ;main.c: 234: motors_brake_all();
  4326  00161A  EC9A  F010         	call	_motors_brake_all	;wreg free
  4327                           
  4328                           ;main.c: 235: _delay(50000);
  4329  00161E  0E41               	movlw	65
  4330  001620  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4331  001622  0EEE               	movlw	238
  4332  001624                     u2597:
  4333  001624  2EE8               	decfsz	wreg,f,c
  4334  001626  D7FE               	goto	u2597
  4335  001628  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4336  00162A  D7FC               	goto	u2597
  4337  00162C  D000               	nop2	
  4338                           
  4339                           ;main.c: 236: MotorControl(1600, TURN_SPEED_DIVIDER);
  4340  00162E  0E06               	movlw	6
  4341  001630  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4342  001632  0E40               	movlw	64
  4343  001634  6E2B               	movwf	MotorControl@delta_velocity,c
  4344  001636  0E09               	movlw	low _TURN_SPEED_DIVIDER
  4345  001638  6EF6               	movwf	tblptrl,c
  4346  00163A                     	if	1	;There is more than 1 active tblptr byte
  4347  00163A  0E10               	movlw	high _TURN_SPEED_DIVIDER
  4348  00163C  6EF7               	movwf	tblptrh,c
  4349  00163E                     	endif
  4350  00163E                     	if	1	;There are 3 active tblptr bytes
  4351  00163E  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  4352  001640  6EF8               	movwf	tblptru,c
  4353  001642                     	endif
  4354  001642  0008               	tblrd		*
  4355  001644  CFF5 F02D          	movff	tablat,MotorControl@speed_divider
  4356  001648  ECC2  F009         	call	_MotorControl	;wreg free
  4357                           
  4358                           ;main.c: 238: for(unsigned int i=0; i < TURN_TIME_ms; i++)
  4359  00164C  0E00               	movlw	0
  4360  00164E  6E3D               	movwf	GetBackonTrack@i+1,c
  4361  001650  0E00               	movlw	0
  4362  001652  6E3C               	movwf	GetBackonTrack@i,c
  4363  001654                     l2684:
  4364  001654  0E07               	movlw	low _TURN_TIME_ms
  4365  001656  6EF6               	movwf	tblptrl,c
  4366  001658                     	if	1	;There is more than 1 active tblptr byte
  4367  001658  0E10               	movlw	high _TURN_TIME_ms
  4368  00165A  6EF7               	movwf	tblptrh,c
  4369  00165C                     	endif
  4370  00165C                     	if	1	;There are 3 active tblptr bytes
  4371  00165C  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4372  00165E  6EF8               	movwf	tblptru,c
  4373  001660                     	endif
  4374  001660  0009               	tblrd		*+
  4375  001662  50F5               	movf	tablat,w,c
  4376  001664  5C3C               	subwf	GetBackonTrack@i,w,c
  4377  001666  0009               	tblrd		*+
  4378  001668  50F5               	movf	tablat,w,c
  4379  00166A  583D               	subwfb	GetBackonTrack@i+1,w,c
  4380  00166C  B0D8               	btfsc	status,0,c
  4381  00166E  D01B               	goto	l2698
  4382  001670  D001               	goto	l2688
  4383  001672  D019               	goto	l2698
  4384  001674                     l2688:
  4385                           
  4386                           ;main.c: 239: _delay(7991);
  4387  001674  0E0B               	movlw	11
  4388  001676  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4389  001678  0E5F               	movlw	95
  4390  00167A                     u2607:
  4391  00167A  2EE8               	decfsz	wreg,f,c
  4392  00167C  D7FE               	goto	u2607
  4393  00167E  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4394  001680  D7FC               	goto	u2607
  4395  001682  D000               	nop2	
  4396  001684  4A3C               	infsnz	GetBackonTrack@i,f,c
  4397  001686  2A3D               	incf	GetBackonTrack@i+1,f,c
  4398  001688  D7E5               	goto	l2684
  4399                           
  4400                           ;main.c: 241: while (!SeeLine.B)
  4401  00168A  D00D               	goto	l2698
  4402  00168C                     l2694:
  4403                           
  4404                           ;main.c: 242: {
  4405                           ;main.c: 243: check_sensors();
  4406  00168C  EC63  F00C         	call	_check_sensors	;wreg free
  4407                           
  4408                           ;main.c: 244: set_leds();
  4409  001690  EC03  F00E         	call	_set_leds	;wreg free
  4410                           
  4411                           ;main.c: 245: MotorControl(0,0);
  4412  001694  0E00               	movlw	0
  4413  001696  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4414  001698  0E00               	movlw	0
  4415  00169A  6E2B               	movwf	MotorControl@delta_velocity,c
  4416  00169C  0E00               	movlw	0
  4417  00169E  6E2D               	movwf	MotorControl@speed_divider,c
  4418  0016A0  ECC2  F009         	call	_MotorControl	;wreg free
  4419  0016A4  D000               	goto	l2698
  4420  0016A6                     l2698:
  4421  0016A6  504E               	movf	_SeeLine,w,c
  4422  0016A8  0B1F               	andlw	31
  4423  0016AA  0900               	iorlw	0
  4424  0016AC  A4D8               	btfss	status,2,c
  4425  0016AE  D002               	goto	l149
  4426  0016B0  D7ED               	goto	l2694
  4427  0016B2  D000               	goto	l149
  4428  0016B4                     l149:
  4429  0016B4  0012               	return		;funcret
  4430  0016B6                     __end_of_GetBackonTrack:
  4431                           	opt stack 0
  4432                           stkptr	equ	0xFFC
  4433                           tblptru	equ	0xFF8
  4434                           tblptrh	equ	0xFF7
  4435                           tblptrl	equ	0xFF6
  4436                           tablat	equ	0xFF5
  4437                           intcon	equ	0xFF2
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           indf1	equ	0xFE7
  4441                           postinc1	equ	0xFE6
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           plusw2	equ	0xFDB
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _SharpTurn *****************
  4452 ;; Defined at:
  4453 ;;		line 252 in file "../Robot Files/main.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  direction       1    wreg     enum E4173
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  direction       1   53[COMRAM] enum E4173
  4458 ;;  delta_veloci    2   54[COMRAM] int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;Total ram usage:        4 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    4
  4475 ;; This function calls:
  4476 ;;		_MotorControl
  4477 ;;		_check_sensors
  4478 ;;		_motors_brake_all
  4479 ;;		_set_leds
  4480 ;; This function is called by:
  4481 ;;		_GetBackonTrack
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text36
  4486  001A36                     __ptext36:
  4487                           	opt stack 0
  4488  001A36                     _SharpTurn:
  4489                           	opt stack 25
  4490                           
  4491                           ;incstack = 0
  4492                           ;SharpTurn@direction stored from wreg
  4493  001A36  6E36               	movwf	SharpTurn@direction,c
  4494                           
  4495                           ;main.c: 254: int delta_velocity;
  4496                           ;main.c: 256: motors_brake_all();
  4497  001A38  EC9A  F010         	call	_motors_brake_all	;wreg free
  4498                           
  4499                           ;main.c: 257: _delay(50000);
  4500  001A3C  0E41               	movlw	65
  4501  001A3E  6E35               	movwf	??_SharpTurn& (0+255),c
  4502  001A40  0EEE               	movlw	238
  4503  001A42                     u2617:
  4504  001A42  2EE8               	decfsz	wreg,f,c
  4505  001A44  D7FE               	goto	u2617
  4506  001A46  2E35               	decfsz	??_SharpTurn& (0+255),f,c
  4507  001A48  D7FC               	goto	u2617
  4508  001A4A  D000               	nop2	
  4509                           
  4510                           ;main.c: 258: if(direction)
  4511  001A4C  5036               	movf	SharpTurn@direction,w,c
  4512  001A4E  B4D8               	btfsc	status,2,c
  4513  001A50  D022               	goto	l2422
  4514                           
  4515                           ;main.c: 259: {
  4516                           ;main.c: 260: delta_velocity = 1600;
  4517  001A52  0E06               	movlw	6
  4518  001A54  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4519  001A56  0E40               	movlw	64
  4520  001A58  6E37               	movwf	SharpTurn@delta_velocity,c
  4521                           
  4522                           ;main.c: 261: while (!SeeLine.b.CntLeft && delta_velocity)
  4523  001A5A  D012               	goto	l2416
  4524  001A5C                     l2408:
  4525                           
  4526                           ;main.c: 263: {
  4527                           ;main.c: 264: check_sensors();
  4528  001A5C  EC63  F00C         	call	_check_sensors	;wreg free
  4529                           
  4530                           ;main.c: 265: set_leds();
  4531  001A60  EC03  F00E         	call	_set_leds	;wreg free
  4532                           
  4533                           ;main.c: 266: MotorControl(delta_velocity,0);
  4534  001A64  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4535  001A68  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4536  001A6C  0E00               	movlw	0
  4537  001A6E  6E2D               	movwf	MotorControl@speed_divider,c
  4538  001A70  ECC2  F009         	call	_MotorControl	;wreg free
  4539                           
  4540                           ;main.c: 267: if (SeeLine.b.Center)
  4541  001A74  A44E               	btfss	_SeeLine,2,c
  4542  001A76  D004               	goto	l2416
  4543                           
  4544                           ;main.c: 268: delta_velocity--;
  4545  001A78  0637               	decf	SharpTurn@delta_velocity,f,c
  4546  001A7A  A0D8               	btfss	status,0,c
  4547  001A7C  0638               	decf	SharpTurn@delta_velocity+1,f,c
  4548  001A7E  D000               	goto	l2416
  4549  001A80                     l2416:
  4550  001A80  B64E               	btfsc	_SeeLine,3,c
  4551  001A82  D006               	goto	l2420
  4552  001A84  5037               	movf	SharpTurn@delta_velocity,w,c
  4553  001A86  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4554  001A88  B4D8               	btfsc	status,2,c
  4555  001A8A  D002               	goto	l2420
  4556  001A8C  D7E7               	goto	l2408
  4557  001A8E  D000               	goto	l2420
  4558  001A90                     l2420:
  4559                           
  4560                           ;main.c: 269: }
  4561                           ;main.c: 270: CW_rotation_flag = 0;
  4562  001A90  0E00               	movlw	0
  4563  001A92  6E4D               	movwf	_CW_rotation_flag,c
  4564                           
  4565                           ;main.c: 271: }
  4566  001A94  D020               	goto	l159
  4567  001A96                     l2422:
  4568                           
  4569                           ;main.c: 272: else
  4570                           ;main.c: 273: {
  4571                           ;main.c: 274: delta_velocity = -1600;
  4572  001A96  0EF9               	movlw	249
  4573  001A98  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4574  001A9A  0EC0               	movlw	192
  4575  001A9C  6E37               	movwf	SharpTurn@delta_velocity,c
  4576                           
  4577                           ;main.c: 275: while (!SeeLine.b.CntRight && delta_velocity)
  4578  001A9E  D011               	goto	l2432
  4579  001AA0                     l2424:
  4580                           
  4581                           ;main.c: 277: {
  4582                           ;main.c: 278: check_sensors();
  4583  001AA0  EC63  F00C         	call	_check_sensors	;wreg free
  4584                           
  4585                           ;main.c: 279: set_leds();
  4586  001AA4  EC03  F00E         	call	_set_leds	;wreg free
  4587                           
  4588                           ;main.c: 280: MotorControl(delta_velocity,0);
  4589  001AA8  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4590  001AAC  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4591  001AB0  0E00               	movlw	0
  4592  001AB2  6E2D               	movwf	MotorControl@speed_divider,c
  4593  001AB4  ECC2  F009         	call	_MotorControl	;wreg free
  4594                           
  4595                           ;main.c: 281: if (SeeLine.b.Center)
  4596  001AB8  A44E               	btfss	_SeeLine,2,c
  4597  001ABA  D003               	goto	l2432
  4598                           
  4599                           ;main.c: 282: delta_velocity++;
  4600  001ABC  4A37               	infsnz	SharpTurn@delta_velocity,f,c
  4601  001ABE  2A38               	incf	SharpTurn@delta_velocity+1,f,c
  4602  001AC0  D000               	goto	l2432
  4603  001AC2                     l2432:
  4604  001AC2  B24E               	btfsc	_SeeLine,1,c
  4605  001AC4  D006               	goto	l2436
  4606  001AC6  5037               	movf	SharpTurn@delta_velocity,w,c
  4607  001AC8  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4608  001ACA  B4D8               	btfsc	status,2,c
  4609  001ACC  D002               	goto	l2436
  4610  001ACE  D7E8               	goto	l2424
  4611  001AD0  D000               	goto	l2436
  4612  001AD2                     l2436:
  4613                           
  4614                           ;main.c: 283: }
  4615                           ;main.c: 284: CCW_rotation_flag = 0;
  4616  001AD2  0E00               	movlw	0
  4617  001AD4  6E4C               	movwf	_CCW_rotation_flag,c
  4618  001AD6                     l159:
  4619                           
  4620                           ;main.c: 285: }
  4621                           ;main.c: 286: I = 0;
  4622  001AD6  0E00               	movlw	0
  4623  001AD8  6E49               	movwf	_I+1,c
  4624  001ADA  0E00               	movlw	0
  4625  001ADC  6E48               	movwf	_I,c
  4626  001ADE  0012               	return		;funcret
  4627  001AE0                     __end_of_SharpTurn:
  4628                           	opt stack 0
  4629                           stkptr	equ	0xFFC
  4630                           tblptru	equ	0xFF8
  4631                           tblptrh	equ	0xFF7
  4632                           tblptrl	equ	0xFF6
  4633                           tablat	equ	0xFF5
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           wreg	equ	0xFE8
  4637                           indf1	equ	0xFE7
  4638                           postinc1	equ	0xFE6
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           indf2	equ	0xFDF
  4642                           postinc2	equ	0xFDE
  4643                           plusw2	equ	0xFDB
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _ReadTimer0 *****************
  4649 ;; Defined at:
  4650 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  timer           2   16[COMRAM] struct Timers
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  2   14[COMRAM] unsigned int 
  4657 ;; Registers used:
  4658 ;;		None
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:        4 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_PID_LineFollowing
  4675 ;;		_GetBackonTrack
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text37
  4680  0022B0                     __ptext37:
  4681                           	opt stack 0
  4682  0022B0                     _ReadTimer0:
  4683                           	opt stack 28
  4684                           
  4685                           ;incstack = 0
  4686  0022B0  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4687  0022B4  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4688  0022B8  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4689  0022BC  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4690  0022C0  0012               	return		;funcret
  4691  0022C2                     __end_of_ReadTimer0:
  4692                           	opt stack 0
  4693                           stkptr	equ	0xFFC
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           intcon	equ	0xFF2
  4699                           postinc0	equ	0xFEE
  4700                           wreg	equ	0xFE8
  4701                           indf1	equ	0xFE7
  4702                           postinc1	equ	0xFE6
  4703                           fsr1h	equ	0xFE2
  4704                           fsr1l	equ	0xFE1
  4705                           indf2	equ	0xFDF
  4706                           postinc2	equ	0xFDE
  4707                           plusw2	equ	0xFDB
  4708                           fsr2h	equ	0xFDA
  4709                           fsr2l	equ	0xFD9
  4710                           status	equ	0xFD8
  4711                           
  4712 ;; *************** function _FilterNearbyTrack *****************
  4713 ;; Defined at:
  4714 ;;		line 312 in file "../Robot Files/main.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;		None
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;		None               void
  4721 ;; Registers used:
  4722 ;;		None
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;Total ram usage:        0 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text38
  4743  0021B6                     __ptext38:
  4744                           	opt stack 0
  4745  0021B6                     _FilterNearbyTrack:
  4746                           	opt stack 29
  4747                           
  4748                           ;main.c: 316: if((SeeLine.b.Left && !SeeLine.b.CntLeft) && (SeeLine.b.Center || SeeLine.
      +                          b.CntRight))
  4749                           
  4750                           ;incstack = 0
  4751  0021B6  B84E               	btfsc	_SeeLine,4,c
  4752  0021B8  B64E               	btfsc	_SeeLine,3,c
  4753  0021BA  D003               	goto	l181
  4754  0021BC  A44E               	btfss	_SeeLine,2,c
  4755  0021BE  B24E               	btfsc	_SeeLine,1,c
  4756                           
  4757                           ;main.c: 317: SeeLine.b.Left = 0;
  4758  0021C0  984E               	bcf	_SeeLine,4,c
  4759  0021C2                     l181:
  4760                           
  4761                           ;main.c: 321: if((SeeLine.b.Right && !SeeLine.b.CntRight) && (SeeLine.b.Center || SeeLin
      +                          e.b.CntLeft))
  4762  0021C2  B04E               	btfsc	_SeeLine,0,c
  4763  0021C4  B24E               	btfsc	_SeeLine,1,c
  4764  0021C6  D006               	goto	l187
  4765  0021C8  B44E               	btfsc	_SeeLine,2,c
  4766  0021CA  D002               	goto	l186
  4767  0021CC  A64E               	btfss	_SeeLine,3,c
  4768  0021CE  D002               	goto	l187
  4769  0021D0                     l186:
  4770                           
  4771                           ;main.c: 322: SeeLine.b.Right = 0;
  4772  0021D0  904E               	bcf	_SeeLine,0,c
  4773  0021D2  D000               	goto	l187
  4774  0021D4                     l187:
  4775  0021D4  0012               	return		;funcret
  4776  0021D6                     __end_of_FilterNearbyTrack:
  4777                           	opt stack 0
  4778                           stkptr	equ	0xFFC
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           intcon	equ	0xFF2
  4784                           postinc0	equ	0xFEE
  4785                           wreg	equ	0xFE8
  4786                           indf1	equ	0xFE7
  4787                           postinc1	equ	0xFE6
  4788                           fsr1h	equ	0xFE2
  4789                           fsr1l	equ	0xFE1
  4790                           indf2	equ	0xFDF
  4791                           postinc2	equ	0xFDE
  4792                           plusw2	equ	0xFDB
  4793                           fsr2h	equ	0xFDA
  4794                           fsr2l	equ	0xFD9
  4795                           status	equ	0xFD8
  4796                           
  4797 ;; *************** function _AllSensorsTriggered *****************
  4798 ;; Defined at:
  4799 ;;		line 290 in file "../Robot Files/main.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;		None               void
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;Total ram usage:        1 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    4
  4820 ;; This function calls:
  4821 ;;		_MotorControl
  4822 ;;		_WriteTimer0
  4823 ;;		_check_sensors
  4824 ;;		_motors_brake_all
  4825 ;;		_set_leds
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text39
  4832  001D02                     __ptext39:
  4833                           	opt stack 0
  4834  001D02                     _AllSensorsTriggered:
  4835                           	opt stack 26
  4836                           
  4837                           ;main.c: 292: WriteTimer0(0);
  4838                           
  4839                           ;incstack = 0
  4840  001D02  0E00               	movlw	0
  4841  001D04  6E10               	movwf	WriteTimer0@timer0+1,c
  4842  001D06  0E00               	movlw	0
  4843  001D08  6E0F               	movwf	WriteTimer0@timer0,c
  4844  001D0A  EC61  F011         	call	_WriteTimer0	;wreg free
  4845                           
  4846                           ;main.c: 293: TMR0IF = 0;
  4847  001D0E  94F2               	bcf	intcon,2,c	;volatile
  4848                           
  4849                           ;main.c: 294: while (SeeLine.B=0b11111u && !(TMR0IF))
  4850  001D10  D00D               	goto	l2708
  4851  001D12                     l2704:
  4852                           
  4853                           ;main.c: 295: {
  4854                           ;main.c: 296: check_sensors();
  4855  001D12  EC63  F00C         	call	_check_sensors	;wreg free
  4856                           
  4857                           ;main.c: 297: set_leds();
  4858  001D16  EC03  F00E         	call	_set_leds	;wreg free
  4859                           
  4860                           ;main.c: 298: MotorControl(0,0);
  4861  001D1A  0E00               	movlw	0
  4862  001D1C  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4863  001D1E  0E00               	movlw	0
  4864  001D20  6E2B               	movwf	MotorControl@delta_velocity,c
  4865  001D22  0E00               	movlw	0
  4866  001D24  6E2D               	movwf	MotorControl@speed_divider,c
  4867  001D26  ECC2  F009         	call	_MotorControl	;wreg free
  4868  001D2A  D000               	goto	l2708
  4869  001D2C                     l2708:
  4870  001D2C  0E00               	movlw	0
  4871  001D2E  6E35               	movwf	_AllSensorsTriggered$476,c
  4872  001D30  B4F2               	btfsc	intcon,2,c	;volatile
  4873  001D32  D003               	goto	l2714
  4874  001D34  0E01               	movlw	1
  4875  001D36  6E35               	movwf	_AllSensorsTriggered$476,c
  4876  001D38  D000               	goto	l2714
  4877  001D3A                     l2714:
  4878  001D3A  504E               	movf	_SeeLine,w,c
  4879  001D3C  1835               	xorwf	_AllSensorsTriggered$476,w,c
  4880  001D3E  0BE0               	andlw	-32
  4881  001D40  1835               	xorwf	_AllSensorsTriggered$476,w,c
  4882  001D42  6E4E               	movwf	_SeeLine,c
  4883  001D44  504E               	movf	_SeeLine,w,c
  4884  001D46  0B1F               	andlw	31
  4885  001D48  0900               	iorlw	0
  4886  001D4A  A4D8               	btfss	status,2,c
  4887  001D4C  D7E2               	goto	l2704
  4888                           
  4889                           ;main.c: 299: }
  4890                           ;main.c: 300: if (SeeLine.B=0b11111u)
  4891  001D4E  804E               	bsf	_SeeLine,0,c
  4892  001D50  824E               	bsf	_SeeLine,1,c
  4893  001D52  844E               	bsf	_SeeLine,2,c
  4894  001D54  864E               	bsf	_SeeLine,3,c
  4895  001D56  884E               	bsf	_SeeLine,4,c
  4896                           
  4897                           ;main.c: 301: {
  4898                           ;main.c: 302: motors_brake_all();
  4899  001D58  EC9A  F010         	call	_motors_brake_all	;wreg free
  4900                           
  4901                           ;main.c: 303: while (SeeLine.B=0b11111u)
  4902  001D5C  D005               	goto	l2720
  4903  001D5E                     l2718:
  4904                           
  4905                           ;main.c: 304: {
  4906                           ;main.c: 305: check_sensors();
  4907  001D5E  EC63  F00C         	call	_check_sensors	;wreg free
  4908                           
  4909                           ;main.c: 306: set_leds();
  4910  001D62  EC03  F00E         	call	_set_leds	;wreg free
  4911  001D66  D000               	goto	l2720
  4912  001D68                     l2720:
  4913  001D68  804E               	bsf	_SeeLine,0,c
  4914  001D6A  824E               	bsf	_SeeLine,1,c
  4915  001D6C  844E               	bsf	_SeeLine,2,c
  4916  001D6E  864E               	bsf	_SeeLine,3,c
  4917  001D70  884E               	bsf	_SeeLine,4,c
  4918  001D72  D7F5               	goto	l2718
  4919  001D74  D000               	goto	l178
  4920  001D76                     l178:
  4921  001D76  0012               	return		;funcret
  4922  001D78                     __end_of_AllSensorsTriggered:
  4923                           	opt stack 0
  4924                           stkptr	equ	0xFFC
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           intcon	equ	0xFF2
  4930                           postinc0	equ	0xFEE
  4931                           wreg	equ	0xFE8
  4932                           indf1	equ	0xFE7
  4933                           postinc1	equ	0xFE6
  4934                           fsr1h	equ	0xFE2
  4935                           fsr1l	equ	0xFE1
  4936                           indf2	equ	0xFDF
  4937                           postinc2	equ	0xFDE
  4938                           plusw2	equ	0xFDB
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _set_leds *****************
  4944 ;; Defined at:
  4945 ;;		line 256 in file "../Robot Files/sumovore.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;;		_GetBackonTrack
  4971 ;;		_SharpTurn
  4972 ;;		_AllSensorsTriggered
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text40
  4977  001C06                     __ptext40:
  4978                           	opt stack 0
  4979  001C06                     _set_leds:
  4980                           	opt stack 29
  4981                           
  4982                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4983                           
  4984                           ;incstack = 0
  4985  001C06  B84E               	btfsc	_SeeLine,4,c
  4986  001C08  D003               	goto	u1680
  4987  001C0A  6A0F               	clrf	??_set_leds& (0+255),c
  4988  001C0C  2A0F               	incf	??_set_leds& (0+255),f,c
  4989  001C0E  D001               	goto	u1698
  4990  001C10                     u1680:
  4991  001C10  6A0F               	clrf	??_set_leds& (0+255),c
  4992  001C12                     u1698:
  4993  001C12  5083               	movf	3971,w,c	;volatile
  4994  001C14  180F               	xorwf	??_set_leds,w,c
  4995  001C16  0BFE               	andlw	-2
  4996  001C18  180F               	xorwf	??_set_leds,w,c
  4997  001C1A  6E83               	movwf	3971,c	;volatile
  4998                           
  4999                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  5000  001C1C  B64E               	btfsc	_SeeLine,3,c
  5001  001C1E  D003               	goto	u1700
  5002  001C20  6A0F               	clrf	??_set_leds& (0+255),c
  5003  001C22  2A0F               	incf	??_set_leds& (0+255),f,c
  5004  001C24  D001               	goto	u1718
  5005  001C26                     u1700:
  5006  001C26  6A0F               	clrf	??_set_leds& (0+255),c
  5007  001C28                     u1718:
  5008  001C28  460F               	rlncf	??_set_leds,f,c
  5009  001C2A  5083               	movf	3971,w,c	;volatile
  5010  001C2C  180F               	xorwf	??_set_leds,w,c
  5011  001C2E  0BFD               	andlw	-3
  5012  001C30  180F               	xorwf	??_set_leds,w,c
  5013  001C32  6E83               	movwf	3971,c	;volatile
  5014                           
  5015                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  5016  001C34  B44E               	btfsc	_SeeLine,2,c
  5017  001C36  D003               	goto	u1720
  5018  001C38  6A0F               	clrf	??_set_leds& (0+255),c
  5019  001C3A  2A0F               	incf	??_set_leds& (0+255),f,c
  5020  001C3C  D001               	goto	u1738
  5021  001C3E                     u1720:
  5022  001C3E  6A0F               	clrf	??_set_leds& (0+255),c
  5023  001C40                     u1738:
  5024  001C40  460F               	rlncf	??_set_leds,f,c
  5025  001C42  460F               	rlncf	??_set_leds,f,c
  5026  001C44  5083               	movf	3971,w,c	;volatile
  5027  001C46  180F               	xorwf	??_set_leds,w,c
  5028  001C48  0BFB               	andlw	-5
  5029  001C4A  180F               	xorwf	??_set_leds,w,c
  5030  001C4C  6E83               	movwf	3971,c	;volatile
  5031                           
  5032                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  5033  001C4E  B24E               	btfsc	_SeeLine,1,c
  5034  001C50  D003               	goto	u1740
  5035  001C52  6A0F               	clrf	??_set_leds& (0+255),c
  5036  001C54  2A0F               	incf	??_set_leds& (0+255),f,c
  5037  001C56  D001               	goto	u1758
  5038  001C58                     u1740:
  5039  001C58  6A0F               	clrf	??_set_leds& (0+255),c
  5040  001C5A                     u1758:
  5041  001C5A  460F               	rlncf	??_set_leds,f,c
  5042  001C5C  460F               	rlncf	??_set_leds,f,c
  5043  001C5E  460F               	rlncf	??_set_leds,f,c
  5044  001C60  5083               	movf	3971,w,c	;volatile
  5045  001C62  180F               	xorwf	??_set_leds,w,c
  5046  001C64  0BF7               	andlw	-9
  5047  001C66  180F               	xorwf	??_set_leds,w,c
  5048  001C68  6E83               	movwf	3971,c	;volatile
  5049                           
  5050                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  5051  001C6A  B04E               	btfsc	_SeeLine,0,c
  5052  001C6C  D003               	goto	u1760
  5053  001C6E  6A0F               	clrf	??_set_leds& (0+255),c
  5054  001C70  2A0F               	incf	??_set_leds& (0+255),f,c
  5055  001C72  D001               	goto	u1778
  5056  001C74                     u1760:
  5057  001C74  6A0F               	clrf	??_set_leds& (0+255),c
  5058  001C76                     u1778:
  5059  001C76  3A0F               	swapf	??_set_leds,f,c
  5060  001C78  5083               	movf	3971,w,c	;volatile
  5061  001C7A  180F               	xorwf	??_set_leds,w,c
  5062  001C7C  0BEF               	andlw	-17
  5063  001C7E  180F               	xorwf	??_set_leds,w,c
  5064  001C80  6E83               	movwf	3971,c	;volatile
  5065  001C82  0012               	return		;funcret
  5066  001C84                     __end_of_set_leds:
  5067                           	opt stack 0
  5068                           stkptr	equ	0xFFC
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           intcon	equ	0xFF2
  5074                           postinc0	equ	0xFEE
  5075                           wreg	equ	0xFE8
  5076                           indf1	equ	0xFE7
  5077                           postinc1	equ	0xFE6
  5078                           fsr1h	equ	0xFE2
  5079                           fsr1l	equ	0xFE1
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           plusw2	equ	0xFDB
  5083                           fsr2h	equ	0xFDA
  5084                           fsr2l	equ	0xFD9
  5085                           status	equ	0xFD8
  5086                           
  5087 ;; *************** function _motors_brake_all *****************
  5088 ;; Defined at:
  5089 ;;		line 219 in file "../Robot Files/sumovore.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    2
  5110 ;; This function calls:
  5111 ;;		_SetDCPWM1
  5112 ;;		_SetDCPWM2
  5113 ;; This function is called by:
  5114 ;;		_GetBackonTrack
  5115 ;;		_SharpTurn
  5116 ;;		_AllSensorsTriggered
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text41
  5121  002134                     __ptext41:
  5122                           	opt stack 0
  5123  002134                     _motors_brake_all:
  5124                           	opt stack 27
  5125                           
  5126                           ;sumovore.c: 221: SetDCPWM1(800u );
  5127                           
  5128                           ;incstack = 0
  5129  002134  0E03               	movlw	3
  5130  002136  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  5131  002138  0E20               	movlw	32
  5132  00213A  6E0F               	movwf	SetDCPWM1@dutycycle,c
  5133  00213C  ECE6  F00F         	call	_SetDCPWM1	;wreg free
  5134                           
  5135                           ;sumovore.c: 222: SetDCPWM2(800u );
  5136  002140  0E03               	movlw	3
  5137  002142  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  5138  002144  0E20               	movlw	32
  5139  002146  6E0F               	movwf	SetDCPWM2@dutycycle,c
  5140  002148  ECC9  F00F         	call	_SetDCPWM2	;wreg free
  5141                           
  5142                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  5143  00214C  9284               	bcf	3972,1,c	;volatile
  5144                           
  5145                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  5146  00214E  9082               	bcf	3970,0,c	;volatile
  5147                           
  5148                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  5149  002150  9084               	bcf	3972,0,c	;volatile
  5150                           
  5151                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  5152  002152  9A82               	bcf	3970,5,c	;volatile
  5153  002154  0012               	return		;funcret
  5154  002156                     __end_of_motors_brake_all:
  5155                           	opt stack 0
  5156                           stkptr	equ	0xFFC
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           intcon	equ	0xFF2
  5162                           postinc0	equ	0xFEE
  5163                           wreg	equ	0xFE8
  5164                           indf1	equ	0xFE7
  5165                           postinc1	equ	0xFE6
  5166                           fsr1h	equ	0xFE2
  5167                           fsr1l	equ	0xFE1
  5168                           indf2	equ	0xFDF
  5169                           postinc2	equ	0xFDE
  5170                           plusw2	equ	0xFDB
  5171                           fsr2h	equ	0xFDA
  5172                           fsr2l	equ	0xFD9
  5173                           status	equ	0xFD8
  5174                           
  5175 ;; *************** function _check_sensors *****************
  5176 ;; Defined at:
  5177 ;;		line 242 in file "../Robot Files/sumovore.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;		None               void
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;Total ram usage:        1 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    3
  5198 ;; This function calls:
  5199 ;;		_adc
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;;		_GetBackonTrack
  5203 ;;		_SharpTurn
  5204 ;;		_AllSensorsTriggered
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text42
  5209  0018C6                     __ptext42:
  5210                           	opt stack 0
  5211  0018C6                     _check_sensors:
  5212                           	opt stack 27
  5213                           
  5214                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5215                           
  5216                           ;incstack = 0
  5217  0018C6  0E87               	movlw	135
  5218  0018C8  EC4C  F010         	call	_adc
  5219  0018CC  5013               	movf	?_adc,w,c
  5220  0018CE  5C4A               	subwf	_threshold,w,c
  5221  0018D0  5014               	movf	?_adc+1,w,c
  5222  0018D2  584B               	subwfb	_threshold+1,w,c
  5223  0018D4  B0D8               	btfsc	status,0,c
  5224  0018D6  D003               	goto	u1580
  5225  0018D8  6A16               	clrf	??_check_sensors& (0+255),c
  5226  0018DA  2A16               	incf	??_check_sensors& (0+255),f,c
  5227  0018DC  D001               	goto	u1598
  5228  0018DE                     u1580:
  5229  0018DE  6A16               	clrf	??_check_sensors& (0+255),c
  5230  0018E0                     u1598:
  5231  0018E0  3A16               	swapf	??_check_sensors,f,c
  5232  0018E2  504E               	movf	_SeeLine,w,c
  5233  0018E4  1816               	xorwf	??_check_sensors,w,c
  5234  0018E6  0BEF               	andlw	-17
  5235  0018E8  1816               	xorwf	??_check_sensors,w,c
  5236  0018EA  6E4E               	movwf	_SeeLine,c
  5237                           
  5238                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5239  0018EC  0E8F               	movlw	143
  5240  0018EE  EC4C  F010         	call	_adc
  5241  0018F2  5013               	movf	?_adc,w,c
  5242  0018F4  5C4A               	subwf	_threshold,w,c
  5243  0018F6  5014               	movf	?_adc+1,w,c
  5244  0018F8  584B               	subwfb	_threshold+1,w,c
  5245  0018FA  B0D8               	btfsc	status,0,c
  5246  0018FC  D003               	goto	u1600
  5247  0018FE  6A16               	clrf	??_check_sensors& (0+255),c
  5248  001900  2A16               	incf	??_check_sensors& (0+255),f,c
  5249  001902  D001               	goto	u1618
  5250  001904                     u1600:
  5251  001904  6A16               	clrf	??_check_sensors& (0+255),c
  5252  001906                     u1618:
  5253  001906  4616               	rlncf	??_check_sensors,f,c
  5254  001908  4616               	rlncf	??_check_sensors,f,c
  5255  00190A  4616               	rlncf	??_check_sensors,f,c
  5256  00190C  504E               	movf	_SeeLine,w,c
  5257  00190E  1816               	xorwf	??_check_sensors,w,c
  5258  001910  0BF7               	andlw	-9
  5259  001912  1816               	xorwf	??_check_sensors,w,c
  5260  001914  6E4E               	movwf	_SeeLine,c
  5261                           
  5262                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5263  001916  0E97               	movlw	151
  5264  001918  EC4C  F010         	call	_adc
  5265  00191C  5013               	movf	?_adc,w,c
  5266  00191E  5C4A               	subwf	_threshold,w,c
  5267  001920  5014               	movf	?_adc+1,w,c
  5268  001922  584B               	subwfb	_threshold+1,w,c
  5269  001924  B0D8               	btfsc	status,0,c
  5270  001926  D003               	goto	u1620
  5271  001928  6A16               	clrf	??_check_sensors& (0+255),c
  5272  00192A  2A16               	incf	??_check_sensors& (0+255),f,c
  5273  00192C  D001               	goto	u1638
  5274  00192E                     u1620:
  5275  00192E  6A16               	clrf	??_check_sensors& (0+255),c
  5276  001930                     u1638:
  5277  001930  4616               	rlncf	??_check_sensors,f,c
  5278  001932  4616               	rlncf	??_check_sensors,f,c
  5279  001934  504E               	movf	_SeeLine,w,c
  5280  001936  1816               	xorwf	??_check_sensors,w,c
  5281  001938  0BFB               	andlw	-5
  5282  00193A  1816               	xorwf	??_check_sensors,w,c
  5283  00193C  6E4E               	movwf	_SeeLine,c
  5284                           
  5285                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5286  00193E  0E9F               	movlw	159
  5287  001940  EC4C  F010         	call	_adc
  5288  001944  5013               	movf	?_adc,w,c
  5289  001946  5C4A               	subwf	_threshold,w,c
  5290  001948  5014               	movf	?_adc+1,w,c
  5291  00194A  584B               	subwfb	_threshold+1,w,c
  5292  00194C  B0D8               	btfsc	status,0,c
  5293  00194E  D003               	goto	u1640
  5294  001950  6A16               	clrf	??_check_sensors& (0+255),c
  5295  001952  2A16               	incf	??_check_sensors& (0+255),f,c
  5296  001954  D001               	goto	u1658
  5297  001956                     u1640:
  5298  001956  6A16               	clrf	??_check_sensors& (0+255),c
  5299  001958                     u1658:
  5300  001958  4616               	rlncf	??_check_sensors,f,c
  5301  00195A  504E               	movf	_SeeLine,w,c
  5302  00195C  1816               	xorwf	??_check_sensors,w,c
  5303  00195E  0BFD               	andlw	-3
  5304  001960  1816               	xorwf	??_check_sensors,w,c
  5305  001962  6E4E               	movwf	_SeeLine,c
  5306                           
  5307                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5308  001964  0EA7               	movlw	167
  5309  001966  EC4C  F010         	call	_adc
  5310  00196A  5013               	movf	?_adc,w,c
  5311  00196C  5C4A               	subwf	_threshold,w,c
  5312  00196E  5014               	movf	?_adc+1,w,c
  5313  001970  584B               	subwfb	_threshold+1,w,c
  5314  001972  B0D8               	btfsc	status,0,c
  5315  001974  D003               	goto	u1660
  5316  001976  6A16               	clrf	??_check_sensors& (0+255),c
  5317  001978  2A16               	incf	??_check_sensors& (0+255),f,c
  5318  00197A  D001               	goto	u1678
  5319  00197C                     u1660:
  5320  00197C  6A16               	clrf	??_check_sensors& (0+255),c
  5321  00197E                     u1678:
  5322  00197E  504E               	movf	_SeeLine,w,c
  5323  001980  1816               	xorwf	??_check_sensors,w,c
  5324  001982  0BFE               	andlw	-2
  5325  001984  1816               	xorwf	??_check_sensors,w,c
  5326  001986  6E4E               	movwf	_SeeLine,c
  5327  001988  0012               	return		;funcret
  5328  00198A                     __end_of_check_sensors:
  5329                           	opt stack 0
  5330                           stkptr	equ	0xFFC
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           intcon	equ	0xFF2
  5336                           postinc0	equ	0xFEE
  5337                           wreg	equ	0xFE8
  5338                           indf1	equ	0xFE7
  5339                           postinc1	equ	0xFE6
  5340                           fsr1h	equ	0xFE2
  5341                           fsr1l	equ	0xFE1
  5342                           indf2	equ	0xFDF
  5343                           postinc2	equ	0xFDE
  5344                           plusw2	equ	0xFDB
  5345                           fsr2h	equ	0xFDA
  5346                           fsr2l	equ	0xFD9
  5347                           status	equ	0xFD8
  5348                           
  5349 ;; *************** function _adc *****************
  5350 ;; Defined at:
  5351 ;;		line 230 in file "../Robot Files/sumovore.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  channel         1    wreg     unsigned char 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  channel         1   20[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2   18[COMRAM] unsigned int 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;Total ram usage:        3 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		_BusyADC
  5374 ;;		_ConvertADC
  5375 ;;		_ReadADC
  5376 ;;		_SetChanADC
  5377 ;; This function is called by:
  5378 ;;		_check_sensors
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text43
  5383  002098                     __ptext43:
  5384                           	opt stack 0
  5385  002098                     _adc:
  5386                           	opt stack 27
  5387                           
  5388                           ;incstack = 0
  5389                           ;adc@channel stored from wreg
  5390  002098  6E15               	movwf	adc@channel,c
  5391                           
  5392                           ;sumovore.c: 232: SetChanADC( channel );
  5393  00209A  5015               	movf	adc@channel,w,c
  5394  00209C  EC3B  F011         	call	_SetChanADC
  5395                           
  5396                           ;sumovore.c: 233: ConvertADC();
  5397  0020A0  EC95  F011         	call	_ConvertADC	;wreg free
  5398                           
  5399                           ;sumovore.c: 234: while( BusyADC() );
  5400  0020A4  D000               	goto	l2184
  5401  0020A6                     l2184:
  5402  0020A6  EC79  F011         	call	_BusyADC	;wreg free
  5403  0020AA  0900               	iorlw	0
  5404  0020AC  A4D8               	btfss	status,2,c
  5405  0020AE  D7FB               	goto	l2184
  5406                           
  5407                           ;sumovore.c: 236: return ReadADC();
  5408  0020B0  EC6A  F011         	call	_ReadADC	;wreg free
  5409  0020B4  C00F  F013         	movff	?_ReadADC,?_adc
  5410  0020B8  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5411  0020BC  D000               	goto	l315
  5412  0020BE                     l315:
  5413  0020BE  0012               	return		;funcret
  5414  0020C0                     __end_of_adc:
  5415                           	opt stack 0
  5416                           stkptr	equ	0xFFC
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           intcon	equ	0xFF2
  5422                           postinc0	equ	0xFEE
  5423                           wreg	equ	0xFE8
  5424                           indf1	equ	0xFE7
  5425                           postinc1	equ	0xFE6
  5426                           fsr1h	equ	0xFE2
  5427                           fsr1l	equ	0xFE1
  5428                           indf2	equ	0xFDF
  5429                           postinc2	equ	0xFDE
  5430                           plusw2	equ	0xFDB
  5431                           fsr2h	equ	0xFDA
  5432                           fsr2l	equ	0xFD9
  5433                           status	equ	0xFD8
  5434                           
  5435 ;; *************** function _SetChanADC *****************
  5436 ;; Defined at:
  5437 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  channel         1    wreg     unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  channel         1   15[COMRAM] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;		None               void
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:        2 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    1
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_adc
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text44
  5466  002276                     __ptext44:
  5467                           	opt stack 0
  5468  002276                     _SetChanADC:
  5469                           	opt stack 27
  5470                           
  5471                           ;incstack = 0
  5472                           ;SetChanADC@channel stored from wreg
  5473  002276  6E10               	movwf	SetChanADC@channel,c
  5474  002278  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5475  00227C  0EC3               	movlw	195
  5476  00227E  160F               	andwf	??_SetChanADC,f,c
  5477  002280  90D8               	bcf	status,0,c
  5478  002282  3010               	rrcf	SetChanADC@channel,w,c
  5479  002284  0B3C               	andlw	60
  5480  002286  100F               	iorwf	??_SetChanADC,w,c
  5481  002288  6EC2               	movwf	4034,c	;volatile
  5482  00228A  0012               	return		;funcret
  5483  00228C                     __end_of_SetChanADC:
  5484                           	opt stack 0
  5485                           stkptr	equ	0xFFC
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           intcon	equ	0xFF2
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           indf1	equ	0xFE7
  5494                           postinc1	equ	0xFE6
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           plusw2	equ	0xFDB
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _ReadADC *****************
  5505 ;; Defined at:
  5506 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;		None
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  2   14[COMRAM] int 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;Total ram usage:        4 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_adc
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text45
  5535  0022D4                     __ptext45:
  5536                           	opt stack 0
  5537  0022D4                     _ReadADC:
  5538                           	opt stack 27
  5539                           
  5540                           ;incstack = 0
  5541  0022D4  50C4               	movf	4036,w,c	;volatile
  5542  0022D6  6E11               	movwf	??_ReadADC& (0+255),c
  5543  0022D8  50C3               	movf	4035,w,c	;volatile
  5544  0022DA  6E0F               	movwf	?_ReadADC,c
  5545  0022DC  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5546  0022E0  D000               	goto	l466
  5547  0022E2                     l466:
  5548  0022E2  0012               	return		;funcret
  5549  0022E4                     __end_of_ReadADC:
  5550                           	opt stack 0
  5551                           stkptr	equ	0xFFC
  5552                           tblptru	equ	0xFF8
  5553                           tblptrh	equ	0xFF7
  5554                           tblptrl	equ	0xFF6
  5555                           tablat	equ	0xFF5
  5556                           intcon	equ	0xFF2
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           indf1	equ	0xFE7
  5560                           postinc1	equ	0xFE6
  5561                           fsr1h	equ	0xFE2
  5562                           fsr1l	equ	0xFE1
  5563                           indf2	equ	0xFDF
  5564                           postinc2	equ	0xFDE
  5565                           plusw2	equ	0xFDB
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _ConvertADC *****************
  5571 ;; Defined at:
  5572 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;		None
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;		None               void
  5579 ;; Registers used:
  5580 ;;		None
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;Total ram usage:        0 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_adc
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text46
  5601  00232A                     __ptext46:
  5602                           	opt stack 0
  5603  00232A                     _ConvertADC:
  5604                           	opt stack 27
  5605                           
  5606                           ;incstack = 0
  5607  00232A  82C2               	bsf	4034,1,c	;volatile
  5608  00232C  0012               	return		;funcret
  5609  00232E                     __end_of_ConvertADC:
  5610                           	opt stack 0
  5611                           stkptr	equ	0xFFC
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           intcon	equ	0xFF2
  5617                           postinc0	equ	0xFEE
  5618                           wreg	equ	0xFE8
  5619                           indf1	equ	0xFE7
  5620                           postinc1	equ	0xFE6
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           indf2	equ	0xFDF
  5624                           postinc2	equ	0xFDE
  5625                           plusw2	equ	0xFDB
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function _BusyADC *****************
  5631 ;; Defined at:
  5632 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;		None
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      unsigned char 
  5639 ;; Registers used:
  5640 ;;		wreg
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        0 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_adc
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text47
  5661  0022F2                     __ptext47:
  5662                           	opt stack 0
  5663  0022F2                     _BusyADC:
  5664                           	opt stack 27
  5665                           
  5666                           ;incstack = 0
  5667  0022F2  A2C2               	btfss	4034,1,c	;volatile
  5668  0022F4  D002               	goto	u1470
  5669  0022F6  0E01               	movlw	1
  5670  0022F8  D002               	goto	l436
  5671  0022FA                     u1470:
  5672  0022FA  0E00               	movlw	0
  5673  0022FC  D000               	goto	l436
  5674  0022FE                     l436:
  5675  0022FE  0012               	return		;funcret
  5676  002300                     __end_of_BusyADC:
  5677                           	opt stack 0
  5678                           stkptr	equ	0xFFC
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           intcon	equ	0xFF2
  5684                           postinc0	equ	0xFEE
  5685                           wreg	equ	0xFE8
  5686                           indf1	equ	0xFE7
  5687                           postinc1	equ	0xFE6
  5688                           fsr1h	equ	0xFE2
  5689                           fsr1l	equ	0xFE1
  5690                           indf2	equ	0xFDF
  5691                           postinc2	equ	0xFDE
  5692                           plusw2	equ	0xFDB
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _WriteTimer0 *****************
  5698 ;; Defined at:
  5699 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  timer0          2   14[COMRAM] unsigned int 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  timer           2   16[COMRAM] struct Timers
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		None
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        4 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_main
  5724 ;;		_GetBackonTrack
  5725 ;;		_AllSensorsTriggered
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text48
  5730  0022C2                     __ptext48:
  5731                           	opt stack 0
  5732  0022C2                     _WriteTimer0:
  5733                           	opt stack 29
  5734                           
  5735                           ;incstack = 0
  5736  0022C2  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5737  0022C6  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5738  0022CA  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5739  0022CE  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5740  0022D2  0012               	return		;funcret
  5741  0022D4                     __end_of_WriteTimer0:
  5742                           	opt stack 0
  5743                           stkptr	equ	0xFFC
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           intcon	equ	0xFF2
  5749                           postinc0	equ	0xFEE
  5750                           wreg	equ	0xFE8
  5751                           indf1	equ	0xFE7
  5752                           postinc1	equ	0xFE6
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _MotorControl *****************
  5763 ;; Defined at:
  5764 ;;		line 159 in file "../Robot Files/main.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  delta_veloci    2   42[COMRAM] int 
  5767 ;;  speed_divide    1   44[COMRAM] unsigned char 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  right_duty_c    2   50[COMRAM] int 
  5770 ;;  left_duty_cy    2   48[COMRAM] int 
  5771 ;;  right_dir_mo    1   47[COMRAM] enum E4173
  5772 ;;  left_dir_mod    1   46[COMRAM] enum E4173
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;Total ram usage:       10 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    2
  5789 ;; This function calls:
  5790 ;;		_SetDCPWM1
  5791 ;;		_SetDCPWM2
  5792 ;;		___awdiv
  5793 ;;		___wmul
  5794 ;; This function is called by:
  5795 ;;		_PID_LineFollowing
  5796 ;;		_GetBackonTrack
  5797 ;;		_SharpTurn
  5798 ;;		_AllSensorsTriggered
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text49
  5803  001384                     __ptext49:
  5804                           	opt stack 0
  5805  001384                     _MotorControl:
  5806                           	opt stack 27
  5807                           
  5808                           ;main.c: 161: int left_duty_cycle = 700, right_duty_cycle = 700;
  5809                           
  5810                           ;incstack = 0
  5811  001384  0E02               	movlw	2
  5812  001386  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5813  001388  0EBC               	movlw	188
  5814  00138A  6E31               	movwf	MotorControl@left_duty_cycle,c
  5815  00138C  0E02               	movlw	2
  5816  00138E  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5817  001390  0EBC               	movlw	188
  5818  001392  6E33               	movwf	MotorControl@right_duty_cycle,c
  5819                           
  5820                           ;main.c: 162: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5821  001394  0E01               	movlw	1
  5822  001396  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5823  001398  0E01               	movlw	1
  5824  00139A  6E30               	movwf	MotorControl@right_dir_modifier,c
  5825                           
  5826                           ;main.c: 165: if ( delta_velocity < 0 )
  5827  00139C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5828  00139E  D023               	goto	l2252
  5829                           
  5830                           ;main.c: 166: {
  5831                           ;main.c: 167: left_duty_cycle += delta_velocity*15/16;
  5832  0013A0  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5833  0013A4  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5834  0013A8  0E00               	movlw	0
  5835  0013AA  6E20               	movwf	___wmul@multiplicand+1,c
  5836  0013AC  0E0F               	movlw	15
  5837  0013AE  6E1F               	movwf	___wmul@multiplicand,c
  5838  0013B0  EC60  F010         	call	___wmul	;wreg free
  5839  0013B4  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5840  0013B8  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5841  0013BC  0E00               	movlw	0
  5842  0013BE  6E26               	movwf	___awdiv@divisor+1,c
  5843  0013C0  0E10               	movlw	16
  5844  0013C2  6E25               	movwf	___awdiv@divisor,c
  5845  0013C4  EC70  F00D         	call	___awdiv	;wreg free
  5846  0013C8  5023               	movf	?___awdiv,w,c
  5847  0013CA  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5848  0013CC  5024               	movf	?___awdiv+1,w,c
  5849  0013CE  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5850                           
  5851                           ;main.c: 168: right_duty_cycle -= delta_velocity/16;
  5852  0013D0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5853  0013D4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5854  0013D8  0E00               	movlw	0
  5855  0013DA  6E26               	movwf	___awdiv@divisor+1,c
  5856  0013DC  0E10               	movlw	16
  5857  0013DE  6E25               	movwf	___awdiv@divisor,c
  5858  0013E0  EC70  F00D         	call	___awdiv	;wreg free
  5859  0013E4  D022               	goto	L8
  5860  0013E6                     l2252:
  5861                           
  5862                           ;main.c: 171: else
  5863                           ;main.c: 172: {
  5864                           ;main.c: 173: left_duty_cycle += delta_velocity/16;
  5865  0013E6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5866  0013EA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5867  0013EE  0E00               	movlw	0
  5868  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  5869  0013F2  0E10               	movlw	16
  5870  0013F4  6E25               	movwf	___awdiv@divisor,c
  5871  0013F6  EC70  F00D         	call	___awdiv	;wreg free
  5872  0013FA  5023               	movf	?___awdiv,w,c
  5873  0013FC  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5874  0013FE  5024               	movf	?___awdiv+1,w,c
  5875  001400  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5876                           
  5877                           ;main.c: 174: right_duty_cycle -= delta_velocity*15/16;
  5878  001402  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5879  001406  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5880  00140A  0E00               	movlw	0
  5881  00140C  6E20               	movwf	___wmul@multiplicand+1,c
  5882  00140E  0E0F               	movlw	15
  5883  001410  6E1F               	movwf	___wmul@multiplicand,c
  5884  001412  EC60  F010         	call	___wmul	;wreg free
  5885  001416  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5886  00141A  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5887  00141E  0E00               	movlw	0
  5888  001420  6E26               	movwf	___awdiv@divisor+1,c
  5889  001422  0E10               	movlw	16
  5890  001424  6E25               	movwf	___awdiv@divisor,c
  5891  001426  EC70  F00D         	call	___awdiv	;wreg free
  5892  00142A                     L8:
  5893  00142A  5023               	movf	?___awdiv,w,c
  5894  00142C  5E33               	subwf	MotorControl@right_duty_cycle,f,c
  5895  00142E  5024               	movf	?___awdiv+1,w,c
  5896  001430  5A34               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5897  001432  D000               	goto	l2256
  5898  001434                     l2256:
  5899                           
  5900                           ;main.c: 175: }
  5901                           ;main.c: 181: if (speed_divider)
  5902  001434  502D               	movf	MotorControl@speed_divider,w,c
  5903  001436  B4D8               	btfsc	status,2,c
  5904  001438  D01B               	goto	l2260
  5905                           
  5906                           ;main.c: 182: {
  5907                           ;main.c: 183: left_duty_cycle /= speed_divider;
  5908  00143A  C031  F023         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  5909  00143E  C032  F024         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  5910  001442  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5911  001446  6A26               	clrf	___awdiv@divisor+1,c
  5912  001448  EC70  F00D         	call	___awdiv	;wreg free
  5913  00144C  C023  F031         	movff	?___awdiv,MotorControl@left_duty_cycle
  5914  001450  C024  F032         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  5915                           
  5916                           ;main.c: 184: right_duty_cycle /= speed_divider;
  5917  001454  C033  F023         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  5918  001458  C034  F024         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  5919  00145C  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5920  001460  6A26               	clrf	___awdiv@divisor+1,c
  5921  001462  EC70  F00D         	call	___awdiv	;wreg free
  5922  001466  C023  F033         	movff	?___awdiv,MotorControl@right_duty_cycle
  5923  00146A  C024  F034         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  5924  00146E  D000               	goto	l2260
  5925  001470                     l2260:
  5926                           
  5927                           ;main.c: 185: }
  5928                           ;main.c: 188: if ( left_duty_cycle < 0 )
  5929  001470  AE32               	btfss	MotorControl@left_duty_cycle+1,7,c
  5930  001472  D010               	goto	l2266
  5931                           
  5932                           ;main.c: 189: {
  5933                           ;main.c: 190: left_dir_modifier = reverse;
  5934  001474  0E00               	movlw	0
  5935  001476  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5936                           
  5937                           ;main.c: 191: left_duty_cycle *= -1;
  5938  001478  C031  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5939  00147C  C032  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5940  001480  0EFF               	movlw	255
  5941  001482  6E20               	movwf	___wmul@multiplicand+1,c
  5942  001484  681F               	setf	___wmul@multiplicand,c
  5943  001486  EC60  F010         	call	___wmul	;wreg free
  5944  00148A  C01D  F031         	movff	?___wmul,MotorControl@left_duty_cycle
  5945  00148E  C01E  F032         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5946  001492  D000               	goto	l2266
  5947  001494                     l2266:
  5948                           
  5949                           ;main.c: 192: }
  5950                           ;main.c: 193: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5951  001494  BE32               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5952  001496  D00B               	goto	l2270
  5953  001498  0E21               	movlw	33
  5954  00149A  5C31               	subwf	MotorControl@left_duty_cycle,w,c
  5955  00149C  0E03               	movlw	3
  5956  00149E  5832               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5957  0014A0  A0D8               	btfss	status,0,c
  5958  0014A2  D005               	goto	l2270
  5959  0014A4  0E03               	movlw	3
  5960  0014A6  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5961  0014A8  0E20               	movlw	32
  5962  0014AA  6E31               	movwf	MotorControl@left_duty_cycle,c
  5963  0014AC  D000               	goto	l2270
  5964  0014AE                     l2270:
  5965                           
  5966                           ;main.c: 195: SetDCPWM2((unsigned int) left_duty_cycle );
  5967  0014AE  C031  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5968  0014B2  C032  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5969  0014B6  ECC9  F00F         	call	_SetDCPWM2	;wreg free
  5970                           
  5971                           ;main.c: 196: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5972  0014BA  502F               	movf	MotorControl@left_dir_modifier,w,c
  5973  0014BC  A4D8               	btfss	status,2,c
  5974  0014BE  D002               	goto	l121
  5975  0014C0  9082               	bcf	3970,0,c	;volatile
  5976  0014C2  D002               	goto	l2276
  5977  0014C4                     l121:
  5978                           
  5979                           ;main.c: 197: else PORTCbits.RC0 = 0b1;
  5980  0014C4  8082               	bsf	3970,0,c	;volatile
  5981  0014C6  D000               	goto	l2276
  5982  0014C8                     l2276:
  5983                           
  5984                           ;main.c: 198: PORTEbits.RE1 = !PORTCbits.RC0;
  5985  0014C8  B082               	btfsc	3970,0,c	;volatile
  5986  0014CA  D003               	goto	u1830
  5987  0014CC  6A2E               	clrf	??_MotorControl& (0+255),c
  5988  0014CE  2A2E               	incf	??_MotorControl& (0+255),f,c
  5989  0014D0  D001               	goto	u1848
  5990  0014D2                     u1830:
  5991  0014D2  6A2E               	clrf	??_MotorControl& (0+255),c
  5992  0014D4                     u1848:
  5993  0014D4  462E               	rlncf	??_MotorControl,f,c
  5994  0014D6  5084               	movf	3972,w,c	;volatile
  5995  0014D8  182E               	xorwf	??_MotorControl,w,c
  5996  0014DA  0BFD               	andlw	-3
  5997  0014DC  182E               	xorwf	??_MotorControl,w,c
  5998  0014DE  6E84               	movwf	3972,c	;volatile
  5999                           
  6000                           ;main.c: 201: if ( right_duty_cycle < 0 )
  6001  0014E0  AE34               	btfss	MotorControl@right_duty_cycle+1,7,c
  6002  0014E2  D010               	goto	l2282
  6003                           
  6004                           ;main.c: 202: {
  6005                           ;main.c: 203: right_dir_modifier = reverse;
  6006  0014E4  0E00               	movlw	0
  6007  0014E6  6E30               	movwf	MotorControl@right_dir_modifier,c
  6008                           
  6009                           ;main.c: 204: right_duty_cycle *= -1;
  6010  0014E8  C033  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  6011  0014EC  C034  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  6012  0014F0  0EFF               	movlw	255
  6013  0014F2  6E20               	movwf	___wmul@multiplicand+1,c
  6014  0014F4  681F               	setf	___wmul@multiplicand,c
  6015  0014F6  EC60  F010         	call	___wmul	;wreg free
  6016  0014FA  C01D  F033         	movff	?___wmul,MotorControl@right_duty_cycle
  6017  0014FE  C01E  F034         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  6018  001502  D000               	goto	l2282
  6019  001504                     l2282:
  6020                           
  6021                           ;main.c: 205: }
  6022                           ;main.c: 206: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  6023  001504  BE34               	btfsc	MotorControl@right_duty_cycle+1,7,c
  6024  001506  D00B               	goto	l2286
  6025  001508  0E21               	movlw	33
  6026  00150A  5C33               	subwf	MotorControl@right_duty_cycle,w,c
  6027  00150C  0E03               	movlw	3
  6028  00150E  5834               	subwfb	MotorControl@right_duty_cycle+1,w,c
  6029  001510  A0D8               	btfss	status,0,c
  6030  001512  D005               	goto	l2286
  6031  001514  0E03               	movlw	3
  6032  001516  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  6033  001518  0E20               	movlw	32
  6034  00151A  6E33               	movwf	MotorControl@right_duty_cycle,c
  6035  00151C  D000               	goto	l2286
  6036  00151E                     l2286:
  6037                           
  6038                           ;main.c: 208: SetDCPWM1((unsigned int) right_duty_cycle );
  6039  00151E  C033  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  6040  001522  C034  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  6041  001526  ECE6  F00F         	call	_SetDCPWM1	;wreg free
  6042                           
  6043                           ;main.c: 209: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  6044  00152A  5030               	movf	MotorControl@right_dir_modifier,w,c
  6045  00152C  A4D8               	btfss	status,2,c
  6046  00152E  D002               	goto	l125
  6047  001530  9A82               	bcf	3970,5,c	;volatile
  6048  001532  D002               	goto	l2292
  6049  001534                     l125:
  6050                           
  6051                           ;main.c: 210: else PORTCbits.RC5 = 0b1;
  6052  001534  8A82               	bsf	3970,5,c	;volatile
  6053  001536  D000               	goto	l2292
  6054  001538                     l2292:
  6055                           
  6056                           ;main.c: 211: PORTEbits.RE0 = !PORTCbits.RC5;
  6057  001538  BA82               	btfsc	3970,5,c	;volatile
  6058  00153A  D003               	goto	u1880
  6059  00153C  6A2E               	clrf	??_MotorControl& (0+255),c
  6060  00153E  2A2E               	incf	??_MotorControl& (0+255),f,c
  6061  001540  D001               	goto	u1898
  6062  001542                     u1880:
  6063  001542  6A2E               	clrf	??_MotorControl& (0+255),c
  6064  001544                     u1898:
  6065  001544  5084               	movf	3972,w,c	;volatile
  6066  001546  182E               	xorwf	??_MotorControl,w,c
  6067  001548  0BFE               	andlw	-2
  6068  00154A  182E               	xorwf	??_MotorControl,w,c
  6069  00154C  6E84               	movwf	3972,c	;volatile
  6070  00154E  0012               	return		;funcret
  6071  001550                     __end_of_MotorControl:
  6072                           	opt stack 0
  6073                           stkptr	equ	0xFFC
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           intcon	equ	0xFF2
  6079                           postinc0	equ	0xFEE
  6080                           wreg	equ	0xFE8
  6081                           indf1	equ	0xFE7
  6082                           postinc1	equ	0xFE6
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           plusw2	equ	0xFDB
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function ___wmul *****************
  6093 ;; Defined at:
  6094 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  multiplier      2   28[COMRAM] unsigned int 
  6097 ;;  multiplicand    2   30[COMRAM] unsigned int 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  product         2   32[COMRAM] unsigned int 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  2   28[COMRAM] unsigned int 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0, prodl, prodh
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;Total ram usage:        6 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:    1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_PID_LineFollowing
  6120 ;;		_MotorControl
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text50
  6125  0020C0                     __ptext50:
  6126                           	opt stack 0
  6127  0020C0                     ___wmul:
  6128                           	opt stack 28
  6129                           
  6130                           ;incstack = 0
  6131  0020C0  501D               	movf	___wmul@multiplier,w,c
  6132  0020C2  021F               	mulwf	___wmul@multiplicand,c
  6133  0020C4  CFF3 F021          	movff	prodl,___wmul@product
  6134  0020C8  CFF4 F022          	movff	prodh,___wmul@product+1
  6135  0020CC  501D               	movf	___wmul@multiplier,w,c
  6136  0020CE  0220               	mulwf	___wmul@multiplicand+1,c
  6137  0020D0  50F3               	movf	prodl,w,c
  6138  0020D2  2622               	addwf	___wmul@product+1,f,c
  6139  0020D4  501E               	movf	___wmul@multiplier+1,w,c
  6140  0020D6  021F               	mulwf	___wmul@multiplicand,c
  6141  0020D8  50F3               	movf	prodl,w,c
  6142  0020DA  2622               	addwf	___wmul@product+1,f,c
  6143  0020DC  C021  F01D         	movff	___wmul@product,?___wmul
  6144  0020E0  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6145  0020E4  D000               	goto	l626
  6146  0020E6                     l626:
  6147  0020E6  0012               	return		;funcret
  6148  0020E8                     __end_of___wmul:
  6149                           	opt stack 0
  6150                           stkptr	equ	0xFFC
  6151                           tblptru	equ	0xFF8
  6152                           tblptrh	equ	0xFF7
  6153                           tblptrl	equ	0xFF6
  6154                           tablat	equ	0xFF5
  6155                           prodh	equ	0xFF4
  6156                           prodl	equ	0xFF3
  6157                           intcon	equ	0xFF2
  6158                           postinc0	equ	0xFEE
  6159                           wreg	equ	0xFE8
  6160                           indf1	equ	0xFE7
  6161                           postinc1	equ	0xFE6
  6162                           fsr1h	equ	0xFE2
  6163                           fsr1l	equ	0xFE1
  6164                           indf2	equ	0xFDF
  6165                           postinc2	equ	0xFDE
  6166                           plusw2	equ	0xFDB
  6167                           fsr2h	equ	0xFDA
  6168                           fsr2l	equ	0xFD9
  6169                           status	equ	0xFD8
  6170                           
  6171 ;; *************** function ___awdiv *****************
  6172 ;; Defined at:
  6173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  dividend        2   34[COMRAM] int 
  6176 ;;  divisor         2   36[COMRAM] int 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  quotient        2   40[COMRAM] int 
  6179 ;;  sign            1   39[COMRAM] unsigned char 
  6180 ;;  counter         1   38[COMRAM] unsigned char 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  2   34[COMRAM] int 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;Total ram usage:        8 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    1
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_MotorControl
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text51
  6205  001AE0                     __ptext51:
  6206                           	opt stack 0
  6207  001AE0                     ___awdiv:
  6208                           	opt stack 27
  6209                           
  6210                           ;incstack = 0
  6211  001AE0  0E00               	movlw	0
  6212  001AE2  6E28               	movwf	___awdiv@sign,c
  6213  001AE4  AE26               	btfss	___awdiv@divisor+1,7,c
  6214  001AE6  D007               	goto	l2204
  6215  001AE8  6C25               	negf	___awdiv@divisor,c
  6216  001AEA  1E26               	comf	___awdiv@divisor+1,f,c
  6217  001AEC  B0D8               	btfsc	status,0,c
  6218  001AEE  2A26               	incf	___awdiv@divisor+1,f,c
  6219  001AF0  0E01               	movlw	1
  6220  001AF2  6E28               	movwf	___awdiv@sign,c
  6221  001AF4  D000               	goto	l2204
  6222  001AF6                     l2204:
  6223  001AF6  AE24               	btfss	___awdiv@dividend+1,7,c
  6224  001AF8  D007               	goto	l2210
  6225  001AFA  6C23               	negf	___awdiv@dividend,c
  6226  001AFC  1E24               	comf	___awdiv@dividend+1,f,c
  6227  001AFE  B0D8               	btfsc	status,0,c
  6228  001B00  2A24               	incf	___awdiv@dividend+1,f,c
  6229  001B02  0E01               	movlw	1
  6230  001B04  1A28               	xorwf	___awdiv@sign,f,c
  6231  001B06  D000               	goto	l2210
  6232  001B08                     l2210:
  6233  001B08  0E00               	movlw	0
  6234  001B0A  6E2A               	movwf	___awdiv@quotient+1,c
  6235  001B0C  0E00               	movlw	0
  6236  001B0E  6E29               	movwf	___awdiv@quotient,c
  6237  001B10  5025               	movf	___awdiv@divisor,w,c
  6238  001B12  1026               	iorwf	___awdiv@divisor+1,w,c
  6239  001B14  B4D8               	btfsc	status,2,c
  6240  001B16  D021               	goto	l2232
  6241  001B18  0E01               	movlw	1
  6242  001B1A  6E27               	movwf	___awdiv@counter,c
  6243  001B1C  D005               	goto	l2218
  6244  001B1E                     l2216:
  6245  001B1E  90D8               	bcf	status,0,c
  6246  001B20  3625               	rlcf	___awdiv@divisor,f,c
  6247  001B22  3626               	rlcf	___awdiv@divisor+1,f,c
  6248  001B24  2A27               	incf	___awdiv@counter,f,c
  6249  001B26  D000               	goto	l2218
  6250  001B28                     l2218:
  6251  001B28  BE26               	btfsc	___awdiv@divisor+1,7,c
  6252  001B2A  D002               	goto	l2220
  6253  001B2C  D7F8               	goto	l2216
  6254  001B2E  D000               	goto	l2220
  6255  001B30                     l2220:
  6256  001B30  90D8               	bcf	status,0,c
  6257  001B32  3629               	rlcf	___awdiv@quotient,f,c
  6258  001B34  362A               	rlcf	___awdiv@quotient+1,f,c
  6259  001B36  5025               	movf	___awdiv@divisor,w,c
  6260  001B38  5C23               	subwf	___awdiv@dividend,w,c
  6261  001B3A  5026               	movf	___awdiv@divisor+1,w,c
  6262  001B3C  5824               	subwfb	___awdiv@dividend+1,w,c
  6263  001B3E  A0D8               	btfss	status,0,c
  6264  001B40  D006               	goto	l2228
  6265  001B42  5025               	movf	___awdiv@divisor,w,c
  6266  001B44  5E23               	subwf	___awdiv@dividend,f,c
  6267  001B46  5026               	movf	___awdiv@divisor+1,w,c
  6268  001B48  5A24               	subwfb	___awdiv@dividend+1,f,c
  6269  001B4A  8029               	bsf	___awdiv@quotient,0,c
  6270  001B4C  D000               	goto	l2228
  6271  001B4E                     l2228:
  6272  001B4E  90D8               	bcf	status,0,c
  6273  001B50  3226               	rrcf	___awdiv@divisor+1,f,c
  6274  001B52  3225               	rrcf	___awdiv@divisor,f,c
  6275  001B54  2E27               	decfsz	___awdiv@counter,f,c
  6276  001B56  D7EC               	goto	l2220
  6277  001B58  D000               	goto	l2232
  6278  001B5A                     l2232:
  6279  001B5A  5028               	movf	___awdiv@sign,w,c
  6280  001B5C  B4D8               	btfsc	status,2,c
  6281  001B5E  D005               	goto	l2236
  6282  001B60  6C29               	negf	___awdiv@quotient,c
  6283  001B62  1E2A               	comf	___awdiv@quotient+1,f,c
  6284  001B64  B0D8               	btfsc	status,0,c
  6285  001B66  2A2A               	incf	___awdiv@quotient+1,f,c
  6286  001B68  D000               	goto	l2236
  6287  001B6A                     l2236:
  6288  001B6A  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6289  001B6E  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6290  001B72  D000               	goto	l819
  6291  001B74                     l819:
  6292  001B74  0012               	return		;funcret
  6293  001B76                     __end_of___awdiv:
  6294                           	opt stack 0
  6295                           stkptr	equ	0xFFC
  6296                           tblptru	equ	0xFF8
  6297                           tblptrh	equ	0xFF7
  6298                           tblptrl	equ	0xFF6
  6299                           tablat	equ	0xFF5
  6300                           prodh	equ	0xFF4
  6301                           prodl	equ	0xFF3
  6302                           intcon	equ	0xFF2
  6303                           postinc0	equ	0xFEE
  6304                           wreg	equ	0xFE8
  6305                           indf1	equ	0xFE7
  6306                           postinc1	equ	0xFE6
  6307                           fsr1h	equ	0xFE2
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           postinc2	equ	0xFDE
  6311                           plusw2	equ	0xFDB
  6312                           fsr2h	equ	0xFDA
  6313                           fsr2l	equ	0xFD9
  6314                           status	equ	0xFD8
  6315                           
  6316 ;; *************** function _SetDCPWM2 *****************
  6317 ;; Defined at:
  6318 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6323 ;; Return value:  Size  Location     Type
  6324 ;;		None               void
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;Total ram usage:        6 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_MotorControl
  6343 ;;		_initialization
  6344 ;;		_motors_brake_all
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text52
  6349  001F92                     __ptext52:
  6350                           	opt stack 0
  6351  001F92                     _SetDCPWM2:
  6352                           	opt stack 28
  6353                           
  6354                           ;incstack = 0
  6355  001F92  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6356  001F96  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6357  001F9A  0E06               	movlw	6
  6358  001F9C                     u1495:
  6359  001F9C  90D8               	bcf	status,0,c
  6360  001F9E  3611               	rlcf	??_SetDCPWM2,f,c
  6361  001FA0  3612               	rlcf	??_SetDCPWM2+1,f,c
  6362  001FA2  2EE8               	decfsz	wreg,f,c
  6363  001FA4  D7FB               	goto	u1495
  6364  001FA6  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6365  001FAA  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6366  001FAE  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6367  001FB2  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6368  001FB6  90D8               	bcf	status,0,c
  6369  001FB8  3211               	rrcf	??_SetDCPWM2,f,c
  6370  001FBA  90D8               	bcf	status,0,c
  6371  001FBC  3211               	rrcf	??_SetDCPWM2,f,c
  6372  001FBE  0E30               	movlw	48
  6373  001FC0  1611               	andwf	??_SetDCPWM2,f,c
  6374  001FC2  50BA               	movf	4026,w,c	;volatile
  6375  001FC4  0BCF               	andlw	207
  6376  001FC6  1011               	iorwf	??_SetDCPWM2,w,c
  6377  001FC8  6EBA               	movwf	4026,c	;volatile
  6378  001FCA  0012               	return		;funcret
  6379  001FCC                     __end_of_SetDCPWM2:
  6380                           	opt stack 0
  6381                           stkptr	equ	0xFFC
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           postinc0	equ	0xFEE
  6390                           wreg	equ	0xFE8
  6391                           indf1	equ	0xFE7
  6392                           postinc1	equ	0xFE6
  6393                           fsr1h	equ	0xFE2
  6394                           fsr1l	equ	0xFE1
  6395                           indf2	equ	0xFDF
  6396                           postinc2	equ	0xFDE
  6397                           plusw2	equ	0xFDB
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _SetDCPWM1 *****************
  6403 ;; Defined at:
  6404 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6409 ;; Return value:  Size  Location     Type
  6410 ;;		None               void
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        6 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_MotorControl
  6429 ;;		_initialization
  6430 ;;		_motors_brake_all
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text53
  6435  001FCC                     __ptext53:
  6436                           	opt stack 0
  6437  001FCC                     _SetDCPWM1:
  6438                           	opt stack 28
  6439                           
  6440                           ;incstack = 0
  6441  001FCC  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6442  001FD0  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6443  001FD4  0E06               	movlw	6
  6444  001FD6                     u1505:
  6445  001FD6  90D8               	bcf	status,0,c
  6446  001FD8  3611               	rlcf	??_SetDCPWM1,f,c
  6447  001FDA  3612               	rlcf	??_SetDCPWM1+1,f,c
  6448  001FDC  2EE8               	decfsz	wreg,f,c
  6449  001FDE  D7FB               	goto	u1505
  6450  001FE0  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6451  001FE4  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6452  001FE8  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6453  001FEC  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6454  001FF0  90D8               	bcf	status,0,c
  6455  001FF2  3211               	rrcf	??_SetDCPWM1,f,c
  6456  001FF4  90D8               	bcf	status,0,c
  6457  001FF6  3211               	rrcf	??_SetDCPWM1,f,c
  6458  001FF8  0E30               	movlw	48
  6459  001FFA  1611               	andwf	??_SetDCPWM1,f,c
  6460  001FFC  50BD               	movf	4029,w,c	;volatile
  6461  001FFE  0BCF               	andlw	207
  6462  002000  1011               	iorwf	??_SetDCPWM1,w,c
  6463  002002  6EBD               	movwf	4029,c	;volatile
  6464  002004  0012               	return		;funcret
  6465  002006                     __end_of_SetDCPWM1:
  6466                           	opt stack 0
  6467                           stkptr	equ	0xFFC
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           postinc1	equ	0xFE6
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           plusw2	equ	0xFDB
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function _high_isr *****************
  6489 ;; Defined at:
  6490 ;;		line 24 in file "../Robot Files/interrupts.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;		None               void
  6497 ;; Registers used:
  6498 ;;		wreg, status,2
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;Total ram usage:       14 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		Interrupt level 2
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	intcode
  6518  000008                     __pintcode:
  6519                           	opt stack 0
  6520  000008                     _high_isr:
  6521                           	opt stack 25
  6522                           
  6523                           ;incstack = 0
  6524  000008  CFFA F001          	movff	pclath,??_high_isr
  6525  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6526  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6527  000014  ED42  F00E         	call	int_func,f	;refresh shadow registers
  6528                           stkptr	equ	0xFFC
  6529                           pclatu	equ	0xFFB
  6530                           pclath	equ	0xFFA
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           intcon	equ	0xFF2
  6538                           postinc0	equ	0xFEE
  6539                           fsr0l	equ	0xFE9
  6540                           wreg	equ	0xFE8
  6541                           indf1	equ	0xFE7
  6542                           postinc1	equ	0xFE6
  6543                           fsr1h	equ	0xFE2
  6544                           fsr1l	equ	0xFE1
  6545                           indf2	equ	0xFDF
  6546                           postinc2	equ	0xFDE
  6547                           plusw2	equ	0xFDB
  6548                           fsr2h	equ	0xFDA
  6549                           fsr2l	equ	0xFD9
  6550                           status	equ	0xFD8
  6551                           
  6552                           	psect	intcode_body
  6553  001C84                     __pintcode_body:
  6554                           	opt stack 25
  6555  001C84                     int_func:
  6556                           	opt stack 25
  6557  001C84  0006               	pop		; remove dummy address from shadow register refresh
  6558  001C86  CFEA F004          	movff	fsr0h,??_high_isr+3
  6559  001C8A  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6560  001C8E  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6561  001C92  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6562  001C96  CFDA F008          	movff	fsr2h,??_high_isr+7
  6563  001C9A  CFF3 F009          	movff	prodl,??_high_isr+8
  6564  001C9E  CFF4 F00A          	movff	prodh,??_high_isr+9
  6565  001CA2  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6566  001CA6  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6567  001CAA  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6568  001CAE  CFF5 F00E          	movff	tablat,??_high_isr+13
  6569                           
  6570                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6571  001CB2  94A1               	bcf	4001,2,c	;volatile
  6572                           
  6573                           ;interrupts.c: 27: TRISA = 0xff;
  6574  001CB4  6892               	setf	3986,c	;volatile
  6575                           
  6576                           ;interrupts.c: 28: TRISB = 0xff;
  6577  001CB6  6893               	setf	3987,c	;volatile
  6578                           
  6579                           ;interrupts.c: 29: TRISC = 0xff;
  6580  001CB8  6894               	setf	3988,c	;volatile
  6581                           
  6582                           ;interrupts.c: 30: TRISD = 0xff;
  6583  001CBA  6895               	setf	3989,c	;volatile
  6584                           
  6585                           ;interrupts.c: 31: TRISE = 0x03;
  6586  001CBC  0E03               	movlw	3
  6587  001CBE  6E96               	movwf	3990,c	;volatile
  6588                           
  6589                           ;interrupts.c: 32: lvd_flag =1;
  6590  001CC0  0E01               	movlw	1
  6591  001CC2  6E4F               	movwf	_lvd_flag,c
  6592                           
  6593                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6594  001CC4  94A0               	bcf	4000,2,c	;volatile
  6595                           
  6596                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6597  001CC6  98D2               	bcf	4050,4,c	;volatile
  6598  001CC8  C00E  FFF5         	movff	??_high_isr+13,tablat
  6599  001CCC  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6600  001CD0  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6601  001CD4  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6602  001CD8  C00A  FFF4         	movff	??_high_isr+9,prodh
  6603  001CDC  C009  FFF3         	movff	??_high_isr+8,prodl
  6604  001CE0  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6605  001CE4  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6606  001CE8  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6607  001CEC  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6608  001CF0  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6609  001CF4  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6610  001CF8  C002  FFFB         	movff	??_high_isr+1,pclatu
  6611  001CFC  C001  FFFA         	movff	??_high_isr,pclath
  6612  001D00  0011               	retfie		f
  6613  001D02                     __end_of_high_isr:
  6614                           	opt stack 0
  6615                           stkptr	equ	0xFFC
  6616                           pclatu	equ	0xFFB
  6617                           pclath	equ	0xFFA
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           postinc0	equ	0xFEE
  6626                           fsr0h	equ	0xFEA
  6627                           fsr0l	equ	0xFE9
  6628                           wreg	equ	0xFE8
  6629                           indf1	equ	0xFE7
  6630                           postinc1	equ	0xFE6
  6631                           fsr1h	equ	0xFE2
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           postinc2	equ	0xFDE
  6635                           plusw2	equ	0xFDB
  6636                           fsr2h	equ	0xFDA
  6637                           fsr2l	equ	0xFD9
  6638                           status	equ	0xFD8
  6639                           stkptr	equ	0xFFC
  6640                           pclatu	equ	0xFFB
  6641                           pclath	equ	0xFFA
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodh	equ	0xFF4
  6647                           prodl	equ	0xFF3
  6648                           intcon	equ	0xFF2
  6649                           postinc0	equ	0xFEE
  6650                           fsr0h	equ	0xFEA
  6651                           fsr0l	equ	0xFE9
  6652                           wreg	equ	0xFE8
  6653                           indf1	equ	0xFE7
  6654                           postinc1	equ	0xFE6
  6655                           fsr1h	equ	0xFE2
  6656                           fsr1l	equ	0xFE1
  6657                           indf2	equ	0xFDF
  6658                           postinc2	equ	0xFDE
  6659                           plusw2	equ	0xFDB
  6660                           fsr2h	equ	0xFDA
  6661                           fsr2l	equ	0xFD9
  6662                           status	equ	0xFD8
  6663                           
  6664                           	psect	rparam
  6665  0000                     stkptr	equ	0xFFC
  6666                           pclatu	equ	0xFFB
  6667                           pclath	equ	0xFFA
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           prodh	equ	0xFF4
  6673                           prodl	equ	0xFF3
  6674                           intcon	equ	0xFF2
  6675                           postinc0	equ	0xFEE
  6676                           fsr0h	equ	0xFEA
  6677                           fsr0l	equ	0xFE9
  6678                           wreg	equ	0xFE8
  6679                           indf1	equ	0xFE7
  6680                           postinc1	equ	0xFE6
  6681                           fsr1h	equ	0xFE2
  6682                           fsr1l	equ	0xFE1
  6683                           indf2	equ	0xFDF
  6684                           postinc2	equ	0xFDE
  6685                           plusw2	equ	0xFDB
  6686                           fsr2h	equ	0xFDA
  6687                           fsr2l	equ	0xFD9
  6688                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   27063
                                             61 COMRAM     3     3      0
                _AllSensorsTriggered
                  _FilterNearbyTrack
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    6606
                                             52 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9865
                                             56 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4673
                                             52 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _FilterNearbyTrack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  1     1      0    4971
                                             52 COMRAM     1     1      0
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      44
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      44
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     388
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3995
                                             42 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _FilterNearbyTrack
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      4F       1       62.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 02:20:54 2020

                     _STKPTRbits 000FFC                                _I 0048  
                             l72 17B4                               l76 170C  
                   ___awdiv@sign 0028              ___wmul@multiplicand 001F  
                    __CFG_BORV$0 000000                              l112 132C  
                            l121 14C4                              l125 1534  
                            l401 2096                              l315 20BE  
                            l332 1F90                              l181 21C2  
                            l149 16B4                              l341 1A34  
                            l159 1AD6                              l335 1A20  
                            l336 19C6                              l600 2274  
                            l328 1F80                              l178 1D76  
                            l186 21D0                              l362 1DF8  
                            l530 2192                              l506 2028  
                            l187 21D4                              l507 2032  
                            l436 22FE                              l508 2034  
                            l392 2304                              l529 2190  
                            l609 2132                              l626 20E6  
                            l466 22E2                              l458 1EA4  
                            l618 210C                              l558 2242  
                            l590 1DCA                              l559 2244  
                            l591 1DCC                              l584 1DA4  
                            l593 1DE6                              l819 1B74  
                            l588 1DBE                              l589 1DC0  
                            l695 18C4                              _PR2 000FCB  
           __size_of_WriteTimer0 0012                              _adc 2098  
                            wreg 000FE8                  ReadTimer0@timer 0011  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           ?_adc 0013                             l1144 1EFA  
                           l2210 1B08                             l1154 1F46  
                           l2220 1B30                             l2204 1AF6  
                           l1404 2122                             l1412 212A  
                           l1500 2100                             l2216 1B1E  
                           l2232 1B5A                             l1272 1E22  
                           l1408 2126                             l1416 212E  
                           l1504 2104                             l2218 1B28  
                           l2170 2050                             l2330 19FC  
                           l1602 207C                             l2236 1B6A  
                           l2228 1B4E                             l2260 1470  
                           l2252 13E6                             l2420 1A90  
                           l1276 1E3A                             l1460 226C  
                           l1508 2108                             l2270 14AE  
                           l2422 1A96                             l2334 1A14  
                           l2502 1F8A                             l1606 2090  
                           l2256 1434                             l2184 20A6  
                           l2424 1AA0                             l2432 1AC2  
                           l2408 1A5C                             l2416 1A80  
                           l2168 2048                             l1464 2270  
                           l2282 1504                             l2266 1494  
                           l2530 1820                             l2292 1538  
                           l2276 14C8                             l2436 1AD2  
                           l2540 1858                             l2524 1806  
                           l2452 1D9C                             l2444 1D8A  
                           l2286 151E                             l2720 1D68  
                           l2704 1D12                             l2536 1842  
                           l2552 189A                             l1728 2024  
                           l2464 1DB6                             l2456 1DA8  
                           l2448 1D94                             l1496 20FC  
                           l2714 1D3A                             l2650 1582  
                           l2538 1850                             l2570 1ED0  
                           l2810 1710                             l2802 16FC  
                           l2708 1D2C                             l2660 15C4  
                           l2652 158A                             l2556 18B2  
                           l2548 188A                             l2740 1136  
                           l2732 10F0                             l2492 1F60  
                           l2812 1714                             l2804 1700  
                           l2718 1D5E                             l2566 1EBE  
                           l2590 1F24                             l2726 10BE  
                           l2750 119C                             l2814 1718  
                           l2806 1704                             l2664 15D4  
                           l2568 1EC8                             l2744 1158  
                           l2736 1116                             l2728 10CE  
                           l2496 1F70                             l2832 174C  
                           l2824 1734                             l2816 171C  
                           l2808 1708                             l2840 1766  
                           l2674 1610                             l2658 15BC  
                           l2578 1EEE                             l2594 1F3A  
                           l2586 1F12                             l2738 1126  
                           l2834 175A                             l2684 1654  
                           l2668 15EE                             l2588 1F1C  
                           l2748 117E                             l2844 17C2  
                           l2836 1760                             l2694 168C  
                           l2758 126C                             l2688 1674  
                           l2698 16A6                             l2798 16F2  
                __end_of_BORtask 2176                             STR_1 100A  
                           STR_2 1073                             STR_3 106D  
                           STR_4 105D                             STR_5 1054  
                           STR_6 104A                             STR_7 1066  
                           u1600 1904                             u1505 1FD6  
                           u1620 192E                             u1700 1C26  
                           u1470 22FA                             u1640 1956  
                           u1720 1C3E                             u1618 1906  
                           u1660 197C                             u1580 18DE  
                           u1740 1C58                             u1830 14D2  
                           u1638 1930                             u1718 1C28  
                           u1495 1F9C                             u2607 167A  
                           u1760 1C74                             u1680 1C10  
                           u2617 1A42                             u1658 1958  
                           u1738 1C40                             u1678 197E  
                           u1598 18E0                             u1758 1C5A  
                           u1880 1542                             u1848 14D4  
                           u1778 1C76                             u1698 1C12  
                           u2597 1624                             u1898 1544  
                ?_GetBackonTrack 0039                             _TMR2 000FCC  
                   __CFG_WDTPS$8 000000                 ??_initialization 001C  
                           _main 16B6            __end_of_check_sensors 198A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                    __CFG_BOREN$ON 000000  
                __end_of_PORtask 1A36                             prodh 000FF4  
                           prodl 000FF3       MotorControl@delta_velocity 002B  
                           start 0018                  __end_of_WDTtask 2210  
                   ___param_bank 000010                  __end_of_BusyADC 2300  
                __end_of_ReadADC 22E4                  __end_of_OpenADC 1EA8  
                          ??_adc 0015           PID_LineFollowing@error 0035  
                __end_of___aldiv 18C6                            ?_main 0001  
                __end_of___awdiv 1B76                            _T0CON 000FD5  
                ___awdiv@divisor 0025                            _T2CON 000FCA  
                __end_of___lwdiv 1F04                  __end_of___lwmod 1F50  
                ___awdiv@counter 0027               __size_of_RESETtask 001C  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TXSTA 000FAC                  __end_of_isWDTTO 210E  
        __end_of_openPORTCforPWM 22F2                            _isBOR 2260  
                          _isPOR 210E                            _gtrap 1DE8  
                          _putch 232E                  __end_of_openLVD 2260  
                   _TURN_TIME_ms 1007                       _ConvertADC 232A  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 228C                     __end_of_main 17E8  
                     _ReadTimer0 22B0                 __end_of_OpenPWM1 22B0  
               __end_of_OpenPWM2 203E                           ??_main 003E  
                  __activetblptr 000003                       _SetChanADC 2276  
                      ??_BORtask 0014        MotorControl@speed_divider 002D  
                         ?_isBOR 0001              GetBackonTrack@error 0039  
                         ?_isPOR 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_gtrap 0001                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                 ___awdiv@dividend 0023  
                         ?_putch 0001                        ??_PORtask 0014  
                      ??_WDTtask 0014                       _OpenTimer0 2176  
                     _OpenTimer2 222C                           _TMR0IF 007F92  
                         _SPBRGH 000FB0               __size_of_SetDCPWM1 003A  
             __size_of_SetDCPWM2 003A                        ??_BusyADC 000F  
                      ??_ReadADC 0011                           _LVtrap 2196  
              __end_of_RESETtask 222C                        ??_OpenADC 0011  
                   ?_reset_codes 0001                 __end_of_high_isr 1D02  
             __size_of_OpenUSART 0070                        ??___aldiv 0017  
                         ___wmul 20C0                        ??___awdiv 0027  
                 __CFG_STVREN$ON 000000                 OpenTimer0@config 000F  
                      ??___lwdiv 0017                        ??___lwmod 0017  
             __size_of_SharpTurn 00AA                 OpenTimer2@config 000F  
                         clear_0 2292                 ___awdiv@quotient 0029  
                      ??_isWDTTO 000F                           _printf 203E  
               __end_of_set_leds 1C84                        ??_openLVD 000F  
            __size_of_STKFULtask 001E                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_openPORTCforPWM 0001  
              ?_motors_brake_all 0001                           putch@c 0001  
             ??_motors_brake_all 0015                      ?_ConvertADC 0001  
                     __accesstop 0080          __end_of__initialization 2298  
              _FilterNearbyTrack 21B6                       adc@channel 0015  
                  ___rparam_used 000001               ?_FilterNearbyTrack 0001  
          __end_of_set_osc_32MHz 2098                   __pcstackCOMRAM 0001  
                    ?_ReadTimer0 000F                    __end_of_isBOR 2276  
                  __end_of_isPOR 2134                    __end_of_gtrap 1E4A  
        _AllSensorsTriggered$476 0035              ??_FilterNearbyTrack 000F  
                  __end_of_putch 2330     __size_of_AllSensorsTriggered 0076  
              __end_of_SetDCPWM1 2006                __end_of_SetDCPWM2 1FCC  
                  ??_StatusReset 000F                      ?_SetChanADC 0001  
               ??_GetBackonTrack 003B                    ?_lvd_flag_set 0001  
                        ??_isBOR 000F                          ??_isPOR 000F  
              __end_of_OpenUSART 1DE8                          ??_gtrap 000F  
                        ??_putch 000F        __end_of_FilterNearbyTrack 21D6  
                    ?_OpenTimer0 0001                      ?_OpenTimer2 0001  
              __end_of_SharpTurn 1AE0                        ?_OpenPWM1 0001  
                      ?_OpenPWM2 0001                          ?_LVtrap 0001  
                  ?_MotorControl 002B               __end_of_D_CONSTANT 1003  
             __size_of_openPORTA 0006               __size_of_openPORTB 0006  
             __size_of_openPORTD 0006               __size_of_openPORTE 0006  
                        ?___wmul 001D                          _CCP1CON 000FBD  
                        _CCP2CON 000FBA                 WriteTimer0@timer 0011  
                  ??_WriteTimer0 0011                _CCW_rotation_flag 004C  
            __size_of_ConvertADC 0004                          ?_printf 000F  
                        _BORtask 2156                   ??_lvd_flag_set 000F  
                      ?_high_isr 0001              __end_of_StatusReset 230C  
            __size_of_ReadTimer0 0012                          _PORtask 198A  
             __end_of_I_CONSTANT 1005                          _WDTtask 21F4  
                        _BusyADC 22F2                          _ReadADC 22D4  
                     ??_OpenPWM1 000F                       ??_OpenPWM2 000F  
                   ??_STKFULtask 0014                          _SeeLine 004E  
                 ??_MotorControl 002E                          _OpenADC 1E4A  
                __size_of_LVtrap 0020                          __Hparam 0000  
            __size_of_SetChanADC 0016                          __Lparam 0000  
                      ?_set_leds 0001             __size_of_reset_codes 0042  
                        ___aldiv 17E8                          ___awdiv 1AE0  
                __size_of___wmul 0028                          ___lwdiv 1EA8  
                        ___lwmod 1F04                     __psmallconst 1000  
                        __pcinit 228C                          _isWDTTO 20E8  
                        __ramtop 1000              __size_of_OpenTimer0 0020  
            __size_of_OpenTimer2 001C                          __ptext0 16B6  
                        __ptext1 2300                          __ptext2 1B76  
                        __ptext3 206C                          __ptext4 1F50  
                        __ptext5 20E8                          __ptext6 210E  
                        __ptext7 2260                          __ptext8 21F4  
                        __ptext9 21D6                  __size_of_printf 002E  
                      _T0CONbits 000FD5                     __size_of_adc 0028  
                      _T2CONbits 000FCA           __size_of_check_sensors 00C4  
                        _openLVD 2248                 ___aldiv@dividend 000F  
            __end_of_WriteTimer0 22D4               __end_of_STKFULtask 21F4  
             __end_of_P_CONSTANT 1007                __end_of_openPORTA 2324  
              __end_of_openPORTB 231E                __end_of_openPORTD 232A  
              __end_of_openPORTE 2312                   OpenADC@config2 000F  
                     ??_high_isr 0001                   __pintcode_body 1C84  
           end_of_initialization 2298       __size_of_FilterNearbyTrack 0020  
                        int_func 1C84                       ??_set_leds 000F  
                      _RCSTAbits 000FAB                          printf@c 0013  
                        printf@f 000F                 ___aldiv@quotient 0019  
                      _RESETtask 2210                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
        __size_of_initialization 0090                        _PORTCbits 000F82  
                      _PORTDbits 000F83                        _PORTEbits 000F84  
                 set_osc_32MHz@i 000F                      _StatusReset 2306  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                   ??_ConvertADC 000F      MotorControl@left_duty_cycle 0031  
              _PID_LineFollowing 107A    MotorControl@left_dir_modifier 002F  
            _AllSensorsTriggered 1D02               ?_PID_LineFollowing 0035  
                      _TXSTAbits 000FAC                    _check_sensors 18C6  
      __size_of_motors_brake_all 0022                   __end_of_LVtrap 21B6  
           __end_of_lvd_flag_set 2306   MotorControl@right_dir_modifier 0030  
            ??_PID_LineFollowing 0037                     ??_ReadTimer0 0011  
                     ?_RESETtask 0001                   __end_of___wmul 20E8  
                    _WriteTimer0 22C2             ?_AllSensorsTriggered 0001  
             __end_of_ConvertADC 232E                     ??_SetChanADC 000F  
                 __end_of_printf 206C              start_initialization 228C  
           __end_of_MotorControl 1550                        _SetDCPWM1 1FCC  
                      _SetDCPWM2 1F92                  SetDCPWM1@DCycle 0013  
                    __end_of_adc 20C0                  SetDCPWM2@DCycle 0013  
      __end_of_PID_LineFollowing 1384                     ??_OpenTimer0 000F  
                   ??_OpenTimer2 000F               __end_of_ReadTimer0 22C2  
                      _OpenUSART 1D78         __size_of_openPORTCforPWM 000E  
                 ?_check_sensors 0001                 __CFG_OSC$INTIO67 000000  
                       ??_LVtrap 0014                        _SharpTurn 1A36  
             __end_of_SetChanADC 228C                __size_of_OpenPWM1 0012  
              __size_of_OpenPWM2 0038                         ??___wmul 0021  
     __end_of_TURN_SPEED_DIVIDER 100A            ??_AllSensorsTriggered 0035  
                       ??_printf 0011                       gtrap@count 000F  
             __end_of_OpenTimer0 2196               __end_of_OpenTimer2 2248  
             SharpTurn@direction 0036                      __pbssCOMRAM 0041  
                       ?_BORtask 0001                       ?_SetDCPWM1 000F  
                     ?_SetDCPWM2 000F                    PORtask@count1 0014  
                  PORtask@count2 0018           __size_of_set_osc_32MHz 002C  
                       ?_PORtask 0001                         ?_WDTtask 0001  
                     ?_OpenUSART 000F                __size_of_high_isr 1CFA  
                       ?_BusyADC 0001                         ?_ReadADC 000F  
                     ?_SharpTurn 0001                OpenADC@portconfig 0010  
                       ?_OpenADC 000F                 ___lwdiv@dividend 0013  
                      __pintcode 0008                      ??_RESETtask 0014  
                       ?___aldiv 000F                         ?___awdiv 0023  
                 _initialization 1B76                __size_of_set_leds 007E  
                       ?___lwdiv 0013                         ?___lwmod 0013  
                       ?_isWDTTO 0001                      __smallconst 1000  
              WriteTimer0@timer0 000F               PID_LineFollowing@D 0044  
                       ?_openLVD 0001          SharpTurn@delta_velocity 0037  
     __size_of_PID_LineFollowing 030A                   __size_of_isBOR 0016  
               ___lwdiv@quotient 0017                   __size_of_isPOR 0026  
                 __size_of_gtrap 0062                   __size_of_putch 0002  
                ??_check_sensors 0016                  ___aldiv@divisor 0013  
                      _openPORTA 231E                        _openPORTB 2318  
                      _openPORTD 2324                        _openPORTE 230C  
                ___aldiv@counter 0017                   ___wmul@product 0021  
                  OpenADC@config 0013            __size_of_lvd_flag_set 0006  
        __size_of_GetBackonTrack 0166                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                  ??_reset_codes 001C                 _motors_brake_all 2134  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
         __end_of_initialization 1C06                         _RCONbits 000FD0  
              ??_openPORTCforPWM 000F                    _set_osc_32MHz 206C  
                      main@F4195 0041                      _HLVDCONbits 000FD2  
                      _threshold 004A            __size_of_MotorControl 01CC  
                     _ADCON0bits 000FC2                ___wmul@multiplier 001D  
                   ?_StatusReset 0001                  GetBackonTrack@i 003C  
                      main@error 003E     MotorControl@right_duty_cycle 0033  
                    ??_SetDCPWM1 0011                      ??_SetDCPWM2 0011  
               __size_of_BORtask 0020                     _lvd_flag_set 2300  
               __size_of_PORtask 00AC                      ??_OpenUSART 0011  
             SetDCPWM1@dutycycle 000F                       ?_openPORTA 0001  
                     ?_openPORTB 0001                       ?_openPORTD 0001  
                     ?_openPORTE 0001                 __size_of_WDTtask 001C  
                OpenUSART@config 0011                         _OpenPWM1 229E  
                       _OpenPWM2 2006  PID_LineFollowing@delta_velocity 0046  
               __size_of_BusyADC 000E                      ??_SharpTurn 0035  
               __size_of_ReadADC 0010                         __Hrparam 0000  
               __size_of_OpenADC 005E                     _MotorControl 1384  
                ?_initialization 0001                         __Lrparam 0000  
             SetDCPWM2@dutycycle 000F                   ?_set_osc_32MHz 0001  
               __size_of___aldiv 00DE              __end_of_reset_codes 1F92  
               __size_of___awdiv 0096                 __size_of___lwdiv 005C  
               __size_of___lwmod 004C                     ?_WriteTimer0 000F  
                 OpenPWM2@ccp2mx 0010                 __size_of_isWDTTO 0026  
                 OpenPWM1@period 000F                   OpenPWM2@period 000F  
                ___lwdiv@divisor 0015                 __size_of_openLVD 0018  
                ___lwdiv@counter 0019                         __ptext10 2210  
                       __ptext11 198A                         __ptext20 1D78  
                       __ptext12 2156                         __ptext21 222C  
                       __ptext13 2306                         __ptext30 2196  
                       __ptext22 2006                         __ptext14 230C  
                       __ptext31 203E                         __ptext23 229E  
                       __ptext15 2312                         __ptext40 1C06  
                       __ptext32 232E                         __ptext24 1E4A  
                       __ptext16 22E4                         __ptext41 2134  
                       __ptext33 2324                         __ptext25 107A  
                       __ptext17 2318                         __ptext50 20C0  
                       __ptext42 18C6                         __ptext34 1DE8  
                       __ptext26 1F04                         __ptext18 231E  
                       __ptext51 1AE0                         __ptext43 2098  
                       __ptext35 1550                         __ptext27 1EA8  
                       __ptext19 2248                         __ptext52 1F92  
                       __ptext44 2276                         __ptext36 1A36  
                       __ptext28 17E8                         __ptext53 1FCC  
                       __ptext45 22D4                         __ptext37 22B0  
                       __ptext29 2176                         __ptext46 232A  
                       __ptext38 21B6                         __ptext47 22F2  
                       __ptext39 1D02                         __ptext48 22C2  
                       __ptext49 1384                         _high_isr 0008  
               _CW_rotation_flag 004D                    __size_of_main 0132  
                       _lvd_flag 004F                         _set_leds 1C06  
           __end_of_TURN_TIME_ms 1009                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                       _D_CONSTANT 1001  
                 OpenUSART@spbrg 000F               _TURN_SPEED_DIVIDER 1009  
                       intlevel2 0000                      ??_openPORTA 000F  
                    ??_openPORTB 000F                      ??_openPORTD 000F  
                    ??_openPORTE 000F                 ___lwmod@dividend 0013  
                 _GetBackonTrack 1550                _openPORTCforUSART 2312  
              SetChanADC@channel 0010                  ??_set_osc_32MHz 000F  
                    _reset_codes 1F50                       _OSCCONbits 000FD3  
             ?_openPORTCforUSART 0001      __end_of_AllSensorsTriggered 1D78  
                     _I_CONSTANT 1003                         printf@ap 0011  
            ??_openPORTCforUSART 000F                  ___lwmod@divisor 0015  
                ___lwmod@counter 0017         __end_of_motors_brake_all 2156  
                   ___aldiv@sign 0018             __size_of_StatusReset 0006  
         __end_of_GetBackonTrack 16B6                  _openPORTCforPWM 22E4  
      __end_of_openPORTCforUSART 2318                       _STKFULtask 21D6  
                     _P_CONSTANT 1005  
