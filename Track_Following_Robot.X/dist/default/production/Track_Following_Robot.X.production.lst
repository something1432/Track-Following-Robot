

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 03 12:26:11 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     _D_CONSTANT:
    72                           	opt stack 0
    73  001001  FFFF               	dw	65535
    74  001003                     __end_of_D_CONSTANT:
    75                           	opt stack 0
    76  001003                     _I_CONSTANT:
    77                           	opt stack 0
    78  001003  04E2               	dw	1250
    79  001005                     __end_of_I_CONSTANT:
    80                           	opt stack 0
    81  001005                     _P_CONSTANT:
    82                           	opt stack 0
    83  001005  0096               	dw	150
    84  001007                     __end_of_P_CONSTANT:
    85                           	opt stack 0
    86  001007                     _TURN_TIME_ms:
    87                           	opt stack 0
    88  001007  03E8               	dw	1000
    89  001009                     __end_of_TURN_TIME_ms:
    90                           	opt stack 0
    91  001009                     _TURN_SPEED_DIVIDER:
    92                           	opt stack 0
    93  001009  02                 	db	2
    94  00100A                     __end_of_TURN_SPEED_DIVIDER:
    95                           	opt stack 0
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _CCP1CON	set	4029
   103  0000                     _CCP2CON	set	4026
   104  0000                     _CCPR1L	set	4030
   105  0000                     _CCPR2L	set	4027
   106  0000                     _HLVDCONbits	set	4050
   107  0000                     _INTCONbits	set	4082
   108  0000                     _IPR2bits	set	4002
   109  0000                     _OSCCONbits	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIE2bits	set	4000
   113  0000                     _PIR1bits	set	3998
   114  0000                     _PIR2bits	set	4001
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTD	set	3971
   117  0000                     _PORTDbits	set	3971
   118  0000                     _PORTEbits	set	3972
   119  0000                     _PR2	set	4043
   120  0000                     _RCONbits	set	4048
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _STKPTRbits	set	4092
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _T2CON	set	4042
   129  0000                     _T2CONbits	set	4042
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR2	set	4044
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISE	set	3990
   140  0000                     _TXSTA	set	4012
   141  0000                     _TXSTAbits	set	4012
   142  0000                     _TMR0IF	set	32658
   143  00100A                     STR_1:
   144  00100A  0A                 	db	10
   145  00100B  0D                 	db	13
   146  00100C  4B                 	db	75	;'K'
   147  00100D  77                 	db	119	;'w'
   148  00100E  61                 	db	97	;'a'
   149  00100F  6E                 	db	110	;'n'
   150  001010  74                 	db	116	;'t'
   151  001011  6C                 	db	108	;'l'
   152  001012  65                 	db	101	;'e'
   153  001013  6E                 	db	110	;'n'
   154  001014  20                 	db	32
   155  001015  41                 	db	65	;'A'
   156  001016  50                 	db	80	;'P'
   157  001017  53                 	db	83	;'S'
   158  001018  43                 	db	67	;'C'
   159  001019  31                 	db	49	;'1'
   160  00101A  32                 	db	50	;'2'
   161  00101B  39                 	db	57	;'9'
   162  00101C  39                 	db	57	;'9'
   163  00101D  20                 	db	32
   164  00101E  73                 	db	115	;'s'
   165  00101F  69                 	db	105	;'i'
   166  001020  6D                 	db	109	;'m'
   167  001021  70                 	db	112	;'p'
   168  001022  6C                 	db	108	;'l'
   169  001023  65                 	db	101	;'e'
   170  001024  20                 	db	32
   171  001025  63                 	db	99	;'c'
   172  001026  75                 	db	117	;'u'
   173  001027  72                 	db	114	;'r'
   174  001028  76                 	db	118	;'v'
   175  001029  65                 	db	101	;'e'
   176  00102A  20                 	db	32
   177  00102B  66                 	db	102	;'f'
   178  00102C  6F                 	db	111	;'o'
   179  00102D  6C                 	db	108	;'l'
   180  00102E  6C                 	db	108	;'l'
   181  00102F  6F                 	db	111	;'o'
   182  001030  77                 	db	119	;'w'
   183  001031  65                 	db	101	;'e'
   184  001032  72                 	db	114	;'r'
   185  001033  20                 	db	32
   186  001034  2D                 	db	45
   187  001035  2D                 	db	45
   188  001036  20                 	db	32
   189  001037  77                 	db	119	;'w'
   190  001038  69                 	db	105	;'i'
   191  001039  74                 	db	116	;'t'
   192  00103A  68                 	db	104	;'h'
   193  00103B  20                 	db	32
   194  00103C  65                 	db	101	;'e'
   195  00103D  72                 	db	114	;'r'
   196  00103E  72                 	db	114	;'r'
   197  00103F  6F                 	db	111	;'o'
   198  001040  72                 	db	114	;'r'
   199  001041  20                 	db	32
   200  001042  63                 	db	99	;'c'
   201  001043  6F                 	db	111	;'o'
   202  001044  64                 	db	100	;'d'
   203  001045  65                 	db	101	;'e'
   204  001046  73                 	db	115	;'s'
   205  001047  0A                 	db	10
   206  001048  0D                 	db	13
   207  001049  00                 	db	0
   208  00104A                     STR_6:
   209  00104A  20                 	db	32
   210  00104B  3C                 	db	60	;'<'
   211  00104C  72                 	db	114	;'r'
   212  00104D  65                 	db	101	;'e'
   213  00104E  73                 	db	115	;'s'
   214  00104F  65                 	db	101	;'e'
   215  001050  74                 	db	116	;'t'
   216  001051  3E                 	db	62	;'>'
   217  001052  20                 	db	32
   218  001053  00                 	db	0
   219  001054                     STR_5:
   220  001054  3C                 	db	60	;'<'
   221  001055  53                 	db	83	;'S'
   222  001056  54                 	db	84	;'T'
   223  001057  4B                 	db	75	;'K'
   224  001058  46                 	db	70	;'F'
   225  001059  55                 	db	85	;'U'
   226  00105A  4C                 	db	76	;'L'
   227  00105B  3E                 	db	62	;'>'
   228  00105C  00                 	db	0
   229  00105D                     STR_4:
   230  00105D  3C                 	db	60	;'<'
   231  00105E  57                 	db	87	;'W'
   232  00105F  44                 	db	68	;'D'
   233  001060  54                 	db	84	;'T'
   234  001061  20                 	db	32
   235  001062  54                 	db	84	;'T'
   236  001063  4F                 	db	79	;'O'
   237  001064  3E                 	db	62	;'>'
   238  001065  00                 	db	0
   239  001066                     STR_7:
   240  001066  5C                 	db	92	;'\'
   241  001067  3C                 	db	60	;'<'
   242  001068  4C                 	db	76	;'L'
   243  001069  56                 	db	86	;'V'
   244  00106A  44                 	db	68	;'D'
   245  00106B  3E                 	db	62	;'>'
   246  00106C  00                 	db	0
   247  00106D                     STR_3:
   248  00106D  3C                 	db	60	;'<'
   249  00106E  42                 	db	66	;'B'
   250  00106F  4F                 	db	79	;'O'
   251  001070  52                 	db	82	;'R'
   252  001071  3E                 	db	62	;'>'
   253  001072  00                 	db	0
   254  001073                     STR_2:
   255  001073  3C                 	db	60	;'<'
   256  001074  50                 	db	80	;'P'
   257  001075  4F                 	db	79	;'O'
   258  001076  52                 	db	82	;'R'
   259  001077  3E                 	db	62	;'>'
   260  001078  00                 	db	0
   261                           
   262                           ; #config settings
   263  001079  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  002202                     __pcinit:
   267                           	opt stack 0
   268  002202                     start_initialization:
   269                           	opt stack 0
   270  002202                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (13 bytes)
   274  002202  EE00  F041         	lfsr	0,__pbssCOMRAM
   275  002206  0E0D               	movlw	13
   276  002208                     clear_0:
   277  002208  6AEE               	clrf	postinc0,c
   278  00220A  06E8               	decf	wreg,f,c
   279  00220C  E1FD               	bnz	clear_0
   280  00220E                     end_of_initialization:
   281                           	opt stack 0
   282  00220E                     __end_of__initialization:
   283                           	opt stack 0
   284  00220E  0100               	movlb	0
   285  002210  EF54  F00B         	goto	_main	;jump to C main() function
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssCOMRAM
   290  000041                     __pbssCOMRAM:
   291                           	opt stack 0
   292  000041                     main@F4192:
   293                           	opt stack 0
   294  000041                     	ds	3
   295  000044                     PID_LineFollowing@D:
   296                           	opt stack 0
   297  000044                     	ds	2
   298  000046                     PID_LineFollowing@delta_velocity:
   299                           	opt stack 0
   300  000046                     	ds	2
   301  000048                     _I:
   302                           	opt stack 0
   303  000048                     	ds	2
   304  00004A                     _threshold:
   305                           	opt stack 0
   306  00004A                     	ds	2
   307  00004C                     _SeeLine:
   308                           	opt stack 0
   309  00004C                     	ds	1
   310  00004D                     _lvd_flag:
   311                           	opt stack 0
   312  00004D                     	ds	1
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	cstackCOMRAM
   317  000001                     __pcstackCOMRAM:
   318                           	opt stack 0
   319  000001                     ??_high_isr:
   320  000001                     
   321                           ; 1 bytes @ 0x0
   322  000001                     	ds	14
   323  00000F                     ??_set_leds:
   324  00000F                     ??_SetChanADC:
   325  00000F                     ?_printf:
   326                           	opt stack 0
   327  00000F                     ?_ReadTimer0:
   328                           	opt stack 0
   329  00000F                     ?_ReadADC:
   330                           	opt stack 0
   331  00000F                     ?___aldiv:
   332                           	opt stack 0
   333  00000F                     OpenADC@config2:
   334                           	opt stack 0
   335  00000F                     OpenPWM1@period:
   336                           	opt stack 0
   337  00000F                     OpenPWM2@period:
   338                           	opt stack 0
   339  00000F                     OpenTimer0@config:
   340                           	opt stack 0
   341  00000F                     OpenTimer2@config:
   342                           	opt stack 0
   343  00000F                     set_osc_32MHz@i:
   344                           	opt stack 0
   345  00000F                     printf@f:
   346                           	opt stack 0
   347  00000F                     SetDCPWM1@dutycycle:
   348                           	opt stack 0
   349  00000F                     SetDCPWM2@dutycycle:
   350                           	opt stack 0
   351  00000F                     WriteTimer0@timer0:
   352                           	opt stack 0
   353  00000F                     OpenUSART@spbrg:
   354                           	opt stack 0
   355  00000F                     gtrap@count:
   356                           	opt stack 0
   357  00000F                     ___aldiv@dividend:
   358                           	opt stack 0
   359                           
   360                           ; 4 bytes @ 0xE
   361  00000F                     	ds	1
   362  000010                     OpenADC@portconfig:
   363                           	opt stack 0
   364  000010                     SetChanADC@channel:
   365                           	opt stack 0
   366  000010                     OpenPWM2@ccp2mx:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0xF
   370  000010                     	ds	1
   371  000011                     ??_SetDCPWM2:
   372  000011                     ??_SetDCPWM1:
   373  000011                     ??_OpenADC:
   374  000011                     ??_ReadADC:
   375  000011                     OpenUSART@config:
   376                           	opt stack 0
   377  000011                     printf@ap:
   378                           	opt stack 0
   379  000011                     ReadTimer0@timer:
   380                           	opt stack 0
   381  000011                     WriteTimer0@timer:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385  000011                     	ds	2
   386  000013                     ?_adc:
   387                           	opt stack 0
   388  000013                     ?___lwdiv:
   389                           	opt stack 0
   390  000013                     ?___lwmod:
   391                           	opt stack 0
   392  000013                     printf@c:
   393                           	opt stack 0
   394  000013                     OpenADC@config:
   395                           	opt stack 0
   396  000013                     SetDCPWM1@DCycle:
   397                           	opt stack 0
   398  000013                     SetDCPWM2@DCycle:
   399                           	opt stack 0
   400  000013                     ___lwdiv@dividend:
   401                           	opt stack 0
   402  000013                     ___lwmod@dividend:
   403                           	opt stack 0
   404  000013                     ___aldiv@divisor:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x12
   408  000013                     	ds	1
   409  000014                     PORtask@count1:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x13
   413  000014                     	ds	1
   414  000015                     adc@channel:
   415                           	opt stack 0
   416  000015                     ___lwdiv@divisor:
   417                           	opt stack 0
   418  000015                     ___lwmod@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x14
   422  000015                     	ds	1
   423  000016                     ??_check_sensors:
   424                           
   425                           ; 0 bytes @ 0x15
   426  000016                     	ds	1
   427  000017                     ___aldiv@counter:
   428                           	opt stack 0
   429  000017                     ___lwmod@counter:
   430                           	opt stack 0
   431  000017                     ___lwdiv@quotient:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x16
   435  000017                     	ds	1
   436  000018                     ___aldiv@sign:
   437                           	opt stack 0
   438  000018                     PORtask@count2:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x17
   442  000018                     	ds	1
   443  000019                     ___lwdiv@counter:
   444                           	opt stack 0
   445  000019                     ___aldiv@quotient:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x18
   449  000019                     	ds	3
   450  00001C                     
   451                           ; 0 bytes @ 0x1B
   452  00001C                     	ds	1
   453  00001D                     ?___wmul:
   454                           	opt stack 0
   455  00001D                     ___wmul@multiplier:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1C
   459  00001D                     	ds	2
   460  00001F                     ___wmul@multiplicand:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1E
   464  00001F                     	ds	2
   465  000021                     ___wmul@product:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x20
   469  000021                     	ds	2
   470  000023                     ?___awdiv:
   471                           	opt stack 0
   472  000023                     ___awdiv@dividend:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x22
   476  000023                     	ds	2
   477  000025                     ___awdiv@divisor:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x24
   481  000025                     	ds	2
   482  000027                     ___awdiv@counter:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x26
   486  000027                     	ds	1
   487  000028                     ___awdiv@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x27
   491  000028                     	ds	1
   492  000029                     ___awdiv@quotient:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x28
   496  000029                     	ds	2
   497  00002B                     MotorControl@delta_velocity:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x2A
   501  00002B                     	ds	2
   502  00002D                     MotorControl@speed_divider:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x2C
   506  00002D                     	ds	1
   507  00002E                     ??_MotorControl:
   508                           
   509                           ; 0 bytes @ 0x2D
   510  00002E                     	ds	1
   511  00002F                     MotorControl@left_dir_modifier:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x2E
   515  00002F                     	ds	1
   516  000030                     MotorControl@right_dir_modifier:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x2F
   520  000030                     	ds	1
   521  000031                     MotorControl@left_duty_cycle:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x30
   525  000031                     	ds	2
   526  000033                     MotorControl@right_duty_cycle:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x32
   530  000033                     	ds	2
   531  000035                     ??_SharpTurn:
   532  000035                     _AllSensorsTriggered$470:
   533                           	opt stack 0
   534  000035                     PID_LineFollowing@error:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x34
   538  000035                     	ds	1
   539  000036                     SharpTurn@direction:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x35
   543  000036                     	ds	1
   544  000037                     ??_PID_LineFollowing:
   545  000037                     SharpTurn@delta_velocity:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x36
   549  000037                     	ds	2
   550  000039                     GetBackonTrack@error:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x38
   554  000039                     	ds	2
   555  00003B                     ??_GetBackonTrack:
   556                           
   557                           ; 0 bytes @ 0x3A
   558  00003B                     	ds	2
   559  00003D                     GetBackonTrack@i:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x3C
   563  00003D                     	ds	1
   564  00003E                     main@error:
   565                           	opt stack 0
   566                           
   567                           ; 3 bytes @ 0x3D
   568  00003E                     	ds	3
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 25 in file "../Robot Files/main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  error           3   61[COMRAM] char [3]
   582 ;; Return value:  Size  Location     Type
   583 ;;		None               void
   584 ;; Registers used:
   585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        3 bytes
   596 ;; Hardware stack levels required when called:    6
   597 ;; This function calls:
   598 ;;		_AllSensorsTriggered
   599 ;;		_GetBackonTrack
   600 ;;		_LVtrap
   601 ;;		_OpenTimer0
   602 ;;		_PID_LineFollowing
   603 ;;		_WriteTimer0
   604 ;;		_check_sensors
   605 ;;		_initialization
   606 ;;		_lvd_flag_set
   607 ;;		_printf
   608 ;;		_set_leds
   609 ;; This function is called by:
   610 ;;		Startup code after reset
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text0
   615  0016A8                     __ptext0:
   616                           	opt stack 0
   617  0016A8                     _main:
   618                           	opt stack 25
   619                           
   620                           ;main.c: 27: signed char error[3]={0};
   621                           
   622                           ;incstack = 0
   623  0016A8  C041  F03E         	movff	main@F4192,main@error
   624  0016AC  C042  F03F         	movff	main@F4192+1,main@error+1
   625  0016B0  C043  F040         	movff	main@F4192+2,main@error+2
   626                           
   627                           ;main.c: 30: initialization();
   628  0016B4  EC88  F00D         	call	_initialization	;wreg free
   629                           
   630                           ;main.c: 35: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   631  0016B8  0E0A               	movlw	low STR_1
   632  0016BA  6E0F               	movwf	printf@f,c
   633  0016BC  0E10               	movlw	high STR_1
   634  0016BE  6E10               	movwf	printf@f+1,c
   635  0016C0  ECEA  F00F         	call	_printf	;wreg free
   636  0016C4  0004               	clrwdt		;# 
   637                           
   638                           ;main.c: 37: threshold = 600u;
   639  0016C6  0E02               	movlw	2
   640  0016C8  6E4B               	movwf	_threshold+1,c
   641  0016CA  0E58               	movlw	88
   642  0016CC  6E4A               	movwf	_threshold,c
   643                           
   644                           ;main.c: 41: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   645  0016CE  0E16               	movlw	22
   646  0016D0  EC86  F010         	call	_OpenTimer0
   647                           
   648                           ;main.c: 42: WriteTimer0(0);
   649  0016D4  0E00               	movlw	0
   650  0016D6  6E10               	movwf	WriteTimer0@timer0+1,c
   651  0016D8  0E00               	movlw	0
   652  0016DA  6E0F               	movwf	WriteTimer0@timer0,c
   653  0016DC  EC1C  F011         	call	_WriteTimer0	;wreg free
   654                           
   655                           ;main.c: 43: TMR0IF = 0;
   656  0016E0  94F2               	bcf	intcon,2,c	;volatile
   657  0016E2  D000               	goto	l2738
   658  0016E4                     l2738:
   659                           
   660                           ;main.c: 46: {
   661                           ;main.c: 47: check_sensors();
   662  0016E4  EC35  F00C         	call	_check_sensors	;wreg free
   663                           
   664                           ;main.c: 54: switch(SeeLine.B)
   665  0016E8  D01D               	goto	l2762
   666  0016EA                     l2740:
   667                           
   668                           ;main.c: 57: error[2]=1; break;
   669  0016EA  0E01               	movlw	1
   670  0016EC  D019               	goto	L7
   671  0016EE                     l2742:
   672                           
   673                           ;main.c: 59: error[2]=2; break;
   674  0016EE  0E02               	movlw	2
   675  0016F0  D017               	goto	L7
   676  0016F2                     l2744:
   677                           
   678                           ;main.c: 61: error[2]=3; break;
   679  0016F2  0E03               	movlw	3
   680  0016F4  D015               	goto	L7
   681  0016F6                     l2746:
   682                           
   683                           ;main.c: 63: error[2]=4; break;
   684  0016F6  0E04               	movlw	4
   685  0016F8  D013               	goto	L7
   686  0016FA                     l70:
   687                           
   688                           ;main.c: 65: error[2]=-1; break;
   689  0016FA  6840               	setf	main@error+2,c
   690  0016FC  D034               	goto	l2764
   691  0016FE                     l2748:
   692                           
   693                           ;main.c: 67: error[2]=-2; break;
   694  0016FE  0EFE               	movlw	254
   695  001700  D00F               	goto	L7
   696  001702                     l2750:
   697                           
   698                           ;main.c: 69: error[2]=-3; break;
   699  001702  0EFD               	movlw	253
   700  001704  D00D               	goto	L7
   701  001706                     l2752:
   702                           
   703                           ;main.c: 71: error[2]=-4; break;
   704  001706  0EFC               	movlw	252
   705  001708  D00B               	goto	L7
   706  00170A                     l2754:
   707                           
   708                           ;main.c: 73: GetBackonTrack(error); break;
   709  00170A  0E3E               	movlw	low main@error
   710  00170C  6E39               	movwf	GetBackonTrack@error,c
   711  00170E  0E00               	movlw	high main@error
   712  001710  6E3A               	movwf	GetBackonTrack@error+1,c
   713  001712  ECA8  F00A         	call	_GetBackonTrack	;wreg free
   714  001716  D027               	goto	l2764
   715  001718                     l2756:
   716                           
   717                           ;main.c: 75: AllSensorsTriggered();
   718  001718  EC4E  F00E         	call	_AllSensorsTriggered	;wreg free
   719  00171C  D000               	goto	l2758
   720  00171E                     l2758:
   721                           
   722                           ;main.c: 77: error[2]=0; break;
   723  00171E  0E00               	movlw	0
   724  001720                     L7:
   725  001720  6E40               	movwf	main@error+2,c
   726                           
   727                           ;main.c: 78: }
   728  001722  D021               	goto	l2764
   729  001724                     l2762:
   730  001724  504C               	movf	_SeeLine,w,c
   731  001726  0B1F               	andlw	31
   732                           
   733                           ; Switch size 1, requested type "space"
   734                           ; Number of cases is 10, Range of values is 0 to 31
   735                           ; switch strategies available:
   736                           ; Name         Instructions Cycles
   737                           ; simple_byte           31    16 (average)
   738                           ;	Chosen strategy is simple_byte
   739  001728  0A00               	xorlw	0	; case 0
   740  00172A  B4D8               	btfsc	status,2,c
   741  00172C  D7EE               	goto	l2754
   742  00172E  0A01               	xorlw	1	; case 1
   743  001730  B4D8               	btfsc	status,2,c
   744  001732  D7E1               	goto	l2746
   745  001734  0A03               	xorlw	3	; case 2
   746  001736  B4D8               	btfsc	status,2,c
   747  001738  D7DA               	goto	l2742
   748  00173A  0A01               	xorlw	1	; case 3
   749  00173C  B4D8               	btfsc	status,2,c
   750  00173E  D7D9               	goto	l2744
   751  001740  0A05               	xorlw	5	; case 6
   752  001742  B4D8               	btfsc	status,2,c
   753  001744  D7D2               	goto	l2740
   754  001746  0A0E               	xorlw	14	; case 8
   755  001748  B4D8               	btfsc	status,2,c
   756  00174A  D7D9               	goto	l2748
   757  00174C  0A04               	xorlw	4	; case 12
   758  00174E  B4D8               	btfsc	status,2,c
   759  001750  D7D4               	goto	l70
   760  001752  0A1C               	xorlw	28	; case 16
   761  001754  B4D8               	btfsc	status,2,c
   762  001756  D7D7               	goto	l2752
   763  001758  0A08               	xorlw	8	; case 24
   764  00175A  B4D8               	btfsc	status,2,c
   765  00175C  D7D2               	goto	l2750
   766  00175E  0A07               	xorlw	7	; case 31
   767  001760  B4D8               	btfsc	status,2,c
   768  001762  D7DA               	goto	l2756
   769  001764  D7DC               	goto	l2758
   770  001766                     l2764:
   771                           
   772                           ;main.c: 79: set_leds();
   773  001766  ECD0  F00D         	call	_set_leds	;wreg free
   774                           
   775                           ;main.c: 80: PID_LineFollowing(error);
   776  00176A  0E3E               	movlw	low main@error
   777  00176C  6E35               	movwf	PID_LineFollowing@error,c
   778  00176E  0E00               	movlw	high main@error
   779  001770  6E36               	movwf	PID_LineFollowing@error+1,c
   780  001772  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   781  001776  0004               	clrwdt		;# 
   782                           
   783                           ;main.c: 83: if(lvd_flag_set()) LVtrap();
   784  001778  EC3B  F011         	call	_lvd_flag_set	;wreg free
   785  00177C  0900               	iorlw	0
   786  00177E  B4D8               	btfsc	status,2,c
   787  001780  D7B1               	goto	l2738
   788  001782  EC96  F010         	call	_LVtrap	;wreg free
   789  001786  D7AE               	goto	l2738
   790  001788  EF0C  F000         	goto	start
   791  00178C                     __end_of_main:
   792                           	opt stack 0
   793                           intcon	equ	0xFF2
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           status	equ	0xFD8
   797                           
   798 ;; *************** function _lvd_flag_set *****************
   799 ;; Defined at:
   800 ;;		line 47 in file "../Robot Files/interrupts.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      unsigned char 
   807 ;; Registers used:
   808 ;;		wreg, status,2
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    1
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text1
   829  002276                     __ptext1:
   830                           	opt stack 0
   831  002276                     _lvd_flag_set:
   832                           	opt stack 29
   833                           
   834                           ;interrupts.c: 49: return lvd_flag;
   835                           
   836                           ;incstack = 0
   837  002276  504D               	movf	_lvd_flag,w,c
   838  002278  D000               	goto	l374
   839  00227A                     l374:
   840  00227A  0012               	return		;funcret
   841  00227C                     __end_of_lvd_flag_set:
   842                           	opt stack 0
   843                           intcon	equ	0xFF2
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           status	equ	0xFD8
   847                           
   848 ;; *************** function _initialization *****************
   849 ;; Defined at:
   850 ;;		line 65 in file "../Robot Files/sumovore.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;		None               void
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;Total ram usage:        0 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    5
   871 ;; This function calls:
   872 ;;		_OpenADC
   873 ;;		_OpenPWM1
   874 ;;		_OpenPWM2
   875 ;;		_OpenTimer2
   876 ;;		_OpenUSART
   877 ;;		_SetDCPWM1
   878 ;;		_SetDCPWM2
   879 ;;		_openLVD
   880 ;;		_openPORTA
   881 ;;		_openPORTB
   882 ;;		_openPORTCforPWM
   883 ;;		_openPORTCforUSART
   884 ;;		_openPORTD
   885 ;;		_openPORTE
   886 ;;		_reset_codes
   887 ;;		_set_osc_32MHz
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text2
   894  001B10                     __ptext2:
   895                           	opt stack 0
   896  001B10                     _initialization:
   897                           	opt stack 25
   898                           
   899                           ;sumovore.c: 67: SeeLine.B = 0;
   900                           
   901                           ;incstack = 0
   902  001B10  904C               	bcf	_SeeLine,0,c
   903  001B12  924C               	bcf	_SeeLine,1,c
   904  001B14  944C               	bcf	_SeeLine,2,c
   905  001B16  964C               	bcf	_SeeLine,3,c
   906  001B18  984C               	bcf	_SeeLine,4,c
   907                           
   908                           ;sumovore.c: 68: RCONbits.IPEN = 1;
   909  001B1A  8ED0               	bsf	4048,7,c	;volatile
   910                           
   911                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
   912  001B1C  9EF2               	bcf	intcon,7,c	;volatile
   913                           
   914                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
   915  001B1E  9CF2               	bcf	intcon,6,c	;volatile
   916                           
   917                           ;sumovore.c: 72: set_osc_32MHz();
   918  001B20  EC01  F010         	call	_set_osc_32MHz	;wreg free
   919                           
   920                           ;sumovore.c: 73: openPORTCforUSART();
   921  001B24  EC44  F011         	call	_openPORTCforUSART	;wreg free
   922                           
   923                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
   924                           ;sumovore.c: 76: 16 );
   925  001B28  0E00               	movlw	0
   926  001B2A  6E10               	movwf	OpenUSART@spbrg+1,c
   927  001B2C  0E10               	movlw	16
   928  001B2E  6E0F               	movwf	OpenUSART@spbrg,c
   929  001B30  0E3C               	movlw	60
   930  001B32  EC87  F00E         	call	_OpenUSART
   931                           
   932                           ;sumovore.c: 82: openPORTD();
   933  001B36  EC4D  F011         	call	_openPORTD	;wreg free
   934                           
   935                           ;sumovore.c: 83: PORTD = 0;
   936  001B3A  0E00               	movlw	0
   937  001B3C  6E83               	movwf	3971,c	;volatile
   938                           
   939                           ;sumovore.c: 85: reset_codes();
   940  001B3E  EC73  F00F         	call	_reset_codes	;wreg free
   941                           
   942                           ;sumovore.c: 87: openPORTCforPWM();
   943  001B42  EC2D  F011         	call	_openPORTCforPWM	;wreg free
   944                           
   945                           ;sumovore.c: 89: openPORTA();
   946  001B46  EC4A  F011         	call	_openPORTA	;wreg free
   947                           
   948                           ;sumovore.c: 90: openPORTB();
   949  001B4A  EC47  F011         	call	_openPORTB	;wreg free
   950                           
   951                           ;sumovore.c: 91: openPORTE();
   952  001B4E  EC41  F011         	call	_openPORTE	;wreg free
   953                           
   954                           ;sumovore.c: 94: openLVD();
   955  001B52  ECDF  F010         	call	_openLVD	;wreg free
   956                           
   957                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
   958  001B56  0E0C               	movlw	12
   959  001B58  6E0F               	movwf	OpenADC@config2,c
   960  001B5A  0E0A               	movlw	10
   961  001B5C  6E10               	movwf	OpenADC@portconfig,c
   962  001B5E  0EA7               	movlw	167
   963  001B60  ECF0  F00E         	call	_OpenADC
   964                           
   965                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
   966  001B64  9A82               	bcf	3970,5,c	;volatile
   967                           
   968                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
   969  001B66  9084               	bcf	3972,0,c	;volatile
   970                           
   971                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
   972  001B68  9082               	bcf	3970,0,c	;volatile
   973                           
   974                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
   975  001B6A  9284               	bcf	3972,1,c	;volatile
   976                           
   977                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   978  001B6C  0E06               	movlw	6
   979  001B6E  ECD1  F010         	call	_OpenTimer2
   980                           
   981                           ;sumovore.c: 110: OpenPWM1(199);
   982  001B72  0EC7               	movlw	199
   983  001B74  EC0A  F011         	call	_OpenPWM1
   984                           
   985                           ;sumovore.c: 112: OpenPWM2(199);
   986  001B78  0EC7               	movlw	199
   987  001B7A  ECCE  F00F         	call	_OpenPWM2
   988                           
   989                           ;sumovore.c: 113: SetDCPWM1(0);
   990  001B7E  0E00               	movlw	0
   991  001B80  6E10               	movwf	SetDCPWM1@dutycycle+1,c
   992  001B82  0E00               	movlw	0
   993  001B84  6E0F               	movwf	SetDCPWM1@dutycycle,c
   994  001B86  ECB1  F00F         	call	_SetDCPWM1	;wreg free
   995                           
   996                           ;sumovore.c: 116: SetDCPWM2(0);
   997  001B8A  0E00               	movlw	0
   998  001B8C  6E10               	movwf	SetDCPWM2@dutycycle+1,c
   999  001B8E  0E00               	movlw	0
  1000  001B90  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1001  001B92  EC94  F00F         	call	_SetDCPWM2	;wreg free
  1002                           
  1003                           ;sumovore.c: 117: threshold = 512u;
  1004  001B96  0E02               	movlw	2
  1005  001B98  6E4B               	movwf	_threshold+1,c
  1006  001B9A  0E00               	movlw	0
  1007  001B9C  6E4A               	movwf	_threshold,c
  1008  001B9E  0012               	return		;funcret
  1009  001BA0                     __end_of_initialization:
  1010                           	opt stack 0
  1011                           intcon	equ	0xFF2
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _set_osc_32MHz *****************
  1017 ;; Defined at:
  1018 ;;		line 18 in file "../Robot Files/osc.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  i               2   14[COMRAM] int 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;		None               void
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        2 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_initialization
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text3
  1047  002002                     __ptext3:
  1048                           	opt stack 0
  1049  002002                     _set_osc_32MHz:
  1050                           	opt stack 28
  1051                           
  1052                           ;osc.c: 20: int i;
  1053                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1054                           
  1055                           ;incstack = 0
  1056  002002  8CD3               	bsf	4051,6,c	;volatile
  1057                           
  1058                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1059  002004  8AD3               	bsf	4051,5,c	;volatile
  1060                           
  1061                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1062  002006  88D3               	bsf	4051,4,c	;volatile
  1063                           
  1064                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1065  002008  8C9B               	bsf	3995,6,c	;volatile
  1066                           
  1067                           ;osc.c: 28: for(i=0;i<500;i++);
  1068  00200A  0E00               	movlw	0
  1069  00200C  6E10               	movwf	set_osc_32MHz@i+1,c
  1070  00200E  0E00               	movlw	0
  1071  002010  6E0F               	movwf	set_osc_32MHz@i,c
  1072  002012                     l1582:
  1073  002012  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1074  002014  D008               	goto	l1586
  1075  002016  0EF4               	movlw	244
  1076  002018  5C0F               	subwf	set_osc_32MHz@i,w,c
  1077  00201A  0E01               	movlw	1
  1078  00201C  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1079  00201E  B0D8               	btfsc	status,0,c
  1080  002020  D005               	goto	l383
  1081  002022  D001               	goto	l1586
  1082  002024  D003               	goto	l383
  1083  002026                     l1586:
  1084  002026  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1085  002028  2A10               	incf	set_osc_32MHz@i+1,f,c
  1086  00202A  D7F3               	goto	l1582
  1087  00202C                     l383:
  1088  00202C  0012               	return		;funcret
  1089  00202E                     __end_of_set_osc_32MHz:
  1090                           	opt stack 0
  1091                           intcon	equ	0xFF2
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _reset_codes *****************
  1097 ;; Defined at:
  1098 ;;		line 282 in file "../Robot Files/sumovore.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;		None               void
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    4
  1119 ;; This function calls:
  1120 ;;		_BORtask
  1121 ;;		_PORtask
  1122 ;;		_RESETtask
  1123 ;;		_STKFULtask
  1124 ;;		_WDTtask
  1125 ;;		_isBOR
  1126 ;;		_isPOR
  1127 ;;		_isWDTTO
  1128 ;; This function is called by:
  1129 ;;		_initialization
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text4
  1134  001EE6                     __ptext4:
  1135                           	opt stack 0
  1136  001EE6                     _reset_codes:
  1137                           	opt stack 25
  1138                           
  1139                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1140                           
  1141                           ;incstack = 0
  1142  001EE6  EC52  F010         	call	_isPOR	;wreg free
  1143  001EEA  0900               	iorlw	0
  1144  001EEC  B4D8               	btfsc	status,2,c
  1145  001EEE  D003               	goto	l2434
  1146  001EF0  EC97  F00C         	call	_PORtask	;wreg free
  1147  001EF4  D018               	goto	l314
  1148  001EF6                     l2434:
  1149                           
  1150                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1151  001EF6  ECEB  F010         	call	_isBOR	;wreg free
  1152  001EFA  0900               	iorlw	0
  1153  001EFC  B4D8               	btfsc	status,2,c
  1154  001EFE  D003               	goto	l2438
  1155  001F00  EC76  F010         	call	_BORtask	;wreg free
  1156  001F04  D010               	goto	l314
  1157  001F06                     l2438:
  1158                           
  1159                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1160  001F06  EC3F  F010         	call	_isWDTTO	;wreg free
  1161  001F0A  0900               	iorlw	0
  1162  001F0C  B4D8               	btfsc	status,2,c
  1163  001F0E  D003               	goto	l310
  1164  001F10  ECB5  F010         	call	_WDTtask	;wreg free
  1165  001F14  D008               	goto	l314
  1166  001F16                     l310:
  1167                           
  1168                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1169  001F16  AEFC               	btfss	stkptr,7,c	;volatile
  1170  001F18  D003               	goto	l2444
  1171  001F1A  ECA6  F010         	call	_STKFULtask	;wreg free
  1172  001F1E  D003               	goto	l314
  1173  001F20                     l2444:
  1174                           
  1175                           ;sumovore.c: 297: else RESETtask();
  1176  001F20  ECC3  F010         	call	_RESETtask	;wreg free
  1177  001F24  D000               	goto	l314
  1178  001F26                     l314:
  1179  001F26  0012               	return		;funcret
  1180  001F28                     __end_of_reset_codes:
  1181                           	opt stack 0
  1182                           stkptr	equ	0xFFC
  1183                           intcon	equ	0xFF2
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _isWDTTO *****************
  1189 ;; Defined at:
  1190 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      unsigned char 
  1197 ;; Registers used:
  1198 ;;		wreg
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_reset_codes
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text5
  1219  00207E                     __ptext5:
  1220                           	opt stack 0
  1221  00207E                     _isWDTTO:
  1222                           	opt stack 27
  1223                           
  1224                           ;incstack = 0
  1225  00207E  A2D0               	btfss	4048,1,c	;volatile
  1226  002080  D00E               	goto	l1490
  1227  002082  A4D0               	btfss	4048,2,c	;volatile
  1228  002084  D00A               	goto	l1486
  1229  002086  A0D0               	btfss	4048,0,c	;volatile
  1230  002088  D006               	goto	l1482
  1231  00208A  A6D0               	btfss	4048,3,c	;volatile
  1232  00208C  D002               	goto	l1478
  1233  00208E  D003               	goto	l1482
  1234  002090  D008               	goto	l600
  1235  002092                     l1478:
  1236  002092  0E01               	movlw	1
  1237  002094  D006               	goto	l600
  1238  002096                     l1482:
  1239  002096  0E00               	movlw	0
  1240  002098  D004               	goto	l600
  1241  00209A                     l1486:
  1242  00209A  0E00               	movlw	0
  1243  00209C  D002               	goto	l600
  1244  00209E                     l1490:
  1245  00209E  0E00               	movlw	0
  1246  0020A0  D000               	goto	l600
  1247  0020A2                     l600:
  1248  0020A2  0012               	return		;funcret
  1249  0020A4                     __end_of_isWDTTO:
  1250                           	opt stack 0
  1251                           stkptr	equ	0xFFC
  1252                           intcon	equ	0xFF2
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           status	equ	0xFD8
  1256                           
  1257 ;; *************** function _isPOR *****************
  1258 ;; Defined at:
  1259 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      unsigned char 
  1266 ;; Registers used:
  1267 ;;		wreg
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_reset_codes
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text6
  1288  0020A4                     __ptext6:
  1289                           	opt stack 0
  1290  0020A4                     _isPOR:
  1291                           	opt stack 27
  1292                           
  1293                           ;incstack = 0
  1294  0020A4  B2D0               	btfsc	4048,1,c	;volatile
  1295  0020A6  D00E               	goto	l1398
  1296  0020A8  A4D0               	btfss	4048,2,c	;volatile
  1297  0020AA  D00A               	goto	l1394
  1298  0020AC  B0D0               	btfsc	4048,0,c	;volatile
  1299  0020AE  D006               	goto	l1390
  1300  0020B0  B6D0               	btfsc	4048,3,c	;volatile
  1301  0020B2  D002               	goto	l1386
  1302  0020B4  D003               	goto	l1390
  1303  0020B6  D008               	goto	l591
  1304  0020B8                     l1386:
  1305  0020B8  0E01               	movlw	1
  1306  0020BA  D006               	goto	l591
  1307  0020BC                     l1390:
  1308  0020BC  0E00               	movlw	0
  1309  0020BE  D004               	goto	l591
  1310  0020C0                     l1394:
  1311  0020C0  0E00               	movlw	0
  1312  0020C2  D002               	goto	l591
  1313  0020C4                     l1398:
  1314  0020C4  0E00               	movlw	0
  1315  0020C6  D000               	goto	l591
  1316  0020C8                     l591:
  1317  0020C8  0012               	return		;funcret
  1318  0020CA                     __end_of_isPOR:
  1319                           	opt stack 0
  1320                           stkptr	equ	0xFFC
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           status	equ	0xFD8
  1325                           
  1326 ;; *************** function _isBOR *****************
  1327 ;; Defined at:
  1328 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      unsigned char 
  1335 ;; Registers used:
  1336 ;;		wreg
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_reset_codes
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text7
  1357  0021D6                     __ptext7:
  1358                           	opt stack 0
  1359  0021D6                     _isBOR:
  1360                           	opt stack 27
  1361                           
  1362                           ;incstack = 0
  1363  0021D6  B0D0               	btfsc	4048,0,c	;volatile
  1364  0021D8  D006               	goto	l1446
  1365  0021DA  B2D0               	btfsc	4048,1,c	;volatile
  1366  0021DC  D002               	goto	l1442
  1367  0021DE  D003               	goto	l1446
  1368  0021E0  D004               	goto	l582
  1369  0021E2                     l1442:
  1370  0021E2  0E01               	movlw	1
  1371  0021E4  D002               	goto	l582
  1372  0021E6                     l1446:
  1373  0021E6  0E00               	movlw	0
  1374  0021E8  D000               	goto	l582
  1375  0021EA                     l582:
  1376  0021EA  0012               	return		;funcret
  1377  0021EC                     __end_of_isBOR:
  1378                           	opt stack 0
  1379                           stkptr	equ	0xFFC
  1380                           intcon	equ	0xFF2
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _WDTtask *****************
  1386 ;; Defined at:
  1387 ;;		line 370 in file "../Robot Files/sumovore.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;		None               void
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    3
  1408 ;; This function calls:
  1409 ;;		_gtrap
  1410 ;;		_printf
  1411 ;; This function is called by:
  1412 ;;		_reset_codes
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text8
  1417  00216A                     __ptext8:
  1418                           	opt stack 0
  1419  00216A                     _WDTtask:
  1420                           	opt stack 25
  1421                           
  1422                           ;sumovore.c: 372: printf("<WDT TO>");
  1423                           
  1424                           ;incstack = 0
  1425  00216A  0E5D               	movlw	low STR_4
  1426  00216C  6E0F               	movwf	printf@f,c
  1427  00216E  0E10               	movlw	high STR_4
  1428  002170  6E10               	movwf	printf@f+1,c
  1429  002172  ECEA  F00F         	call	_printf	;wreg free
  1430                           
  1431                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1432  002176  9083               	bcf	3971,0,c	;volatile
  1433                           
  1434                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1435  002178  8283               	bsf	3971,1,c	;volatile
  1436                           
  1437                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1438  00217A  9483               	bcf	3971,2,c	;volatile
  1439                           
  1440                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1441  00217C  8683               	bsf	3971,3,c	;volatile
  1442                           
  1443                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1444  00217E  8883               	bsf	3971,4,c	;volatile
  1445                           
  1446                           ;sumovore.c: 378: gtrap();
  1447  002180  ECBF  F00E         	call	_gtrap	;wreg free
  1448  002184  0012               	return		;funcret
  1449  002186                     __end_of_WDTtask:
  1450                           	opt stack 0
  1451                           stkptr	equ	0xFFC
  1452                           intcon	equ	0xFF2
  1453                           postinc0	equ	0xFEE
  1454                           wreg	equ	0xFE8
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _STKFULtask *****************
  1458 ;; Defined at:
  1459 ;;		line 389 in file "../Robot Files/sumovore.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;		None               void
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    3
  1480 ;; This function calls:
  1481 ;;		_gtrap
  1482 ;;		_printf
  1483 ;; This function is called by:
  1484 ;;		_reset_codes
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text9
  1489  00214C                     __ptext9:
  1490                           	opt stack 0
  1491  00214C                     _STKFULtask:
  1492                           	opt stack 25
  1493                           
  1494                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1495                           
  1496                           ;incstack = 0
  1497  00214C  9EFC               	bcf	stkptr,7,c	;volatile
  1498                           
  1499                           ;sumovore.c: 393: printf("<STKFUL>");
  1500  00214E  0E54               	movlw	low STR_5
  1501  002150  6E0F               	movwf	printf@f,c
  1502  002152  0E10               	movlw	high STR_5
  1503  002154  6E10               	movwf	printf@f+1,c
  1504  002156  ECEA  F00F         	call	_printf	;wreg free
  1505                           
  1506                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1507  00215A  9083               	bcf	3971,0,c	;volatile
  1508                           
  1509                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1510  00215C  8283               	bsf	3971,1,c	;volatile
  1511                           
  1512                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1513  00215E  9483               	bcf	3971,2,c	;volatile
  1514                           
  1515                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1516  002160  8683               	bsf	3971,3,c	;volatile
  1517                           
  1518                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1519  002162  9883               	bcf	3971,4,c	;volatile
  1520                           
  1521                           ;sumovore.c: 399: gtrap();
  1522  002164  ECBF  F00E         	call	_gtrap	;wreg free
  1523  002168  0012               	return		;funcret
  1524  00216A                     __end_of_STKFULtask:
  1525                           	opt stack 0
  1526                           stkptr	equ	0xFFC
  1527                           intcon	equ	0xFF2
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _RESETtask *****************
  1533 ;; Defined at:
  1534 ;;		line 405 in file "../Robot Files/sumovore.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    3
  1555 ;; This function calls:
  1556 ;;		_gtrap
  1557 ;;		_printf
  1558 ;; This function is called by:
  1559 ;;		_reset_codes
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text10
  1564  002186                     __ptext10:
  1565                           	opt stack 0
  1566  002186                     _RESETtask:
  1567                           	opt stack 25
  1568                           
  1569                           ;sumovore.c: 408: printf(" <reset> ");
  1570                           
  1571                           ;incstack = 0
  1572  002186  0E4A               	movlw	low STR_6
  1573  002188  6E0F               	movwf	printf@f,c
  1574  00218A  0E10               	movlw	high STR_6
  1575  00218C  6E10               	movwf	printf@f+1,c
  1576  00218E  ECEA  F00F         	call	_printf	;wreg free
  1577                           
  1578                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1579  002192  9083               	bcf	3971,0,c	;volatile
  1580                           
  1581                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1582  002194  8283               	bsf	3971,1,c	;volatile
  1583                           
  1584                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1585  002196  9483               	bcf	3971,2,c	;volatile
  1586                           
  1587                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1588  002198  9683               	bcf	3971,3,c	;volatile
  1589                           
  1590                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1591  00219A  9883               	bcf	3971,4,c	;volatile
  1592                           
  1593                           ;sumovore.c: 414: gtrap();
  1594  00219C  ECBF  F00E         	call	_gtrap	;wreg free
  1595  0021A0  0012               	return		;funcret
  1596  0021A2                     __end_of_RESETtask:
  1597                           	opt stack 0
  1598                           stkptr	equ	0xFFC
  1599                           intcon	equ	0xFF2
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _PORtask *****************
  1605 ;; Defined at:
  1606 ;;		line 307 in file "../Robot Files/sumovore.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  count2          4   23[COMRAM] unsigned long 
  1611 ;;  count1          4   19[COMRAM] unsigned long 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;		None               void
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;Total ram usage:        8 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    3
  1628 ;; This function calls:
  1629 ;;		_StatusReset
  1630 ;;		_printf
  1631 ;; This function is called by:
  1632 ;;		_reset_codes
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text11
  1637  00192E                     __ptext11:
  1638                           	opt stack 0
  1639  00192E                     _PORtask:
  1640                           	opt stack 25
  1641                           
  1642                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1643                           
  1644                           ;incstack = 0
  1645  00192E  0E00               	movlw	0
  1646  001930  6E14               	movwf	PORtask@count1,c
  1647  001932  0E00               	movlw	0
  1648  001934  6E15               	movwf	PORtask@count1+1,c
  1649  001936  0E00               	movlw	0
  1650  001938  6E16               	movwf	PORtask@count1+2,c
  1651  00193A  0E00               	movlw	0
  1652  00193C  6E17               	movwf	PORtask@count1+3,c
  1653  00193E  0E00               	movlw	0
  1654  001940  6E18               	movwf	PORtask@count2,c
  1655  001942  0E00               	movlw	0
  1656  001944  6E19               	movwf	PORtask@count2+1,c
  1657  001946  0E00               	movlw	0
  1658  001948  6E1A               	movwf	PORtask@count2+2,c
  1659  00194A  0E00               	movlw	0
  1660  00194C  6E1B               	movwf	PORtask@count2+3,c
  1661                           
  1662                           ;sumovore.c: 310: StatusReset();
  1663  00194E  EC3E  F011         	call	_StatusReset	;wreg free
  1664                           
  1665                           ;sumovore.c: 312: printf("<POR>");
  1666  001952  0E73               	movlw	low STR_2
  1667  001954  6E0F               	movwf	printf@f,c
  1668  001956  0E10               	movlw	high STR_2
  1669  001958  6E10               	movwf	printf@f+1,c
  1670  00195A  ECEA  F00F         	call	_printf	;wreg free
  1671                           
  1672                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1673  00195E  9083               	bcf	3971,0,c	;volatile
  1674                           
  1675                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1676  001960  8283               	bsf	3971,1,c	;volatile
  1677                           
  1678                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1679  001962  8483               	bsf	3971,2,c	;volatile
  1680                           
  1681                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1682  001964  8683               	bsf	3971,3,c	;volatile
  1683                           
  1684                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1685  001966  8883               	bsf	3971,4,c	;volatile
  1686                           
  1687                           ;sumovore.c: 318: while(count1<10u)
  1688  001968  D02D               	goto	l317
  1689  00196A                     l318:
  1690  00196A  0004               	clrwdt		;# 
  1691                           
  1692                           ;sumovore.c: 321: if (count2==30000u)
  1693  00196C  0E30               	movlw	48
  1694  00196E  1818               	xorwf	PORtask@count2,w,c
  1695  001970  E117               	bnz	l2274
  1696  001972  0E75               	movlw	117
  1697  001974  1819               	xorwf	PORtask@count2+1,w,c
  1698  001976  101A               	iorwf	PORtask@count2+2,w,c
  1699  001978  101B               	iorwf	PORtask@count2+3,w,c
  1700  00197A  A4D8               	btfss	status,2,c
  1701  00197C  D011               	goto	l2274
  1702                           
  1703                           ;sumovore.c: 322: {
  1704                           ;sumovore.c: 323: count2=0;
  1705  00197E  0E00               	movlw	0
  1706  001980  6E18               	movwf	PORtask@count2,c
  1707  001982  0E00               	movlw	0
  1708  001984  6E19               	movwf	PORtask@count2+1,c
  1709  001986  0E00               	movlw	0
  1710  001988  6E1A               	movwf	PORtask@count2+2,c
  1711  00198A  0E00               	movlw	0
  1712  00198C  6E1B               	movwf	PORtask@count2+3,c
  1713                           
  1714                           ;sumovore.c: 324: count1++;
  1715  00198E  0E01               	movlw	1
  1716  001990  2614               	addwf	PORtask@count1,f,c
  1717  001992  0E00               	movlw	0
  1718  001994  2215               	addwfc	PORtask@count1+1,f,c
  1719  001996  2216               	addwfc	PORtask@count1+2,f,c
  1720  001998  2217               	addwfc	PORtask@count1+3,f,c
  1721                           
  1722                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1723  00199A  9083               	bcf	3971,0,c	;volatile
  1724                           
  1725                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1726  00199C  8283               	bsf	3971,1,c	;volatile
  1727                           
  1728                           ;sumovore.c: 327: }
  1729  00199E  D00C               	goto	l2278
  1730  0019A0                     l2274:
  1731                           
  1732                           ;sumovore.c: 328: else if (count2==15000u)
  1733  0019A0  0E98               	movlw	152
  1734  0019A2  1818               	xorwf	PORtask@count2,w,c
  1735  0019A4  E109               	bnz	l2278
  1736  0019A6  0E3A               	movlw	58
  1737  0019A8  1819               	xorwf	PORtask@count2+1,w,c
  1738  0019AA  101A               	iorwf	PORtask@count2+2,w,c
  1739  0019AC  101B               	iorwf	PORtask@count2+3,w,c
  1740  0019AE  A4D8               	btfss	status,2,c
  1741  0019B0  D003               	goto	l2278
  1742                           
  1743                           ;sumovore.c: 329: {
  1744                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1745  0019B2  8083               	bsf	3971,0,c	;volatile
  1746                           
  1747                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1748  0019B4  9283               	bcf	3971,1,c	;volatile
  1749  0019B6  D000               	goto	l2278
  1750  0019B8                     l2278:
  1751                           
  1752                           ;sumovore.c: 332: }
  1753                           ;sumovore.c: 333: count2++;
  1754  0019B8  0E01               	movlw	1
  1755  0019BA  2618               	addwf	PORtask@count2,f,c
  1756  0019BC  0E00               	movlw	0
  1757  0019BE  2219               	addwfc	PORtask@count2+1,f,c
  1758  0019C0  221A               	addwfc	PORtask@count2+2,f,c
  1759  0019C2  221B               	addwfc	PORtask@count2+3,f,c
  1760  0019C4                     l317:
  1761  0019C4  5017               	movf	PORtask@count1+3,w,c
  1762  0019C6  1016               	iorwf	PORtask@count1+2,w,c
  1763  0019C8  1015               	iorwf	PORtask@count1+1,w,c
  1764  0019CA  E106               	bnz	l323
  1765  0019CC  0E0A               	movlw	10
  1766  0019CE  5C14               	subwf	PORtask@count1,w,c
  1767  0019D0  B0D8               	btfsc	status,0,c
  1768  0019D2  D002               	goto	l323
  1769  0019D4  D7CA               	goto	l318
  1770  0019D6  D000               	goto	l323
  1771  0019D8                     l323:
  1772  0019D8  0012               	return		;funcret
  1773  0019DA                     __end_of_PORtask:
  1774                           	opt stack 0
  1775                           stkptr	equ	0xFFC
  1776                           intcon	equ	0xFF2
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _BORtask *****************
  1782 ;; Defined at:
  1783 ;;		line 349 in file "../Robot Files/sumovore.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;Total ram usage:        0 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		_StatusReset
  1806 ;;		_gtrap
  1807 ;;		_printf
  1808 ;; This function is called by:
  1809 ;;		_reset_codes
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text12
  1814  0020EC                     __ptext12:
  1815                           	opt stack 0
  1816  0020EC                     _BORtask:
  1817                           	opt stack 25
  1818                           
  1819                           ;sumovore.c: 351: StatusReset();
  1820                           
  1821                           ;incstack = 0
  1822  0020EC  EC3E  F011         	call	_StatusReset	;wreg free
  1823                           
  1824                           ;sumovore.c: 353: printf("<BOR>");
  1825  0020F0  0E6D               	movlw	low STR_3
  1826  0020F2  6E0F               	movwf	printf@f,c
  1827  0020F4  0E10               	movlw	high STR_3
  1828  0020F6  6E10               	movwf	printf@f+1,c
  1829  0020F8  ECEA  F00F         	call	_printf	;wreg free
  1830                           
  1831                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1832  0020FC  8083               	bsf	3971,0,c	;volatile
  1833                           
  1834                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1835  0020FE  8283               	bsf	3971,1,c	;volatile
  1836                           
  1837                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1838  002100  8483               	bsf	3971,2,c	;volatile
  1839                           
  1840                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1841  002102  8683               	bsf	3971,3,c	;volatile
  1842                           
  1843                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1844  002104  9883               	bcf	3971,4,c	;volatile
  1845                           
  1846                           ;sumovore.c: 359: gtrap();
  1847  002106  ECBF  F00E         	call	_gtrap	;wreg free
  1848  00210A  0012               	return		;funcret
  1849  00210C                     __end_of_BORtask:
  1850                           	opt stack 0
  1851                           stkptr	equ	0xFFC
  1852                           intcon	equ	0xFF2
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _StatusReset *****************
  1858 ;; Defined at:
  1859 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		None
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_PORtask
  1884 ;;		_BORtask
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text13
  1889  00227C                     __ptext13:
  1890                           	opt stack 0
  1891  00227C                     _StatusReset:
  1892                           	opt stack 26
  1893                           
  1894                           ;incstack = 0
  1895  00227C  82D0               	bsf	4048,1,c	;volatile
  1896  00227E  80D0               	bsf	4048,0,c	;volatile
  1897  002280  0012               	return		;funcret
  1898  002282                     __end_of_StatusReset:
  1899                           	opt stack 0
  1900                           stkptr	equ	0xFFC
  1901                           intcon	equ	0xFF2
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           status	equ	0xFD8
  1905                           
  1906 ;; *************** function _openPORTE *****************
  1907 ;; Defined at:
  1908 ;;		line 178 in file "../Robot Files/sumovore.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;		None               void
  1915 ;; Registers used:
  1916 ;;		wreg, status,2
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_initialization
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text14
  1937  002282                     __ptext14:
  1938                           	opt stack 0
  1939  002282                     _openPORTE:
  1940                           	opt stack 28
  1941                           
  1942                           ;sumovore.c: 180: TRISE = 0b000;
  1943                           
  1944                           ;incstack = 0
  1945  002282  0E00               	movlw	0
  1946  002284  6E96               	movwf	3990,c	;volatile
  1947  002286  0012               	return		;funcret
  1948  002288                     __end_of_openPORTE:
  1949                           	opt stack 0
  1950                           stkptr	equ	0xFFC
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _openPORTCforUSART *****************
  1957 ;; Defined at:
  1958 ;;		line 124 in file "../Robot Files/sumovore.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		None
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_initialization
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text15
  1987  002288                     __ptext15:
  1988                           	opt stack 0
  1989  002288                     _openPORTCforUSART:
  1990                           	opt stack 28
  1991                           
  1992                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  1993                           
  1994                           ;incstack = 0
  1995  002288  9C94               	bcf	3988,6,c	;volatile
  1996                           
  1997                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  1998  00228A  8E94               	bsf	3988,7,c	;volatile
  1999  00228C  0012               	return		;funcret
  2000  00228E                     __end_of_openPORTCforUSART:
  2001                           	opt stack 0
  2002                           stkptr	equ	0xFFC
  2003                           intcon	equ	0xFF2
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _openPORTCforPWM *****************
  2009 ;; Defined at:
  2010 ;;		line 133 in file "../Robot Files/sumovore.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;		None               void
  2017 ;; Registers used:
  2018 ;;		None
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_initialization
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text16
  2039  00225A                     __ptext16:
  2040                           	opt stack 0
  2041  00225A                     _openPORTCforPWM:
  2042                           	opt stack 28
  2043                           
  2044                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2045                           
  2046                           ;incstack = 0
  2047  00225A  9094               	bcf	3988,0,c	;volatile
  2048                           
  2049                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2050  00225C  9294               	bcf	3988,1,c	;volatile
  2051                           
  2052                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2053  00225E  9494               	bcf	3988,2,c	;volatile
  2054                           
  2055                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2056  002260  9694               	bcf	3988,3,c	;volatile
  2057                           
  2058                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2059  002262  9894               	bcf	3988,4,c	;volatile
  2060                           
  2061                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2062  002264  9A94               	bcf	3988,5,c	;volatile
  2063  002266  0012               	return		;funcret
  2064  002268                     __end_of_openPORTCforPWM:
  2065                           	opt stack 0
  2066                           stkptr	equ	0xFFC
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _openPORTB *****************
  2073 ;; Defined at:
  2074 ;;		line 158 in file "../Robot Files/sumovore.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;		None               void
  2081 ;; Registers used:
  2082 ;;		wreg, status,2
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_initialization
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text17
  2103  00228E                     __ptext17:
  2104                           	opt stack 0
  2105  00228E                     _openPORTB:
  2106                           	opt stack 28
  2107                           
  2108                           ;sumovore.c: 160: TRISB = 0B11000000;
  2109                           
  2110                           ;incstack = 0
  2111  00228E  0EC0               	movlw	192
  2112  002290  6E93               	movwf	3987,c	;volatile
  2113  002292  0012               	return		;funcret
  2114  002294                     __end_of_openPORTB:
  2115                           	opt stack 0
  2116                           stkptr	equ	0xFFC
  2117                           intcon	equ	0xFF2
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           status	equ	0xFD8
  2121                           
  2122 ;; *************** function _openPORTA *****************
  2123 ;; Defined at:
  2124 ;;		line 147 in file "../Robot Files/sumovore.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;		None               void
  2131 ;; Registers used:
  2132 ;;		wreg, status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_initialization
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text18
  2153  002294                     __ptext18:
  2154                           	opt stack 0
  2155  002294                     _openPORTA:
  2156                           	opt stack 28
  2157                           
  2158                           ;sumovore.c: 149: TRISA = 0B11101111;
  2159                           
  2160                           ;incstack = 0
  2161  002294  0EEF               	movlw	239
  2162  002296  6E92               	movwf	3986,c	;volatile
  2163  002298  0012               	return		;funcret
  2164  00229A                     __end_of_openPORTA:
  2165                           	opt stack 0
  2166                           stkptr	equ	0xFFC
  2167                           intcon	equ	0xFF2
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _openLVD *****************
  2173 ;; Defined at:
  2174 ;;		line 428 in file "../Robot Files/sumovore.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		None
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_initialization
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text19
  2203  0021BE                     __ptext19:
  2204                           	opt stack 0
  2205  0021BE                     _openLVD:
  2206                           	opt stack 28
  2207                           
  2208                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2209                           
  2210                           ;incstack = 0
  2211  0021BE  8ED0               	bsf	4048,7,c	;volatile
  2212                           
  2213                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2214  0021C0  88D2               	bsf	4050,4,c	;volatile
  2215                           
  2216                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2217  0021C2  84A2               	bsf	4002,2,c	;volatile
  2218                           
  2219                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2220  0021C4  9ED2               	bcf	4050,7,c	;volatile
  2221                           
  2222                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2223  0021C6  86D2               	bsf	4050,3,c	;volatile
  2224                           
  2225                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2226  0021C8  84D2               	bsf	4050,2,c	;volatile
  2227                           
  2228                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2229  0021CA  82D2               	bsf	4050,1,c	;volatile
  2230                           
  2231                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2232  0021CC  90D2               	bcf	4050,0,c	;volatile
  2233                           
  2234                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2235  0021CE  94A1               	bcf	4001,2,c	;volatile
  2236                           
  2237                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2238  0021D0  84A0               	bsf	4000,2,c	;volatile
  2239                           
  2240                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2241  0021D2  8EF2               	bsf	intcon,7,c	;volatile
  2242  0021D4  0012               	return		;funcret
  2243  0021D6                     __end_of_openLVD:
  2244                           	opt stack 0
  2245                           stkptr	equ	0xFFC
  2246                           intcon	equ	0xFF2
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _OpenUSART *****************
  2252 ;; Defined at:
  2253 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  config          1    wreg     unsigned char 
  2256 ;;  spbrg           2   14[COMRAM] unsigned int 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  config          1   16[COMRAM] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;		None               void
  2261 ;; Registers used:
  2262 ;;		wreg, status,2
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;Total ram usage:        3 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_initialization
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text20
  2283  001D0E                     __ptext20:
  2284                           	opt stack 0
  2285  001D0E                     _OpenUSART:
  2286                           	opt stack 28
  2287                           
  2288                           ;incstack = 0
  2289                           ;OpenUSART@config stored from wreg
  2290  001D0E  6E11               	movwf	OpenUSART@config,c
  2291  001D10  0E00               	movlw	0
  2292  001D12  6EAC               	movwf	4012,c	;volatile
  2293  001D14  0E00               	movlw	0
  2294  001D16  6EAB               	movwf	4011,c	;volatile
  2295  001D18  A011               	btfss	OpenUSART@config,0,c
  2296  001D1A  D002               	goto	l2386
  2297  001D1C  88AC               	bsf	4012,4,c	;volatile
  2298  001D1E  D000               	goto	l2386
  2299  001D20                     l2386:
  2300  001D20  A211               	btfss	OpenUSART@config,1,c
  2301  001D22  D003               	goto	l2390
  2302  001D24  8CAC               	bsf	4012,6,c	;volatile
  2303  001D26  8CAB               	bsf	4011,6,c	;volatile
  2304  001D28  D000               	goto	l2390
  2305  001D2A                     l2390:
  2306  001D2A  A411               	btfss	OpenUSART@config,2,c
  2307  001D2C  D002               	goto	l2394
  2308  001D2E  8EAC               	bsf	4012,7,c	;volatile
  2309  001D30  D000               	goto	l2394
  2310  001D32                     l2394:
  2311  001D32  A611               	btfss	OpenUSART@config,3,c
  2312  001D34  D002               	goto	l566
  2313  001D36  88AB               	bsf	4011,4,c	;volatile
  2314  001D38  D002               	goto	l2398
  2315  001D3A                     l566:
  2316  001D3A  8AAB               	bsf	4011,5,c	;volatile
  2317  001D3C  D000               	goto	l2398
  2318  001D3E                     l2398:
  2319  001D3E  B811               	btfsc	OpenUSART@config,4,c
  2320  001D40  84AC               	bsf	4012,2,c	;volatile
  2321  001D42  989E               	bcf	3998,4,c	;volatile
  2322  001D44  AA11               	btfss	OpenUSART@config,5,c
  2323  001D46  D002               	goto	l2406
  2324  001D48  86AB               	bsf	4011,3,c	;volatile
  2325  001D4A  D000               	goto	l2406
  2326  001D4C                     l2406:
  2327  001D4C  AC11               	btfss	OpenUSART@config,6,c
  2328  001D4E  D002               	goto	l570
  2329  001D50  8A9D               	bsf	3997,5,c	;volatile
  2330  001D52  D001               	goto	l571
  2331  001D54                     l570:
  2332  001D54  9A9D               	bcf	3997,5,c	;volatile
  2333  001D56                     l571:
  2334  001D56  9A9E               	bcf	3998,5,c	;volatile
  2335  001D58  AE11               	btfss	OpenUSART@config,7,c
  2336  001D5A  D002               	goto	l572
  2337  001D5C  889D               	bsf	3997,4,c	;volatile
  2338  001D5E  D001               	goto	l573
  2339  001D60                     l572:
  2340  001D60  989D               	bcf	3997,4,c	;volatile
  2341  001D62                     l573:
  2342  001D62  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2343  001D66  5010               	movf	OpenUSART@spbrg+1,w,c
  2344  001D68  6EB0               	movwf	4016,c	;volatile
  2345  001D6A  8AAC               	bsf	4012,5,c	;volatile
  2346  001D6C  8EAB               	bsf	4011,7,c	;volatile
  2347  001D6E  9C94               	bcf	3988,6,c	;volatile
  2348  001D70  8E94               	bsf	3988,7,c	;volatile
  2349  001D72  B8AC               	btfsc	4012,4,c	;volatile
  2350  001D74  BEAC               	btfsc	4012,7,c	;volatile
  2351  001D76  D002               	goto	l575
  2352  001D78  8C94               	bsf	3988,6,c	;volatile
  2353  001D7A  D000               	goto	l575
  2354  001D7C                     l575:
  2355  001D7C  0012               	return		;funcret
  2356  001D7E                     __end_of_OpenUSART:
  2357                           	opt stack 0
  2358                           stkptr	equ	0xFFC
  2359                           intcon	equ	0xFF2
  2360                           postinc0	equ	0xFEE
  2361                           wreg	equ	0xFE8
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _OpenTimer2 *****************
  2365 ;; Defined at:
  2366 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  config          1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  config          1   14[COMRAM] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        1 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_initialization
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text21
  2395  0021A2                     __ptext21:
  2396                           	opt stack 0
  2397  0021A2                     _OpenTimer2:
  2398                           	opt stack 28
  2399                           
  2400                           ;incstack = 0
  2401                           ;OpenTimer2@config stored from wreg
  2402  0021A2  6E0F               	movwf	OpenTimer2@config,c
  2403  0021A4  500F               	movf	OpenTimer2@config,w,c
  2404  0021A6  0BFB               	andlw	251
  2405  0021A8  6ECA               	movwf	4042,c	;volatile
  2406  0021AA  0E00               	movlw	0
  2407  0021AC  6ECC               	movwf	4044,c	;volatile
  2408  0021AE  929E               	bcf	3998,1,c	;volatile
  2409  0021B0  AE0F               	btfss	OpenTimer2@config,7,c
  2410  0021B2  D002               	goto	l540
  2411  0021B4  829D               	bsf	3997,1,c	;volatile
  2412  0021B6  D001               	goto	l541
  2413  0021B8                     l540:
  2414  0021B8  929D               	bcf	3997,1,c	;volatile
  2415  0021BA                     l541:
  2416  0021BA  84CA               	bsf	4042,2,c	;volatile
  2417  0021BC  0012               	return		;funcret
  2418  0021BE                     __end_of_OpenTimer2:
  2419                           	opt stack 0
  2420                           stkptr	equ	0xFFC
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _OpenPWM2 *****************
  2427 ;; Defined at:
  2428 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  period          1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  period          1   14[COMRAM] unsigned char 
  2433 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2434 ;;  pmmode          1    0        unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;		None               void
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:        2 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_initialization
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text22
  2459  001F9C                     __ptext22:
  2460                           	opt stack 0
  2461  001F9C                     _OpenPWM2:
  2462                           	opt stack 28
  2463                           
  2464                           ;incstack = 0
  2465                           ;OpenPWM2@period stored from wreg
  2466  001F9C  6E0F               	movwf	OpenPWM2@period,c
  2467  001F9E  0E0C               	movlw	12
  2468  001FA0  6EBA               	movwf	4026,c	;volatile
  2469  001FA2  0E05               	movlw	5
  2470  001FA4  6EF6               	movwf	tblptrl,c
  2471  001FA6                     	if	1	;There is more than 1 active tblptr byte
  2472  001FA6  0E00               	movlw	0
  2473  001FA8  6EF7               	movwf	tblptrh,c
  2474  001FAA                     	endif
  2475  001FAA                     	if	1	;There are 3 active tblptr bytes
  2476  001FAA  0E30               	movlw	48
  2477  001FAC  6EF8               	movwf	tblptru,c
  2478  001FAE                     	endif
  2479  001FAE  0008               	tblrd		*
  2480  001FB0  0100               	movlb	12288	; () banked
  2481  001FB2  A0F5               	btfss	tablat,0,c
  2482  001FB4  D002               	goto	l1708
  2483                           
  2484                           ; BSR set to: 0
  2485  001FB6  6810               	setf	OpenPWM2@ccp2mx,c
  2486  001FB8  D002               	goto	l488
  2487  001FBA                     l1708:
  2488                           
  2489                           ; BSR set to: 0
  2490  001FBA  0E00               	movlw	0
  2491  001FBC  6E10               	movwf	OpenPWM2@ccp2mx,c
  2492  001FBE                     l488:
  2493                           
  2494                           ; BSR set to: 0
  2495  001FBE  5010               	movf	OpenPWM2@ccp2mx,w,c
  2496  001FC0  B4D8               	btfsc	status,2,c
  2497  001FC2  D002               	goto	l489
  2498                           
  2499                           ; BSR set to: 0
  2500  001FC4  9294               	bcf	3988,1,c	;volatile
  2501  001FC6  D001               	goto	l490
  2502  001FC8                     l489:
  2503                           
  2504                           ; BSR set to: 0
  2505  001FC8  9693               	bcf	3987,3,c	;volatile
  2506  001FCA                     l490:
  2507                           
  2508                           ; BSR set to: 0
  2509  001FCA  94CA               	bcf	4042,2,c	;volatile
  2510  001FCC  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2511  001FD0  84CA               	bsf	4042,2,c	;volatile
  2512                           
  2513                           ; BSR set to: 0
  2514  001FD2  0012               	return		;funcret
  2515  001FD4                     __end_of_OpenPWM2:
  2516                           	opt stack 0
  2517                           stkptr	equ	0xFFC
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _OpenPWM1 *****************
  2528 ;; Defined at:
  2529 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  period          1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  period          1   14[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        1 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_initialization
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text23
  2558  002214                     __ptext23:
  2559                           	opt stack 0
  2560  002214                     _OpenPWM1:
  2561                           	opt stack 28
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;incstack = 0
  2565                           ;OpenPWM1@period stored from wreg
  2566  002214  6E0F               	movwf	OpenPWM1@period,c
  2567  002216  0E0C               	movlw	12
  2568  002218  12BD               	iorwf	4029,f,c	;volatile
  2569  00221A  9494               	bcf	3988,2,c	;volatile
  2570  00221C  94CA               	bcf	4042,2,c	;volatile
  2571  00221E  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2572  002222  84CA               	bsf	4042,2,c	;volatile
  2573  002224  0012               	return		;funcret
  2574  002226                     __end_of_OpenPWM1:
  2575                           	opt stack 0
  2576                           stkptr	equ	0xFFC
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           intcon	equ	0xFF2
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _OpenADC *****************
  2587 ;; Defined at:
  2588 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  config          1    wreg     unsigned char 
  2591 ;;  config2         1   14[COMRAM] unsigned char 
  2592 ;;  portconfig      1   15[COMRAM] unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  config          1   18[COMRAM] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;		None               void
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;Total ram usage:        5 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    1
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_initialization
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text24
  2619  001DE0                     __ptext24:
  2620                           	opt stack 0
  2621  001DE0                     _OpenADC:
  2622                           	opt stack 28
  2623                           
  2624                           ;incstack = 0
  2625                           ;OpenADC@config stored from wreg
  2626  001DE0  6E13               	movwf	OpenADC@config,c
  2627  001DE2  0E00               	movlw	0
  2628  001DE4  6EC2               	movwf	4034,c	;volatile
  2629  001DE6  0E00               	movlw	0
  2630  001DE8  6EC0               	movwf	4032,c	;volatile
  2631  001DEA  90D8               	bcf	status,0,c
  2632  001DEC  300F               	rrcf	OpenADC@config2,w,c
  2633  001DEE  0B3C               	andlw	60
  2634  001DF0  6EC2               	movwf	4034,c	;volatile
  2635  001DF2  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2636  001DF6  3A11               	swapf	??_OpenADC,f,c
  2637  001DF8  0EF0               	movlw	240
  2638  001DFA  1611               	andwf	??_OpenADC,f,c
  2639  001DFC  0E30               	movlw	48
  2640  001DFE  1611               	andwf	??_OpenADC,f,c
  2641  001E00  5010               	movf	OpenADC@portconfig,w,c
  2642  001E02  0B0F               	andlw	15
  2643  001E04  1011               	iorwf	??_OpenADC,w,c
  2644  001E06  6EC1               	movwf	4033,c	;volatile
  2645  001E08  C013  F011         	movff	OpenADC@config,??_OpenADC
  2646  001E0C  90D8               	bcf	status,0,c
  2647  001E0E  3611               	rlcf	??_OpenADC,f,c
  2648  001E10  90D8               	bcf	status,0,c
  2649  001E12  3611               	rlcf	??_OpenADC,f,c
  2650  001E14  0E38               	movlw	56
  2651  001E16  1611               	andwf	??_OpenADC,f,c
  2652  001E18  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2653  001E1C  3A12               	swapf	??_OpenADC+1,f,c
  2654  001E1E  0E0F               	movlw	15
  2655  001E20  1612               	andwf	??_OpenADC+1,f,c
  2656  001E22  0E07               	movlw	7
  2657  001E24  1612               	andwf	??_OpenADC+1,f,c
  2658  001E26  5013               	movf	OpenADC@config,w,c
  2659  001E28  0B80               	andlw	128
  2660  001E2A  1012               	iorwf	??_OpenADC+1,w,c
  2661  001E2C  1011               	iorwf	??_OpenADC,w,c
  2662  001E2E  6EC0               	movwf	4032,c	;volatile
  2663  001E30  AE0F               	btfss	OpenADC@config2,7,c
  2664  001E32  D003               	goto	l440
  2665  001E34  9C9E               	bcf	3998,6,c	;volatile
  2666  001E36  8C9D               	bsf	3997,6,c	;volatile
  2667  001E38  8CF2               	bsf	intcon,6,c	;volatile
  2668  001E3A                     l440:
  2669  001E3A  80C2               	bsf	4034,0,c	;volatile
  2670  001E3C  0012               	return		;funcret
  2671  001E3E                     __end_of_OpenADC:
  2672                           	opt stack 0
  2673                           stkptr	equ	0xFFC
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           intcon	equ	0xFF2
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _PID_LineFollowing *****************
  2684 ;; Defined at:
  2685 ;;		line 88 in file "../Robot Files/main.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  error           2   52[COMRAM] PTR char 
  2688 ;;		 -> main@error(3), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    3
  2707 ;; This function calls:
  2708 ;;		_MotorControl
  2709 ;;		_ReadTimer0
  2710 ;;		___aldiv
  2711 ;;		___lwdiv
  2712 ;;		___lwmod
  2713 ;;		___wmul
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text25
  2720  00107A                     __ptext25:
  2721                           	opt stack 0
  2722  00107A                     _PID_LineFollowing:
  2723                           	opt stack 27
  2724                           
  2725                           ;main.c: 90: static int delta_velocity = 0;
  2726                           ;main.c: 92: static int D = 0;
  2727                           ;main.c: 95: if ((ReadTimer0()%I_CONSTANT) < 5)
  2728                           
  2729                           ;incstack = 0
  2730  00107A  EC13  F011         	call	_ReadTimer0	;wreg free
  2731  00107E  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  2732  001082  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  2733  001086  0E03               	movlw	low _I_CONSTANT
  2734  001088  6EF6               	movwf	tblptrl,c
  2735  00108A                     	if	1	;There is more than 1 active tblptr byte
  2736  00108A  0E10               	movlw	high _I_CONSTANT
  2737  00108C  6EF7               	movwf	tblptrh,c
  2738  00108E                     	endif
  2739  00108E                     	if	1	;There are 3 active tblptr bytes
  2740  00108E  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2741  001090  6EF8               	movwf	tblptru,c
  2742  001092                     	endif
  2743  001092  0009               	tblrd		*+
  2744  001094  CFF5 F015          	movff	tablat,___lwmod@divisor
  2745  001098  000A               	tblrd		*-
  2746  00109A  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  2747  00109E  EC4D  F00F         	call	___lwmod	;wreg free
  2748  0010A2  5014               	movf	?___lwmod+1,w,c
  2749  0010A4  E17B               	bnz	l2690
  2750  0010A6  0E05               	movlw	5
  2751  0010A8  5C13               	subwf	?___lwmod,w,c
  2752  0010AA  B0D8               	btfsc	status,0,c
  2753  0010AC  D077               	goto	l2690
  2754                           
  2755                           ;main.c: 96: {
  2756                           ;main.c: 97: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=1600
      +                           && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2757  0010AE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2758  0010B0  D006               	goto	l2666
  2759  0010B2  0E40               	movlw	64
  2760  0010B4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2761  0010B6  0E06               	movlw	6
  2762  0010B8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2763  0010BA  B0D8               	btfsc	status,0,c
  2764  0010BC  D008               	goto	l2668
  2765  0010BE                     l2666:
  2766  0010BE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2767  0010C0  D006               	goto	l2668
  2768  0010C2  0E41               	movlw	65
  2769  0010C4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2770  0010C6  0E06               	movlw	6
  2771  0010C8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2772  0010CA  B0D8               	btfsc	status,0,c
  2773  0010CC  D024               	goto	l2676
  2774  0010CE                     l2668:
  2775  0010CE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2776  0010D0  D00F               	goto	l2672
  2777  0010D2  0E40               	movlw	64
  2778  0010D4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2779  0010D6  0E06               	movlw	6
  2780  0010D8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2781  0010DA  A0D8               	btfss	status,0,c
  2782  0010DC  D009               	goto	l2672
  2783  0010DE  EE20 F002          	lfsr	2,2
  2784  0010E2  5035               	movf	PID_LineFollowing@error,w,c
  2785  0010E4  26D9               	addwf	fsr2l,f,c
  2786  0010E6  5036               	movf	PID_LineFollowing@error+1,w,c
  2787  0010E8  22DA               	addwfc	fsr2h,f,c
  2788  0010EA  0E00               	movlw	0
  2789  0010EC  BEDB               	btfsc	plusw2,7,c
  2790  0010EE  D013               	goto	l2676
  2791  0010F0                     l2672:
  2792  0010F0  AE47               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2793  0010F2  D054               	goto	l2690
  2794  0010F4  0EC1               	movlw	193
  2795  0010F6  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2796  0010F8  0EF9               	movlw	249
  2797  0010FA  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2798  0010FC  B0D8               	btfsc	status,0,c
  2799  0010FE  D04E               	goto	l2690
  2800  001100  EE20 F002          	lfsr	2,2
  2801  001104  5035               	movf	PID_LineFollowing@error,w,c
  2802  001106  26D9               	addwf	fsr2l,f,c
  2803  001108  5036               	movf	PID_LineFollowing@error+1,w,c
  2804  00110A  22DA               	addwfc	fsr2h,f,c
  2805  00110C  50DF               	movf	indf2,w,c
  2806  00110E  0A80               	xorlw	128
  2807  001110  0F7F               	addlw	-129
  2808  001112  A0D8               	btfss	status,0,c
  2809  001114  D043               	goto	l2690
  2810  001116                     l2676:
  2811                           
  2812                           ;main.c: 99: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && error
      +                          [2]>0))
  2813  001116  BE49               	btfsc	_I+1,7,c
  2814  001118  D006               	goto	l2678
  2815  00111A  0EC9               	movlw	201
  2816  00111C  5C48               	subwf	_I,w,c
  2817  00111E  0E0C               	movlw	12
  2818  001120  5849               	subwfb	_I+1,w,c
  2819  001122  B0D8               	btfsc	status,0,c
  2820  001124  D008               	goto	l2680
  2821  001126                     l2678:
  2822  001126  AE49               	btfss	_I+1,7,c
  2823  001128  D02A               	goto	l2688
  2824  00112A  0E37               	movlw	55
  2825  00112C  5C48               	subwf	_I,w,c
  2826  00112E  0EF3               	movlw	243
  2827  001130  5849               	subwfb	_I+1,w,c
  2828  001132  B0D8               	btfsc	status,0,c
  2829  001134  D024               	goto	l2688
  2830  001136                     l2680:
  2831  001136  BE49               	btfsc	_I+1,7,c
  2832  001138  D00F               	goto	l2684
  2833  00113A  0EC9               	movlw	201
  2834  00113C  5C48               	subwf	_I,w,c
  2835  00113E  0E0C               	movlw	12
  2836  001140  5849               	subwfb	_I+1,w,c
  2837  001142  A0D8               	btfss	status,0,c
  2838  001144  D009               	goto	l2684
  2839  001146  EE20 F002          	lfsr	2,2
  2840  00114A  5035               	movf	PID_LineFollowing@error,w,c
  2841  00114C  26D9               	addwf	fsr2l,f,c
  2842  00114E  5036               	movf	PID_LineFollowing@error+1,w,c
  2843  001150  22DA               	addwfc	fsr2h,f,c
  2844  001152  0E00               	movlw	0
  2845  001154  BEDB               	btfsc	plusw2,7,c
  2846  001156  D013               	goto	l2688
  2847  001158                     l2684:
  2848  001158  AE49               	btfss	_I+1,7,c
  2849  00115A  D020               	goto	l2690
  2850  00115C  0E37               	movlw	55
  2851  00115E  5C48               	subwf	_I,w,c
  2852  001160  0EF3               	movlw	243
  2853  001162  5849               	subwfb	_I+1,w,c
  2854  001164  B0D8               	btfsc	status,0,c
  2855  001166  D01A               	goto	l2690
  2856  001168  EE20 F002          	lfsr	2,2
  2857  00116C  5035               	movf	PID_LineFollowing@error,w,c
  2858  00116E  26D9               	addwf	fsr2l,f,c
  2859  001170  5036               	movf	PID_LineFollowing@error+1,w,c
  2860  001172  22DA               	addwfc	fsr2h,f,c
  2861  001174  50DF               	movf	indf2,w,c
  2862  001176  0A80               	xorlw	128
  2863  001178  0F7F               	addlw	-129
  2864  00117A  A0D8               	btfss	status,0,c
  2865  00117C  D00F               	goto	l2690
  2866  00117E                     l2688:
  2867                           
  2868                           ;main.c: 101: I += error[2];
  2869  00117E  EE20 F002          	lfsr	2,2
  2870  001182  5035               	movf	PID_LineFollowing@error,w,c
  2871  001184  26D9               	addwf	fsr2l,f,c
  2872  001186  5036               	movf	PID_LineFollowing@error+1,w,c
  2873  001188  22DA               	addwfc	fsr2h,f,c
  2874  00118A  50DF               	movf	indf2,w,c
  2875  00118C  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2876  00118E  5037               	movf	??_PID_LineFollowing,w,c
  2877  001190  2648               	addwf	_I,f,c
  2878  001192  0E00               	movlw	0
  2879  001194  BE37               	btfsc	??_PID_LineFollowing,7,c
  2880  001196  0EFF               	movlw	255
  2881  001198  2249               	addwfc	_I+1,f,c
  2882  00119A  D000               	goto	l2690
  2883  00119C                     l2690:
  2884                           
  2885                           ;main.c: 102: }
  2886                           ;main.c: 105: if(error[1]!=error[2])
  2887  00119C  EE20 F002          	lfsr	2,2
  2888  0011A0  5035               	movf	PID_LineFollowing@error,w,c
  2889  0011A2  26D9               	addwf	fsr2l,f,c
  2890  0011A4  5036               	movf	PID_LineFollowing@error+1,w,c
  2891  0011A6  22DA               	addwfc	fsr2h,f,c
  2892  0011A8  EE10 F001          	lfsr	1,1
  2893  0011AC  5035               	movf	PID_LineFollowing@error,w,c
  2894  0011AE  26E1               	addwf	fsr1l,f,c
  2895  0011B0  5036               	movf	PID_LineFollowing@error+1,w,c
  2896  0011B2  22E2               	addwfc	fsr1h,f,c
  2897  0011B4  50DE               	movf	postinc2,w,c
  2898  0011B6  18E6               	xorwf	postinc1,w,c
  2899  0011B8  B4D8               	btfsc	status,2,c
  2900  0011BA  D058               	goto	l2698
  2901                           
  2902                           ;main.c: 106: {
  2903                           ;main.c: 107: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  2904  0011BC  EE20 F001          	lfsr	2,1
  2905  0011C0  5035               	movf	PID_LineFollowing@error,w,c
  2906  0011C2  26D9               	addwf	fsr2l,f,c
  2907  0011C4  5036               	movf	PID_LineFollowing@error+1,w,c
  2908  0011C6  22DA               	addwfc	fsr2h,f,c
  2909  0011C8  50DF               	movf	indf2,w,c
  2910  0011CA  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2911  0011CC  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  2912  0011CE  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  2913  0011D0  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  2914  0011D2  1E37               	comf	??_PID_LineFollowing,f,c
  2915  0011D4  1E38               	comf	??_PID_LineFollowing+1,f,c
  2916  0011D6  4A37               	infsnz	??_PID_LineFollowing,f,c
  2917  0011D8  2A38               	incf	??_PID_LineFollowing+1,f,c
  2918  0011DA  EE20 F002          	lfsr	2,2
  2919  0011DE  5035               	movf	PID_LineFollowing@error,w,c
  2920  0011E0  26D9               	addwf	fsr2l,f,c
  2921  0011E2  5036               	movf	PID_LineFollowing@error+1,w,c
  2922  0011E4  22DA               	addwfc	fsr2h,f,c
  2923  0011E6  50DF               	movf	indf2,w,c
  2924  0011E8  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  2925  0011EA  5037               	movf	??_PID_LineFollowing,w,c
  2926  0011EC  2439               	addwf	??_PID_LineFollowing+2,w,c
  2927  0011EE  6E1D               	movwf	___wmul@multiplier,c
  2928  0011F0  0E00               	movlw	0
  2929  0011F2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  2930  0011F4  0EFF               	movlw	255
  2931  0011F6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  2932  0011F8  6E1E               	movwf	___wmul@multiplier+1,c
  2933  0011FA  EC13  F011         	call	_ReadTimer0	;wreg free
  2934  0011FE  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  2935  001202  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  2936  001206  0E01               	movlw	low _D_CONSTANT
  2937  001208  6EF6               	movwf	tblptrl,c
  2938  00120A                     	if	1	;There is more than 1 active tblptr byte
  2939  00120A  0E10               	movlw	high _D_CONSTANT
  2940  00120C  6EF7               	movwf	tblptrh,c
  2941  00120E                     	endif
  2942  00120E                     	if	1	;There are 3 active tblptr bytes
  2943  00120E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  2944  001210  6EF8               	movwf	tblptru,c
  2945  001212                     	endif
  2946  001212  0009               	tblrd		*+
  2947  001214  CFF5 F013          	movff	tablat,___lwdiv@dividend
  2948  001218  000A               	tblrd		*-
  2949  00121A  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  2950  00121E  EC1F  F00F         	call	___lwdiv	;wreg free
  2951  001222  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  2952  001226  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  2953  00122A  EC2B  F010         	call	___wmul	;wreg free
  2954  00122E  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  2955  001232  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  2956                           
  2957                           ;main.c: 110: error[0]=error[1];
  2958  001236  EE20 F001          	lfsr	2,1
  2959  00123A  5035               	movf	PID_LineFollowing@error,w,c
  2960  00123C  26D9               	addwf	fsr2l,f,c
  2961  00123E  5036               	movf	PID_LineFollowing@error+1,w,c
  2962  001240  22DA               	addwfc	fsr2h,f,c
  2963  001242  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  2964  001246  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  2965  00124A  CFDF FFE7          	movff	indf2,indf1
  2966                           
  2967                           ;main.c: 111: error[1]=error[2];
  2968  00124E  EE20 F002          	lfsr	2,2
  2969  001252  5035               	movf	PID_LineFollowing@error,w,c
  2970  001254  26D9               	addwf	fsr2l,f,c
  2971  001256  5036               	movf	PID_LineFollowing@error+1,w,c
  2972  001258  22DA               	addwfc	fsr2h,f,c
  2973  00125A  EE10 F001          	lfsr	1,1
  2974  00125E  5035               	movf	PID_LineFollowing@error,w,c
  2975  001260  26E1               	addwf	fsr1l,f,c
  2976  001262  5036               	movf	PID_LineFollowing@error+1,w,c
  2977  001264  22E2               	addwfc	fsr1h,f,c
  2978  001266  CFDF FFE7          	movff	indf2,indf1
  2979  00126A  D000               	goto	l2698
  2980  00126C                     l2698:
  2981                           
  2982                           ;main.c: 112: }
  2983                           ;main.c: 114: if(TMR0IF)
  2984  00126C  A4F2               	btfss	intcon,2,c	;volatile
  2985  00126E  D05E               	goto	l103
  2986                           
  2987                           ;main.c: 115: {
  2988                           ;main.c: 116: D = D_CONSTANT/65535*(error[1]-error[0]);
  2989  001270  C035  FFD9         	movff	PID_LineFollowing@error,fsr2l
  2990  001274  C036  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  2991  001278  50DF               	movf	indf2,w,c
  2992  00127A  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2993  00127C  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  2994  00127E  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  2995  001280  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  2996  001282  1E37               	comf	??_PID_LineFollowing,f,c
  2997  001284  1E38               	comf	??_PID_LineFollowing+1,f,c
  2998  001286  4A37               	infsnz	??_PID_LineFollowing,f,c
  2999  001288  2A38               	incf	??_PID_LineFollowing+1,f,c
  3000  00128A  EE20 F001          	lfsr	2,1
  3001  00128E  5035               	movf	PID_LineFollowing@error,w,c
  3002  001290  26D9               	addwf	fsr2l,f,c
  3003  001292  5036               	movf	PID_LineFollowing@error+1,w,c
  3004  001294  22DA               	addwfc	fsr2h,f,c
  3005  001296  50DF               	movf	indf2,w,c
  3006  001298  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3007  00129A  5037               	movf	??_PID_LineFollowing,w,c
  3008  00129C  2439               	addwf	??_PID_LineFollowing+2,w,c
  3009  00129E  6E1D               	movwf	___wmul@multiplier,c
  3010  0012A0  0E00               	movlw	0
  3011  0012A2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3012  0012A4  0EFF               	movlw	255
  3013  0012A6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3014  0012A8  6E1E               	movwf	___wmul@multiplier+1,c
  3015  0012AA  0EFF               	movlw	255
  3016  0012AC  6E13               	movwf	___aldiv@divisor,c
  3017  0012AE  0EFF               	movlw	255
  3018  0012B0  6E14               	movwf	___aldiv@divisor+1,c
  3019  0012B2  0E00               	movlw	0
  3020  0012B4  6E15               	movwf	___aldiv@divisor+2,c
  3021  0012B6  0E00               	movlw	0
  3022  0012B8  6E16               	movwf	___aldiv@divisor+3,c
  3023  0012BA  0E01               	movlw	low _D_CONSTANT
  3024  0012BC  6EF6               	movwf	tblptrl,c
  3025  0012BE                     	if	1	;There is more than 1 active tblptr byte
  3026  0012BE  0E10               	movlw	high _D_CONSTANT
  3027  0012C0  6EF7               	movwf	tblptrh,c
  3028  0012C2                     	endif
  3029  0012C2                     	if	1	;There are 3 active tblptr bytes
  3030  0012C2  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3031  0012C4  6EF8               	movwf	tblptru,c
  3032  0012C6                     	endif
  3033  0012C6  0009               	tblrd		*+
  3034  0012C8  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+3
  3035  0012CC  0009               	tblrd		*+
  3036  0012CE  CFF5 F03B          	movff	tablat,??_PID_LineFollowing+4
  3037  0012D2  C03A  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3038  0012D6  C03B  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3039  0012DA  6A11               	clrf	___aldiv@dividend+2,c
  3040  0012DC  6A12               	clrf	___aldiv@dividend+3,c
  3041  0012DE  ECC6  F00B         	call	___aldiv	;wreg free
  3042  0012E2  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3043  0012E6  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3044  0012EA  EC2B  F010         	call	___wmul	;wreg free
  3045  0012EE  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3046  0012F2  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3047                           
  3048                           ;main.c: 119: error[0]=error[1];
  3049  0012F6  EE20 F001          	lfsr	2,1
  3050  0012FA  5035               	movf	PID_LineFollowing@error,w,c
  3051  0012FC  26D9               	addwf	fsr2l,f,c
  3052  0012FE  5036               	movf	PID_LineFollowing@error+1,w,c
  3053  001300  22DA               	addwfc	fsr2h,f,c
  3054  001302  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3055  001306  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3056  00130A  CFDF FFE7          	movff	indf2,indf1
  3057                           
  3058                           ;main.c: 120: error[1]=error[2];
  3059  00130E  EE20 F002          	lfsr	2,2
  3060  001312  5035               	movf	PID_LineFollowing@error,w,c
  3061  001314  26D9               	addwf	fsr2l,f,c
  3062  001316  5036               	movf	PID_LineFollowing@error+1,w,c
  3063  001318  22DA               	addwfc	fsr2h,f,c
  3064  00131A  EE10 F001          	lfsr	1,1
  3065  00131E  5035               	movf	PID_LineFollowing@error,w,c
  3066  001320  26E1               	addwf	fsr1l,f,c
  3067  001322  5036               	movf	PID_LineFollowing@error+1,w,c
  3068  001324  22E2               	addwfc	fsr1h,f,c
  3069  001326  CFDF FFE7          	movff	indf2,indf1
  3070                           
  3071                           ;main.c: 122: TMR0IF = 0;
  3072  00132A  94F2               	bcf	intcon,2,c	;volatile
  3073  00132C                     l103:
  3074                           
  3075                           ;main.c: 123: }
  3076                           ;main.c: 127: delta_velocity = P_CONSTANT*error[2] + I + D;
  3077  00132C  EE20 F002          	lfsr	2,2
  3078  001330  5035               	movf	PID_LineFollowing@error,w,c
  3079  001332  26D9               	addwf	fsr2l,f,c
  3080  001334  5036               	movf	PID_LineFollowing@error+1,w,c
  3081  001336  22DA               	addwfc	fsr2h,f,c
  3082  001338  50DF               	movf	indf2,w,c
  3083  00133A  6E1D               	movwf	___wmul@multiplier,c
  3084  00133C  6A1E               	clrf	___wmul@multiplier+1,c
  3085  00133E  BE1D               	btfsc	___wmul@multiplier,7,c
  3086  001340  061E               	decf	___wmul@multiplier+1,f,c
  3087  001342  0E05               	movlw	low _P_CONSTANT
  3088  001344  6EF6               	movwf	tblptrl,c
  3089  001346                     	if	1	;There is more than 1 active tblptr byte
  3090  001346  0E10               	movlw	high _P_CONSTANT
  3091  001348  6EF7               	movwf	tblptrh,c
  3092  00134A                     	endif
  3093  00134A                     	if	1	;There are 3 active tblptr bytes
  3094  00134A  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3095  00134C  6EF8               	movwf	tblptru,c
  3096  00134E                     	endif
  3097  00134E  0009               	tblrd		*+
  3098  001350  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3099  001354  000A               	tblrd		*-
  3100  001356  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3101  00135A  EC2B  F010         	call	___wmul	;wreg free
  3102  00135E  5048               	movf	_I,w,c
  3103  001360  261D               	addwf	?___wmul,f,c
  3104  001362  5049               	movf	_I+1,w,c
  3105  001364  221E               	addwfc	?___wmul+1,f,c
  3106  001366  5044               	movf	PID_LineFollowing@D,w,c
  3107  001368  241D               	addwf	?___wmul,w,c
  3108  00136A  6E46               	movwf	PID_LineFollowing@delta_velocity,c
  3109  00136C  5045               	movf	PID_LineFollowing@D+1,w,c
  3110  00136E  201E               	addwfc	?___wmul+1,w,c
  3111  001370  6E47               	movwf	PID_LineFollowing@delta_velocity+1,c
  3112                           
  3113                           ;main.c: 130: MotorControl(delta_velocity,0);
  3114  001372  C046  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3115  001376  C047  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3116  00137A  0E00               	movlw	0
  3117  00137C  6E2D               	movwf	MotorControl@speed_divider,c
  3118  00137E  ECC2  F009         	call	_MotorControl	;wreg free
  3119  001382  0012               	return		;funcret
  3120  001384                     __end_of_PID_LineFollowing:
  3121                           	opt stack 0
  3122                           stkptr	equ	0xFFC
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           intcon	equ	0xFF2
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           indf1	equ	0xFE7
  3131                           postinc1	equ	0xFE6
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           postinc2	equ	0xFDE
  3136                           plusw2	equ	0xFDB
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function ___lwmod *****************
  3142 ;; Defined at:
  3143 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  dividend        2   18[COMRAM] unsigned int 
  3146 ;;  divisor         2   20[COMRAM] unsigned int 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  counter         1   22[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  2   18[COMRAM] unsigned int 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:        5 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_PID_LineFollowing
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text26
  3173  001E9A                     __ptext26:
  3174                           	opt stack 0
  3175  001E9A                     ___lwmod:
  3176                           	opt stack 28
  3177                           
  3178                           ;incstack = 0
  3179  001E9A  5015               	movf	___lwmod@divisor,w,c
  3180  001E9C  1016               	iorwf	___lwmod@divisor+1,w,c
  3181  001E9E  B4D8               	btfsc	status,2,c
  3182  001EA0  D01D               	goto	l1136
  3183  001EA2  0E01               	movlw	1
  3184  001EA4  6E17               	movwf	___lwmod@counter,c
  3185  001EA6  D005               	goto	l2530
  3186  001EA8                     l2528:
  3187  001EA8  90D8               	bcf	status,0,c
  3188  001EAA  3615               	rlcf	___lwmod@divisor,f,c
  3189  001EAC  3616               	rlcf	___lwmod@divisor+1,f,c
  3190  001EAE  2A17               	incf	___lwmod@counter,f,c
  3191  001EB0  D000               	goto	l2530
  3192  001EB2                     l2530:
  3193  001EB2  BE16               	btfsc	___lwmod@divisor+1,7,c
  3194  001EB4  D002               	goto	l2532
  3195  001EB6  D7F8               	goto	l2528
  3196  001EB8  D000               	goto	l2532
  3197  001EBA                     l2532:
  3198  001EBA  5015               	movf	___lwmod@divisor,w,c
  3199  001EBC  5C13               	subwf	___lwmod@dividend,w,c
  3200  001EBE  5016               	movf	___lwmod@divisor+1,w,c
  3201  001EC0  5814               	subwfb	___lwmod@dividend+1,w,c
  3202  001EC2  A0D8               	btfss	status,0,c
  3203  001EC4  D005               	goto	l2536
  3204  001EC6  5015               	movf	___lwmod@divisor,w,c
  3205  001EC8  5E13               	subwf	___lwmod@dividend,f,c
  3206  001ECA  5016               	movf	___lwmod@divisor+1,w,c
  3207  001ECC  5A14               	subwfb	___lwmod@dividend+1,f,c
  3208  001ECE  D000               	goto	l2536
  3209  001ED0                     l2536:
  3210  001ED0  90D8               	bcf	status,0,c
  3211  001ED2  3216               	rrcf	___lwmod@divisor+1,f,c
  3212  001ED4  3215               	rrcf	___lwmod@divisor,f,c
  3213  001ED6  2E17               	decfsz	___lwmod@counter,f,c
  3214  001ED8  D7F0               	goto	l2532
  3215  001EDA  D000               	goto	l1136
  3216  001EDC                     l1136:
  3217  001EDC  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3218  001EE0  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3219  001EE4  0012               	return		;funcret
  3220  001EE6                     __end_of___lwmod:
  3221                           	opt stack 0
  3222                           stkptr	equ	0xFFC
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           intcon	equ	0xFF2
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           indf1	equ	0xFE7
  3231                           postinc1	equ	0xFE6
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           postinc2	equ	0xFDE
  3236                           plusw2	equ	0xFDB
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function ___lwdiv *****************
  3242 ;; Defined at:
  3243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  dividend        2   18[COMRAM] unsigned int 
  3246 ;;  divisor         2   20[COMRAM] unsigned int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  quotient        2   22[COMRAM] unsigned int 
  3249 ;;  counter         1   24[COMRAM] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  2   18[COMRAM] unsigned int 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;Total ram usage:        7 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_PID_LineFollowing
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text27
  3274  001E3E                     __ptext27:
  3275                           	opt stack 0
  3276  001E3E                     ___lwdiv:
  3277                           	opt stack 28
  3278                           
  3279                           ;incstack = 0
  3280  001E3E  0E00               	movlw	0
  3281  001E40  6E18               	movwf	___lwdiv@quotient+1,c
  3282  001E42  0E00               	movlw	0
  3283  001E44  6E17               	movwf	___lwdiv@quotient,c
  3284  001E46  5015               	movf	___lwdiv@divisor,w,c
  3285  001E48  1016               	iorwf	___lwdiv@divisor+1,w,c
  3286  001E4A  B4D8               	btfsc	status,2,c
  3287  001E4C  D021               	goto	l1126
  3288  001E4E  0E01               	movlw	1
  3289  001E50  6E19               	movwf	___lwdiv@counter,c
  3290  001E52  D005               	goto	l2510
  3291  001E54                     l2508:
  3292  001E54  90D8               	bcf	status,0,c
  3293  001E56  3615               	rlcf	___lwdiv@divisor,f,c
  3294  001E58  3616               	rlcf	___lwdiv@divisor+1,f,c
  3295  001E5A  2A19               	incf	___lwdiv@counter,f,c
  3296  001E5C  D000               	goto	l2510
  3297  001E5E                     l2510:
  3298  001E5E  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3299  001E60  D002               	goto	l2512
  3300  001E62  D7F8               	goto	l2508
  3301  001E64  D000               	goto	l2512
  3302  001E66                     l2512:
  3303  001E66  90D8               	bcf	status,0,c
  3304  001E68  3617               	rlcf	___lwdiv@quotient,f,c
  3305  001E6A  3618               	rlcf	___lwdiv@quotient+1,f,c
  3306  001E6C  5015               	movf	___lwdiv@divisor,w,c
  3307  001E6E  5C13               	subwf	___lwdiv@dividend,w,c
  3308  001E70  5016               	movf	___lwdiv@divisor+1,w,c
  3309  001E72  5814               	subwfb	___lwdiv@dividend+1,w,c
  3310  001E74  A0D8               	btfss	status,0,c
  3311  001E76  D006               	goto	l2520
  3312  001E78  5015               	movf	___lwdiv@divisor,w,c
  3313  001E7A  5E13               	subwf	___lwdiv@dividend,f,c
  3314  001E7C  5016               	movf	___lwdiv@divisor+1,w,c
  3315  001E7E  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3316  001E80  8017               	bsf	___lwdiv@quotient,0,c
  3317  001E82  D000               	goto	l2520
  3318  001E84                     l2520:
  3319  001E84  90D8               	bcf	status,0,c
  3320  001E86  3216               	rrcf	___lwdiv@divisor+1,f,c
  3321  001E88  3215               	rrcf	___lwdiv@divisor,f,c
  3322  001E8A  2E19               	decfsz	___lwdiv@counter,f,c
  3323  001E8C  D7EC               	goto	l2512
  3324  001E8E  D000               	goto	l1126
  3325  001E90                     l1126:
  3326  001E90  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3327  001E94  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3328  001E98  0012               	return		;funcret
  3329  001E9A                     __end_of___lwdiv:
  3330                           	opt stack 0
  3331                           stkptr	equ	0xFFC
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           postinc1	equ	0xFE6
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           postinc2	equ	0xFDE
  3345                           plusw2	equ	0xFDB
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function ___aldiv *****************
  3351 ;; Defined at:
  3352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  dividend        4   14[COMRAM] long 
  3355 ;;  divisor         4   18[COMRAM] long 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  quotient        4   24[COMRAM] long 
  3358 ;;  sign            1   23[COMRAM] unsigned char 
  3359 ;;  counter         1   22[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  4   14[COMRAM] long 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3369 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;Total ram usage:       14 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_PID_LineFollowing
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text28
  3384  00178C                     __ptext28:
  3385                           	opt stack 0
  3386  00178C                     ___aldiv:
  3387                           	opt stack 28
  3388                           
  3389                           ;incstack = 0
  3390  00178C  0E00               	movlw	0
  3391  00178E  6E18               	movwf	___aldiv@sign,c
  3392  001790  AE16               	btfss	___aldiv@divisor+3,7,c
  3393  001792  D00B               	goto	l2466
  3394  001794  1E16               	comf	___aldiv@divisor+3,f,c
  3395  001796  1E15               	comf	___aldiv@divisor+2,f,c
  3396  001798  1E14               	comf	___aldiv@divisor+1,f,c
  3397  00179A  6C13               	negf	___aldiv@divisor,c
  3398  00179C  0E00               	movlw	0
  3399  00179E  2214               	addwfc	___aldiv@divisor+1,f,c
  3400  0017A0  2215               	addwfc	___aldiv@divisor+2,f,c
  3401  0017A2  2216               	addwfc	___aldiv@divisor+3,f,c
  3402  0017A4  0E01               	movlw	1
  3403  0017A6  6E18               	movwf	___aldiv@sign,c
  3404  0017A8  D000               	goto	l2466
  3405  0017AA                     l2466:
  3406  0017AA  AE12               	btfss	___aldiv@dividend+3,7,c
  3407  0017AC  D00B               	goto	l2472
  3408  0017AE  1E12               	comf	___aldiv@dividend+3,f,c
  3409  0017B0  1E11               	comf	___aldiv@dividend+2,f,c
  3410  0017B2  1E10               	comf	___aldiv@dividend+1,f,c
  3411  0017B4  6C0F               	negf	___aldiv@dividend,c
  3412  0017B6  0E00               	movlw	0
  3413  0017B8  2210               	addwfc	___aldiv@dividend+1,f,c
  3414  0017BA  2211               	addwfc	___aldiv@dividend+2,f,c
  3415  0017BC  2212               	addwfc	___aldiv@dividend+3,f,c
  3416  0017BE  0E01               	movlw	1
  3417  0017C0  1A18               	xorwf	___aldiv@sign,f,c
  3418  0017C2  D000               	goto	l2472
  3419  0017C4                     l2472:
  3420  0017C4  0E00               	movlw	0
  3421  0017C6  6E19               	movwf	___aldiv@quotient,c
  3422  0017C8  0E00               	movlw	0
  3423  0017CA  6E1A               	movwf	___aldiv@quotient+1,c
  3424  0017CC  0E00               	movlw	0
  3425  0017CE  6E1B               	movwf	___aldiv@quotient+2,c
  3426  0017D0  0E00               	movlw	0
  3427  0017D2  6E1C               	movwf	___aldiv@quotient+3,c
  3428  0017D4  5013               	movf	___aldiv@divisor,w,c
  3429  0017D6  1014               	iorwf	___aldiv@divisor+1,w,c
  3430  0017D8  1015               	iorwf	___aldiv@divisor+2,w,c
  3431  0017DA  1016               	iorwf	___aldiv@divisor+3,w,c
  3432  0017DC  B4D8               	btfsc	status,2,c
  3433  0017DE  D02F               	goto	l2494
  3434  0017E0  0E01               	movlw	1
  3435  0017E2  6E17               	movwf	___aldiv@counter,c
  3436  0017E4  D007               	goto	l2480
  3437  0017E6                     l2478:
  3438  0017E6  90D8               	bcf	status,0,c
  3439  0017E8  3613               	rlcf	___aldiv@divisor,f,c
  3440  0017EA  3614               	rlcf	___aldiv@divisor+1,f,c
  3441  0017EC  3615               	rlcf	___aldiv@divisor+2,f,c
  3442  0017EE  3616               	rlcf	___aldiv@divisor+3,f,c
  3443  0017F0  2A17               	incf	___aldiv@counter,f,c
  3444  0017F2  D000               	goto	l2480
  3445  0017F4                     l2480:
  3446  0017F4  BE16               	btfsc	___aldiv@divisor+3,7,c
  3447  0017F6  D002               	goto	l2482
  3448  0017F8  D7F6               	goto	l2478
  3449  0017FA  D000               	goto	l2482
  3450  0017FC                     l2482:
  3451  0017FC  90D8               	bcf	status,0,c
  3452  0017FE  3619               	rlcf	___aldiv@quotient,f,c
  3453  001800  361A               	rlcf	___aldiv@quotient+1,f,c
  3454  001802  361B               	rlcf	___aldiv@quotient+2,f,c
  3455  001804  361C               	rlcf	___aldiv@quotient+3,f,c
  3456  001806  5013               	movf	___aldiv@divisor,w,c
  3457  001808  5C0F               	subwf	___aldiv@dividend,w,c
  3458  00180A  5014               	movf	___aldiv@divisor+1,w,c
  3459  00180C  5810               	subwfb	___aldiv@dividend+1,w,c
  3460  00180E  5015               	movf	___aldiv@divisor+2,w,c
  3461  001810  5811               	subwfb	___aldiv@dividend+2,w,c
  3462  001812  5016               	movf	___aldiv@divisor+3,w,c
  3463  001814  5812               	subwfb	___aldiv@dividend+3,w,c
  3464  001816  A0D8               	btfss	status,0,c
  3465  001818  D00A               	goto	l2490
  3466  00181A  5013               	movf	___aldiv@divisor,w,c
  3467  00181C  5E0F               	subwf	___aldiv@dividend,f,c
  3468  00181E  5014               	movf	___aldiv@divisor+1,w,c
  3469  001820  5A10               	subwfb	___aldiv@dividend+1,f,c
  3470  001822  5015               	movf	___aldiv@divisor+2,w,c
  3471  001824  5A11               	subwfb	___aldiv@dividend+2,f,c
  3472  001826  5016               	movf	___aldiv@divisor+3,w,c
  3473  001828  5A12               	subwfb	___aldiv@dividend+3,f,c
  3474  00182A  8019               	bsf	___aldiv@quotient,0,c
  3475  00182C  D000               	goto	l2490
  3476  00182E                     l2490:
  3477  00182E  90D8               	bcf	status,0,c
  3478  001830  3216               	rrcf	___aldiv@divisor+3,f,c
  3479  001832  3215               	rrcf	___aldiv@divisor+2,f,c
  3480  001834  3214               	rrcf	___aldiv@divisor+1,f,c
  3481  001836  3213               	rrcf	___aldiv@divisor,f,c
  3482  001838  2E17               	decfsz	___aldiv@counter,f,c
  3483  00183A  D7E0               	goto	l2482
  3484  00183C  D000               	goto	l2494
  3485  00183E                     l2494:
  3486  00183E  5018               	movf	___aldiv@sign,w,c
  3487  001840  B4D8               	btfsc	status,2,c
  3488  001842  D009               	goto	l2498
  3489  001844  1E1C               	comf	___aldiv@quotient+3,f,c
  3490  001846  1E1B               	comf	___aldiv@quotient+2,f,c
  3491  001848  1E1A               	comf	___aldiv@quotient+1,f,c
  3492  00184A  6C19               	negf	___aldiv@quotient,c
  3493  00184C  0E00               	movlw	0
  3494  00184E  221A               	addwfc	___aldiv@quotient+1,f,c
  3495  001850  221B               	addwfc	___aldiv@quotient+2,f,c
  3496  001852  221C               	addwfc	___aldiv@quotient+3,f,c
  3497  001854  D000               	goto	l2498
  3498  001856                     l2498:
  3499  001856  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  3500  00185A  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  3501  00185E  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  3502  001862  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  3503  001866  D000               	goto	l677
  3504  001868                     l677:
  3505  001868  0012               	return		;funcret
  3506  00186A                     __end_of___aldiv:
  3507                           	opt stack 0
  3508                           stkptr	equ	0xFFC
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf1	equ	0xFE7
  3517                           postinc1	equ	0xFE6
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           plusw2	equ	0xFDB
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _OpenTimer0 *****************
  3528 ;; Defined at:
  3529 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  config          1    wreg     unsigned char 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  config          1   14[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;Total ram usage:        1 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text29
  3558  00210C                     __ptext29:
  3559                           	opt stack 0
  3560  00210C                     _OpenTimer0:
  3561                           	opt stack 29
  3562                           
  3563                           ;incstack = 0
  3564                           ;OpenTimer0@config stored from wreg
  3565  00210C  6E0F               	movwf	OpenTimer0@config,c
  3566  00210E  500F               	movf	OpenTimer0@config,w,c
  3567  002110  0B7F               	andlw	127
  3568  002112  6ED5               	movwf	4053,c	;volatile
  3569  002114  0E00               	movlw	0
  3570  002116  6ED7               	movwf	4055,c	;volatile
  3571  002118  0E00               	movlw	0
  3572  00211A  6ED6               	movwf	4054,c	;volatile
  3573  00211C  94F2               	bcf	intcon,2,c	;volatile
  3574  00211E  AE0F               	btfss	OpenTimer0@config,7,c
  3575  002120  D002               	goto	l511
  3576  002122  8AF2               	bsf	intcon,5,c	;volatile
  3577  002124  D001               	goto	l512
  3578  002126                     l511:
  3579  002126  9AF2               	bcf	intcon,5,c	;volatile
  3580  002128                     l512:
  3581  002128  8ED5               	bsf	4053,7,c	;volatile
  3582  00212A  0012               	return		;funcret
  3583  00212C                     __end_of_OpenTimer0:
  3584                           	opt stack 0
  3585                           stkptr	equ	0xFFC
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           intcon	equ	0xFF2
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           indf1	equ	0xFE7
  3594                           postinc1	equ	0xFE6
  3595                           fsr1h	equ	0xFE2
  3596                           fsr1l	equ	0xFE1
  3597                           indf2	equ	0xFDF
  3598                           postinc2	equ	0xFDE
  3599                           plusw2	equ	0xFDB
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8
  3603                           
  3604 ;; *************** function _LVtrap *****************
  3605 ;; Defined at:
  3606 ;;		line 449 in file "../Robot Files/sumovore.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;		None               void
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;Total ram usage:        0 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    3
  3627 ;; This function calls:
  3628 ;;		_gtrap
  3629 ;;		_openPORTD
  3630 ;;		_printf
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text30
  3637  00212C                     __ptext30:
  3638                           	opt stack 0
  3639  00212C                     _LVtrap:
  3640                           	opt stack 27
  3641                           
  3642                           ;sumovore.c: 451: printf("\\<LVD>");
  3643                           
  3644                           ;incstack = 0
  3645  00212C  0E66               	movlw	low STR_7
  3646  00212E  6E0F               	movwf	printf@f,c
  3647  002130  0E10               	movlw	high STR_7
  3648  002132  6E10               	movwf	printf@f+1,c
  3649  002134  ECEA  F00F         	call	_printf	;wreg free
  3650                           
  3651                           ;sumovore.c: 452: openPORTD();
  3652  002138  EC4D  F011         	call	_openPORTD	;wreg free
  3653                           
  3654                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3655  00213C  9083               	bcf	3971,0,c	;volatile
  3656                           
  3657                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3658  00213E  8283               	bsf	3971,1,c	;volatile
  3659                           
  3660                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3661  002140  8483               	bsf	3971,2,c	;volatile
  3662                           
  3663                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3664  002142  9683               	bcf	3971,3,c	;volatile
  3665                           
  3666                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3667  002144  8883               	bsf	3971,4,c	;volatile
  3668                           
  3669                           ;sumovore.c: 458: gtrap();
  3670  002146  ECBF  F00E         	call	_gtrap	;wreg free
  3671  00214A  0012               	return		;funcret
  3672  00214C                     __end_of_LVtrap:
  3673                           	opt stack 0
  3674                           stkptr	equ	0xFFC
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           intcon	equ	0xFF2
  3680                           postinc0	equ	0xFEE
  3681                           wreg	equ	0xFE8
  3682                           indf1	equ	0xFE7
  3683                           postinc1	equ	0xFE6
  3684                           fsr1h	equ	0xFE2
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           plusw2	equ	0xFDB
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _printf *****************
  3694 ;; Defined at:
  3695 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3698 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3699 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  tmpval          4    0        struct .
  3702 ;;  cp              3    0        PTR const unsigned char 
  3703 ;;  ap              2   16[COMRAM] PTR void [1]
  3704 ;;		 -> ?_printf(2), 
  3705 ;;  len             2    0        unsigned int 
  3706 ;;  val             2    0        unsigned int 
  3707 ;;  c               1   18[COMRAM] char 
  3708 ;;  flag            1    0        unsigned char 
  3709 ;;  prec            1    0        char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  2   14[COMRAM] int 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;Total ram usage:        5 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    2
  3726 ;; This function calls:
  3727 ;;		_putch
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;;		_PORtask
  3731 ;;		_BORtask
  3732 ;;		_WDTtask
  3733 ;;		_STKFULtask
  3734 ;;		_RESETtask
  3735 ;;		_LVtrap
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text31
  3740  001FD4                     __ptext31:
  3741                           	opt stack 0
  3742  001FD4                     _printf:
  3743                           	opt stack 28
  3744                           
  3745                           ;doprnt.c: 466: va_list ap;
  3746                           ;doprnt.c: 499: signed char c;
  3747                           ;doprnt.c: 506: signed char prec;
  3748                           ;doprnt.c: 508: unsigned char flag;
  3749                           ;doprnt.c: 523: union {
  3750                           ;doprnt.c: 524: unsigned long vd;
  3751                           ;doprnt.c: 525: double integ;
  3752                           ;doprnt.c: 526: } tmpval;
  3753                           ;doprnt.c: 528: unsigned int val;
  3754                           ;doprnt.c: 529: unsigned len;
  3755                           ;doprnt.c: 530: const char * cp;
  3756                           ;doprnt.c: 533: *ap = __va_start();
  3757                           
  3758                           ;incstack = 0
  3759  001FD4  0E11               	movlw	low (?_printf+2)
  3760  001FD6  6E11               	movwf	printf@ap,c
  3761  001FD8  0E00               	movlw	high (?_printf+2)
  3762  001FDA  6E12               	movwf	printf@ap+1,c
  3763                           
  3764                           ;doprnt.c: 536: while(c = *f++) {
  3765  001FDC  D004               	goto	l2114
  3766  001FDE                     l2112:
  3767                           
  3768                           ;doprnt.c: 540: {
  3769                           ;doprnt.c: 541: (putch(c) );
  3770  001FDE  5013               	movf	printf@c,w,c
  3771  001FE0  EC52  F011         	call	_putch
  3772                           
  3773                           ;doprnt.c: 542: continue;
  3774  001FE4  D000               	goto	l2114
  3775  001FE6                     l2114:
  3776  001FE6  C00F  FFF6         	movff	printf@f,tblptrl
  3777  001FEA  C010  FFF7         	movff	printf@f+1,tblptrh
  3778  001FEE  4A0F               	infsnz	printf@f,f,c
  3779  001FF0  2A10               	incf	printf@f+1,f,c
  3780  001FF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3781  001FF2  6AF8               	clrf	tblptru,c
  3782  001FF4                     	endif
  3783  001FF4                     	if	0	;tblptru may be non-zero
  3784  001FF4                     	endif
  3785  001FF4  0008               	tblrd		*
  3786  001FF6  CFF5 F013          	movff	tablat,printf@c
  3787  001FFA  5013               	movf	printf@c,w,c
  3788  001FFC  A4D8               	btfss	status,2,c
  3789  001FFE  D7EF               	goto	l2112
  3790                           
  3791                           ;doprnt.c: 1469: }
  3792                           ;doprnt.c: 1533: }
  3793                           ;doprnt.c: 1540: return 0;
  3794                           ;	Return value of _printf is never used
  3795  002000  0012               	return		;funcret
  3796  002002                     __end_of_printf:
  3797                           	opt stack 0
  3798                           stkptr	equ	0xFFC
  3799                           tblptru	equ	0xFF8
  3800                           tblptrh	equ	0xFF7
  3801                           tblptrl	equ	0xFF6
  3802                           tablat	equ	0xFF5
  3803                           intcon	equ	0xFF2
  3804                           postinc0	equ	0xFEE
  3805                           wreg	equ	0xFE8
  3806                           indf1	equ	0xFE7
  3807                           postinc1	equ	0xFE6
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           indf2	equ	0xFDF
  3811                           postinc2	equ	0xFDE
  3812                           plusw2	equ	0xFDB
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           status	equ	0xFD8
  3816                           
  3817 ;; *************** function _putch *****************
  3818 ;; Defined at:
  3819 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  c               1    wreg     unsigned char 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  c               1    0[COMRAM] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		wreg
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_printf
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text32
  3848  0022A4                     __ptext32:
  3849                           	opt stack 0
  3850  0022A4                     _putch:
  3851                           	opt stack 28
  3852                           
  3853                           ;incstack = 0
  3854  0022A4  0012               	return		;funcret
  3855  0022A6                     __end_of_putch:
  3856                           	opt stack 0
  3857                           stkptr	equ	0xFFC
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           indf1	equ	0xFE7
  3866                           postinc1	equ	0xFE6
  3867                           fsr1h	equ	0xFE2
  3868                           fsr1l	equ	0xFE1
  3869                           indf2	equ	0xFDF
  3870                           postinc2	equ	0xFDE
  3871                           plusw2	equ	0xFDB
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function _openPORTD *****************
  3877 ;; Defined at:
  3878 ;;		line 168 in file "../Robot Files/sumovore.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;		None               void
  3885 ;; Registers used:
  3886 ;;		wreg, status,2
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    1
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_initialization
  3903 ;;		_LVtrap
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text33
  3908  00229A                     __ptext33:
  3909                           	opt stack 0
  3910  00229A                     _openPORTD:
  3911                           	opt stack 28
  3912                           
  3913                           ;sumovore.c: 170: TRISD = 0b01100000;
  3914                           
  3915                           ;incstack = 0
  3916  00229A  0E60               	movlw	96
  3917  00229C  6E95               	movwf	3989,c	;volatile
  3918  00229E  0012               	return		;funcret
  3919  0022A0                     __end_of_openPORTD:
  3920                           	opt stack 0
  3921                           stkptr	equ	0xFFC
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           intcon	equ	0xFF2
  3927                           postinc0	equ	0xFEE
  3928                           wreg	equ	0xFE8
  3929                           indf1	equ	0xFE7
  3930                           postinc1	equ	0xFE6
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           plusw2	equ	0xFDB
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _gtrap *****************
  3941 ;; Defined at:
  3942 ;;		line 464 in file "../Robot Files/sumovore.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  count           4   14[COMRAM] unsigned long 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;		None               void
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;Total ram usage:        4 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_BORtask
  3967 ;;		_WDTtask
  3968 ;;		_STKFULtask
  3969 ;;		_RESETtask
  3970 ;;		_LVtrap
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text34
  3975  001D7E                     __ptext34:
  3976                           	opt stack 0
  3977  001D7E                     _gtrap:
  3978                           	opt stack 26
  3979                           
  3980                           ;sumovore.c: 466: unsigned long count=0;
  3981                           
  3982                           ;incstack = 0
  3983  001D7E  0E00               	movlw	0
  3984  001D80  6E0F               	movwf	gtrap@count,c
  3985  001D82  0E00               	movlw	0
  3986  001D84  6E10               	movwf	gtrap@count+1,c
  3987  001D86  0E00               	movlw	0
  3988  001D88  6E11               	movwf	gtrap@count+2,c
  3989  001D8A  0E00               	movlw	0
  3990  001D8C  6E12               	movwf	gtrap@count+3,c
  3991  001D8E                     l344:
  3992  001D8E  0004               	clrwdt		;# 
  3993                           
  3994                           ;sumovore.c: 471: if (count==30000u)
  3995  001D90  0E30               	movlw	48
  3996  001D92  180F               	xorwf	gtrap@count,w,c
  3997  001D94  E111               	bnz	l1254
  3998  001D96  0E75               	movlw	117
  3999  001D98  1810               	xorwf	gtrap@count+1,w,c
  4000  001D9A  1011               	iorwf	gtrap@count+2,w,c
  4001  001D9C  1012               	iorwf	gtrap@count+3,w,c
  4002  001D9E  A4D8               	btfss	status,2,c
  4003  001DA0  D00B               	goto	l1254
  4004                           
  4005                           ;sumovore.c: 472: {
  4006                           ;sumovore.c: 473: count=0;
  4007  001DA2  0E00               	movlw	0
  4008  001DA4  6E0F               	movwf	gtrap@count,c
  4009  001DA6  0E00               	movlw	0
  4010  001DA8  6E10               	movwf	gtrap@count+1,c
  4011  001DAA  0E00               	movlw	0
  4012  001DAC  6E11               	movwf	gtrap@count+2,c
  4013  001DAE  0E00               	movlw	0
  4014  001DB0  6E12               	movwf	gtrap@count+3,c
  4015                           
  4016                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  4017  001DB2  9083               	bcf	3971,0,c	;volatile
  4018                           
  4019                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  4020  001DB4  8283               	bsf	3971,1,c	;volatile
  4021                           
  4022                           ;sumovore.c: 476: }
  4023  001DB6  D00C               	goto	l1258
  4024  001DB8                     l1254:
  4025                           
  4026                           ;sumovore.c: 477: else if (count==15000u)
  4027  001DB8  0E98               	movlw	152
  4028  001DBA  180F               	xorwf	gtrap@count,w,c
  4029  001DBC  E109               	bnz	l1258
  4030  001DBE  0E3A               	movlw	58
  4031  001DC0  1810               	xorwf	gtrap@count+1,w,c
  4032  001DC2  1011               	iorwf	gtrap@count+2,w,c
  4033  001DC4  1012               	iorwf	gtrap@count+3,w,c
  4034  001DC6  A4D8               	btfss	status,2,c
  4035  001DC8  D003               	goto	l1258
  4036                           
  4037                           ;sumovore.c: 478: {
  4038                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  4039  001DCA  8083               	bsf	3971,0,c	;volatile
  4040                           
  4041                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  4042  001DCC  9283               	bcf	3971,1,c	;volatile
  4043  001DCE  D000               	goto	l1258
  4044  001DD0                     l1258:
  4045                           
  4046                           ;sumovore.c: 481: }
  4047                           ;sumovore.c: 482: count++;
  4048  001DD0  0E01               	movlw	1
  4049  001DD2  260F               	addwf	gtrap@count,f,c
  4050  001DD4  0E00               	movlw	0
  4051  001DD6  2210               	addwfc	gtrap@count+1,f,c
  4052  001DD8  2211               	addwfc	gtrap@count+2,f,c
  4053  001DDA  2212               	addwfc	gtrap@count+3,f,c
  4054  001DDC  D7D8               	goto	l344
  4055  001DDE  0012               	return		;funcret
  4056  001DE0                     __end_of_gtrap:
  4057                           	opt stack 0
  4058                           stkptr	equ	0xFFC
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           intcon	equ	0xFF2
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           indf1	equ	0xFE7
  4067                           postinc1	equ	0xFE6
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           plusw2	equ	0xFDB
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _GetBackonTrack *****************
  4078 ;; Defined at:
  4079 ;;		line 190 in file "../Robot Files/main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  error           2   56[COMRAM] PTR char 
  4082 ;;		 -> main@error(3), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  i               1   60[COMRAM] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;		None               void
  4087 ;; Registers used:
  4088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;Total ram usage:        5 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    5
  4101 ;; This function calls:
  4102 ;;		_MotorControl
  4103 ;;		_ReadTimer0
  4104 ;;		_SharpTurn
  4105 ;;		_WriteTimer0
  4106 ;;		_check_sensors
  4107 ;;		_motors_brake_all
  4108 ;;		_set_leds
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text35
  4115  001550                     __ptext35:
  4116                           	opt stack 0
  4117  001550                     _GetBackonTrack:
  4118                           	opt stack 25
  4119                           
  4120                           ;main.c: 192: if((error[2]>1) || (error[1]>1))
  4121                           
  4122                           ;incstack = 0
  4123  001550  EE20 F002          	lfsr	2,2
  4124  001554  5039               	movf	GetBackonTrack@error,w,c
  4125  001556  26D9               	addwf	fsr2l,f,c
  4126  001558  503A               	movf	GetBackonTrack@error+1,w,c
  4127  00155A  22DA               	addwfc	fsr2h,f,c
  4128  00155C  50DF               	movf	indf2,w,c
  4129  00155E  0A80               	xorlw	128
  4130  001560  0F7E               	addlw	-130
  4131  001562  B0D8               	btfsc	status,0,c
  4132  001564  D00B               	goto	l2590
  4133  001566  EE20 F001          	lfsr	2,1
  4134  00156A  5039               	movf	GetBackonTrack@error,w,c
  4135  00156C  26D9               	addwf	fsr2l,f,c
  4136  00156E  503A               	movf	GetBackonTrack@error+1,w,c
  4137  001570  22DA               	addwfc	fsr2h,f,c
  4138  001572  50DF               	movf	indf2,w,c
  4139  001574  0A80               	xorlw	128
  4140  001576  0F7E               	addlw	-130
  4141  001578  A0D8               	btfss	status,0,c
  4142  00157A  D004               	goto	l2592
  4143  00157C                     l2590:
  4144                           
  4145                           ;main.c: 193: SharpTurn(CW);
  4146  00157C  0E01               	movlw	1
  4147  00157E  ECED  F00C         	call	_SharpTurn
  4148  001582  D091               	goto	l140
  4149  001584                     l2592:
  4150                           
  4151                           ;main.c: 194: else if((error[2]<-1) || (error[1]<-1))
  4152  001584  EE20 F002          	lfsr	2,2
  4153  001588  5039               	movf	GetBackonTrack@error,w,c
  4154  00158A  26D9               	addwf	fsr2l,f,c
  4155  00158C  503A               	movf	GetBackonTrack@error+1,w,c
  4156  00158E  22DA               	addwfc	fsr2h,f,c
  4157  001590  50DF               	movf	indf2,w,c
  4158  001592  0A80               	xorlw	128
  4159  001594  0F81               	addlw	129
  4160  001596  A0D8               	btfss	status,0,c
  4161  001598  D00B               	goto	l2596
  4162  00159A  EE20 F001          	lfsr	2,1
  4163  00159E  5039               	movf	GetBackonTrack@error,w,c
  4164  0015A0  26D9               	addwf	fsr2l,f,c
  4165  0015A2  503A               	movf	GetBackonTrack@error+1,w,c
  4166  0015A4  22DA               	addwfc	fsr2h,f,c
  4167  0015A6  50DF               	movf	indf2,w,c
  4168  0015A8  0A80               	xorlw	128
  4169  0015AA  0F81               	addlw	129
  4170  0015AC  B0D8               	btfsc	status,0,c
  4171  0015AE  D004               	goto	l2598
  4172  0015B0                     l2596:
  4173                           
  4174                           ;main.c: 195: SharpTurn(CCW);
  4175  0015B0  0E00               	movlw	0
  4176  0015B2  ECED  F00C         	call	_SharpTurn
  4177  0015B6  D077               	goto	l140
  4178  0015B8                     l2598:
  4179                           
  4180                           ;main.c: 196: else
  4181                           ;main.c: 197: {
  4182                           ;main.c: 198: WriteTimer0(0);
  4183  0015B8  0E00               	movlw	0
  4184  0015BA  6E10               	movwf	WriteTimer0@timer0+1,c
  4185  0015BC  0E00               	movlw	0
  4186  0015BE  6E0F               	movwf	WriteTimer0@timer0,c
  4187  0015C0  EC1C  F011         	call	_WriteTimer0	;wreg free
  4188                           
  4189                           ;main.c: 199: TMR0IF = 0;
  4190  0015C4  94F2               	bcf	intcon,2,c	;volatile
  4191                           
  4192                           ;main.c: 200: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  4193  0015C6  D00D               	goto	l2606
  4194  0015C8                     l2602:
  4195                           
  4196                           ;main.c: 201: {
  4197                           ;main.c: 202: check_sensors();
  4198  0015C8  EC35  F00C         	call	_check_sensors	;wreg free
  4199                           
  4200                           ;main.c: 203: set_leds();
  4201  0015CC  ECD0  F00D         	call	_set_leds	;wreg free
  4202                           
  4203                           ;main.c: 204: MotorControl(0,0);
  4204  0015D0  0E00               	movlw	0
  4205  0015D2  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4206  0015D4  0E00               	movlw	0
  4207  0015D6  6E2B               	movwf	MotorControl@delta_velocity,c
  4208  0015D8  0E00               	movlw	0
  4209  0015DA  6E2D               	movwf	MotorControl@speed_divider,c
  4210  0015DC  ECC2  F009         	call	_MotorControl	;wreg free
  4211  0015E0  D000               	goto	l2606
  4212  0015E2                     l2606:
  4213  0015E2  504C               	movf	_SeeLine,w,c
  4214  0015E4  0B1F               	andlw	31
  4215  0015E6  0900               	iorlw	0
  4216  0015E8  A4D8               	btfss	status,2,c
  4217  0015EA  D00C               	goto	l2612
  4218  0015EC  A4F2               	btfss	intcon,2,c	;volatile
  4219  0015EE  D7EC               	goto	l2602
  4220  0015F0  EC13  F011         	call	_ReadTimer0	;wreg free
  4221  0015F4  0E3B               	movlw	59
  4222  0015F6  5C0F               	subwf	?_ReadTimer0,w,c
  4223  0015F8  0EE8               	movlw	232
  4224  0015FA  5810               	subwfb	?_ReadTimer0+1,w,c
  4225  0015FC  B0D8               	btfsc	status,0,c
  4226  0015FE  D002               	goto	l2612
  4227  001600  D7E3               	goto	l2602
  4228  001602  D000               	goto	l2612
  4229  001604                     l2612:
  4230                           
  4231                           ;main.c: 205: }
  4232                           ;main.c: 207: if(!SeeLine.B)
  4233  001604  504C               	movf	_SeeLine,w,c
  4234  001606  0B1F               	andlw	31
  4235  001608  0900               	iorlw	0
  4236  00160A  A4D8               	btfss	status,2,c
  4237  00160C  D04C               	goto	l140
  4238                           
  4239                           ;main.c: 208: {
  4240                           ;main.c: 209: motors_brake_all();
  4241  00160E  EC65  F010         	call	_motors_brake_all	;wreg free
  4242                           
  4243                           ;main.c: 210: _delay(50000);
  4244  001612  0E41               	movlw	65
  4245  001614  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4246  001616  0EEE               	movlw	238
  4247  001618                     u2457:
  4248  001618  2EE8               	decfsz	wreg,f,c
  4249  00161A  D7FE               	goto	u2457
  4250  00161C  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4251  00161E  D7FC               	goto	u2457
  4252  001620  D000               	nop2	
  4253                           
  4254                           ;main.c: 211: MotorControl(1600, TURN_SPEED_DIVIDER);
  4255  001622  0E06               	movlw	6
  4256  001624  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4257  001626  0E40               	movlw	64
  4258  001628  6E2B               	movwf	MotorControl@delta_velocity,c
  4259  00162A  0E09               	movlw	low _TURN_SPEED_DIVIDER
  4260  00162C  6EF6               	movwf	tblptrl,c
  4261  00162E                     	if	1	;There is more than 1 active tblptr byte
  4262  00162E  0E10               	movlw	high _TURN_SPEED_DIVIDER
  4263  001630  6EF7               	movwf	tblptrh,c
  4264  001632                     	endif
  4265  001632                     	if	1	;There are 3 active tblptr bytes
  4266  001632  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  4267  001634  6EF8               	movwf	tblptru,c
  4268  001636                     	endif
  4269  001636  0008               	tblrd		*
  4270  001638  CFF5 F02D          	movff	tablat,MotorControl@speed_divider
  4271  00163C  ECC2  F009         	call	_MotorControl	;wreg free
  4272                           
  4273                           ;main.c: 212: for(char i=0; i < TURN_TIME_ms; i++)
  4274  001640  0E00               	movlw	0
  4275  001642  6E3D               	movwf	GetBackonTrack@i,c
  4276  001644                     l2622:
  4277  001644  0E07               	movlw	low _TURN_TIME_ms
  4278  001646  6EF6               	movwf	tblptrl,c
  4279  001648                     	if	1	;There is more than 1 active tblptr byte
  4280  001648  0E10               	movlw	high _TURN_TIME_ms
  4281  00164A  6EF7               	movwf	tblptrh,c
  4282  00164C                     	endif
  4283  00164C                     	if	1	;There are 3 active tblptr bytes
  4284  00164C  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4285  00164E  6EF8               	movwf	tblptru,c
  4286  001650                     	endif
  4287  001650  503D               	movf	GetBackonTrack@i,w,c
  4288  001652  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4289  001654  6A3C               	clrf	(??_GetBackonTrack+1)& (0+255),c
  4290  001656  0009               	tblrd		*+
  4291  001658  50F5               	movf	tablat,w,c
  4292  00165A  5C3B               	subwf	??_GetBackonTrack,w,c
  4293  00165C  0009               	tblrd		*+
  4294  00165E  50F5               	movf	tablat,w,c
  4295  001660  583C               	subwfb	??_GetBackonTrack+1,w,c
  4296  001662  B0D8               	btfsc	status,0,c
  4297  001664  D010               	goto	l2634
  4298  001666  D001               	goto	l2626
  4299  001668  D00E               	goto	l2634
  4300  00166A                     l2626:
  4301                           
  4302                           ;main.c: 213: _delay(7991);
  4303  00166A  0E0B               	movlw	11
  4304  00166C  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4305  00166E  0E5F               	movlw	95
  4306  001670                     u2467:
  4307  001670  2EE8               	decfsz	wreg,f,c
  4308  001672  D7FE               	goto	u2467
  4309  001674  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4310  001676  D7FC               	goto	u2467
  4311  001678  D000               	nop2	
  4312  00167A  2A3D               	incf	GetBackonTrack@i,f,c
  4313  00167C  D7E3               	goto	l2622
  4314                           
  4315                           ;main.c: 215: while (!SeeLine.B)
  4316  00167E  D003               	goto	l2634
  4317  001680                     l2632:
  4318                           
  4319                           ;main.c: 216: check_sensors();
  4320  001680  EC35  F00C         	call	_check_sensors	;wreg free
  4321  001684  D000               	goto	l2634
  4322  001686                     l2634:
  4323  001686  504C               	movf	_SeeLine,w,c
  4324  001688  0B1F               	andlw	31
  4325  00168A  0900               	iorlw	0
  4326  00168C  B4D8               	btfsc	status,2,c
  4327  00168E  D7F8               	goto	l2632
  4328                           
  4329                           ;main.c: 217: set_leds();
  4330  001690  ECD0  F00D         	call	_set_leds	;wreg free
  4331                           
  4332                           ;main.c: 218: MotorControl(0,0);
  4333  001694  0E00               	movlw	0
  4334  001696  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4335  001698  0E00               	movlw	0
  4336  00169A  6E2B               	movwf	MotorControl@delta_velocity,c
  4337  00169C  0E00               	movlw	0
  4338  00169E  6E2D               	movwf	MotorControl@speed_divider,c
  4339  0016A0  ECC2  F009         	call	_MotorControl	;wreg free
  4340  0016A4  D000               	goto	l140
  4341  0016A6                     l140:
  4342  0016A6  0012               	return		;funcret
  4343  0016A8                     __end_of_GetBackonTrack:
  4344                           	opt stack 0
  4345                           stkptr	equ	0xFFC
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           intcon	equ	0xFF2
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           indf1	equ	0xFE7
  4354                           postinc1	equ	0xFE6
  4355                           fsr1h	equ	0xFE2
  4356                           fsr1l	equ	0xFE1
  4357                           indf2	equ	0xFDF
  4358                           postinc2	equ	0xFDE
  4359                           plusw2	equ	0xFDB
  4360                           fsr2h	equ	0xFDA
  4361                           fsr2l	equ	0xFD9
  4362                           status	equ	0xFD8
  4363                           
  4364 ;; *************** function _SharpTurn *****************
  4365 ;; Defined at:
  4366 ;;		line 224 in file "../Robot Files/main.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  direction       1    wreg     enum E4173
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  direction       1   53[COMRAM] enum E4173
  4371 ;;  delta_veloci    2   54[COMRAM] int 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;		None               void
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;Total ram usage:        4 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    4
  4388 ;; This function calls:
  4389 ;;		_MotorControl
  4390 ;;		_check_sensors
  4391 ;;		_motors_brake_all
  4392 ;;		_set_leds
  4393 ;; This function is called by:
  4394 ;;		_GetBackonTrack
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text36
  4399  0019DA                     __ptext36:
  4400                           	opt stack 0
  4401  0019DA                     _SharpTurn:
  4402                           	opt stack 25
  4403                           
  4404                           ;incstack = 0
  4405                           ;SharpTurn@direction stored from wreg
  4406  0019DA  6E36               	movwf	SharpTurn@direction,c
  4407                           
  4408                           ;main.c: 226: int delta_velocity;
  4409                           ;main.c: 242: motors_brake_all();
  4410  0019DC  EC65  F010         	call	_motors_brake_all	;wreg free
  4411                           
  4412                           ;main.c: 243: _delay(50000);
  4413  0019E0  0E41               	movlw	65
  4414  0019E2  6E35               	movwf	??_SharpTurn& (0+255),c
  4415  0019E4  0EEE               	movlw	238
  4416  0019E6                     u2477:
  4417  0019E6  2EE8               	decfsz	wreg,f,c
  4418  0019E8  D7FE               	goto	u2477
  4419  0019EA  2E35               	decfsz	??_SharpTurn& (0+255),f,c
  4420  0019EC  D7FC               	goto	u2477
  4421  0019EE  D000               	nop2	
  4422                           
  4423                           ;main.c: 244: if(direction)
  4424  0019F0  5036               	movf	SharpTurn@direction,w,c
  4425  0019F2  B4D8               	btfsc	status,2,c
  4426  0019F4  D01F               	goto	l2364
  4427                           
  4428                           ;main.c: 245: {
  4429                           ;main.c: 246: delta_velocity = 1600;
  4430  0019F6  0E06               	movlw	6
  4431  0019F8  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4432  0019FA  0E40               	movlw	64
  4433  0019FC  6E37               	movwf	SharpTurn@delta_velocity,c
  4434                           
  4435                           ;main.c: 247: while (!SeeLine.b.CntLeft && delta_velocity)
  4436  0019FE  D012               	goto	l2360
  4437  001A00                     l2352:
  4438                           
  4439                           ;main.c: 249: {
  4440                           ;main.c: 250: check_sensors();
  4441  001A00  EC35  F00C         	call	_check_sensors	;wreg free
  4442                           
  4443                           ;main.c: 251: set_leds();
  4444  001A04  ECD0  F00D         	call	_set_leds	;wreg free
  4445                           
  4446                           ;main.c: 252: MotorControl(delta_velocity,0);
  4447  001A08  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4448  001A0C  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4449  001A10  0E00               	movlw	0
  4450  001A12  6E2D               	movwf	MotorControl@speed_divider,c
  4451  001A14  ECC2  F009         	call	_MotorControl	;wreg free
  4452                           
  4453                           ;main.c: 253: if (SeeLine.b.Center)
  4454  001A18  A44C               	btfss	_SeeLine,2,c
  4455  001A1A  D004               	goto	l2360
  4456                           
  4457                           ;main.c: 254: delta_velocity--;
  4458  001A1C  0637               	decf	SharpTurn@delta_velocity,f,c
  4459  001A1E  A0D8               	btfss	status,0,c
  4460  001A20  0638               	decf	SharpTurn@delta_velocity+1,f,c
  4461  001A22  D000               	goto	l2360
  4462  001A24                     l2360:
  4463  001A24  B64C               	btfsc	_SeeLine,3,c
  4464  001A26  D024               	goto	l2378
  4465  001A28  5037               	movf	SharpTurn@delta_velocity,w,c
  4466  001A2A  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4467  001A2C  B4D8               	btfsc	status,2,c
  4468  001A2E  D020               	goto	l2378
  4469  001A30  D7E7               	goto	l2352
  4470                           
  4471                           ;main.c: 255: }
  4472                           ;main.c: 256: }
  4473  001A32  D01E               	goto	l2378
  4474  001A34                     l2364:
  4475                           
  4476                           ;main.c: 257: else
  4477                           ;main.c: 258: {
  4478                           ;main.c: 259: delta_velocity = -1600;
  4479  001A34  0EF9               	movlw	249
  4480  001A36  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4481  001A38  0EC0               	movlw	192
  4482  001A3A  6E37               	movwf	SharpTurn@delta_velocity,c
  4483                           
  4484                           ;main.c: 260: while (!SeeLine.b.CntRight && delta_velocity)
  4485  001A3C  D011               	goto	l2374
  4486  001A3E                     l2366:
  4487                           
  4488                           ;main.c: 262: {
  4489                           ;main.c: 263: check_sensors();
  4490  001A3E  EC35  F00C         	call	_check_sensors	;wreg free
  4491                           
  4492                           ;main.c: 264: set_leds();
  4493  001A42  ECD0  F00D         	call	_set_leds	;wreg free
  4494                           
  4495                           ;main.c: 265: MotorControl(delta_velocity,0);
  4496  001A46  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4497  001A4A  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4498  001A4E  0E00               	movlw	0
  4499  001A50  6E2D               	movwf	MotorControl@speed_divider,c
  4500  001A52  ECC2  F009         	call	_MotorControl	;wreg free
  4501                           
  4502                           ;main.c: 266: if (SeeLine.b.Center)
  4503  001A56  A44C               	btfss	_SeeLine,2,c
  4504  001A58  D003               	goto	l2374
  4505                           
  4506                           ;main.c: 267: delta_velocity++;
  4507  001A5A  4A37               	infsnz	SharpTurn@delta_velocity,f,c
  4508  001A5C  2A38               	incf	SharpTurn@delta_velocity+1,f,c
  4509  001A5E  D000               	goto	l2374
  4510  001A60                     l2374:
  4511  001A60  B24C               	btfsc	_SeeLine,1,c
  4512  001A62  D006               	goto	l2378
  4513  001A64  5037               	movf	SharpTurn@delta_velocity,w,c
  4514  001A66  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4515  001A68  B4D8               	btfsc	status,2,c
  4516  001A6A  D002               	goto	l2378
  4517  001A6C  D7E8               	goto	l2366
  4518  001A6E  D000               	goto	l2378
  4519  001A70                     l2378:
  4520                           
  4521                           ;main.c: 268: }
  4522                           ;main.c: 269: }
  4523                           ;main.c: 270: I = 0;
  4524  001A70  0E00               	movlw	0
  4525  001A72  6E49               	movwf	_I+1,c
  4526  001A74  0E00               	movlw	0
  4527  001A76  6E48               	movwf	_I,c
  4528  001A78  0012               	return		;funcret
  4529  001A7A                     __end_of_SharpTurn:
  4530                           	opt stack 0
  4531                           stkptr	equ	0xFFC
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           intcon	equ	0xFF2
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           indf1	equ	0xFE7
  4540                           postinc1	equ	0xFE6
  4541                           fsr1h	equ	0xFE2
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           plusw2	equ	0xFDB
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _ReadTimer0 *****************
  4551 ;; Defined at:
  4552 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  timer           2   16[COMRAM] struct Timers
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2   14[COMRAM] unsigned int 
  4559 ;; Registers used:
  4560 ;;		None
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;Total ram usage:        4 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_PID_LineFollowing
  4577 ;;		_GetBackonTrack
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text37
  4582  002226                     __ptext37:
  4583                           	opt stack 0
  4584  002226                     _ReadTimer0:
  4585                           	opt stack 28
  4586                           
  4587                           ;incstack = 0
  4588  002226  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4589  00222A  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4590  00222E  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4591  002232  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4592  002236  0012               	return		;funcret
  4593  002238                     __end_of_ReadTimer0:
  4594                           	opt stack 0
  4595                           stkptr	equ	0xFFC
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           intcon	equ	0xFF2
  4601                           postinc0	equ	0xFEE
  4602                           wreg	equ	0xFE8
  4603                           indf1	equ	0xFE7
  4604                           postinc1	equ	0xFE6
  4605                           fsr1h	equ	0xFE2
  4606                           fsr1l	equ	0xFE1
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           plusw2	equ	0xFDB
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _AllSensorsTriggered *****************
  4615 ;; Defined at:
  4616 ;;		line 275 in file "../Robot Files/main.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:        1 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    4
  4637 ;; This function calls:
  4638 ;;		_MotorControl
  4639 ;;		_WriteTimer0
  4640 ;;		_check_sensors
  4641 ;;		_motors_brake_all
  4642 ;;		_set_leds
  4643 ;; This function is called by:
  4644 ;;		_main
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text38
  4649  001C9C                     __ptext38:
  4650                           	opt stack 0
  4651  001C9C                     _AllSensorsTriggered:
  4652                           	opt stack 26
  4653                           
  4654                           ;main.c: 277: WriteTimer0(0);
  4655                           
  4656                           ;incstack = 0
  4657  001C9C  0E00               	movlw	0
  4658  001C9E  6E10               	movwf	WriteTimer0@timer0+1,c
  4659  001CA0  0E00               	movlw	0
  4660  001CA2  6E0F               	movwf	WriteTimer0@timer0,c
  4661  001CA4  EC1C  F011         	call	_WriteTimer0	;wreg free
  4662                           
  4663                           ;main.c: 278: TMR0IF = 0;
  4664  001CA8  94F2               	bcf	intcon,2,c	;volatile
  4665                           
  4666                           ;main.c: 279: while (SeeLine.B=0b11111u && !(TMR0IF))
  4667  001CAA  D00D               	goto	l2648
  4668  001CAC                     l2644:
  4669                           
  4670                           ;main.c: 280: {
  4671                           ;main.c: 281: check_sensors();
  4672  001CAC  EC35  F00C         	call	_check_sensors	;wreg free
  4673                           
  4674                           ;main.c: 282: set_leds();
  4675  001CB0  ECD0  F00D         	call	_set_leds	;wreg free
  4676                           
  4677                           ;main.c: 283: MotorControl(0,0);
  4678  001CB4  0E00               	movlw	0
  4679  001CB6  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4680  001CB8  0E00               	movlw	0
  4681  001CBA  6E2B               	movwf	MotorControl@delta_velocity,c
  4682  001CBC  0E00               	movlw	0
  4683  001CBE  6E2D               	movwf	MotorControl@speed_divider,c
  4684  001CC0  ECC2  F009         	call	_MotorControl	;wreg free
  4685  001CC4  D000               	goto	l2648
  4686  001CC6                     l2648:
  4687  001CC6  0E00               	movlw	0
  4688  001CC8  6E35               	movwf	_AllSensorsTriggered$470,c
  4689  001CCA  B4F2               	btfsc	intcon,2,c	;volatile
  4690  001CCC  D003               	goto	l2654
  4691  001CCE  0E01               	movlw	1
  4692  001CD0  6E35               	movwf	_AllSensorsTriggered$470,c
  4693  001CD2  D000               	goto	l2654
  4694  001CD4                     l2654:
  4695  001CD4  504C               	movf	_SeeLine,w,c
  4696  001CD6  1835               	xorwf	_AllSensorsTriggered$470,w,c
  4697  001CD8  0BE0               	andlw	-32
  4698  001CDA  1835               	xorwf	_AllSensorsTriggered$470,w,c
  4699  001CDC  6E4C               	movwf	_SeeLine,c
  4700  001CDE  504C               	movf	_SeeLine,w,c
  4701  001CE0  0B1F               	andlw	31
  4702  001CE2  0900               	iorlw	0
  4703  001CE4  A4D8               	btfss	status,2,c
  4704  001CE6  D7E2               	goto	l2644
  4705                           
  4706                           ;main.c: 284: }
  4707                           ;main.c: 285: if (SeeLine.B=0b11111u)
  4708  001CE8  804C               	bsf	_SeeLine,0,c
  4709  001CEA  824C               	bsf	_SeeLine,1,c
  4710  001CEC  844C               	bsf	_SeeLine,2,c
  4711  001CEE  864C               	bsf	_SeeLine,3,c
  4712  001CF0  884C               	bsf	_SeeLine,4,c
  4713                           
  4714                           ;main.c: 286: {
  4715                           ;main.c: 287: motors_brake_all();
  4716  001CF2  EC65  F010         	call	_motors_brake_all	;wreg free
  4717                           
  4718                           ;main.c: 288: while (SeeLine.B=0b11111u)
  4719  001CF6  D003               	goto	l2660
  4720  001CF8                     l2658:
  4721                           
  4722                           ;main.c: 289: check_sensors();
  4723  001CF8  EC35  F00C         	call	_check_sensors	;wreg free
  4724  001CFC  D000               	goto	l2660
  4725  001CFE                     l2660:
  4726  001CFE  804C               	bsf	_SeeLine,0,c
  4727  001D00  824C               	bsf	_SeeLine,1,c
  4728  001D02  844C               	bsf	_SeeLine,2,c
  4729  001D04  864C               	bsf	_SeeLine,3,c
  4730  001D06  884C               	bsf	_SeeLine,4,c
  4731  001D08  D7F7               	goto	l2658
  4732  001D0A  D000               	goto	l169
  4733  001D0C                     l169:
  4734  001D0C  0012               	return		;funcret
  4735  001D0E                     __end_of_AllSensorsTriggered:
  4736                           	opt stack 0
  4737                           stkptr	equ	0xFFC
  4738                           tblptru	equ	0xFF8
  4739                           tblptrh	equ	0xFF7
  4740                           tblptrl	equ	0xFF6
  4741                           tablat	equ	0xFF5
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           indf1	equ	0xFE7
  4746                           postinc1	equ	0xFE6
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           postinc2	equ	0xFDE
  4751                           plusw2	equ	0xFDB
  4752                           fsr2h	equ	0xFDA
  4753                           fsr2l	equ	0xFD9
  4754                           status	equ	0xFD8
  4755                           
  4756 ;; *************** function _set_leds *****************
  4757 ;; Defined at:
  4758 ;;		line 256 in file "../Robot Files/sumovore.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;		None               void
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:        1 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    1
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_main
  4783 ;;		_GetBackonTrack
  4784 ;;		_SharpTurn
  4785 ;;		_AllSensorsTriggered
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text39
  4790  001BA0                     __ptext39:
  4791                           	opt stack 0
  4792  001BA0                     _set_leds:
  4793                           	opt stack 29
  4794                           
  4795                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4796                           
  4797                           ;incstack = 0
  4798  001BA0  B84C               	btfsc	_SeeLine,4,c
  4799  001BA2  D003               	goto	u1570
  4800  001BA4  6A0F               	clrf	??_set_leds& (0+255),c
  4801  001BA6  2A0F               	incf	??_set_leds& (0+255),f,c
  4802  001BA8  D001               	goto	u1588
  4803  001BAA                     u1570:
  4804  001BAA  6A0F               	clrf	??_set_leds& (0+255),c
  4805  001BAC                     u1588:
  4806  001BAC  5083               	movf	3971,w,c	;volatile
  4807  001BAE  180F               	xorwf	??_set_leds,w,c
  4808  001BB0  0BFE               	andlw	-2
  4809  001BB2  180F               	xorwf	??_set_leds,w,c
  4810  001BB4  6E83               	movwf	3971,c	;volatile
  4811                           
  4812                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  4813  001BB6  B64C               	btfsc	_SeeLine,3,c
  4814  001BB8  D003               	goto	u1590
  4815  001BBA  6A0F               	clrf	??_set_leds& (0+255),c
  4816  001BBC  2A0F               	incf	??_set_leds& (0+255),f,c
  4817  001BBE  D001               	goto	u1608
  4818  001BC0                     u1590:
  4819  001BC0  6A0F               	clrf	??_set_leds& (0+255),c
  4820  001BC2                     u1608:
  4821  001BC2  460F               	rlncf	??_set_leds,f,c
  4822  001BC4  5083               	movf	3971,w,c	;volatile
  4823  001BC6  180F               	xorwf	??_set_leds,w,c
  4824  001BC8  0BFD               	andlw	-3
  4825  001BCA  180F               	xorwf	??_set_leds,w,c
  4826  001BCC  6E83               	movwf	3971,c	;volatile
  4827                           
  4828                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  4829  001BCE  B44C               	btfsc	_SeeLine,2,c
  4830  001BD0  D003               	goto	u1610
  4831  001BD2  6A0F               	clrf	??_set_leds& (0+255),c
  4832  001BD4  2A0F               	incf	??_set_leds& (0+255),f,c
  4833  001BD6  D001               	goto	u1628
  4834  001BD8                     u1610:
  4835  001BD8  6A0F               	clrf	??_set_leds& (0+255),c
  4836  001BDA                     u1628:
  4837  001BDA  460F               	rlncf	??_set_leds,f,c
  4838  001BDC  460F               	rlncf	??_set_leds,f,c
  4839  001BDE  5083               	movf	3971,w,c	;volatile
  4840  001BE0  180F               	xorwf	??_set_leds,w,c
  4841  001BE2  0BFB               	andlw	-5
  4842  001BE4  180F               	xorwf	??_set_leds,w,c
  4843  001BE6  6E83               	movwf	3971,c	;volatile
  4844                           
  4845                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  4846  001BE8  B24C               	btfsc	_SeeLine,1,c
  4847  001BEA  D003               	goto	u1630
  4848  001BEC  6A0F               	clrf	??_set_leds& (0+255),c
  4849  001BEE  2A0F               	incf	??_set_leds& (0+255),f,c
  4850  001BF0  D001               	goto	u1648
  4851  001BF2                     u1630:
  4852  001BF2  6A0F               	clrf	??_set_leds& (0+255),c
  4853  001BF4                     u1648:
  4854  001BF4  460F               	rlncf	??_set_leds,f,c
  4855  001BF6  460F               	rlncf	??_set_leds,f,c
  4856  001BF8  460F               	rlncf	??_set_leds,f,c
  4857  001BFA  5083               	movf	3971,w,c	;volatile
  4858  001BFC  180F               	xorwf	??_set_leds,w,c
  4859  001BFE  0BF7               	andlw	-9
  4860  001C00  180F               	xorwf	??_set_leds,w,c
  4861  001C02  6E83               	movwf	3971,c	;volatile
  4862                           
  4863                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  4864  001C04  B04C               	btfsc	_SeeLine,0,c
  4865  001C06  D003               	goto	u1650
  4866  001C08  6A0F               	clrf	??_set_leds& (0+255),c
  4867  001C0A  2A0F               	incf	??_set_leds& (0+255),f,c
  4868  001C0C  D001               	goto	u1668
  4869  001C0E                     u1650:
  4870  001C0E  6A0F               	clrf	??_set_leds& (0+255),c
  4871  001C10                     u1668:
  4872  001C10  3A0F               	swapf	??_set_leds,f,c
  4873  001C12  5083               	movf	3971,w,c	;volatile
  4874  001C14  180F               	xorwf	??_set_leds,w,c
  4875  001C16  0BEF               	andlw	-17
  4876  001C18  180F               	xorwf	??_set_leds,w,c
  4877  001C1A  6E83               	movwf	3971,c	;volatile
  4878  001C1C  0012               	return		;funcret
  4879  001C1E                     __end_of_set_leds:
  4880                           	opt stack 0
  4881                           stkptr	equ	0xFFC
  4882                           tblptru	equ	0xFF8
  4883                           tblptrh	equ	0xFF7
  4884                           tblptrl	equ	0xFF6
  4885                           tablat	equ	0xFF5
  4886                           intcon	equ	0xFF2
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           indf1	equ	0xFE7
  4890                           postinc1	equ	0xFE6
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           indf2	equ	0xFDF
  4894                           postinc2	equ	0xFDE
  4895                           plusw2	equ	0xFDB
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function _motors_brake_all *****************
  4901 ;; Defined at:
  4902 ;;		line 219 in file "../Robot Files/sumovore.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    2
  4923 ;; This function calls:
  4924 ;;		_SetDCPWM1
  4925 ;;		_SetDCPWM2
  4926 ;; This function is called by:
  4927 ;;		_GetBackonTrack
  4928 ;;		_SharpTurn
  4929 ;;		_AllSensorsTriggered
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text40
  4934  0020CA                     __ptext40:
  4935                           	opt stack 0
  4936  0020CA                     _motors_brake_all:
  4937                           	opt stack 27
  4938                           
  4939                           ;sumovore.c: 221: SetDCPWM1(800u );
  4940                           
  4941                           ;incstack = 0
  4942  0020CA  0E03               	movlw	3
  4943  0020CC  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  4944  0020CE  0E20               	movlw	32
  4945  0020D0  6E0F               	movwf	SetDCPWM1@dutycycle,c
  4946  0020D2  ECB1  F00F         	call	_SetDCPWM1	;wreg free
  4947                           
  4948                           ;sumovore.c: 222: SetDCPWM2(800u );
  4949  0020D6  0E03               	movlw	3
  4950  0020D8  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  4951  0020DA  0E20               	movlw	32
  4952  0020DC  6E0F               	movwf	SetDCPWM2@dutycycle,c
  4953  0020DE  EC94  F00F         	call	_SetDCPWM2	;wreg free
  4954                           
  4955                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  4956  0020E2  9284               	bcf	3972,1,c	;volatile
  4957                           
  4958                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  4959  0020E4  9082               	bcf	3970,0,c	;volatile
  4960                           
  4961                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  4962  0020E6  9084               	bcf	3972,0,c	;volatile
  4963                           
  4964                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  4965  0020E8  9A82               	bcf	3970,5,c	;volatile
  4966  0020EA  0012               	return		;funcret
  4967  0020EC                     __end_of_motors_brake_all:
  4968                           	opt stack 0
  4969                           stkptr	equ	0xFFC
  4970                           tblptru	equ	0xFF8
  4971                           tblptrh	equ	0xFF7
  4972                           tblptrl	equ	0xFF6
  4973                           tablat	equ	0xFF5
  4974                           intcon	equ	0xFF2
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           indf1	equ	0xFE7
  4978                           postinc1	equ	0xFE6
  4979                           fsr1h	equ	0xFE2
  4980                           fsr1l	equ	0xFE1
  4981                           indf2	equ	0xFDF
  4982                           postinc2	equ	0xFDE
  4983                           plusw2	equ	0xFDB
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _check_sensors *****************
  4989 ;; Defined at:
  4990 ;;		line 242 in file "../Robot Files/sumovore.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;		None               void
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;Total ram usage:        1 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    3
  5011 ;; This function calls:
  5012 ;;		_adc
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;;		_GetBackonTrack
  5016 ;;		_SharpTurn
  5017 ;;		_AllSensorsTriggered
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text41
  5022  00186A                     __ptext41:
  5023                           	opt stack 0
  5024  00186A                     _check_sensors:
  5025                           	opt stack 27
  5026                           
  5027                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5028                           
  5029                           ;incstack = 0
  5030  00186A  0E87               	movlw	135
  5031  00186C  EC17  F010         	call	_adc
  5032  001870  5013               	movf	?_adc,w,c
  5033  001872  5C4A               	subwf	_threshold,w,c
  5034  001874  5014               	movf	?_adc+1,w,c
  5035  001876  584B               	subwfb	_threshold+1,w,c
  5036  001878  B0D8               	btfsc	status,0,c
  5037  00187A  D003               	goto	u1470
  5038  00187C  6A16               	clrf	??_check_sensors& (0+255),c
  5039  00187E  2A16               	incf	??_check_sensors& (0+255),f,c
  5040  001880  D001               	goto	u1488
  5041  001882                     u1470:
  5042  001882  6A16               	clrf	??_check_sensors& (0+255),c
  5043  001884                     u1488:
  5044  001884  3A16               	swapf	??_check_sensors,f,c
  5045  001886  504C               	movf	_SeeLine,w,c
  5046  001888  1816               	xorwf	??_check_sensors,w,c
  5047  00188A  0BEF               	andlw	-17
  5048  00188C  1816               	xorwf	??_check_sensors,w,c
  5049  00188E  6E4C               	movwf	_SeeLine,c
  5050                           
  5051                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5052  001890  0E8F               	movlw	143
  5053  001892  EC17  F010         	call	_adc
  5054  001896  5013               	movf	?_adc,w,c
  5055  001898  5C4A               	subwf	_threshold,w,c
  5056  00189A  5014               	movf	?_adc+1,w,c
  5057  00189C  584B               	subwfb	_threshold+1,w,c
  5058  00189E  B0D8               	btfsc	status,0,c
  5059  0018A0  D003               	goto	u1490
  5060  0018A2  6A16               	clrf	??_check_sensors& (0+255),c
  5061  0018A4  2A16               	incf	??_check_sensors& (0+255),f,c
  5062  0018A6  D001               	goto	u1508
  5063  0018A8                     u1490:
  5064  0018A8  6A16               	clrf	??_check_sensors& (0+255),c
  5065  0018AA                     u1508:
  5066  0018AA  4616               	rlncf	??_check_sensors,f,c
  5067  0018AC  4616               	rlncf	??_check_sensors,f,c
  5068  0018AE  4616               	rlncf	??_check_sensors,f,c
  5069  0018B0  504C               	movf	_SeeLine,w,c
  5070  0018B2  1816               	xorwf	??_check_sensors,w,c
  5071  0018B4  0BF7               	andlw	-9
  5072  0018B6  1816               	xorwf	??_check_sensors,w,c
  5073  0018B8  6E4C               	movwf	_SeeLine,c
  5074                           
  5075                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5076  0018BA  0E97               	movlw	151
  5077  0018BC  EC17  F010         	call	_adc
  5078  0018C0  5013               	movf	?_adc,w,c
  5079  0018C2  5C4A               	subwf	_threshold,w,c
  5080  0018C4  5014               	movf	?_adc+1,w,c
  5081  0018C6  584B               	subwfb	_threshold+1,w,c
  5082  0018C8  B0D8               	btfsc	status,0,c
  5083  0018CA  D003               	goto	u1510
  5084  0018CC  6A16               	clrf	??_check_sensors& (0+255),c
  5085  0018CE  2A16               	incf	??_check_sensors& (0+255),f,c
  5086  0018D0  D001               	goto	u1528
  5087  0018D2                     u1510:
  5088  0018D2  6A16               	clrf	??_check_sensors& (0+255),c
  5089  0018D4                     u1528:
  5090  0018D4  4616               	rlncf	??_check_sensors,f,c
  5091  0018D6  4616               	rlncf	??_check_sensors,f,c
  5092  0018D8  504C               	movf	_SeeLine,w,c
  5093  0018DA  1816               	xorwf	??_check_sensors,w,c
  5094  0018DC  0BFB               	andlw	-5
  5095  0018DE  1816               	xorwf	??_check_sensors,w,c
  5096  0018E0  6E4C               	movwf	_SeeLine,c
  5097                           
  5098                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5099  0018E2  0E9F               	movlw	159
  5100  0018E4  EC17  F010         	call	_adc
  5101  0018E8  5013               	movf	?_adc,w,c
  5102  0018EA  5C4A               	subwf	_threshold,w,c
  5103  0018EC  5014               	movf	?_adc+1,w,c
  5104  0018EE  584B               	subwfb	_threshold+1,w,c
  5105  0018F0  B0D8               	btfsc	status,0,c
  5106  0018F2  D003               	goto	u1530
  5107  0018F4  6A16               	clrf	??_check_sensors& (0+255),c
  5108  0018F6  2A16               	incf	??_check_sensors& (0+255),f,c
  5109  0018F8  D001               	goto	u1548
  5110  0018FA                     u1530:
  5111  0018FA  6A16               	clrf	??_check_sensors& (0+255),c
  5112  0018FC                     u1548:
  5113  0018FC  4616               	rlncf	??_check_sensors,f,c
  5114  0018FE  504C               	movf	_SeeLine,w,c
  5115  001900  1816               	xorwf	??_check_sensors,w,c
  5116  001902  0BFD               	andlw	-3
  5117  001904  1816               	xorwf	??_check_sensors,w,c
  5118  001906  6E4C               	movwf	_SeeLine,c
  5119                           
  5120                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5121  001908  0EA7               	movlw	167
  5122  00190A  EC17  F010         	call	_adc
  5123  00190E  5013               	movf	?_adc,w,c
  5124  001910  5C4A               	subwf	_threshold,w,c
  5125  001912  5014               	movf	?_adc+1,w,c
  5126  001914  584B               	subwfb	_threshold+1,w,c
  5127  001916  B0D8               	btfsc	status,0,c
  5128  001918  D003               	goto	u1550
  5129  00191A  6A16               	clrf	??_check_sensors& (0+255),c
  5130  00191C  2A16               	incf	??_check_sensors& (0+255),f,c
  5131  00191E  D001               	goto	u1568
  5132  001920                     u1550:
  5133  001920  6A16               	clrf	??_check_sensors& (0+255),c
  5134  001922                     u1568:
  5135  001922  504C               	movf	_SeeLine,w,c
  5136  001924  1816               	xorwf	??_check_sensors,w,c
  5137  001926  0BFE               	andlw	-2
  5138  001928  1816               	xorwf	??_check_sensors,w,c
  5139  00192A  6E4C               	movwf	_SeeLine,c
  5140  00192C  0012               	return		;funcret
  5141  00192E                     __end_of_check_sensors:
  5142                           	opt stack 0
  5143                           stkptr	equ	0xFFC
  5144                           tblptru	equ	0xFF8
  5145                           tblptrh	equ	0xFF7
  5146                           tblptrl	equ	0xFF6
  5147                           tablat	equ	0xFF5
  5148                           intcon	equ	0xFF2
  5149                           postinc0	equ	0xFEE
  5150                           wreg	equ	0xFE8
  5151                           indf1	equ	0xFE7
  5152                           postinc1	equ	0xFE6
  5153                           fsr1h	equ	0xFE2
  5154                           fsr1l	equ	0xFE1
  5155                           indf2	equ	0xFDF
  5156                           postinc2	equ	0xFDE
  5157                           plusw2	equ	0xFDB
  5158                           fsr2h	equ	0xFDA
  5159                           fsr2l	equ	0xFD9
  5160                           status	equ	0xFD8
  5161                           
  5162 ;; *************** function _adc *****************
  5163 ;; Defined at:
  5164 ;;		line 230 in file "../Robot Files/sumovore.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  channel         1    wreg     unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  channel         1   20[COMRAM] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  2   18[COMRAM] unsigned int 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0, cstack
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;Total ram usage:        3 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    2
  5185 ;; This function calls:
  5186 ;;		_BusyADC
  5187 ;;		_ConvertADC
  5188 ;;		_ReadADC
  5189 ;;		_SetChanADC
  5190 ;; This function is called by:
  5191 ;;		_check_sensors
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text42
  5196  00202E                     __ptext42:
  5197                           	opt stack 0
  5198  00202E                     _adc:
  5199                           	opt stack 27
  5200                           
  5201                           ;incstack = 0
  5202                           ;adc@channel stored from wreg
  5203  00202E  6E15               	movwf	adc@channel,c
  5204                           
  5205                           ;sumovore.c: 232: SetChanADC( channel );
  5206  002030  5015               	movf	adc@channel,w,c
  5207  002032  ECF6  F010         	call	_SetChanADC
  5208                           
  5209                           ;sumovore.c: 233: ConvertADC();
  5210  002036  EC50  F011         	call	_ConvertADC	;wreg free
  5211                           
  5212                           ;sumovore.c: 234: while( BusyADC() );
  5213  00203A  D000               	goto	l2128
  5214  00203C                     l2128:
  5215  00203C  EC34  F011         	call	_BusyADC	;wreg free
  5216  002040  0900               	iorlw	0
  5217  002042  A4D8               	btfss	status,2,c
  5218  002044  D7FB               	goto	l2128
  5219                           
  5220                           ;sumovore.c: 236: return ReadADC();
  5221  002046  EC25  F011         	call	_ReadADC	;wreg free
  5222  00204A  C00F  F013         	movff	?_ReadADC,?_adc
  5223  00204E  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5224  002052  D000               	goto	l297
  5225  002054                     l297:
  5226  002054  0012               	return		;funcret
  5227  002056                     __end_of_adc:
  5228                           	opt stack 0
  5229                           stkptr	equ	0xFFC
  5230                           tblptru	equ	0xFF8
  5231                           tblptrh	equ	0xFF7
  5232                           tblptrl	equ	0xFF6
  5233                           tablat	equ	0xFF5
  5234                           intcon	equ	0xFF2
  5235                           postinc0	equ	0xFEE
  5236                           wreg	equ	0xFE8
  5237                           indf1	equ	0xFE7
  5238                           postinc1	equ	0xFE6
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           plusw2	equ	0xFDB
  5244                           fsr2h	equ	0xFDA
  5245                           fsr2l	equ	0xFD9
  5246                           status	equ	0xFD8
  5247                           
  5248 ;; *************** function _SetChanADC *****************
  5249 ;; Defined at:
  5250 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  channel         1    wreg     unsigned char 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  channel         1   15[COMRAM] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        2 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_adc
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text43
  5279  0021EC                     __ptext43:
  5280                           	opt stack 0
  5281  0021EC                     _SetChanADC:
  5282                           	opt stack 27
  5283                           
  5284                           ;incstack = 0
  5285                           ;SetChanADC@channel stored from wreg
  5286  0021EC  6E10               	movwf	SetChanADC@channel,c
  5287  0021EE  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5288  0021F2  0EC3               	movlw	195
  5289  0021F4  160F               	andwf	??_SetChanADC,f,c
  5290  0021F6  90D8               	bcf	status,0,c
  5291  0021F8  3010               	rrcf	SetChanADC@channel,w,c
  5292  0021FA  0B3C               	andlw	60
  5293  0021FC  100F               	iorwf	??_SetChanADC,w,c
  5294  0021FE  6EC2               	movwf	4034,c	;volatile
  5295  002200  0012               	return		;funcret
  5296  002202                     __end_of_SetChanADC:
  5297                           	opt stack 0
  5298                           stkptr	equ	0xFFC
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           intcon	equ	0xFF2
  5304                           postinc0	equ	0xFEE
  5305                           wreg	equ	0xFE8
  5306                           indf1	equ	0xFE7
  5307                           postinc1	equ	0xFE6
  5308                           fsr1h	equ	0xFE2
  5309                           fsr1l	equ	0xFE1
  5310                           indf2	equ	0xFDF
  5311                           postinc2	equ	0xFDE
  5312                           plusw2	equ	0xFDB
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _ReadADC *****************
  5318 ;; Defined at:
  5319 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2   14[COMRAM] int 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;Total ram usage:        4 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_adc
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text44
  5348  00224A                     __ptext44:
  5349                           	opt stack 0
  5350  00224A                     _ReadADC:
  5351                           	opt stack 27
  5352                           
  5353                           ;incstack = 0
  5354  00224A  50C4               	movf	4036,w,c	;volatile
  5355  00224C  6E11               	movwf	??_ReadADC& (0+255),c
  5356  00224E  50C3               	movf	4035,w,c	;volatile
  5357  002250  6E0F               	movwf	?_ReadADC,c
  5358  002252  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5359  002256  D000               	goto	l448
  5360  002258                     l448:
  5361  002258  0012               	return		;funcret
  5362  00225A                     __end_of_ReadADC:
  5363                           	opt stack 0
  5364                           stkptr	equ	0xFFC
  5365                           tblptru	equ	0xFF8
  5366                           tblptrh	equ	0xFF7
  5367                           tblptrl	equ	0xFF6
  5368                           tablat	equ	0xFF5
  5369                           intcon	equ	0xFF2
  5370                           postinc0	equ	0xFEE
  5371                           wreg	equ	0xFE8
  5372                           indf1	equ	0xFE7
  5373                           postinc1	equ	0xFE6
  5374                           fsr1h	equ	0xFE2
  5375                           fsr1l	equ	0xFE1
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           plusw2	equ	0xFDB
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function _ConvertADC *****************
  5384 ;; Defined at:
  5385 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;		None               void
  5392 ;; Registers used:
  5393 ;;		None
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    1
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_adc
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text45
  5414  0022A0                     __ptext45:
  5415                           	opt stack 0
  5416  0022A0                     _ConvertADC:
  5417                           	opt stack 27
  5418                           
  5419                           ;incstack = 0
  5420  0022A0  82C2               	bsf	4034,1,c	;volatile
  5421  0022A2  0012               	return		;funcret
  5422  0022A4                     __end_of_ConvertADC:
  5423                           	opt stack 0
  5424                           stkptr	equ	0xFFC
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           intcon	equ	0xFF2
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           indf1	equ	0xFE7
  5433                           postinc1	equ	0xFE6
  5434                           fsr1h	equ	0xFE2
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           plusw2	equ	0xFDB
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function _BusyADC *****************
  5444 ;; Defined at:
  5445 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      unsigned char 
  5452 ;; Registers used:
  5453 ;;		wreg
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_adc
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text46
  5474  002268                     __ptext46:
  5475                           	opt stack 0
  5476  002268                     _BusyADC:
  5477                           	opt stack 27
  5478                           
  5479                           ;incstack = 0
  5480  002268  A2C2               	btfss	4034,1,c	;volatile
  5481  00226A  D002               	goto	u1360
  5482  00226C  0E01               	movlw	1
  5483  00226E  D002               	goto	l418
  5484  002270                     u1360:
  5485  002270  0E00               	movlw	0
  5486  002272  D000               	goto	l418
  5487  002274                     l418:
  5488  002274  0012               	return		;funcret
  5489  002276                     __end_of_BusyADC:
  5490                           	opt stack 0
  5491                           stkptr	equ	0xFFC
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           intcon	equ	0xFF2
  5497                           postinc0	equ	0xFEE
  5498                           wreg	equ	0xFE8
  5499                           indf1	equ	0xFE7
  5500                           postinc1	equ	0xFE6
  5501                           fsr1h	equ	0xFE2
  5502                           fsr1l	equ	0xFE1
  5503                           indf2	equ	0xFDF
  5504                           postinc2	equ	0xFDE
  5505                           plusw2	equ	0xFDB
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _WriteTimer0 *****************
  5511 ;; Defined at:
  5512 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  timer0          2   14[COMRAM] unsigned int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  timer           2   16[COMRAM] struct Timers
  5517 ;; Return value:  Size  Location     Type
  5518 ;;		None               void
  5519 ;; Registers used:
  5520 ;;		None
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;Total ram usage:        4 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    1
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_main
  5537 ;;		_GetBackonTrack
  5538 ;;		_AllSensorsTriggered
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text47
  5543  002238                     __ptext47:
  5544                           	opt stack 0
  5545  002238                     _WriteTimer0:
  5546                           	opt stack 29
  5547                           
  5548                           ;incstack = 0
  5549  002238  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5550  00223C  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5551  002240  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5552  002244  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5553  002248  0012               	return		;funcret
  5554  00224A                     __end_of_WriteTimer0:
  5555                           	opt stack 0
  5556                           stkptr	equ	0xFFC
  5557                           tblptru	equ	0xFF8
  5558                           tblptrh	equ	0xFF7
  5559                           tblptrl	equ	0xFF6
  5560                           tablat	equ	0xFF5
  5561                           intcon	equ	0xFF2
  5562                           postinc0	equ	0xFEE
  5563                           wreg	equ	0xFE8
  5564                           indf1	equ	0xFE7
  5565                           postinc1	equ	0xFE6
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           indf2	equ	0xFDF
  5569                           postinc2	equ	0xFDE
  5570                           plusw2	equ	0xFDB
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _MotorControl *****************
  5576 ;; Defined at:
  5577 ;;		line 134 in file "../Robot Files/main.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  delta_veloci    2   42[COMRAM] int 
  5580 ;;  speed_divide    1   44[COMRAM] unsigned char 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  right_duty_c    2   50[COMRAM] int 
  5583 ;;  left_duty_cy    2   48[COMRAM] int 
  5584 ;;  right_dir_mo    1   47[COMRAM] enum E4173
  5585 ;;  left_dir_mod    1   46[COMRAM] enum E4173
  5586 ;; Return value:  Size  Location     Type
  5587 ;;		None               void
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;Total ram usage:       10 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    2
  5602 ;; This function calls:
  5603 ;;		_SetDCPWM1
  5604 ;;		_SetDCPWM2
  5605 ;;		___awdiv
  5606 ;;		___wmul
  5607 ;; This function is called by:
  5608 ;;		_PID_LineFollowing
  5609 ;;		_GetBackonTrack
  5610 ;;		_SharpTurn
  5611 ;;		_AllSensorsTriggered
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text48
  5616  001384                     __ptext48:
  5617                           	opt stack 0
  5618  001384                     _MotorControl:
  5619                           	opt stack 27
  5620                           
  5621                           ;main.c: 136: int left_duty_cycle = 700, right_duty_cycle = 700;
  5622                           
  5623                           ;incstack = 0
  5624  001384  0E02               	movlw	2
  5625  001386  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5626  001388  0EBC               	movlw	188
  5627  00138A  6E31               	movwf	MotorControl@left_duty_cycle,c
  5628  00138C  0E02               	movlw	2
  5629  00138E  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5630  001390  0EBC               	movlw	188
  5631  001392  6E33               	movwf	MotorControl@right_duty_cycle,c
  5632                           
  5633                           ;main.c: 137: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5634  001394  0E01               	movlw	1
  5635  001396  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5636  001398  0E01               	movlw	1
  5637  00139A  6E30               	movwf	MotorControl@right_dir_modifier,c
  5638                           
  5639                           ;main.c: 140: if ( delta_velocity < 0 )
  5640  00139C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5641  00139E  D023               	goto	l2196
  5642                           
  5643                           ;main.c: 141: {
  5644                           ;main.c: 142: left_duty_cycle += delta_velocity*15/16;
  5645  0013A0  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5646  0013A4  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5647  0013A8  0E00               	movlw	0
  5648  0013AA  6E20               	movwf	___wmul@multiplicand+1,c
  5649  0013AC  0E0F               	movlw	15
  5650  0013AE  6E1F               	movwf	___wmul@multiplicand,c
  5651  0013B0  EC2B  F010         	call	___wmul	;wreg free
  5652  0013B4  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5653  0013B8  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5654  0013BC  0E00               	movlw	0
  5655  0013BE  6E26               	movwf	___awdiv@divisor+1,c
  5656  0013C0  0E10               	movlw	16
  5657  0013C2  6E25               	movwf	___awdiv@divisor,c
  5658  0013C4  EC3D  F00D         	call	___awdiv	;wreg free
  5659  0013C8  5023               	movf	?___awdiv,w,c
  5660  0013CA  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5661  0013CC  5024               	movf	?___awdiv+1,w,c
  5662  0013CE  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5663                           
  5664                           ;main.c: 143: right_duty_cycle -= delta_velocity/16;
  5665  0013D0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5666  0013D4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5667  0013D8  0E00               	movlw	0
  5668  0013DA  6E26               	movwf	___awdiv@divisor+1,c
  5669  0013DC  0E10               	movlw	16
  5670  0013DE  6E25               	movwf	___awdiv@divisor,c
  5671  0013E0  EC3D  F00D         	call	___awdiv	;wreg free
  5672  0013E4  D022               	goto	L8
  5673  0013E6                     l2196:
  5674                           
  5675                           ;main.c: 146: else
  5676                           ;main.c: 147: {
  5677                           ;main.c: 148: left_duty_cycle += delta_velocity/16;
  5678  0013E6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5679  0013EA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5680  0013EE  0E00               	movlw	0
  5681  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  5682  0013F2  0E10               	movlw	16
  5683  0013F4  6E25               	movwf	___awdiv@divisor,c
  5684  0013F6  EC3D  F00D         	call	___awdiv	;wreg free
  5685  0013FA  5023               	movf	?___awdiv,w,c
  5686  0013FC  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5687  0013FE  5024               	movf	?___awdiv+1,w,c
  5688  001400  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5689                           
  5690                           ;main.c: 149: right_duty_cycle -= delta_velocity*15/16;
  5691  001402  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5692  001406  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5693  00140A  0E00               	movlw	0
  5694  00140C  6E20               	movwf	___wmul@multiplicand+1,c
  5695  00140E  0E0F               	movlw	15
  5696  001410  6E1F               	movwf	___wmul@multiplicand,c
  5697  001412  EC2B  F010         	call	___wmul	;wreg free
  5698  001416  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5699  00141A  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5700  00141E  0E00               	movlw	0
  5701  001420  6E26               	movwf	___awdiv@divisor+1,c
  5702  001422  0E10               	movlw	16
  5703  001424  6E25               	movwf	___awdiv@divisor,c
  5704  001426  EC3D  F00D         	call	___awdiv	;wreg free
  5705  00142A                     L8:
  5706  00142A  5023               	movf	?___awdiv,w,c
  5707  00142C  5E33               	subwf	MotorControl@right_duty_cycle,f,c
  5708  00142E  5024               	movf	?___awdiv+1,w,c
  5709  001430  5A34               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5710  001432  D000               	goto	l2200
  5711  001434                     l2200:
  5712                           
  5713                           ;main.c: 150: }
  5714                           ;main.c: 156: if (speed_divider)
  5715  001434  502D               	movf	MotorControl@speed_divider,w,c
  5716  001436  B4D8               	btfsc	status,2,c
  5717  001438  D01B               	goto	l2204
  5718                           
  5719                           ;main.c: 157: {
  5720                           ;main.c: 158: left_duty_cycle /= speed_divider;
  5721  00143A  C031  F023         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  5722  00143E  C032  F024         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  5723  001442  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5724  001446  6A26               	clrf	___awdiv@divisor+1,c
  5725  001448  EC3D  F00D         	call	___awdiv	;wreg free
  5726  00144C  C023  F031         	movff	?___awdiv,MotorControl@left_duty_cycle
  5727  001450  C024  F032         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  5728                           
  5729                           ;main.c: 159: right_duty_cycle /= speed_divider;
  5730  001454  C033  F023         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  5731  001458  C034  F024         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  5732  00145C  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5733  001460  6A26               	clrf	___awdiv@divisor+1,c
  5734  001462  EC3D  F00D         	call	___awdiv	;wreg free
  5735  001466  C023  F033         	movff	?___awdiv,MotorControl@right_duty_cycle
  5736  00146A  C024  F034         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  5737  00146E  D000               	goto	l2204
  5738  001470                     l2204:
  5739                           
  5740                           ;main.c: 160: }
  5741                           ;main.c: 163: if ( left_duty_cycle < 0 )
  5742  001470  AE32               	btfss	MotorControl@left_duty_cycle+1,7,c
  5743  001472  D010               	goto	l2210
  5744                           
  5745                           ;main.c: 164: {
  5746                           ;main.c: 165: left_dir_modifier = reverse;
  5747  001474  0E00               	movlw	0
  5748  001476  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5749                           
  5750                           ;main.c: 166: left_duty_cycle *= -1;
  5751  001478  C031  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5752  00147C  C032  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5753  001480  0EFF               	movlw	255
  5754  001482  6E20               	movwf	___wmul@multiplicand+1,c
  5755  001484  681F               	setf	___wmul@multiplicand,c
  5756  001486  EC2B  F010         	call	___wmul	;wreg free
  5757  00148A  C01D  F031         	movff	?___wmul,MotorControl@left_duty_cycle
  5758  00148E  C01E  F032         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5759  001492  D000               	goto	l2210
  5760  001494                     l2210:
  5761                           
  5762                           ;main.c: 167: }
  5763                           ;main.c: 168: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5764  001494  BE32               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5765  001496  D00B               	goto	l2214
  5766  001498  0E21               	movlw	33
  5767  00149A  5C31               	subwf	MotorControl@left_duty_cycle,w,c
  5768  00149C  0E03               	movlw	3
  5769  00149E  5832               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5770  0014A0  A0D8               	btfss	status,0,c
  5771  0014A2  D005               	goto	l2214
  5772  0014A4  0E03               	movlw	3
  5773  0014A6  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5774  0014A8  0E20               	movlw	32
  5775  0014AA  6E31               	movwf	MotorControl@left_duty_cycle,c
  5776  0014AC  D000               	goto	l2214
  5777  0014AE                     l2214:
  5778                           
  5779                           ;main.c: 170: SetDCPWM2((unsigned int) left_duty_cycle );
  5780  0014AE  C031  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5781  0014B2  C032  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5782  0014B6  EC94  F00F         	call	_SetDCPWM2	;wreg free
  5783                           
  5784                           ;main.c: 171: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5785  0014BA  502F               	movf	MotorControl@left_dir_modifier,w,c
  5786  0014BC  A4D8               	btfss	status,2,c
  5787  0014BE  D002               	goto	l112
  5788  0014C0  9082               	bcf	3970,0,c	;volatile
  5789  0014C2  D002               	goto	l2220
  5790  0014C4                     l112:
  5791                           
  5792                           ;main.c: 172: else PORTCbits.RC0 = 0b1;
  5793  0014C4  8082               	bsf	3970,0,c	;volatile
  5794  0014C6  D000               	goto	l2220
  5795  0014C8                     l2220:
  5796                           
  5797                           ;main.c: 173: PORTEbits.RE1 = !PORTCbits.RC0;
  5798  0014C8  B082               	btfsc	3970,0,c	;volatile
  5799  0014CA  D003               	goto	u1720
  5800  0014CC  6A2E               	clrf	??_MotorControl& (0+255),c
  5801  0014CE  2A2E               	incf	??_MotorControl& (0+255),f,c
  5802  0014D0  D001               	goto	u1738
  5803  0014D2                     u1720:
  5804  0014D2  6A2E               	clrf	??_MotorControl& (0+255),c
  5805  0014D4                     u1738:
  5806  0014D4  462E               	rlncf	??_MotorControl,f,c
  5807  0014D6  5084               	movf	3972,w,c	;volatile
  5808  0014D8  182E               	xorwf	??_MotorControl,w,c
  5809  0014DA  0BFD               	andlw	-3
  5810  0014DC  182E               	xorwf	??_MotorControl,w,c
  5811  0014DE  6E84               	movwf	3972,c	;volatile
  5812                           
  5813                           ;main.c: 176: if ( right_duty_cycle < 0 )
  5814  0014E0  AE34               	btfss	MotorControl@right_duty_cycle+1,7,c
  5815  0014E2  D010               	goto	l2226
  5816                           
  5817                           ;main.c: 177: {
  5818                           ;main.c: 178: right_dir_modifier = reverse;
  5819  0014E4  0E00               	movlw	0
  5820  0014E6  6E30               	movwf	MotorControl@right_dir_modifier,c
  5821                           
  5822                           ;main.c: 179: right_duty_cycle *= -1;
  5823  0014E8  C033  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5824  0014EC  C034  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5825  0014F0  0EFF               	movlw	255
  5826  0014F2  6E20               	movwf	___wmul@multiplicand+1,c
  5827  0014F4  681F               	setf	___wmul@multiplicand,c
  5828  0014F6  EC2B  F010         	call	___wmul	;wreg free
  5829  0014FA  C01D  F033         	movff	?___wmul,MotorControl@right_duty_cycle
  5830  0014FE  C01E  F034         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5831  001502  D000               	goto	l2226
  5832  001504                     l2226:
  5833                           
  5834                           ;main.c: 180: }
  5835                           ;main.c: 181: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5836  001504  BE34               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5837  001506  D00B               	goto	l2230
  5838  001508  0E21               	movlw	33
  5839  00150A  5C33               	subwf	MotorControl@right_duty_cycle,w,c
  5840  00150C  0E03               	movlw	3
  5841  00150E  5834               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5842  001510  A0D8               	btfss	status,0,c
  5843  001512  D005               	goto	l2230
  5844  001514  0E03               	movlw	3
  5845  001516  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5846  001518  0E20               	movlw	32
  5847  00151A  6E33               	movwf	MotorControl@right_duty_cycle,c
  5848  00151C  D000               	goto	l2230
  5849  00151E                     l2230:
  5850                           
  5851                           ;main.c: 183: SetDCPWM1((unsigned int) right_duty_cycle );
  5852  00151E  C033  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5853  001522  C034  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5854  001526  ECB1  F00F         	call	_SetDCPWM1	;wreg free
  5855                           
  5856                           ;main.c: 184: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5857  00152A  5030               	movf	MotorControl@right_dir_modifier,w,c
  5858  00152C  A4D8               	btfss	status,2,c
  5859  00152E  D002               	goto	l116
  5860  001530  9A82               	bcf	3970,5,c	;volatile
  5861  001532  D002               	goto	l2236
  5862  001534                     l116:
  5863                           
  5864                           ;main.c: 185: else PORTCbits.RC5 = 0b1;
  5865  001534  8A82               	bsf	3970,5,c	;volatile
  5866  001536  D000               	goto	l2236
  5867  001538                     l2236:
  5868                           
  5869                           ;main.c: 186: PORTEbits.RE0 = !PORTCbits.RC5;
  5870  001538  BA82               	btfsc	3970,5,c	;volatile
  5871  00153A  D003               	goto	u1770
  5872  00153C  6A2E               	clrf	??_MotorControl& (0+255),c
  5873  00153E  2A2E               	incf	??_MotorControl& (0+255),f,c
  5874  001540  D001               	goto	u1788
  5875  001542                     u1770:
  5876  001542  6A2E               	clrf	??_MotorControl& (0+255),c
  5877  001544                     u1788:
  5878  001544  5084               	movf	3972,w,c	;volatile
  5879  001546  182E               	xorwf	??_MotorControl,w,c
  5880  001548  0BFE               	andlw	-2
  5881  00154A  182E               	xorwf	??_MotorControl,w,c
  5882  00154C  6E84               	movwf	3972,c	;volatile
  5883  00154E  0012               	return		;funcret
  5884  001550                     __end_of_MotorControl:
  5885                           	opt stack 0
  5886                           stkptr	equ	0xFFC
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           intcon	equ	0xFF2
  5892                           postinc0	equ	0xFEE
  5893                           wreg	equ	0xFE8
  5894                           indf1	equ	0xFE7
  5895                           postinc1	equ	0xFE6
  5896                           fsr1h	equ	0xFE2
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           plusw2	equ	0xFDB
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function ___wmul *****************
  5906 ;; Defined at:
  5907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  multiplier      2   28[COMRAM] unsigned int 
  5910 ;;  multiplicand    2   30[COMRAM] unsigned int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  product         2   32[COMRAM] unsigned int 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2   28[COMRAM] unsigned int 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0, prodl, prodh
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;Total ram usage:        6 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_PID_LineFollowing
  5933 ;;		_MotorControl
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text49
  5938  002056                     __ptext49:
  5939                           	opt stack 0
  5940  002056                     ___wmul:
  5941                           	opt stack 28
  5942                           
  5943                           ;incstack = 0
  5944  002056  501D               	movf	___wmul@multiplier,w,c
  5945  002058  021F               	mulwf	___wmul@multiplicand,c
  5946  00205A  CFF3 F021          	movff	prodl,___wmul@product
  5947  00205E  CFF4 F022          	movff	prodh,___wmul@product+1
  5948  002062  501D               	movf	___wmul@multiplier,w,c
  5949  002064  0220               	mulwf	___wmul@multiplicand+1,c
  5950  002066  50F3               	movf	prodl,w,c
  5951  002068  2622               	addwf	___wmul@product+1,f,c
  5952  00206A  501E               	movf	___wmul@multiplier+1,w,c
  5953  00206C  021F               	mulwf	___wmul@multiplicand,c
  5954  00206E  50F3               	movf	prodl,w,c
  5955  002070  2622               	addwf	___wmul@product+1,f,c
  5956  002072  C021  F01D         	movff	___wmul@product,?___wmul
  5957  002076  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  5958  00207A  D000               	goto	l608
  5959  00207C                     l608:
  5960  00207C  0012               	return		;funcret
  5961  00207E                     __end_of___wmul:
  5962                           	opt stack 0
  5963                           stkptr	equ	0xFFC
  5964                           tblptru	equ	0xFF8
  5965                           tblptrh	equ	0xFF7
  5966                           tblptrl	equ	0xFF6
  5967                           tablat	equ	0xFF5
  5968                           prodh	equ	0xFF4
  5969                           prodl	equ	0xFF3
  5970                           intcon	equ	0xFF2
  5971                           postinc0	equ	0xFEE
  5972                           wreg	equ	0xFE8
  5973                           indf1	equ	0xFE7
  5974                           postinc1	equ	0xFE6
  5975                           fsr1h	equ	0xFE2
  5976                           fsr1l	equ	0xFE1
  5977                           indf2	equ	0xFDF
  5978                           postinc2	equ	0xFDE
  5979                           plusw2	equ	0xFDB
  5980                           fsr2h	equ	0xFDA
  5981                           fsr2l	equ	0xFD9
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function ___awdiv *****************
  5985 ;; Defined at:
  5986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  dividend        2   34[COMRAM] int 
  5989 ;;  divisor         2   36[COMRAM] int 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  quotient        2   40[COMRAM] int 
  5992 ;;  sign            1   39[COMRAM] unsigned char 
  5993 ;;  counter         1   38[COMRAM] unsigned char 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  2   34[COMRAM] int 
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        8 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    1
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_MotorControl
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text50
  6018  001A7A                     __ptext50:
  6019                           	opt stack 0
  6020  001A7A                     ___awdiv:
  6021                           	opt stack 27
  6022                           
  6023                           ;incstack = 0
  6024  001A7A  0E00               	movlw	0
  6025  001A7C  6E28               	movwf	___awdiv@sign,c
  6026  001A7E  AE26               	btfss	___awdiv@divisor+1,7,c
  6027  001A80  D007               	goto	l2148
  6028  001A82  6C25               	negf	___awdiv@divisor,c
  6029  001A84  1E26               	comf	___awdiv@divisor+1,f,c
  6030  001A86  B0D8               	btfsc	status,0,c
  6031  001A88  2A26               	incf	___awdiv@divisor+1,f,c
  6032  001A8A  0E01               	movlw	1
  6033  001A8C  6E28               	movwf	___awdiv@sign,c
  6034  001A8E  D000               	goto	l2148
  6035  001A90                     l2148:
  6036  001A90  AE24               	btfss	___awdiv@dividend+1,7,c
  6037  001A92  D007               	goto	l2154
  6038  001A94  6C23               	negf	___awdiv@dividend,c
  6039  001A96  1E24               	comf	___awdiv@dividend+1,f,c
  6040  001A98  B0D8               	btfsc	status,0,c
  6041  001A9A  2A24               	incf	___awdiv@dividend+1,f,c
  6042  001A9C  0E01               	movlw	1
  6043  001A9E  1A28               	xorwf	___awdiv@sign,f,c
  6044  001AA0  D000               	goto	l2154
  6045  001AA2                     l2154:
  6046  001AA2  0E00               	movlw	0
  6047  001AA4  6E2A               	movwf	___awdiv@quotient+1,c
  6048  001AA6  0E00               	movlw	0
  6049  001AA8  6E29               	movwf	___awdiv@quotient,c
  6050  001AAA  5025               	movf	___awdiv@divisor,w,c
  6051  001AAC  1026               	iorwf	___awdiv@divisor+1,w,c
  6052  001AAE  B4D8               	btfsc	status,2,c
  6053  001AB0  D021               	goto	l2176
  6054  001AB2  0E01               	movlw	1
  6055  001AB4  6E27               	movwf	___awdiv@counter,c
  6056  001AB6  D005               	goto	l2162
  6057  001AB8                     l2160:
  6058  001AB8  90D8               	bcf	status,0,c
  6059  001ABA  3625               	rlcf	___awdiv@divisor,f,c
  6060  001ABC  3626               	rlcf	___awdiv@divisor+1,f,c
  6061  001ABE  2A27               	incf	___awdiv@counter,f,c
  6062  001AC0  D000               	goto	l2162
  6063  001AC2                     l2162:
  6064  001AC2  BE26               	btfsc	___awdiv@divisor+1,7,c
  6065  001AC4  D002               	goto	l2164
  6066  001AC6  D7F8               	goto	l2160
  6067  001AC8  D000               	goto	l2164
  6068  001ACA                     l2164:
  6069  001ACA  90D8               	bcf	status,0,c
  6070  001ACC  3629               	rlcf	___awdiv@quotient,f,c
  6071  001ACE  362A               	rlcf	___awdiv@quotient+1,f,c
  6072  001AD0  5025               	movf	___awdiv@divisor,w,c
  6073  001AD2  5C23               	subwf	___awdiv@dividend,w,c
  6074  001AD4  5026               	movf	___awdiv@divisor+1,w,c
  6075  001AD6  5824               	subwfb	___awdiv@dividend+1,w,c
  6076  001AD8  A0D8               	btfss	status,0,c
  6077  001ADA  D006               	goto	l2172
  6078  001ADC  5025               	movf	___awdiv@divisor,w,c
  6079  001ADE  5E23               	subwf	___awdiv@dividend,f,c
  6080  001AE0  5026               	movf	___awdiv@divisor+1,w,c
  6081  001AE2  5A24               	subwfb	___awdiv@dividend+1,f,c
  6082  001AE4  8029               	bsf	___awdiv@quotient,0,c
  6083  001AE6  D000               	goto	l2172
  6084  001AE8                     l2172:
  6085  001AE8  90D8               	bcf	status,0,c
  6086  001AEA  3226               	rrcf	___awdiv@divisor+1,f,c
  6087  001AEC  3225               	rrcf	___awdiv@divisor,f,c
  6088  001AEE  2E27               	decfsz	___awdiv@counter,f,c
  6089  001AF0  D7EC               	goto	l2164
  6090  001AF2  D000               	goto	l2176
  6091  001AF4                     l2176:
  6092  001AF4  5028               	movf	___awdiv@sign,w,c
  6093  001AF6  B4D8               	btfsc	status,2,c
  6094  001AF8  D005               	goto	l2180
  6095  001AFA  6C29               	negf	___awdiv@quotient,c
  6096  001AFC  1E2A               	comf	___awdiv@quotient+1,f,c
  6097  001AFE  B0D8               	btfsc	status,0,c
  6098  001B00  2A2A               	incf	___awdiv@quotient+1,f,c
  6099  001B02  D000               	goto	l2180
  6100  001B04                     l2180:
  6101  001B04  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6102  001B08  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6103  001B0C  D000               	goto	l801
  6104  001B0E                     l801:
  6105  001B0E  0012               	return		;funcret
  6106  001B10                     __end_of___awdiv:
  6107                           	opt stack 0
  6108                           stkptr	equ	0xFFC
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           indf1	equ	0xFE7
  6119                           postinc1	equ	0xFE6
  6120                           fsr1h	equ	0xFE2
  6121                           fsr1l	equ	0xFE1
  6122                           indf2	equ	0xFDF
  6123                           postinc2	equ	0xFDE
  6124                           plusw2	equ	0xFDB
  6125                           fsr2h	equ	0xFDA
  6126                           fsr2l	equ	0xFD9
  6127                           status	equ	0xFD8
  6128                           
  6129 ;; *************** function _SetDCPWM2 *****************
  6130 ;; Defined at:
  6131 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6136 ;; Return value:  Size  Location     Type
  6137 ;;		None               void
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;Total ram usage:        6 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_MotorControl
  6156 ;;		_initialization
  6157 ;;		_motors_brake_all
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text51
  6162  001F28                     __ptext51:
  6163                           	opt stack 0
  6164  001F28                     _SetDCPWM2:
  6165                           	opt stack 28
  6166                           
  6167                           ;incstack = 0
  6168  001F28  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6169  001F2C  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6170  001F30  0E06               	movlw	6
  6171  001F32                     u1385:
  6172  001F32  90D8               	bcf	status,0,c
  6173  001F34  3611               	rlcf	??_SetDCPWM2,f,c
  6174  001F36  3612               	rlcf	??_SetDCPWM2+1,f,c
  6175  001F38  2EE8               	decfsz	wreg,f,c
  6176  001F3A  D7FB               	goto	u1385
  6177  001F3C  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6178  001F40  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6179  001F44  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6180  001F48  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6181  001F4C  90D8               	bcf	status,0,c
  6182  001F4E  3211               	rrcf	??_SetDCPWM2,f,c
  6183  001F50  90D8               	bcf	status,0,c
  6184  001F52  3211               	rrcf	??_SetDCPWM2,f,c
  6185  001F54  0E30               	movlw	48
  6186  001F56  1611               	andwf	??_SetDCPWM2,f,c
  6187  001F58  50BA               	movf	4026,w,c	;volatile
  6188  001F5A  0BCF               	andlw	207
  6189  001F5C  1011               	iorwf	??_SetDCPWM2,w,c
  6190  001F5E  6EBA               	movwf	4026,c	;volatile
  6191  001F60  0012               	return		;funcret
  6192  001F62                     __end_of_SetDCPWM2:
  6193                           	opt stack 0
  6194                           stkptr	equ	0xFFC
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           prodh	equ	0xFF4
  6200                           prodl	equ	0xFF3
  6201                           intcon	equ	0xFF2
  6202                           postinc0	equ	0xFEE
  6203                           wreg	equ	0xFE8
  6204                           indf1	equ	0xFE7
  6205                           postinc1	equ	0xFE6
  6206                           fsr1h	equ	0xFE2
  6207                           fsr1l	equ	0xFE1
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           plusw2	equ	0xFDB
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _SetDCPWM1 *****************
  6216 ;; Defined at:
  6217 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6222 ;; Return value:  Size  Location     Type
  6223 ;;		None               void
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;Total ram usage:        6 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    1
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_MotorControl
  6242 ;;		_initialization
  6243 ;;		_motors_brake_all
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text52
  6248  001F62                     __ptext52:
  6249                           	opt stack 0
  6250  001F62                     _SetDCPWM1:
  6251                           	opt stack 28
  6252                           
  6253                           ;incstack = 0
  6254  001F62  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6255  001F66  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6256  001F6A  0E06               	movlw	6
  6257  001F6C                     u1395:
  6258  001F6C  90D8               	bcf	status,0,c
  6259  001F6E  3611               	rlcf	??_SetDCPWM1,f,c
  6260  001F70  3612               	rlcf	??_SetDCPWM1+1,f,c
  6261  001F72  2EE8               	decfsz	wreg,f,c
  6262  001F74  D7FB               	goto	u1395
  6263  001F76  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6264  001F7A  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6265  001F7E  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6266  001F82  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6267  001F86  90D8               	bcf	status,0,c
  6268  001F88  3211               	rrcf	??_SetDCPWM1,f,c
  6269  001F8A  90D8               	bcf	status,0,c
  6270  001F8C  3211               	rrcf	??_SetDCPWM1,f,c
  6271  001F8E  0E30               	movlw	48
  6272  001F90  1611               	andwf	??_SetDCPWM1,f,c
  6273  001F92  50BD               	movf	4029,w,c	;volatile
  6274  001F94  0BCF               	andlw	207
  6275  001F96  1011               	iorwf	??_SetDCPWM1,w,c
  6276  001F98  6EBD               	movwf	4029,c	;volatile
  6277  001F9A  0012               	return		;funcret
  6278  001F9C                     __end_of_SetDCPWM1:
  6279                           	opt stack 0
  6280                           stkptr	equ	0xFFC
  6281                           tblptru	equ	0xFF8
  6282                           tblptrh	equ	0xFF7
  6283                           tblptrl	equ	0xFF6
  6284                           tablat	equ	0xFF5
  6285                           prodh	equ	0xFF4
  6286                           prodl	equ	0xFF3
  6287                           intcon	equ	0xFF2
  6288                           postinc0	equ	0xFEE
  6289                           wreg	equ	0xFE8
  6290                           indf1	equ	0xFE7
  6291                           postinc1	equ	0xFE6
  6292                           fsr1h	equ	0xFE2
  6293                           fsr1l	equ	0xFE1
  6294                           indf2	equ	0xFDF
  6295                           postinc2	equ	0xFDE
  6296                           plusw2	equ	0xFDB
  6297                           fsr2h	equ	0xFDA
  6298                           fsr2l	equ	0xFD9
  6299                           status	equ	0xFD8
  6300                           
  6301 ;; *************** function _high_isr *****************
  6302 ;; Defined at:
  6303 ;;		line 24 in file "../Robot Files/interrupts.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;		None               void
  6310 ;; Registers used:
  6311 ;;		wreg, status,2
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;Total ram usage:       14 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		Interrupt level 2
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	intcode
  6331  000008                     __pintcode:
  6332                           	opt stack 0
  6333  000008                     _high_isr:
  6334                           	opt stack 25
  6335                           
  6336                           ;incstack = 0
  6337  000008  CFFA F001          	movff	pclath,??_high_isr
  6338  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6339  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6340  000014  ED0F  F00E         	call	int_func,f	;refresh shadow registers
  6341                           stkptr	equ	0xFFC
  6342                           pclatu	equ	0xFFB
  6343                           pclath	equ	0xFFA
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           intcon	equ	0xFF2
  6351                           postinc0	equ	0xFEE
  6352                           fsr0l	equ	0xFE9
  6353                           wreg	equ	0xFE8
  6354                           indf1	equ	0xFE7
  6355                           postinc1	equ	0xFE6
  6356                           fsr1h	equ	0xFE2
  6357                           fsr1l	equ	0xFE1
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           plusw2	equ	0xFDB
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365                           	psect	intcode_body
  6366  001C1E                     __pintcode_body:
  6367                           	opt stack 25
  6368  001C1E                     int_func:
  6369                           	opt stack 25
  6370  001C1E  0006               	pop		; remove dummy address from shadow register refresh
  6371  001C20  CFEA F004          	movff	fsr0h,??_high_isr+3
  6372  001C24  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6373  001C28  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6374  001C2C  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6375  001C30  CFDA F008          	movff	fsr2h,??_high_isr+7
  6376  001C34  CFF3 F009          	movff	prodl,??_high_isr+8
  6377  001C38  CFF4 F00A          	movff	prodh,??_high_isr+9
  6378  001C3C  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6379  001C40  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6380  001C44  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6381  001C48  CFF5 F00E          	movff	tablat,??_high_isr+13
  6382                           
  6383                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6384  001C4C  94A1               	bcf	4001,2,c	;volatile
  6385                           
  6386                           ;interrupts.c: 27: TRISA = 0xff;
  6387  001C4E  6892               	setf	3986,c	;volatile
  6388                           
  6389                           ;interrupts.c: 28: TRISB = 0xff;
  6390  001C50  6893               	setf	3987,c	;volatile
  6391                           
  6392                           ;interrupts.c: 29: TRISC = 0xff;
  6393  001C52  6894               	setf	3988,c	;volatile
  6394                           
  6395                           ;interrupts.c: 30: TRISD = 0xff;
  6396  001C54  6895               	setf	3989,c	;volatile
  6397                           
  6398                           ;interrupts.c: 31: TRISE = 0x03;
  6399  001C56  0E03               	movlw	3
  6400  001C58  6E96               	movwf	3990,c	;volatile
  6401                           
  6402                           ;interrupts.c: 32: lvd_flag =1;
  6403  001C5A  0E01               	movlw	1
  6404  001C5C  6E4D               	movwf	_lvd_flag,c
  6405                           
  6406                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6407  001C5E  94A0               	bcf	4000,2,c	;volatile
  6408                           
  6409                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6410  001C60  98D2               	bcf	4050,4,c	;volatile
  6411  001C62  C00E  FFF5         	movff	??_high_isr+13,tablat
  6412  001C66  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6413  001C6A  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6414  001C6E  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6415  001C72  C00A  FFF4         	movff	??_high_isr+9,prodh
  6416  001C76  C009  FFF3         	movff	??_high_isr+8,prodl
  6417  001C7A  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6418  001C7E  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6419  001C82  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6420  001C86  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6421  001C8A  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6422  001C8E  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6423  001C92  C002  FFFB         	movff	??_high_isr+1,pclatu
  6424  001C96  C001  FFFA         	movff	??_high_isr,pclath
  6425  001C9A  0011               	retfie		f
  6426  001C9C                     __end_of_high_isr:
  6427                           	opt stack 0
  6428                           stkptr	equ	0xFFC
  6429                           pclatu	equ	0xFFB
  6430                           pclath	equ	0xFFA
  6431                           tblptru	equ	0xFF8
  6432                           tblptrh	equ	0xFF7
  6433                           tblptrl	equ	0xFF6
  6434                           tablat	equ	0xFF5
  6435                           prodh	equ	0xFF4
  6436                           prodl	equ	0xFF3
  6437                           intcon	equ	0xFF2
  6438                           postinc0	equ	0xFEE
  6439                           fsr0h	equ	0xFEA
  6440                           fsr0l	equ	0xFE9
  6441                           wreg	equ	0xFE8
  6442                           indf1	equ	0xFE7
  6443                           postinc1	equ	0xFE6
  6444                           fsr1h	equ	0xFE2
  6445                           fsr1l	equ	0xFE1
  6446                           indf2	equ	0xFDF
  6447                           postinc2	equ	0xFDE
  6448                           plusw2	equ	0xFDB
  6449                           fsr2h	equ	0xFDA
  6450                           fsr2l	equ	0xFD9
  6451                           status	equ	0xFD8
  6452                           stkptr	equ	0xFFC
  6453                           pclatu	equ	0xFFB
  6454                           pclath	equ	0xFFA
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           postinc0	equ	0xFEE
  6463                           fsr0h	equ	0xFEA
  6464                           fsr0l	equ	0xFE9
  6465                           wreg	equ	0xFE8
  6466                           indf1	equ	0xFE7
  6467                           postinc1	equ	0xFE6
  6468                           fsr1h	equ	0xFE2
  6469                           fsr1l	equ	0xFE1
  6470                           indf2	equ	0xFDF
  6471                           postinc2	equ	0xFDE
  6472                           plusw2	equ	0xFDB
  6473                           fsr2h	equ	0xFDA
  6474                           fsr2l	equ	0xFD9
  6475                           status	equ	0xFD8
  6476                           
  6477                           	psect	rparam
  6478  0000                     stkptr	equ	0xFFC
  6479                           pclatu	equ	0xFFB
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           postinc0	equ	0xFEE
  6489                           fsr0h	equ	0xFEA
  6490                           fsr0l	equ	0xFE9
  6491                           wreg	equ	0xFE8
  6492                           indf1	equ	0xFE7
  6493                           postinc1	equ	0xFE6
  6494                           fsr1h	equ	0xFE2
  6495                           fsr1l	equ	0xFE1
  6496                           indf2	equ	0xFDF
  6497                           postinc2	equ	0xFDE
  6498                           plusw2	equ	0xFDB
  6499                           fsr2h	equ	0xFDA
  6500                           fsr2l	equ	0xFD9
  6501                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      77
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   26679
                                             61 COMRAM     3     3      0
                _AllSensorsTriggered
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    6606
                                             52 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9737
                                             56 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4673
                                             52 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  1     1      0    4843
                                             52 COMRAM     1     1      0
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      44
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      44
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     260
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3995
                                             42 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      4D       1       60.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      34        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 03 12:26:11 2020

                     _STKPTRbits 000FFC                                _I 0048  
                             l70 16FA                     ___awdiv@sign 0028  
            ___wmul@multiplicand 001F                      __CFG_BORV$0 000000  
                            l103 132C                              l112 14C4  
                            l116 1534                              l140 16A6  
                            l310 1F16                              l314 1F26  
                            l323 19D8                              l317 19C4  
                            l318 196A                              l511 2126  
                            l344 1D8E                              l512 2128  
                            l440 1E3A                              l600 20A2  
                            l169 1D0C                              l418 2274  
                            l540 21B8                              l541 21BA  
                            l374 227A                              l383 202C  
                            l608 207C                              l448 2258  
                            l801 1B0E                              l297 2054  
                            l490 1FCA                              l570 1D54  
                            l571 1D56                              l572 1D60  
                            l573 1D62                              l566 1D3A  
                            l582 21EA                              l575 1D7C  
                            l591 20C8                              l488 1FBE  
                            l489 1FC8                              l677 1868  
                            _PR2 000FCB             __size_of_WriteTimer0 0012  
                            _adc 202E                              wreg 000FE8  
                ReadTimer0@timer 0011                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_adc 0013  
                           l1126 1E90                             l2200 1434  
                           l2112 1FDE                             l1136 1EDC  
                           l2210 1494                             l2114 1FE6  
                           l2220 14C8                             l2204 1470  
                           l2230 151E                             l2214 14AE  
                           l1254 1DB8                             l2160 1AB8  
                           l2128 203C                             l2162 1AC2  
                           l2154 1AA2                             l2226 1504  
                           l1258 1DD0                             l1442 21E2  
                           l2180 1B04                             l2172 1AE8  
                           l2164 1ACA                             l2148 1A90  
                           l2236 1538                             l2510 1E5E  
                           l2406 1D4C                             l1446 21E6  
                           l1390 20BC                             l2176 1AF4  
                           l2352 1A00                             l2360 1A24  
                           l2520 1E84                             l2512 1E66  
                           l2602 15C8                             l2530 1EB2  
                           l2274 19A0                             l1386 20B8  
                           l1394 20C0                             l1482 2096  
                           l1490 209E                             l2434 1EF6  
                           l2196 13E6                             l2364 1A34  
                           l2612 1604                             l2508 1E54  
                           l2532 1EBA                             l1708 1FBA  
                           l2444 1F20                             l2366 1A3E  
                           l2374 1A60                             l2622 1644  
                           l2606 15E2                             l2390 1D2A  
                           l2278 19B8                             l1398 20C4  
                           l1478 2092                             l1486 209A  
                           l2438 1F06                             l1582 2012  
                           l2632 1680                             l2480 17F4  
                           l2472 17C4                             l2536 1ED0  
                           l2528 1EA8                             l2378 1A70  
                           l2634 1686                             l2626 166A  
                           l2490 182E                             l2482 17FC  
                           l2466 17AA                             l2394 1D32  
                           l2386 1D20                             l1586 2026  
                           l2660 1CFE                             l2644 1CAC  
                           l2740 16EA                             l2654 1CD4  
                           l2590 157C                             l2478 17E6  
                           l2494 183E                             l2398 1D3E  
                           l2750 1702                             l2742 16EE  
                           l2648 1CC6                             l2592 1584  
                           l2680 1136                             l2672 10F0  
                           l2752 1706                             l2744 16F2  
                           l2658 1CF8                             l2498 1856  
                           l2666 10BE                             l2690 119C  
                           l2754 170A                             l2746 16F6  
                           l2762 1724                             l2738 16E4  
                           l2596 15B0                             l2684 1158  
                           l2676 1116                             l2668 10CE  
                           l2756 1718                             l2748 16FE  
                           l2764 1766                             l2598 15B8  
                           l2678 1126                             l2758 171E  
                           l2688 117E                             l2698 126C  
                __end_of_BORtask 210C                             STR_1 100A  
                           STR_2 1073                             STR_3 106D  
                           STR_4 105D                             STR_5 1054  
                           STR_6 104A                             STR_7 1066  
                           u1510 18D2                             u1360 2270  
                           u1530 18FA                             u1610 1BD8  
                           u1508 18AA                             u1550 1920  
                           u1470 1882                             u1630 1BF2  
                           u1720 14D2                             u1528 18D4  
                           u1608 1BC2                             u1385 1F32  
                           u1490 18A8                             u1650 1C0E  
                           u1570 1BAA                             u1395 1F6C  
                           u1548 18FC                             u1628 1BDA  
                           u1590 1BC0                             u1568 1922  
                           u1488 1884                             u1648 1BF4  
                           u2457 1618                             u1770 1542  
                           u1738 14D4                             u2467 1670  
                           u1668 1C10                             u1588 1BAC  
                           u2477 19E6                             u1788 1544  
                ?_GetBackonTrack 0039                             _TMR2 000FCC  
                   __CFG_WDTPS$8 000000                 ??_initialization 001C  
                           _main 16A8            __end_of_check_sensors 192E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                    __CFG_BOREN$ON 000000  
                __end_of_PORtask 19DA                             prodh 000FF4  
                           prodl 000FF3       MotorControl@delta_velocity 002B  
                           start 0018                  __end_of_WDTtask 2186  
                   ___param_bank 000010                  __end_of_BusyADC 2276  
                __end_of_ReadADC 225A                  __end_of_OpenADC 1E3E  
                          ??_adc 0015           PID_LineFollowing@error 0035  
                __end_of___aldiv 186A                            ?_main 0001  
                __end_of___awdiv 1B10                            _T0CON 000FD5  
                ___awdiv@divisor 0025                            _T2CON 000FCA  
                __end_of___lwdiv 1E9A                  __end_of___lwmod 1EE6  
                ___awdiv@counter 0027               __size_of_RESETtask 001C  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TXSTA 000FAC                  __end_of_isWDTTO 20A4  
        __end_of_openPORTCforPWM 2268                            _isBOR 21D6  
                          _isPOR 20A4                            _gtrap 1D7E  
                          _putch 22A4                  __end_of_openLVD 21D6  
                   _TURN_TIME_ms 1007                       _ConvertADC 22A0  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 2202                     __end_of_main 178C  
                     _ReadTimer0 2226                 __end_of_OpenPWM1 2226  
               __end_of_OpenPWM2 1FD4                           ??_main 003E  
                  __activetblptr 000003                       _SetChanADC 21EC  
                      ??_BORtask 0014        MotorControl@speed_divider 002D  
                         ?_isBOR 0001              GetBackonTrack@error 0039  
                         ?_isPOR 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_gtrap 0001                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                 ___awdiv@dividend 0023  
                         ?_putch 0001                        ??_PORtask 0014  
                      ??_WDTtask 0014                       _OpenTimer0 210C  
                     _OpenTimer2 21A2                           _TMR0IF 007F92  
                         _SPBRGH 000FB0               __size_of_SetDCPWM1 003A  
             __size_of_SetDCPWM2 003A                        ??_BusyADC 000F  
                      ??_ReadADC 0011                           _LVtrap 212C  
              __end_of_RESETtask 21A2                        ??_OpenADC 0011  
                   ?_reset_codes 0001                 __end_of_high_isr 1C9C  
             __size_of_OpenUSART 0070                        ??___aldiv 0017  
                         ___wmul 2056                        ??___awdiv 0027  
                 __CFG_STVREN$ON 000000                 OpenTimer0@config 000F  
                      ??___lwdiv 0017                        ??___lwmod 0017  
             __size_of_SharpTurn 00A0                 OpenTimer2@config 000F  
                         clear_0 2208                 ___awdiv@quotient 0029  
                      ??_isWDTTO 000F                           _printf 1FD4  
               __end_of_set_leds 1C1E                        ??_openLVD 000F  
            __size_of_STKFULtask 001E                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_openPORTCforPWM 0001  
              ?_motors_brake_all 0001                           putch@c 0001  
             ??_motors_brake_all 0015                      ?_ConvertADC 0001  
                     __accesstop 0080          __end_of__initialization 220E  
                     adc@channel 0015                    ___rparam_used 000001  
          __end_of_set_osc_32MHz 202E                   __pcstackCOMRAM 0001  
                    ?_ReadTimer0 000F                    __end_of_isBOR 21EC  
                  __end_of_isPOR 20CA                    __end_of_gtrap 1DE0  
        _AllSensorsTriggered$470 0035                    __end_of_putch 22A6  
   __size_of_AllSensorsTriggered 0072                __end_of_SetDCPWM1 1F9C  
              __end_of_SetDCPWM2 1F62                    ??_StatusReset 000F  
                    ?_SetChanADC 0001                 ??_GetBackonTrack 003B  
                  ?_lvd_flag_set 0001                          ??_isBOR 000F  
                        ??_isPOR 000F                __end_of_OpenUSART 1D7E  
                        ??_gtrap 000F                          ??_putch 000F  
                    ?_OpenTimer0 0001                      ?_OpenTimer2 0001  
              __end_of_SharpTurn 1A7A                        ?_OpenPWM1 0001  
                      ?_OpenPWM2 0001                          ?_LVtrap 0001  
                  ?_MotorControl 002B               __end_of_D_CONSTANT 1003  
             __size_of_openPORTA 0006               __size_of_openPORTB 0006  
             __size_of_openPORTD 0006               __size_of_openPORTE 0006  
                        ?___wmul 001D                          _CCP1CON 000FBD  
                        _CCP2CON 000FBA                 WriteTimer0@timer 0011  
                  ??_WriteTimer0 0011              __size_of_ConvertADC 0004  
                        ?_printf 000F                          _BORtask 20EC  
                 ??_lvd_flag_set 000F                        ?_high_isr 0001  
            __end_of_StatusReset 2282              __size_of_ReadTimer0 0012  
                        _PORtask 192E               __end_of_I_CONSTANT 1005  
                        _WDTtask 216A                          _BusyADC 2268  
                        _ReadADC 224A                       ??_OpenPWM1 000F  
                     ??_OpenPWM2 000F                     ??_STKFULtask 0014  
                        _SeeLine 004C                   ??_MotorControl 002E  
                        _OpenADC 1DE0                  __size_of_LVtrap 0020  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        __Lparam 0000                        ?_set_leds 0001  
           __size_of_reset_codes 0042                          ___aldiv 178C  
                        ___awdiv 1A7A                  __size_of___wmul 0028  
                        ___lwdiv 1E3E                          ___lwmod 1E9A  
                   __psmallconst 1000                          __pcinit 2202  
                        _isWDTTO 207E                          __ramtop 1000  
            __size_of_OpenTimer0 0020              __size_of_OpenTimer2 001C  
                        __ptext0 16A8                          __ptext1 2276  
                        __ptext2 1B10                          __ptext3 2002  
                        __ptext4 1EE6                          __ptext5 207E  
                        __ptext6 20A4                          __ptext7 21D6  
                        __ptext8 216A                          __ptext9 214C  
                __size_of_printf 002E                        _T0CONbits 000FD5  
                   __size_of_adc 0028                        _T2CONbits 000FCA  
         __size_of_check_sensors 00C4                          _openLVD 21BE  
               ___aldiv@dividend 000F              __end_of_WriteTimer0 224A  
             __end_of_STKFULtask 216A               __end_of_P_CONSTANT 1007  
              __end_of_openPORTA 229A                __end_of_openPORTB 2294  
              __end_of_openPORTD 22A0                __end_of_openPORTE 2288  
                 OpenADC@config2 000F                       ??_high_isr 0001  
                 __pintcode_body 1C1E             end_of_initialization 220E  
                        int_func 1C1E                       ??_set_leds 000F  
                      _RCSTAbits 000FAB                          printf@c 0013  
                        printf@f 000F                 ___aldiv@quotient 0019  
                      _RESETtask 2186                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
        __size_of_initialization 0090                        _PORTCbits 000F82  
                      _PORTDbits 000F83                        _PORTEbits 000F84  
                 set_osc_32MHz@i 000F                      _StatusReset 227C  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                   ??_ConvertADC 000F      MotorControl@left_duty_cycle 0031  
              _PID_LineFollowing 107A    MotorControl@left_dir_modifier 002F  
            _AllSensorsTriggered 1C9C               ?_PID_LineFollowing 0035  
                      _TXSTAbits 000FAC                    _check_sensors 186A  
      __size_of_motors_brake_all 0022                   __end_of_LVtrap 214C  
           __end_of_lvd_flag_set 227C   MotorControl@right_dir_modifier 0030  
            ??_PID_LineFollowing 0037                     ??_ReadTimer0 0011  
                     ?_RESETtask 0001                   __end_of___wmul 207E  
                    _WriteTimer0 2238             ?_AllSensorsTriggered 0001  
             __end_of_ConvertADC 22A4                     ??_SetChanADC 000F  
                 __end_of_printf 2002              start_initialization 2202  
           __end_of_MotorControl 1550                        _SetDCPWM1 1F62  
                      _SetDCPWM2 1F28                  SetDCPWM1@DCycle 0013  
                    __end_of_adc 2056                  SetDCPWM2@DCycle 0013  
      __end_of_PID_LineFollowing 1384                     ??_OpenTimer0 000F  
                   ??_OpenTimer2 000F               __end_of_ReadTimer0 2238  
                      _OpenUSART 1D0E         __size_of_openPORTCforPWM 000E  
                 ?_check_sensors 0001                 __CFG_OSC$INTIO67 000000  
                       ??_LVtrap 0014                        _SharpTurn 19DA  
             __end_of_SetChanADC 2202                __size_of_OpenPWM1 0012  
              __size_of_OpenPWM2 0038                         ??___wmul 0021  
     __end_of_TURN_SPEED_DIVIDER 100A            ??_AllSensorsTriggered 0035  
                       ??_printf 0011                       gtrap@count 000F  
             __end_of_OpenTimer0 212C               __end_of_OpenTimer2 21BE  
             SharpTurn@direction 0036                      __pbssCOMRAM 0041  
                       ?_BORtask 0001                       ?_SetDCPWM1 000F  
                     ?_SetDCPWM2 000F                    PORtask@count1 0014  
                  PORtask@count2 0018           __size_of_set_osc_32MHz 002C  
                       ?_PORtask 0001                         ?_WDTtask 0001  
                     ?_OpenUSART 000F                __size_of_high_isr 1C94  
                       ?_BusyADC 0001                         ?_ReadADC 000F  
                     ?_SharpTurn 0001                OpenADC@portconfig 0010  
                       ?_OpenADC 000F                 ___lwdiv@dividend 0013  
                      __pintcode 0008                      ??_RESETtask 0014  
                       ?___aldiv 000F                         ?___awdiv 0023  
                 _initialization 1B10                __size_of_set_leds 007E  
                       ?___lwdiv 0013                         ?___lwmod 0013  
                       ?_isWDTTO 0001                      __smallconst 1000  
              WriteTimer0@timer0 000F               PID_LineFollowing@D 0044  
                       ?_openLVD 0001          SharpTurn@delta_velocity 0037  
     __size_of_PID_LineFollowing 030A                   __size_of_isBOR 0016  
               ___lwdiv@quotient 0017                   __size_of_isPOR 0026  
                 __size_of_gtrap 0062                   __size_of_putch 0002  
                ??_check_sensors 0016                  ___aldiv@divisor 0013  
                      _openPORTA 2294                        _openPORTB 228E  
                      _openPORTD 229A                        _openPORTE 2282  
                ___aldiv@counter 0017                   ___wmul@product 0021  
                  OpenADC@config 0013            __size_of_lvd_flag_set 0006  
        __size_of_GetBackonTrack 0158                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                  ??_reset_codes 001C                 _motors_brake_all 20CA  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
         __end_of_initialization 1BA0                         _RCONbits 000FD0  
              ??_openPORTCforPWM 000F                    _set_osc_32MHz 2002  
                      main@F4192 0041                      _HLVDCONbits 000FD2  
                      _threshold 004A            __size_of_MotorControl 01CC  
                     _ADCON0bits 000FC2                ___wmul@multiplier 001D  
                   ?_StatusReset 0001                  GetBackonTrack@i 003D  
                      main@error 003E     MotorControl@right_duty_cycle 0033  
                    ??_SetDCPWM1 0011                      ??_SetDCPWM2 0011  
               __size_of_BORtask 0020                     _lvd_flag_set 2276  
               __size_of_PORtask 00AC                      ??_OpenUSART 0011  
             SetDCPWM1@dutycycle 000F                       ?_openPORTA 0001  
                     ?_openPORTB 0001                       ?_openPORTD 0001  
                     ?_openPORTE 0001                 __size_of_WDTtask 001C  
                OpenUSART@config 0011                         _OpenPWM1 2214  
                       _OpenPWM2 1F9C  PID_LineFollowing@delta_velocity 0046  
               __size_of_BusyADC 000E                      ??_SharpTurn 0035  
               __size_of_ReadADC 0010                         __Hrparam 0000  
               __size_of_OpenADC 005E                     _MotorControl 1384  
                ?_initialization 0001                         __Lrparam 0000  
             SetDCPWM2@dutycycle 000F                   ?_set_osc_32MHz 0001  
               __size_of___aldiv 00DE              __end_of_reset_codes 1F28  
               __size_of___awdiv 0096                 __size_of___lwdiv 005C  
               __size_of___lwmod 004C                     ?_WriteTimer0 000F  
                 OpenPWM2@ccp2mx 0010                 __size_of_isWDTTO 0026  
                 OpenPWM1@period 000F                   OpenPWM2@period 000F  
                ___lwdiv@divisor 0015                 __size_of_openLVD 0018  
                ___lwdiv@counter 0019                         __ptext10 2186  
                       __ptext11 192E                         __ptext20 1D0E  
                       __ptext12 20EC                         __ptext21 21A2  
                       __ptext13 227C                         __ptext30 212C  
                       __ptext22 1F9C                         __ptext14 2282  
                       __ptext31 1FD4                         __ptext23 2214  
                       __ptext15 2288                         __ptext40 20CA  
                       __ptext32 22A4                         __ptext24 1DE0  
                       __ptext16 225A                         __ptext41 186A  
                       __ptext33 229A                         __ptext25 107A  
                       __ptext17 228E                         __ptext50 1A7A  
                       __ptext42 202E                         __ptext34 1D7E  
                       __ptext26 1E9A                         __ptext18 2294  
                       __ptext51 1F28                         __ptext43 21EC  
                       __ptext35 1550                         __ptext27 1E3E  
                       __ptext19 21BE                         __ptext52 1F62  
                       __ptext44 224A                         __ptext36 19DA  
                       __ptext28 178C                         __ptext45 22A0  
                       __ptext37 2226                         __ptext29 210C  
                       __ptext46 2268                         __ptext38 1C9C  
                       __ptext47 2238                         __ptext39 1BA0  
                       __ptext48 1384                         __ptext49 2056  
                       _high_isr 0008                    __size_of_main 00E4  
                       _lvd_flag 004D                         _set_leds 1BA0  
           __end_of_TURN_TIME_ms 1009                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                       _D_CONSTANT 1001  
                 OpenUSART@spbrg 000F               _TURN_SPEED_DIVIDER 1009  
                       intlevel2 0000                      ??_openPORTA 000F  
                    ??_openPORTB 000F                      ??_openPORTD 000F  
                    ??_openPORTE 000F                 ___lwmod@dividend 0013  
                 _GetBackonTrack 1550                _openPORTCforUSART 2288  
              SetChanADC@channel 0010                  ??_set_osc_32MHz 000F  
                    _reset_codes 1EE6                       _OSCCONbits 000FD3  
             ?_openPORTCforUSART 0001      __end_of_AllSensorsTriggered 1D0E  
                     _I_CONSTANT 1003                         printf@ap 0011  
            ??_openPORTCforUSART 000F                  ___lwmod@divisor 0015  
                ___lwmod@counter 0017         __end_of_motors_brake_all 20EC  
                   ___aldiv@sign 0018             __size_of_StatusReset 0006  
         __end_of_GetBackonTrack 16A8                  _openPORTCforPWM 225A  
      __end_of_openPORTCforUSART 228E                       _STKFULtask 214C  
                     _P_CONSTANT 1005  
