

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 06 12:40:15 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	opt stack 0
    69  001000  00                 	db	0
    70  001001                     _D_CONSTANT:
    71                           	opt stack 0
    72  001001  03E8               	dw	1000
    73  001003                     __end_of_D_CONSTANT:
    74                           	opt stack 0
    75  001003                     _I_CONSTANT:
    76                           	opt stack 0
    77  001003  000A               	dw	10
    78  001005                     __end_of_I_CONSTANT:
    79                           	opt stack 0
    80  001005                     _P_CONSTANT:
    81                           	opt stack 0
    82  001005  0096               	dw	150
    83  001007                     __end_of_P_CONSTANT:
    84                           	opt stack 0
    85  001007                     _TURN_TIME_ms:
    86                           	opt stack 0
    87  001007  0320               	dw	800
    88  001009                     __end_of_TURN_TIME_ms:
    89                           	opt stack 0
    90  001009                     _TURN_SPEED_DIVIDER:
    91                           	opt stack 0
    92  001009  00                 	db	0
    93  00100A                     __end_of_TURN_SPEED_DIVIDER:
    94                           	opt stack 0
    95  0000                     _ADCON0	set	4034
    96  0000                     _ADCON0bits	set	4034
    97  0000                     _ADCON1	set	4033
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADRESH	set	4036
   100  0000                     _ADRESL	set	4035
   101  0000                     _CCP1CON	set	4029
   102  0000                     _CCP2CON	set	4026
   103  0000                     _CCPR1L	set	4030
   104  0000                     _CCPR2L	set	4027
   105  0000                     _HLVDCONbits	set	4050
   106  0000                     _INTCONbits	set	4082
   107  0000                     _IPR2bits	set	4002
   108  0000                     _OSCCONbits	set	4051
   109  0000                     _OSCTUNEbits	set	3995
   110  0000                     _PIE1bits	set	3997
   111  0000                     _PIE2bits	set	4000
   112  0000                     _PIR1bits	set	3998
   113  0000                     _PIR2bits	set	4001
   114  0000                     _PORTCbits	set	3970
   115  0000                     _PORTD	set	3971
   116  0000                     _PORTDbits	set	3971
   117  0000                     _PORTEbits	set	3972
   118  0000                     _PR2	set	4043
   119  0000                     _RCONbits	set	4048
   120  0000                     _RCSTA	set	4011
   121  0000                     _RCSTAbits	set	4011
   122  0000                     _SPBRG	set	4015
   123  0000                     _SPBRGH	set	4016
   124  0000                     _STKPTRbits	set	4092
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _T2CON	set	4042
   128  0000                     _T2CONbits	set	4042
   129  0000                     _TMR0H	set	4055
   130  0000                     _TMR0L	set	4054
   131  0000                     _TMR2	set	4044
   132  0000                     _TRISA	set	3986
   133  0000                     _TRISB	set	3987
   134  0000                     _TRISBbits	set	3987
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISCbits	set	3988
   137  0000                     _TRISD	set	3989
   138  0000                     _TRISE	set	3990
   139  0000                     _TXSTA	set	4012
   140  0000                     _TXSTAbits	set	4012
   141  0000                     _TMR0IF	set	32658
   142  00100A                     STR_7:
   143  00100A  0A                 	db	10
   144  00100B  0D                 	db	13
   145  00100C  4B                 	db	75	;'K'
   146  00100D  77                 	db	119	;'w'
   147  00100E  61                 	db	97	;'a'
   148  00100F  6E                 	db	110	;'n'
   149  001010  74                 	db	116	;'t'
   150  001011  6C                 	db	108	;'l'
   151  001012  65                 	db	101	;'e'
   152  001013  6E                 	db	110	;'n'
   153  001014  20                 	db	32
   154  001015  41                 	db	65	;'A'
   155  001016  50                 	db	80	;'P'
   156  001017  53                 	db	83	;'S'
   157  001018  43                 	db	67	;'C'
   158  001019  31                 	db	49	;'1'
   159  00101A  32                 	db	50	;'2'
   160  00101B  39                 	db	57	;'9'
   161  00101C  39                 	db	57	;'9'
   162  00101D  20                 	db	32
   163  00101E  73                 	db	115	;'s'
   164  00101F  69                 	db	105	;'i'
   165  001020  6D                 	db	109	;'m'
   166  001021  70                 	db	112	;'p'
   167  001022  6C                 	db	108	;'l'
   168  001023  65                 	db	101	;'e'
   169  001024  20                 	db	32
   170  001025  63                 	db	99	;'c'
   171  001026  75                 	db	117	;'u'
   172  001027  72                 	db	114	;'r'
   173  001028  76                 	db	118	;'v'
   174  001029  65                 	db	101	;'e'
   175  00102A  20                 	db	32
   176  00102B  66                 	db	102	;'f'
   177  00102C  6F                 	db	111	;'o'
   178  00102D  6C                 	db	108	;'l'
   179  00102E  6C                 	db	108	;'l'
   180  00102F  6F                 	db	111	;'o'
   181  001030  77                 	db	119	;'w'
   182  001031  65                 	db	101	;'e'
   183  001032  72                 	db	114	;'r'
   184  001033  20                 	db	32
   185  001034  2D                 	db	45
   186  001035  2D                 	db	45
   187  001036  20                 	db	32
   188  001037  77                 	db	119	;'w'
   189  001038  69                 	db	105	;'i'
   190  001039  74                 	db	116	;'t'
   191  00103A  68                 	db	104	;'h'
   192  00103B  20                 	db	32
   193  00103C  65                 	db	101	;'e'
   194  00103D  72                 	db	114	;'r'
   195  00103E  72                 	db	114	;'r'
   196  00103F  6F                 	db	111	;'o'
   197  001040  72                 	db	114	;'r'
   198  001041  20                 	db	32
   199  001042  63                 	db	99	;'c'
   200  001043  6F                 	db	111	;'o'
   201  001044  64                 	db	100	;'d'
   202  001045  65                 	db	101	;'e'
   203  001046  73                 	db	115	;'s'
   204  001047  0A                 	db	10
   205  001048  0D                 	db	13
   206  001049  00                 	db	0
   207  00104A                     STR_5:
   208  00104A  20                 	db	32
   209  00104B  3C                 	db	60	;'<'
   210  00104C  72                 	db	114	;'r'
   211  00104D  65                 	db	101	;'e'
   212  00104E  73                 	db	115	;'s'
   213  00104F  65                 	db	101	;'e'
   214  001050  74                 	db	116	;'t'
   215  001051  3E                 	db	62	;'>'
   216  001052  20                 	db	32
   217  001053  00                 	db	0
   218  001054                     STR_4:
   219  001054  3C                 	db	60	;'<'
   220  001055  53                 	db	83	;'S'
   221  001056  54                 	db	84	;'T'
   222  001057  4B                 	db	75	;'K'
   223  001058  46                 	db	70	;'F'
   224  001059  55                 	db	85	;'U'
   225  00105A  4C                 	db	76	;'L'
   226  00105B  3E                 	db	62	;'>'
   227  00105C  00                 	db	0
   228  00105D                     STR_3:
   229  00105D  3C                 	db	60	;'<'
   230  00105E  57                 	db	87	;'W'
   231  00105F  44                 	db	68	;'D'
   232  001060  54                 	db	84	;'T'
   233  001061  20                 	db	32
   234  001062  54                 	db	84	;'T'
   235  001063  4F                 	db	79	;'O'
   236  001064  3E                 	db	62	;'>'
   237  001065  00                 	db	0
   238  001066                     STR_6:
   239  001066  5C                 	db	92	;'\'
   240  001067  3C                 	db	60	;'<'
   241  001068  4C                 	db	76	;'L'
   242  001069  56                 	db	86	;'V'
   243  00106A  44                 	db	68	;'D'
   244  00106B  3E                 	db	62	;'>'
   245  00106C  00                 	db	0
   246  00106D                     STR_2:
   247  00106D  3C                 	db	60	;'<'
   248  00106E  42                 	db	66	;'B'
   249  00106F  4F                 	db	79	;'O'
   250  001070  52                 	db	82	;'R'
   251  001071  3E                 	db	62	;'>'
   252  001072  00                 	db	0
   253  001073                     STR_1:
   254  001073  3C                 	db	60	;'<'
   255  001074  50                 	db	80	;'P'
   256  001075  4F                 	db	79	;'O'
   257  001076  52                 	db	82	;'R'
   258  001077  3E                 	db	62	;'>'
   259  001078  00                 	db	0
   260                           
   261                           ; #config settings
   262  001079  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	cinit
   265  0020D0                     __pcinit:
   266                           	opt stack 0
   267  0020D0                     start_initialization:
   268                           	opt stack 0
   269  0020D0                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Clear objects allocated to COMRAM (19 bytes)
   273  0020D0  EE00  F03A         	lfsr	0,__pbssCOMRAM
   274  0020D4  0E13               	movlw	19
   275  0020D6                     clear_0:
   276  0020D6  6AEE               	clrf	postinc0,c
   277  0020D8  06E8               	decf	wreg,f,c
   278  0020DA  E1FD               	bnz	clear_0
   279  0020DC                     end_of_initialization:
   280                           	opt stack 0
   281  0020DC                     __end_of__initialization:
   282                           	opt stack 0
   283  0020DC  0100               	movlb	0
   284  0020DE  EF0A  F00B         	goto	_main	;jump to C main() function
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	bssCOMRAM
   289  00003A                     __pbssCOMRAM:
   290                           	opt stack 0
   291  00003A                     main@F4197:
   292                           	opt stack 0
   293  00003A                     	ds	3
   294  00003D                     PID_LineFollowing@D:
   295                           	opt stack 0
   296  00003D                     	ds	2
   297  00003F                     PID_LineFollowing@delta_velocity:
   298                           	opt stack 0
   299  00003F                     	ds	2
   300  000041                     _D_time:
   301                           	opt stack 0
   302  000041                     	ds	2
   303  000043                     _I:
   304                           	opt stack 0
   305  000043                     	ds	2
   306  000045                     _I_time:
   307                           	opt stack 0
   308  000045                     	ds	2
   309  000047                     _threshold:
   310                           	opt stack 0
   311  000047                     	ds	2
   312  000049                     _CCW_rotation_flag:
   313                           	opt stack 0
   314  000049                     	ds	1
   315  00004A                     _CW_rotation_flag:
   316                           	opt stack 0
   317  00004A                     	ds	1
   318  00004B                     _SeeLine:
   319                           	opt stack 0
   320  00004B                     	ds	1
   321  00004C                     _lvd_flag:
   322                           	opt stack 0
   323  00004C                     	ds	1
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           
   327                           	psect	cstackCOMRAM
   328  000001                     __pcstackCOMRAM:
   329                           	opt stack 0
   330  000001                     ??_high_isr:
   331  000001                     
   332                           ; 1 bytes @ 0x0
   333  000001                     	ds	14
   334  00000F                     ??_SetChanADC:
   335  00000F                     ??_set_leds:
   336  00000F                     ?_ReadADC:
   337                           	opt stack 0
   338  00000F                     ?_printf:
   339                           	opt stack 0
   340  00000F                     ?_ReadTimer0:
   341                           	opt stack 0
   342  00000F                     ?___lwdiv:
   343                           	opt stack 0
   344  00000F                     OpenADC@config2:
   345                           	opt stack 0
   346  00000F                     OpenPWM1@period:
   347                           	opt stack 0
   348  00000F                     OpenPWM2@period:
   349                           	opt stack 0
   350  00000F                     OpenTimer0@config:
   351                           	opt stack 0
   352  00000F                     OpenTimer2@config:
   353                           	opt stack 0
   354  00000F                     set_osc_32MHz@i:
   355                           	opt stack 0
   356  00000F                     printf@f:
   357                           	opt stack 0
   358  00000F                     SetDCPWM1@dutycycle:
   359                           	opt stack 0
   360  00000F                     SetDCPWM2@dutycycle:
   361                           	opt stack 0
   362  00000F                     WriteTimer0@timer0:
   363                           	opt stack 0
   364  00000F                     OpenUSART@spbrg:
   365                           	opt stack 0
   366  00000F                     ___lwdiv@dividend:
   367                           	opt stack 0
   368  00000F                     gtrap@count:
   369                           	opt stack 0
   370                           
   371                           ; 4 bytes @ 0xE
   372  00000F                     	ds	1
   373  000010                     OpenADC@portconfig:
   374                           	opt stack 0
   375  000010                     SetChanADC@channel:
   376                           	opt stack 0
   377  000010                     OpenPWM2@ccp2mx:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0xF
   381  000010                     	ds	1
   382  000011                     ??_OpenADC:
   383  000011                     ??_SetDCPWM1:
   384  000011                     ??_SetDCPWM2:
   385  000011                     ??_ReadADC:
   386  000011                     OpenUSART@config:
   387                           	opt stack 0
   388  000011                     printf@ap:
   389                           	opt stack 0
   390  000011                     ReadTimer0@timer:
   391                           	opt stack 0
   392  000011                     WriteTimer0@timer:
   393                           	opt stack 0
   394  000011                     ___lwdiv@divisor:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x10
   398  000011                     	ds	2
   399  000013                     ?_adc:
   400                           	opt stack 0
   401  000013                     printf@c:
   402                           	opt stack 0
   403  000013                     OpenADC@config:
   404                           	opt stack 0
   405  000013                     SetDCPWM1@DCycle:
   406                           	opt stack 0
   407  000013                     SetDCPWM2@DCycle:
   408                           	opt stack 0
   409  000013                     ___lwdiv@quotient:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x12
   413  000013                     	ds	1
   414  000014                     PORtask@count1:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x13
   418  000014                     	ds	1
   419  000015                     adc@channel:
   420                           	opt stack 0
   421  000015                     ___lwdiv@counter:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x14
   425  000015                     	ds	1
   426  000016                     ??_check_sensors:
   427  000016                     ?___wmul:
   428                           	opt stack 0
   429  000016                     ___wmul@multiplier:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x15
   433  000016                     	ds	2
   434  000018                     ___wmul@multiplicand:
   435                           	opt stack 0
   436  000018                     PORtask@count2:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x17
   440  000018                     	ds	2
   441  00001A                     ___wmul@product:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x19
   445  00001A                     	ds	2
   446  00001C                     ?___awdiv:
   447                           	opt stack 0
   448  00001C                     ___awdiv@dividend:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x1B
   452  00001C                     	ds	2
   453  00001E                     ___awdiv@divisor:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x1D
   457  00001E                     	ds	2
   458  000020                     ___awdiv@counter:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x1F
   462  000020                     	ds	1
   463  000021                     ___awdiv@sign:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x20
   467  000021                     	ds	1
   468  000022                     ___awdiv@quotient:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x21
   472  000022                     	ds	2
   473  000024                     MotorControl@delta_velocity:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x23
   477  000024                     	ds	2
   478  000026                     MotorControl@speed_divider:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x25
   482  000026                     	ds	1
   483  000027                     ??_MotorControl:
   484                           
   485                           ; 0 bytes @ 0x26
   486  000027                     	ds	1
   487  000028                     MotorControl@left_dir_modifier:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x27
   491  000028                     	ds	1
   492  000029                     MotorControl@right_dir_modifier:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x28
   496  000029                     	ds	1
   497  00002A                     MotorControl@left_duty_cycle:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x29
   501  00002A                     	ds	2
   502  00002C                     MotorControl@right_duty_cycle:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x2B
   506  00002C                     	ds	2
   507  00002E                     ??_SharpTurn:
   508  00002E                     PID_LineFollowing@error:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x2D
   512  00002E                     	ds	1
   513  00002F                     SharpTurn@direction:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x2E
   517  00002F                     	ds	1
   518  000030                     ??_PID_LineFollowing:
   519  000030                     SharpTurn@delta_velocity:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x2F
   523  000030                     	ds	2
   524  000032                     GetBackonTrack@error:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x31
   528  000032                     	ds	2
   529  000034                     ??_GetBackonTrack:
   530                           
   531                           ; 0 bytes @ 0x33
   532  000034                     	ds	1
   533  000035                     GetBackonTrack@i:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x34
   537  000035                     	ds	2
   538  000037                     main@error:
   539                           	opt stack 0
   540                           
   541                           ; 3 bytes @ 0x36
   542  000037                     	ds	3
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           
   546 ;;
   547 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   548 ;;
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 29 in file "../Robot Files/main3.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  error           3   54[COMRAM] char [3]
   556 ;; Return value:  Size  Location     Type
   557 ;;		None               void
   558 ;; Registers used:
   559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;Total ram usage:        3 bytes
   570 ;; Hardware stack levels required when called:    6
   571 ;; This function calls:
   572 ;;		_AllSensorsTriggered
   573 ;;		_FilterNearbyTrack
   574 ;;		_GetBackonTrack
   575 ;;		_LVtrap
   576 ;;		_OpenTimer0
   577 ;;		_PID_LineFollowing
   578 ;;		_WriteTimer0
   579 ;;		_check_sensors
   580 ;;		_initialization
   581 ;;		_lvd_flag_set
   582 ;;		_printf
   583 ;;		_set_leds
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  001614                     __ptext0:
   591                           	opt stack 0
   592  001614                     _main:
   593                           	opt stack 25
   594                           
   595                           ;main3.c: 31: signed char error[3]={0};
   596                           
   597                           ;incstack = 0
   598  001614  C03A  F037         	movff	main@F4197,main@error
   599  001618  C03B  F038         	movff	main@F4197+1,main@error+1
   600  00161C  C03C  F039         	movff	main@F4197+2,main@error+2
   601                           
   602                           ;main3.c: 34: initialization();
   603  001620  EC04  F00D         	call	_initialization	;wreg free
   604                           
   605                           ;main3.c: 39: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\
      +                          r");
   606  001624  0E0A               	movlw	low STR_7
   607  001626  6E0F               	movwf	printf@f,c
   608  001628  0E10               	movlw	high STR_7
   609  00162A  6E10               	movwf	printf@f+1,c
   610  00162C  EC41  F00F         	call	_printf	;wreg free
   611  001630  0004               	clrwdt		;# 
   612                           
   613                           ;main3.c: 41: threshold = 575u;
   614  001632  0E02               	movlw	2
   615  001634  6E48               	movwf	_threshold+1,c
   616  001636  0E3F               	movlw	63
   617  001638  6E47               	movwf	_threshold,c
   618                           
   619                           ;main3.c: 45: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   620  00163A  0E16               	movlw	22
   621  00163C  ECDD  F00F         	call	_OpenTimer0
   622                           
   623                           ;main3.c: 46: WriteTimer0(0);
   624  001640  0E00               	movlw	0
   625  001642  6E10               	movwf	WriteTimer0@timer0+1,c
   626  001644  0E00               	movlw	0
   627  001646  6E0F               	movwf	WriteTimer0@timer0,c
   628  001648  EC83  F010         	call	_WriteTimer0	;wreg free
   629                           
   630                           ;main3.c: 47: TMR0IF = 0;
   631  00164C  94F2               	bcf	intcon,2,c	;volatile
   632  00164E  D000               	goto	l2685
   633  001650                     l2685:
   634                           
   635                           ;main3.c: 50: {
   636                           ;main3.c: 51: check_sensors();
   637  001650  ECAC  F00B         	call	_check_sensors	;wreg free
   638                           
   639                           ;main3.c: 53: FilterNearbyTrack();
   640  001654  ECFD  F00F         	call	_FilterNearbyTrack	;wreg free
   641                           
   642                           ;main3.c: 60: switch(SeeLine.B)
   643  001658  D037               	goto	l2727
   644  00165A                     l2689:
   645                           
   646                           ;main3.c: 63: error[2]=1; break;
   647  00165A  0E01               	movlw	1
   648  00165C  D033               	goto	L7
   649  00165E                     l2691:
   650                           
   651                           ;main3.c: 65: error[2]=2; break;
   652  00165E  0E02               	movlw	2
   653  001660  D031               	goto	L7
   654  001662                     l2693:
   655                           
   656                           ;main3.c: 67: error[2]=3; break;
   657  001662  0E03               	movlw	3
   658  001664  D02F               	goto	L7
   659  001666                     l2695:
   660                           
   661                           ;main3.c: 69: error[2]=4; break;
   662  001666  0E04               	movlw	4
   663  001668  D02D               	goto	L7
   664  00166A                     l314:
   665                           
   666                           ;main3.c: 71: error[2]=-1; break;
   667  00166A  6839               	setf	main@error+2,c
   668  00166C  D05A               	goto	l310
   669  00166E                     l2697:
   670                           
   671                           ;main3.c: 73: error[2]=-2; break;
   672  00166E  0EFE               	movlw	254
   673  001670  D029               	goto	L7
   674  001672                     l2699:
   675                           
   676                           ;main3.c: 75: error[2]=-3; break;
   677  001672  0EFD               	movlw	253
   678  001674  D027               	goto	L7
   679  001676                     l2701:
   680                           
   681                           ;main3.c: 77: error[2]=-4; break;
   682  001676  0EFC               	movlw	252
   683  001678  D025               	goto	L7
   684                           
   685                           ;main3.c: 78: case 0b00111u:
   686  00167A  D000               	goto	l2703
   687  00167C                     l2703:
   688                           
   689                           ;main3.c: 79: case 0b01111u:
   690                           ;main3.c: 80: {
   691                           ;main3.c: 81: WriteTimer0(32768);
   692  00167C  0E80               	movlw	128
   693  00167E  6E10               	movwf	WriteTimer0@timer0+1,c
   694  001680  0E00               	movlw	0
   695  001682  6E0F               	movwf	WriteTimer0@timer0,c
   696  001684  EC83  F010         	call	_WriteTimer0	;wreg free
   697                           
   698                           ;main3.c: 82: TMR0IF = 0;
   699  001688  94F2               	bcf	intcon,2,c	;volatile
   700                           
   701                           ;main3.c: 83: CW_rotation_flag = 1;
   702  00168A  0E01               	movlw	1
   703  00168C  6E4A               	movwf	_CW_rotation_flag,c
   704                           
   705                           ;main3.c: 84: CCW_rotation_flag = 0;
   706  00168E  0E00               	movlw	0
   707  001690  6E49               	movwf	_CCW_rotation_flag,c
   708                           
   709                           ;main3.c: 85: }break;
   710  001692  D047               	goto	l310
   711                           
   712                           ;main3.c: 86: case 0b11100u:
   713  001694  D000               	goto	l2711
   714  001696                     l2711:
   715                           
   716                           ;main3.c: 87: case 0b11110u:
   717                           ;main3.c: 88: {
   718                           ;main3.c: 89: WriteTimer0(32768);
   719  001696  0E80               	movlw	128
   720  001698  6E10               	movwf	WriteTimer0@timer0+1,c
   721  00169A  0E00               	movlw	0
   722  00169C  6E0F               	movwf	WriteTimer0@timer0,c
   723  00169E  EC83  F010         	call	_WriteTimer0	;wreg free
   724                           
   725                           ;main3.c: 90: TMR0IF = 0;
   726  0016A2  94F2               	bcf	intcon,2,c	;volatile
   727                           
   728                           ;main3.c: 91: CCW_rotation_flag = 1;
   729  0016A4  0E01               	movlw	1
   730  0016A6  6E49               	movwf	_CCW_rotation_flag,c
   731                           
   732                           ;main3.c: 92: CW_rotation_flag = 0;
   733  0016A8  0E00               	movlw	0
   734  0016AA  6E4A               	movwf	_CW_rotation_flag,c
   735                           
   736                           ;main3.c: 93: }break;
   737  0016AC  D03A               	goto	l310
   738  0016AE                     l2719:
   739                           
   740                           ;main3.c: 95: GetBackonTrack(error); break;
   741  0016AE  0E37               	movlw	low main@error
   742  0016B0  6E32               	movwf	GetBackonTrack@error,c
   743  0016B2  0E00               	movlw	high main@error
   744  0016B4  6E33               	movwf	GetBackonTrack@error+1,c
   745  0016B6  EC4F  F00A         	call	_GetBackonTrack	;wreg free
   746  0016BA  D033               	goto	l310
   747  0016BC                     l2721:
   748                           
   749                           ;main3.c: 97: AllSensorsTriggered(); break;
   750  0016BC  ECCA  F00D         	call	_AllSensorsTriggered	;wreg free
   751  0016C0  D030               	goto	l310
   752  0016C2                     l2723:
   753                           
   754                           ;main3.c: 99: error[2]=0; break;
   755  0016C2  0E00               	movlw	0
   756  0016C4                     L7:
   757  0016C4  6E39               	movwf	main@error+2,c
   758                           
   759                           ;main3.c: 100: }
   760  0016C6  D02D               	goto	l310
   761  0016C8                     l2727:
   762  0016C8  504B               	movf	_SeeLine,w,c
   763  0016CA  0B1F               	andlw	31
   764                           
   765                           ; Switch size 1, requested type "space"
   766                           ; Number of cases is 14, Range of values is 0 to 31
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte           43    22 (average)
   770                           ;	Chosen strategy is simple_byte
   771  0016CC  0A00               	xorlw	0	; case 0
   772  0016CE  B4D8               	btfsc	status,2,c
   773  0016D0  D7EE               	goto	l2719
   774  0016D2  0A01               	xorlw	1	; case 1
   775  0016D4  B4D8               	btfsc	status,2,c
   776  0016D6  D7C7               	goto	l2695
   777  0016D8  0A03               	xorlw	3	; case 2
   778  0016DA  B4D8               	btfsc	status,2,c
   779  0016DC  D7C0               	goto	l2691
   780  0016DE  0A01               	xorlw	1	; case 3
   781  0016E0  B4D8               	btfsc	status,2,c
   782  0016E2  D7BF               	goto	l2693
   783  0016E4  0A05               	xorlw	5	; case 6
   784  0016E6  B4D8               	btfsc	status,2,c
   785  0016E8  D7B8               	goto	l2689
   786  0016EA  0A01               	xorlw	1	; case 7
   787  0016EC  B4D8               	btfsc	status,2,c
   788  0016EE  D7C6               	goto	l2703
   789  0016F0  0A0F               	xorlw	15	; case 8
   790  0016F2  B4D8               	btfsc	status,2,c
   791  0016F4  D7BC               	goto	l2697
   792  0016F6  0A04               	xorlw	4	; case 12
   793  0016F8  B4D8               	btfsc	status,2,c
   794  0016FA  D7B7               	goto	l314
   795  0016FC  0A03               	xorlw	3	; case 15
   796  0016FE  B4D8               	btfsc	status,2,c
   797  001700  D7BD               	goto	l2703
   798  001702  0A1F               	xorlw	31	; case 16
   799  001704  B4D8               	btfsc	status,2,c
   800  001706  D7B7               	goto	l2701
   801  001708  0A08               	xorlw	8	; case 24
   802  00170A  B4D8               	btfsc	status,2,c
   803  00170C  D7B2               	goto	l2699
   804  00170E  0A04               	xorlw	4	; case 28
   805  001710  B4D8               	btfsc	status,2,c
   806  001712  D7C1               	goto	l2711
   807  001714  0A02               	xorlw	2	; case 30
   808  001716  B4D8               	btfsc	status,2,c
   809  001718  D7BE               	goto	l2711
   810  00171A  0A01               	xorlw	1	; case 31
   811  00171C  B4D8               	btfsc	status,2,c
   812  00171E  D7CE               	goto	l2721
   813  001720  D7D0               	goto	l2723
   814  001722                     l310:
   815                           
   816                           ;main3.c: 102: if(TMR0IF)
   817  001722  A4F2               	btfss	intcon,2,c	;volatile
   818  001724  D006               	goto	l2733
   819                           
   820                           ;main3.c: 103: {
   821                           ;main3.c: 104: CW_rotation_flag = 0;
   822  001726  0E00               	movlw	0
   823  001728  6E4A               	movwf	_CW_rotation_flag,c
   824                           
   825                           ;main3.c: 105: CCW_rotation_flag = 0;
   826  00172A  0E00               	movlw	0
   827  00172C  6E49               	movwf	_CCW_rotation_flag,c
   828                           
   829                           ;main3.c: 106: TMR0IF = 0;
   830  00172E  94F2               	bcf	intcon,2,c	;volatile
   831  001730  D000               	goto	l2733
   832  001732                     l2733:
   833                           
   834                           ;main3.c: 107: }
   835                           ;main3.c: 109: set_leds();
   836  001732  EC4C  F00D         	call	_set_leds	;wreg free
   837                           
   838                           ;main3.c: 110: PID_LineFollowing(error);
   839  001736  0E37               	movlw	low main@error
   840  001738  6E2E               	movwf	PID_LineFollowing@error,c
   841  00173A  0E00               	movlw	high main@error
   842  00173C  6E2F               	movwf	PID_LineFollowing@error+1,c
   843  00173E  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   844  001742  0004               	clrwdt		;# 
   845                           
   846                           ;main3.c: 113: if(lvd_flag_set()) LVtrap();
   847  001744  ECA2  F010         	call	_lvd_flag_set	;wreg free
   848  001748  0900               	iorlw	0
   849  00174A  B4D8               	btfsc	status,2,c
   850  00174C  D781               	goto	l2685
   851  00174E  ECED  F00F         	call	_LVtrap	;wreg free
   852  001752  D77E               	goto	l2685
   853  001754  EF0C  F000         	goto	start
   854  001758                     __end_of_main:
   855                           	opt stack 0
   856                           intcon	equ	0xFF2
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           status	equ	0xFD8
   860                           
   861 ;; *************** function _lvd_flag_set *****************
   862 ;; Defined at:
   863 ;;		line 47 in file "../Robot Files/interrupts.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      unsigned char 
   870 ;; Registers used:
   871 ;;		wreg, status,2
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text1
   892  002144                     __ptext1:
   893                           	opt stack 0
   894  002144                     _lvd_flag_set:
   895                           	opt stack 29
   896                           
   897                           ;interrupts.c: 49: return lvd_flag;
   898                           
   899                           ;incstack = 0
   900  002144  504C               	movf	_lvd_flag,w,c
   901  002146  D000               	goto	l205
   902  002148                     l205:
   903  002148  0012               	return		;funcret
   904  00214A                     __end_of_lvd_flag_set:
   905                           	opt stack 0
   906                           intcon	equ	0xFF2
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function _initialization *****************
   912 ;; Defined at:
   913 ;;		line 65 in file "../Robot Files/sumovore.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;		None               void
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    5
   934 ;; This function calls:
   935 ;;		_OpenADC
   936 ;;		_OpenPWM1
   937 ;;		_OpenPWM2
   938 ;;		_OpenTimer2
   939 ;;		_OpenUSART
   940 ;;		_SetDCPWM1
   941 ;;		_SetDCPWM2
   942 ;;		_openLVD
   943 ;;		_openPORTA
   944 ;;		_openPORTB
   945 ;;		_openPORTCforPWM
   946 ;;		_openPORTCforUSART
   947 ;;		_openPORTD
   948 ;;		_openPORTE
   949 ;;		_reset_codes
   950 ;;		_set_osc_32MHz
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text2
   957  001A08                     __ptext2:
   958                           	opt stack 0
   959  001A08                     _initialization:
   960                           	opt stack 25
   961                           
   962                           ;sumovore.c: 67: SeeLine.B = 0;
   963                           
   964                           ;incstack = 0
   965  001A08  904B               	bcf	_SeeLine,0,c
   966  001A0A  924B               	bcf	_SeeLine,1,c
   967  001A0C  944B               	bcf	_SeeLine,2,c
   968  001A0E  964B               	bcf	_SeeLine,3,c
   969  001A10  984B               	bcf	_SeeLine,4,c
   970                           
   971                           ;sumovore.c: 68: RCONbits.IPEN = 1;
   972  001A12  8ED0               	bsf	4048,7,c	;volatile
   973                           
   974                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
   975  001A14  9EF2               	bcf	intcon,7,c	;volatile
   976                           
   977                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
   978  001A16  9CF2               	bcf	intcon,6,c	;volatile
   979                           
   980                           ;sumovore.c: 72: set_osc_32MHz();
   981  001A18  EC58  F00F         	call	_set_osc_32MHz	;wreg free
   982                           
   983                           ;sumovore.c: 73: openPORTCforUSART();
   984  001A1C  ECAB  F010         	call	_openPORTCforUSART	;wreg free
   985                           
   986                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
   987                           ;sumovore.c: 76: 16 );
   988  001A20  0E00               	movlw	0
   989  001A22  6E10               	movwf	OpenUSART@spbrg+1,c
   990  001A24  0E10               	movlw	16
   991  001A26  6E0F               	movwf	OpenUSART@spbrg,c
   992  001A28  0E3C               	movlw	60
   993  001A2A  EC04  F00E         	call	_OpenUSART
   994                           
   995                           ;sumovore.c: 82: openPORTD();
   996  001A2E  ECB4  F010         	call	_openPORTD	;wreg free
   997                           
   998                           ;sumovore.c: 83: PORTD = 0;
   999  001A32  0E00               	movlw	0
  1000  001A34  6E83               	movwf	3971,c	;volatile
  1001                           
  1002                           ;sumovore.c: 85: reset_codes();
  1003  001A36  ECCA  F00E         	call	_reset_codes	;wreg free
  1004                           
  1005                           ;sumovore.c: 87: openPORTCforPWM();
  1006  001A3A  EC94  F010         	call	_openPORTCforPWM	;wreg free
  1007                           
  1008                           ;sumovore.c: 89: openPORTA();
  1009  001A3E  ECB1  F010         	call	_openPORTA	;wreg free
  1010                           
  1011                           ;sumovore.c: 90: openPORTB();
  1012  001A42  ECAE  F010         	call	_openPORTB	;wreg free
  1013                           
  1014                           ;sumovore.c: 91: openPORTE();
  1015  001A46  ECA8  F010         	call	_openPORTE	;wreg free
  1016                           
  1017                           ;sumovore.c: 94: openLVD();
  1018  001A4A  EC46  F010         	call	_openLVD	;wreg free
  1019                           
  1020                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1021  001A4E  0E0C               	movlw	12
  1022  001A50  6E0F               	movwf	OpenADC@config2,c
  1023  001A52  0E0A               	movlw	10
  1024  001A54  6E10               	movwf	OpenADC@portconfig,c
  1025  001A56  0EA7               	movlw	167
  1026  001A58  EC6D  F00E         	call	_OpenADC
  1027                           
  1028                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1029  001A5C  9A82               	bcf	3970,5,c	;volatile
  1030                           
  1031                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1032  001A5E  9084               	bcf	3972,0,c	;volatile
  1033                           
  1034                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1035  001A60  9082               	bcf	3970,0,c	;volatile
  1036                           
  1037                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1038  001A62  9284               	bcf	3972,1,c	;volatile
  1039                           
  1040                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1041  001A64  0E06               	movlw	6
  1042  001A66  EC38  F010         	call	_OpenTimer2
  1043                           
  1044                           ;sumovore.c: 110: OpenPWM1(199);
  1045  001A6A  0EC7               	movlw	199
  1046  001A6C  EC71  F010         	call	_OpenPWM1
  1047                           
  1048                           ;sumovore.c: 112: OpenPWM2(199);
  1049  001A70  0EC7               	movlw	199
  1050  001A72  EC25  F00F         	call	_OpenPWM2
  1051                           
  1052                           ;sumovore.c: 113: SetDCPWM1(0);
  1053  001A76  0E00               	movlw	0
  1054  001A78  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1055  001A7A  0E00               	movlw	0
  1056  001A7C  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1057  001A7E  EC08  F00F         	call	_SetDCPWM1	;wreg free
  1058                           
  1059                           ;sumovore.c: 116: SetDCPWM2(0);
  1060  001A82  0E00               	movlw	0
  1061  001A84  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1062  001A86  0E00               	movlw	0
  1063  001A88  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1064  001A8A  ECEB  F00E         	call	_SetDCPWM2	;wreg free
  1065                           
  1066                           ;sumovore.c: 117: threshold = 512u;
  1067  001A8E  0E02               	movlw	2
  1068  001A90  6E48               	movwf	_threshold+1,c
  1069  001A92  0E00               	movlw	0
  1070  001A94  6E47               	movwf	_threshold,c
  1071  001A96  0012               	return		;funcret
  1072  001A98                     __end_of_initialization:
  1073                           	opt stack 0
  1074                           intcon	equ	0xFF2
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _set_osc_32MHz *****************
  1080 ;; Defined at:
  1081 ;;		line 18 in file "../Robot Files/osc.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  i               2   14[COMRAM] int 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;		None               void
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_initialization
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text3
  1110  001EB0                     __ptext3:
  1111                           	opt stack 0
  1112  001EB0                     _set_osc_32MHz:
  1113                           	opt stack 28
  1114                           
  1115                           ;osc.c: 20: int i;
  1116                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1117                           
  1118                           ;incstack = 0
  1119  001EB0  8CD3               	bsf	4051,6,c	;volatile
  1120                           
  1121                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1122  001EB2  8AD3               	bsf	4051,5,c	;volatile
  1123                           
  1124                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1125  001EB4  88D3               	bsf	4051,4,c	;volatile
  1126                           
  1127                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1128  001EB6  8C9B               	bsf	3995,6,c	;volatile
  1129                           
  1130                           ;osc.c: 28: for(i=0;i<500;i++);
  1131  001EB8  0E00               	movlw	0
  1132  001EBA  6E10               	movwf	set_osc_32MHz@i+1,c
  1133  001EBC  0E00               	movlw	0
  1134  001EBE  6E0F               	movwf	set_osc_32MHz@i,c
  1135  001EC0                     l1567:
  1136  001EC0  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1137  001EC2  D008               	goto	l1571
  1138  001EC4  0EF4               	movlw	244
  1139  001EC6  5C0F               	subwf	set_osc_32MHz@i,w,c
  1140  001EC8  0E01               	movlw	1
  1141  001ECA  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1142  001ECC  B0D8               	btfsc	status,0,c
  1143  001ECE  D005               	goto	l214
  1144  001ED0  D001               	goto	l1571
  1145  001ED2  D003               	goto	l214
  1146  001ED4                     l1571:
  1147  001ED4  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1148  001ED6  2A10               	incf	set_osc_32MHz@i+1,f,c
  1149  001ED8  D7F3               	goto	l1567
  1150  001EDA                     l214:
  1151  001EDA  0012               	return		;funcret
  1152  001EDC                     __end_of_set_osc_32MHz:
  1153                           	opt stack 0
  1154                           intcon	equ	0xFF2
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function _reset_codes *****************
  1160 ;; Defined at:
  1161 ;;		line 282 in file "../Robot Files/sumovore.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;		None               void
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    4
  1182 ;; This function calls:
  1183 ;;		_BORtask
  1184 ;;		_PORtask
  1185 ;;		_RESETtask
  1186 ;;		_STKFULtask
  1187 ;;		_WDTtask
  1188 ;;		_isBOR
  1189 ;;		_isPOR
  1190 ;;		_isWDTTO
  1191 ;; This function is called by:
  1192 ;;		_initialization
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text4
  1197  001D94                     __ptext4:
  1198                           	opt stack 0
  1199  001D94                     _reset_codes:
  1200                           	opt stack 25
  1201                           
  1202                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1203                           
  1204                           ;incstack = 0
  1205  001D94  ECA9  F00F         	call	_isPOR	;wreg free
  1206  001D98  0900               	iorlw	0
  1207  001D9A  B4D8               	btfsc	status,2,c
  1208  001D9C  D003               	goto	l2393
  1209  001D9E  EC0E  F00C         	call	_PORtask	;wreg free
  1210  001DA2  D018               	goto	l145
  1211  001DA4                     l2393:
  1212                           
  1213                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1214  001DA4  EC52  F010         	call	_isBOR	;wreg free
  1215  001DA8  0900               	iorlw	0
  1216  001DAA  B4D8               	btfsc	status,2,c
  1217  001DAC  D003               	goto	l2397
  1218  001DAE  ECCD  F00F         	call	_BORtask	;wreg free
  1219  001DB2  D010               	goto	l145
  1220  001DB4                     l2397:
  1221                           
  1222                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1223  001DB4  EC96  F00F         	call	_isWDTTO	;wreg free
  1224  001DB8  0900               	iorlw	0
  1225  001DBA  B4D8               	btfsc	status,2,c
  1226  001DBC  D003               	goto	l141
  1227  001DBE  EC1C  F010         	call	_WDTtask	;wreg free
  1228  001DC2  D008               	goto	l145
  1229  001DC4                     l141:
  1230                           
  1231                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1232  001DC4  AEFC               	btfss	stkptr,7,c	;volatile
  1233  001DC6  D003               	goto	l2403
  1234  001DC8  EC0D  F010         	call	_STKFULtask	;wreg free
  1235  001DCC  D003               	goto	l145
  1236  001DCE                     l2403:
  1237                           
  1238                           ;sumovore.c: 297: else RESETtask();
  1239  001DCE  EC2A  F010         	call	_RESETtask	;wreg free
  1240  001DD2  D000               	goto	l145
  1241  001DD4                     l145:
  1242  001DD4  0012               	return		;funcret
  1243  001DD6                     __end_of_reset_codes:
  1244                           	opt stack 0
  1245                           stkptr	equ	0xFFC
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _isWDTTO *****************
  1252 ;; Defined at:
  1253 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      unsigned char 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_reset_codes
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text5
  1282  001F2C                     __ptext5:
  1283                           	opt stack 0
  1284  001F2C                     _isWDTTO:
  1285                           	opt stack 27
  1286                           
  1287                           ;incstack = 0
  1288  001F2C  A2D0               	btfss	4048,1,c	;volatile
  1289  001F2E  D00E               	goto	l1465
  1290  001F30  A4D0               	btfss	4048,2,c	;volatile
  1291  001F32  D00A               	goto	l1461
  1292  001F34  A0D0               	btfss	4048,0,c	;volatile
  1293  001F36  D006               	goto	l1457
  1294  001F38  A6D0               	btfss	4048,3,c	;volatile
  1295  001F3A  D002               	goto	l1453
  1296  001F3C  D003               	goto	l1457
  1297  001F3E  D008               	goto	l625
  1298  001F40                     l1453:
  1299  001F40  0E01               	movlw	1
  1300  001F42  D006               	goto	l625
  1301  001F44                     l1457:
  1302  001F44  0E00               	movlw	0
  1303  001F46  D004               	goto	l625
  1304  001F48                     l1461:
  1305  001F48  0E00               	movlw	0
  1306  001F4A  D002               	goto	l625
  1307  001F4C                     l1465:
  1308  001F4C  0E00               	movlw	0
  1309  001F4E  D000               	goto	l625
  1310  001F50                     l625:
  1311  001F50  0012               	return		;funcret
  1312  001F52                     __end_of_isWDTTO:
  1313                           	opt stack 0
  1314                           stkptr	equ	0xFFC
  1315                           intcon	equ	0xFF2
  1316                           postinc0	equ	0xFEE
  1317                           wreg	equ	0xFE8
  1318                           status	equ	0xFD8
  1319                           
  1320 ;; *************** function _isPOR *****************
  1321 ;; Defined at:
  1322 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      unsigned char 
  1329 ;; Registers used:
  1330 ;;		wreg
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_reset_codes
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text6
  1351  001F52                     __ptext6:
  1352                           	opt stack 0
  1353  001F52                     _isPOR:
  1354                           	opt stack 27
  1355                           
  1356                           ;incstack = 0
  1357  001F52  B2D0               	btfsc	4048,1,c	;volatile
  1358  001F54  D00E               	goto	l1373
  1359  001F56  A4D0               	btfss	4048,2,c	;volatile
  1360  001F58  D00A               	goto	l1369
  1361  001F5A  B0D0               	btfsc	4048,0,c	;volatile
  1362  001F5C  D006               	goto	l1365
  1363  001F5E  B6D0               	btfsc	4048,3,c	;volatile
  1364  001F60  D002               	goto	l1361
  1365  001F62  D003               	goto	l1365
  1366  001F64  D008               	goto	l616
  1367  001F66                     l1361:
  1368  001F66  0E01               	movlw	1
  1369  001F68  D006               	goto	l616
  1370  001F6A                     l1365:
  1371  001F6A  0E00               	movlw	0
  1372  001F6C  D004               	goto	l616
  1373  001F6E                     l1369:
  1374  001F6E  0E00               	movlw	0
  1375  001F70  D002               	goto	l616
  1376  001F72                     l1373:
  1377  001F72  0E00               	movlw	0
  1378  001F74  D000               	goto	l616
  1379  001F76                     l616:
  1380  001F76  0012               	return		;funcret
  1381  001F78                     __end_of_isPOR:
  1382                           	opt stack 0
  1383                           stkptr	equ	0xFFC
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           status	equ	0xFD8
  1388                           
  1389 ;; *************** function _isBOR *****************
  1390 ;; Defined at:
  1391 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;Total ram usage:        0 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    1
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_reset_codes
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text7
  1420  0020A4                     __ptext7:
  1421                           	opt stack 0
  1422  0020A4                     _isBOR:
  1423                           	opt stack 27
  1424                           
  1425                           ;incstack = 0
  1426  0020A4  B0D0               	btfsc	4048,0,c	;volatile
  1427  0020A6  D006               	goto	l1421
  1428  0020A8  B2D0               	btfsc	4048,1,c	;volatile
  1429  0020AA  D002               	goto	l1417
  1430  0020AC  D003               	goto	l1421
  1431  0020AE  D004               	goto	l607
  1432  0020B0                     l1417:
  1433  0020B0  0E01               	movlw	1
  1434  0020B2  D002               	goto	l607
  1435  0020B4                     l1421:
  1436  0020B4  0E00               	movlw	0
  1437  0020B6  D000               	goto	l607
  1438  0020B8                     l607:
  1439  0020B8  0012               	return		;funcret
  1440  0020BA                     __end_of_isBOR:
  1441                           	opt stack 0
  1442                           stkptr	equ	0xFFC
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function _WDTtask *****************
  1449 ;; Defined at:
  1450 ;;		line 370 in file "../Robot Files/sumovore.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;		None               void
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    3
  1471 ;; This function calls:
  1472 ;;		_gtrap
  1473 ;;		_printf
  1474 ;; This function is called by:
  1475 ;;		_reset_codes
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text8
  1480  002038                     __ptext8:
  1481                           	opt stack 0
  1482  002038                     _WDTtask:
  1483                           	opt stack 25
  1484                           
  1485                           ;sumovore.c: 372: printf("<WDT TO>");
  1486                           
  1487                           ;incstack = 0
  1488  002038  0E5D               	movlw	low STR_3
  1489  00203A  6E0F               	movwf	printf@f,c
  1490  00203C  0E10               	movlw	high STR_3
  1491  00203E  6E10               	movwf	printf@f+1,c
  1492  002040  EC41  F00F         	call	_printf	;wreg free
  1493                           
  1494                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1495  002044  9083               	bcf	3971,0,c	;volatile
  1496                           
  1497                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1498  002046  8283               	bsf	3971,1,c	;volatile
  1499                           
  1500                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1501  002048  9483               	bcf	3971,2,c	;volatile
  1502                           
  1503                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1504  00204A  8683               	bsf	3971,3,c	;volatile
  1505                           
  1506                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1507  00204C  8883               	bsf	3971,4,c	;volatile
  1508                           
  1509                           ;sumovore.c: 378: gtrap();
  1510  00204E  EC3C  F00E         	call	_gtrap	;wreg free
  1511  002052  0012               	return		;funcret
  1512  002054                     __end_of_WDTtask:
  1513                           	opt stack 0
  1514                           stkptr	equ	0xFFC
  1515                           intcon	equ	0xFF2
  1516                           postinc0	equ	0xFEE
  1517                           wreg	equ	0xFE8
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _STKFULtask *****************
  1521 ;; Defined at:
  1522 ;;		line 389 in file "../Robot Files/sumovore.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    3
  1543 ;; This function calls:
  1544 ;;		_gtrap
  1545 ;;		_printf
  1546 ;; This function is called by:
  1547 ;;		_reset_codes
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text9
  1552  00201A                     __ptext9:
  1553                           	opt stack 0
  1554  00201A                     _STKFULtask:
  1555                           	opt stack 25
  1556                           
  1557                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1558                           
  1559                           ;incstack = 0
  1560  00201A  9EFC               	bcf	stkptr,7,c	;volatile
  1561                           
  1562                           ;sumovore.c: 393: printf("<STKFUL>");
  1563  00201C  0E54               	movlw	low STR_4
  1564  00201E  6E0F               	movwf	printf@f,c
  1565  002020  0E10               	movlw	high STR_4
  1566  002022  6E10               	movwf	printf@f+1,c
  1567  002024  EC41  F00F         	call	_printf	;wreg free
  1568                           
  1569                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1570  002028  9083               	bcf	3971,0,c	;volatile
  1571                           
  1572                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1573  00202A  8283               	bsf	3971,1,c	;volatile
  1574                           
  1575                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1576  00202C  9483               	bcf	3971,2,c	;volatile
  1577                           
  1578                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1579  00202E  8683               	bsf	3971,3,c	;volatile
  1580                           
  1581                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1582  002030  9883               	bcf	3971,4,c	;volatile
  1583                           
  1584                           ;sumovore.c: 399: gtrap();
  1585  002032  EC3C  F00E         	call	_gtrap	;wreg free
  1586  002036  0012               	return		;funcret
  1587  002038                     __end_of_STKFULtask:
  1588                           	opt stack 0
  1589                           stkptr	equ	0xFFC
  1590                           intcon	equ	0xFF2
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _RESETtask *****************
  1596 ;; Defined at:
  1597 ;;		line 405 in file "../Robot Files/sumovore.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    3
  1618 ;; This function calls:
  1619 ;;		_gtrap
  1620 ;;		_printf
  1621 ;; This function is called by:
  1622 ;;		_reset_codes
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text10
  1627  002054                     __ptext10:
  1628                           	opt stack 0
  1629  002054                     _RESETtask:
  1630                           	opt stack 25
  1631                           
  1632                           ;sumovore.c: 408: printf(" <reset> ");
  1633                           
  1634                           ;incstack = 0
  1635  002054  0E4A               	movlw	low STR_5
  1636  002056  6E0F               	movwf	printf@f,c
  1637  002058  0E10               	movlw	high STR_5
  1638  00205A  6E10               	movwf	printf@f+1,c
  1639  00205C  EC41  F00F         	call	_printf	;wreg free
  1640                           
  1641                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1642  002060  9083               	bcf	3971,0,c	;volatile
  1643                           
  1644                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1645  002062  8283               	bsf	3971,1,c	;volatile
  1646                           
  1647                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1648  002064  9483               	bcf	3971,2,c	;volatile
  1649                           
  1650                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1651  002066  9683               	bcf	3971,3,c	;volatile
  1652                           
  1653                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1654  002068  9883               	bcf	3971,4,c	;volatile
  1655                           
  1656                           ;sumovore.c: 414: gtrap();
  1657  00206A  EC3C  F00E         	call	_gtrap	;wreg free
  1658  00206E  0012               	return		;funcret
  1659  002070                     __end_of_RESETtask:
  1660                           	opt stack 0
  1661                           stkptr	equ	0xFFC
  1662                           intcon	equ	0xFF2
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _PORtask *****************
  1668 ;; Defined at:
  1669 ;;		line 307 in file "../Robot Files/sumovore.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  count2          4   23[COMRAM] unsigned long 
  1674 ;;  count1          4   19[COMRAM] unsigned long 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;		None               void
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;Total ram usage:        8 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    3
  1691 ;; This function calls:
  1692 ;;		_StatusReset
  1693 ;;		_printf
  1694 ;; This function is called by:
  1695 ;;		_reset_codes
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text11
  1700  00181C                     __ptext11:
  1701                           	opt stack 0
  1702  00181C                     _PORtask:
  1703                           	opt stack 25
  1704                           
  1705                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1706                           
  1707                           ;incstack = 0
  1708  00181C  0E00               	movlw	0
  1709  00181E  6E14               	movwf	PORtask@count1,c
  1710  001820  0E00               	movlw	0
  1711  001822  6E15               	movwf	PORtask@count1+1,c
  1712  001824  0E00               	movlw	0
  1713  001826  6E16               	movwf	PORtask@count1+2,c
  1714  001828  0E00               	movlw	0
  1715  00182A  6E17               	movwf	PORtask@count1+3,c
  1716  00182C  0E00               	movlw	0
  1717  00182E  6E18               	movwf	PORtask@count2,c
  1718  001830  0E00               	movlw	0
  1719  001832  6E19               	movwf	PORtask@count2+1,c
  1720  001834  0E00               	movlw	0
  1721  001836  6E1A               	movwf	PORtask@count2+2,c
  1722  001838  0E00               	movlw	0
  1723  00183A  6E1B               	movwf	PORtask@count2+3,c
  1724                           
  1725                           ;sumovore.c: 310: StatusReset();
  1726  00183C  ECA5  F010         	call	_StatusReset	;wreg free
  1727                           
  1728                           ;sumovore.c: 312: printf("<POR>");
  1729  001840  0E73               	movlw	low STR_1
  1730  001842  6E0F               	movwf	printf@f,c
  1731  001844  0E10               	movlw	high STR_1
  1732  001846  6E10               	movwf	printf@f+1,c
  1733  001848  EC41  F00F         	call	_printf	;wreg free
  1734                           
  1735                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1736  00184C  9083               	bcf	3971,0,c	;volatile
  1737                           
  1738                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1739  00184E  8283               	bsf	3971,1,c	;volatile
  1740                           
  1741                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1742  001850  8483               	bsf	3971,2,c	;volatile
  1743                           
  1744                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1745  001852  8683               	bsf	3971,3,c	;volatile
  1746                           
  1747                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1748  001854  8883               	bsf	3971,4,c	;volatile
  1749                           
  1750                           ;sumovore.c: 318: while(count1<10u)
  1751  001856  D02D               	goto	l148
  1752  001858                     l149:
  1753  001858  0004               	clrwdt		;# 
  1754                           
  1755                           ;sumovore.c: 321: if (count2==30000u)
  1756  00185A  0E30               	movlw	48
  1757  00185C  1818               	xorwf	PORtask@count2,w,c
  1758  00185E  E117               	bnz	l2223
  1759  001860  0E75               	movlw	117
  1760  001862  1819               	xorwf	PORtask@count2+1,w,c
  1761  001864  101A               	iorwf	PORtask@count2+2,w,c
  1762  001866  101B               	iorwf	PORtask@count2+3,w,c
  1763  001868  A4D8               	btfss	status,2,c
  1764  00186A  D011               	goto	l2223
  1765                           
  1766                           ;sumovore.c: 322: {
  1767                           ;sumovore.c: 323: count2=0;
  1768  00186C  0E00               	movlw	0
  1769  00186E  6E18               	movwf	PORtask@count2,c
  1770  001870  0E00               	movlw	0
  1771  001872  6E19               	movwf	PORtask@count2+1,c
  1772  001874  0E00               	movlw	0
  1773  001876  6E1A               	movwf	PORtask@count2+2,c
  1774  001878  0E00               	movlw	0
  1775  00187A  6E1B               	movwf	PORtask@count2+3,c
  1776                           
  1777                           ;sumovore.c: 324: count1++;
  1778  00187C  0E01               	movlw	1
  1779  00187E  2614               	addwf	PORtask@count1,f,c
  1780  001880  0E00               	movlw	0
  1781  001882  2215               	addwfc	PORtask@count1+1,f,c
  1782  001884  2216               	addwfc	PORtask@count1+2,f,c
  1783  001886  2217               	addwfc	PORtask@count1+3,f,c
  1784                           
  1785                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1786  001888  9083               	bcf	3971,0,c	;volatile
  1787                           
  1788                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1789  00188A  8283               	bsf	3971,1,c	;volatile
  1790                           
  1791                           ;sumovore.c: 327: }
  1792  00188C  D00C               	goto	l2227
  1793  00188E                     l2223:
  1794                           
  1795                           ;sumovore.c: 328: else if (count2==15000u)
  1796  00188E  0E98               	movlw	152
  1797  001890  1818               	xorwf	PORtask@count2,w,c
  1798  001892  E109               	bnz	l2227
  1799  001894  0E3A               	movlw	58
  1800  001896  1819               	xorwf	PORtask@count2+1,w,c
  1801  001898  101A               	iorwf	PORtask@count2+2,w,c
  1802  00189A  101B               	iorwf	PORtask@count2+3,w,c
  1803  00189C  A4D8               	btfss	status,2,c
  1804  00189E  D003               	goto	l2227
  1805                           
  1806                           ;sumovore.c: 329: {
  1807                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1808  0018A0  8083               	bsf	3971,0,c	;volatile
  1809                           
  1810                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1811  0018A2  9283               	bcf	3971,1,c	;volatile
  1812  0018A4  D000               	goto	l2227
  1813  0018A6                     l2227:
  1814                           
  1815                           ;sumovore.c: 332: }
  1816                           ;sumovore.c: 333: count2++;
  1817  0018A6  0E01               	movlw	1
  1818  0018A8  2618               	addwf	PORtask@count2,f,c
  1819  0018AA  0E00               	movlw	0
  1820  0018AC  2219               	addwfc	PORtask@count2+1,f,c
  1821  0018AE  221A               	addwfc	PORtask@count2+2,f,c
  1822  0018B0  221B               	addwfc	PORtask@count2+3,f,c
  1823  0018B2                     l148:
  1824  0018B2  5017               	movf	PORtask@count1+3,w,c
  1825  0018B4  1016               	iorwf	PORtask@count1+2,w,c
  1826  0018B6  1015               	iorwf	PORtask@count1+1,w,c
  1827  0018B8  E106               	bnz	l154
  1828  0018BA  0E0A               	movlw	10
  1829  0018BC  5C14               	subwf	PORtask@count1,w,c
  1830  0018BE  B0D8               	btfsc	status,0,c
  1831  0018C0  D002               	goto	l154
  1832  0018C2  D7CA               	goto	l149
  1833  0018C4  D000               	goto	l154
  1834  0018C6                     l154:
  1835  0018C6  0012               	return		;funcret
  1836  0018C8                     __end_of_PORtask:
  1837                           	opt stack 0
  1838                           stkptr	equ	0xFFC
  1839                           intcon	equ	0xFF2
  1840                           postinc0	equ	0xFEE
  1841                           wreg	equ	0xFE8
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _BORtask *****************
  1845 ;; Defined at:
  1846 ;;		line 349 in file "../Robot Files/sumovore.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		_StatusReset
  1869 ;;		_gtrap
  1870 ;;		_printf
  1871 ;; This function is called by:
  1872 ;;		_reset_codes
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text12
  1877  001F9A                     __ptext12:
  1878                           	opt stack 0
  1879  001F9A                     _BORtask:
  1880                           	opt stack 25
  1881                           
  1882                           ;sumovore.c: 351: StatusReset();
  1883                           
  1884                           ;incstack = 0
  1885  001F9A  ECA5  F010         	call	_StatusReset	;wreg free
  1886                           
  1887                           ;sumovore.c: 353: printf("<BOR>");
  1888  001F9E  0E6D               	movlw	low STR_2
  1889  001FA0  6E0F               	movwf	printf@f,c
  1890  001FA2  0E10               	movlw	high STR_2
  1891  001FA4  6E10               	movwf	printf@f+1,c
  1892  001FA6  EC41  F00F         	call	_printf	;wreg free
  1893                           
  1894                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1895  001FAA  8083               	bsf	3971,0,c	;volatile
  1896                           
  1897                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1898  001FAC  8283               	bsf	3971,1,c	;volatile
  1899                           
  1900                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1901  001FAE  8483               	bsf	3971,2,c	;volatile
  1902                           
  1903                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1904  001FB0  8683               	bsf	3971,3,c	;volatile
  1905                           
  1906                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1907  001FB2  9883               	bcf	3971,4,c	;volatile
  1908                           
  1909                           ;sumovore.c: 359: gtrap();
  1910  001FB4  EC3C  F00E         	call	_gtrap	;wreg free
  1911  001FB8  0012               	return		;funcret
  1912  001FBA                     __end_of_BORtask:
  1913                           	opt stack 0
  1914                           stkptr	equ	0xFFC
  1915                           intcon	equ	0xFF2
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _StatusReset *****************
  1921 ;; Defined at:
  1922 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		None
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_PORtask
  1947 ;;		_BORtask
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text13
  1952  00214A                     __ptext13:
  1953                           	opt stack 0
  1954  00214A                     _StatusReset:
  1955                           	opt stack 26
  1956                           
  1957                           ;incstack = 0
  1958  00214A  82D0               	bsf	4048,1,c	;volatile
  1959  00214C  80D0               	bsf	4048,0,c	;volatile
  1960  00214E  0012               	return		;funcret
  1961  002150                     __end_of_StatusReset:
  1962                           	opt stack 0
  1963                           stkptr	equ	0xFFC
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _openPORTE *****************
  1970 ;; Defined at:
  1971 ;;		line 178 in file "../Robot Files/sumovore.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, status,2
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_initialization
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text14
  2000  002150                     __ptext14:
  2001                           	opt stack 0
  2002  002150                     _openPORTE:
  2003                           	opt stack 28
  2004                           
  2005                           ;sumovore.c: 180: TRISE = 0b000;
  2006                           
  2007                           ;incstack = 0
  2008  002150  0E00               	movlw	0
  2009  002152  6E96               	movwf	3990,c	;volatile
  2010  002154  0012               	return		;funcret
  2011  002156                     __end_of_openPORTE:
  2012                           	opt stack 0
  2013                           stkptr	equ	0xFFC
  2014                           intcon	equ	0xFF2
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _openPORTCforUSART *****************
  2020 ;; Defined at:
  2021 ;;		line 124 in file "../Robot Files/sumovore.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;		None               void
  2028 ;; Registers used:
  2029 ;;		None
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;Total ram usage:        0 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_initialization
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text15
  2050  002156                     __ptext15:
  2051                           	opt stack 0
  2052  002156                     _openPORTCforUSART:
  2053                           	opt stack 28
  2054                           
  2055                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2056                           
  2057                           ;incstack = 0
  2058  002156  9C94               	bcf	3988,6,c	;volatile
  2059                           
  2060                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2061  002158  8E94               	bsf	3988,7,c	;volatile
  2062  00215A  0012               	return		;funcret
  2063  00215C                     __end_of_openPORTCforUSART:
  2064                           	opt stack 0
  2065                           stkptr	equ	0xFFC
  2066                           intcon	equ	0xFF2
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           status	equ	0xFD8
  2070                           
  2071 ;; *************** function _openPORTCforPWM *****************
  2072 ;; Defined at:
  2073 ;;		line 133 in file "../Robot Files/sumovore.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		None
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_initialization
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text16
  2102  002128                     __ptext16:
  2103                           	opt stack 0
  2104  002128                     _openPORTCforPWM:
  2105                           	opt stack 28
  2106                           
  2107                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2108                           
  2109                           ;incstack = 0
  2110  002128  9094               	bcf	3988,0,c	;volatile
  2111                           
  2112                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2113  00212A  9294               	bcf	3988,1,c	;volatile
  2114                           
  2115                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2116  00212C  9494               	bcf	3988,2,c	;volatile
  2117                           
  2118                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2119  00212E  9694               	bcf	3988,3,c	;volatile
  2120                           
  2121                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2122  002130  9894               	bcf	3988,4,c	;volatile
  2123                           
  2124                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2125  002132  9A94               	bcf	3988,5,c	;volatile
  2126  002134  0012               	return		;funcret
  2127  002136                     __end_of_openPORTCforPWM:
  2128                           	opt stack 0
  2129                           stkptr	equ	0xFFC
  2130                           intcon	equ	0xFF2
  2131                           postinc0	equ	0xFEE
  2132                           wreg	equ	0xFE8
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _openPORTB *****************
  2136 ;; Defined at:
  2137 ;;		line 158 in file "../Robot Files/sumovore.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;		None               void
  2144 ;; Registers used:
  2145 ;;		wreg, status,2
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_initialization
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text17
  2166  00215C                     __ptext17:
  2167                           	opt stack 0
  2168  00215C                     _openPORTB:
  2169                           	opt stack 28
  2170                           
  2171                           ;sumovore.c: 160: TRISB = 0B11000000;
  2172                           
  2173                           ;incstack = 0
  2174  00215C  0EC0               	movlw	192
  2175  00215E  6E93               	movwf	3987,c	;volatile
  2176  002160  0012               	return		;funcret
  2177  002162                     __end_of_openPORTB:
  2178                           	opt stack 0
  2179                           stkptr	equ	0xFFC
  2180                           intcon	equ	0xFF2
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _openPORTA *****************
  2186 ;; Defined at:
  2187 ;;		line 147 in file "../Robot Files/sumovore.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;		None               void
  2194 ;; Registers used:
  2195 ;;		wreg, status,2
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_initialization
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text18
  2216  002162                     __ptext18:
  2217                           	opt stack 0
  2218  002162                     _openPORTA:
  2219                           	opt stack 28
  2220                           
  2221                           ;sumovore.c: 149: TRISA = 0B11101111;
  2222                           
  2223                           ;incstack = 0
  2224  002162  0EEF               	movlw	239
  2225  002164  6E92               	movwf	3986,c	;volatile
  2226  002166  0012               	return		;funcret
  2227  002168                     __end_of_openPORTA:
  2228                           	opt stack 0
  2229                           stkptr	equ	0xFFC
  2230                           intcon	equ	0xFF2
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           status	equ	0xFD8
  2234                           
  2235 ;; *************** function _openLVD *****************
  2236 ;; Defined at:
  2237 ;;		line 428 in file "../Robot Files/sumovore.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;		None               void
  2244 ;; Registers used:
  2245 ;;		None
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_initialization
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text19
  2266  00208C                     __ptext19:
  2267                           	opt stack 0
  2268  00208C                     _openLVD:
  2269                           	opt stack 28
  2270                           
  2271                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2272                           
  2273                           ;incstack = 0
  2274  00208C  8ED0               	bsf	4048,7,c	;volatile
  2275                           
  2276                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2277  00208E  88D2               	bsf	4050,4,c	;volatile
  2278                           
  2279                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2280  002090  84A2               	bsf	4002,2,c	;volatile
  2281                           
  2282                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2283  002092  9ED2               	bcf	4050,7,c	;volatile
  2284                           
  2285                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2286  002094  86D2               	bsf	4050,3,c	;volatile
  2287                           
  2288                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2289  002096  84D2               	bsf	4050,2,c	;volatile
  2290                           
  2291                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2292  002098  82D2               	bsf	4050,1,c	;volatile
  2293                           
  2294                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2295  00209A  90D2               	bcf	4050,0,c	;volatile
  2296                           
  2297                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2298  00209C  94A1               	bcf	4001,2,c	;volatile
  2299                           
  2300                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2301  00209E  84A0               	bsf	4000,2,c	;volatile
  2302                           
  2303                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2304  0020A0  8EF2               	bsf	intcon,7,c	;volatile
  2305  0020A2  0012               	return		;funcret
  2306  0020A4                     __end_of_openLVD:
  2307                           	opt stack 0
  2308                           stkptr	equ	0xFFC
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _OpenUSART *****************
  2315 ;; Defined at:
  2316 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  config          1    wreg     unsigned char 
  2319 ;;  spbrg           2   14[COMRAM] unsigned int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  config          1   16[COMRAM] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;		None               void
  2324 ;; Registers used:
  2325 ;;		wreg, status,2
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;Total ram usage:        3 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_initialization
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text20
  2346  001C08                     __ptext20:
  2347                           	opt stack 0
  2348  001C08                     _OpenUSART:
  2349                           	opt stack 28
  2350                           
  2351                           ;incstack = 0
  2352                           ;OpenUSART@config stored from wreg
  2353  001C08  6E11               	movwf	OpenUSART@config,c
  2354  001C0A  0E00               	movlw	0
  2355  001C0C  6EAC               	movwf	4012,c	;volatile
  2356  001C0E  0E00               	movlw	0
  2357  001C10  6EAB               	movwf	4011,c	;volatile
  2358  001C12  A011               	btfss	OpenUSART@config,0,c
  2359  001C14  D002               	goto	l2345
  2360  001C16  88AC               	bsf	4012,4,c	;volatile
  2361  001C18  D000               	goto	l2345
  2362  001C1A                     l2345:
  2363  001C1A  A211               	btfss	OpenUSART@config,1,c
  2364  001C1C  D003               	goto	l2349
  2365  001C1E  8CAC               	bsf	4012,6,c	;volatile
  2366  001C20  8CAB               	bsf	4011,6,c	;volatile
  2367  001C22  D000               	goto	l2349
  2368  001C24                     l2349:
  2369  001C24  A411               	btfss	OpenUSART@config,2,c
  2370  001C26  D002               	goto	l2353
  2371  001C28  8EAC               	bsf	4012,7,c	;volatile
  2372  001C2A  D000               	goto	l2353
  2373  001C2C                     l2353:
  2374  001C2C  A611               	btfss	OpenUSART@config,3,c
  2375  001C2E  D002               	goto	l591
  2376  001C30  88AB               	bsf	4011,4,c	;volatile
  2377  001C32  D002               	goto	l2357
  2378  001C34                     l591:
  2379  001C34  8AAB               	bsf	4011,5,c	;volatile
  2380  001C36  D000               	goto	l2357
  2381  001C38                     l2357:
  2382  001C38  B811               	btfsc	OpenUSART@config,4,c
  2383  001C3A  84AC               	bsf	4012,2,c	;volatile
  2384  001C3C  989E               	bcf	3998,4,c	;volatile
  2385  001C3E  AA11               	btfss	OpenUSART@config,5,c
  2386  001C40  D002               	goto	l2365
  2387  001C42  86AB               	bsf	4011,3,c	;volatile
  2388  001C44  D000               	goto	l2365
  2389  001C46                     l2365:
  2390  001C46  AC11               	btfss	OpenUSART@config,6,c
  2391  001C48  D002               	goto	l595
  2392  001C4A  8A9D               	bsf	3997,5,c	;volatile
  2393  001C4C  D001               	goto	l596
  2394  001C4E                     l595:
  2395  001C4E  9A9D               	bcf	3997,5,c	;volatile
  2396  001C50                     l596:
  2397  001C50  9A9E               	bcf	3998,5,c	;volatile
  2398  001C52  AE11               	btfss	OpenUSART@config,7,c
  2399  001C54  D002               	goto	l597
  2400  001C56  889D               	bsf	3997,4,c	;volatile
  2401  001C58  D001               	goto	l598
  2402  001C5A                     l597:
  2403  001C5A  989D               	bcf	3997,4,c	;volatile
  2404  001C5C                     l598:
  2405  001C5C  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2406  001C60  5010               	movf	OpenUSART@spbrg+1,w,c
  2407  001C62  6EB0               	movwf	4016,c	;volatile
  2408  001C64  8AAC               	bsf	4012,5,c	;volatile
  2409  001C66  8EAB               	bsf	4011,7,c	;volatile
  2410  001C68  9C94               	bcf	3988,6,c	;volatile
  2411  001C6A  8E94               	bsf	3988,7,c	;volatile
  2412  001C6C  B8AC               	btfsc	4012,4,c	;volatile
  2413  001C6E  BEAC               	btfsc	4012,7,c	;volatile
  2414  001C70  D002               	goto	l600
  2415  001C72  8C94               	bsf	3988,6,c	;volatile
  2416  001C74  D000               	goto	l600
  2417  001C76                     l600:
  2418  001C76  0012               	return		;funcret
  2419  001C78                     __end_of_OpenUSART:
  2420                           	opt stack 0
  2421                           stkptr	equ	0xFFC
  2422                           intcon	equ	0xFF2
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _OpenTimer2 *****************
  2428 ;; Defined at:
  2429 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  config          1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  config          1   14[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:        1 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_initialization
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text21
  2458  002070                     __ptext21:
  2459                           	opt stack 0
  2460  002070                     _OpenTimer2:
  2461                           	opt stack 28
  2462                           
  2463                           ;incstack = 0
  2464                           ;OpenTimer2@config stored from wreg
  2465  002070  6E0F               	movwf	OpenTimer2@config,c
  2466  002072  500F               	movf	OpenTimer2@config,w,c
  2467  002074  0BFB               	andlw	251
  2468  002076  6ECA               	movwf	4042,c	;volatile
  2469  002078  0E00               	movlw	0
  2470  00207A  6ECC               	movwf	4044,c	;volatile
  2471  00207C  929E               	bcf	3998,1,c	;volatile
  2472  00207E  AE0F               	btfss	OpenTimer2@config,7,c
  2473  002080  D002               	goto	l565
  2474  002082  829D               	bsf	3997,1,c	;volatile
  2475  002084  D001               	goto	l566
  2476  002086                     l565:
  2477  002086  929D               	bcf	3997,1,c	;volatile
  2478  002088                     l566:
  2479  002088  84CA               	bsf	4042,2,c	;volatile
  2480  00208A  0012               	return		;funcret
  2481  00208C                     __end_of_OpenTimer2:
  2482                           	opt stack 0
  2483                           stkptr	equ	0xFFC
  2484                           intcon	equ	0xFF2
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _OpenPWM2 *****************
  2490 ;; Defined at:
  2491 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  period          1    wreg     unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  period          1   14[COMRAM] unsigned char 
  2496 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2497 ;;  pmmode          1    0        unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_initialization
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text22
  2522  001E4A                     __ptext22:
  2523                           	opt stack 0
  2524  001E4A                     _OpenPWM2:
  2525                           	opt stack 28
  2526                           
  2527                           ;incstack = 0
  2528                           ;OpenPWM2@period stored from wreg
  2529  001E4A  6E0F               	movwf	OpenPWM2@period,c
  2530  001E4C  0E0C               	movlw	12
  2531  001E4E  6EBA               	movwf	4026,c	;volatile
  2532  001E50  0E05               	movlw	5
  2533  001E52  6EF6               	movwf	tblptrl,c
  2534  001E54                     	if	1	;There is more than 1 active tblptr byte
  2535  001E54  0E00               	movlw	0
  2536  001E56  6EF7               	movwf	tblptrh,c
  2537  001E58                     	endif
  2538  001E58                     	if	1	;There are 3 active tblptr bytes
  2539  001E58  0E30               	movlw	48
  2540  001E5A  6EF8               	movwf	tblptru,c
  2541  001E5C                     	endif
  2542  001E5C  0008               	tblrd		*
  2543  001E5E  0100               	movlb	12288	; () banked
  2544  001E60  A0F5               	btfss	tablat,0,c
  2545  001E62  D002               	goto	l1693
  2546                           
  2547                           ; BSR set to: 0
  2548  001E64  6810               	setf	OpenPWM2@ccp2mx,c
  2549  001E66  D002               	goto	l513
  2550  001E68                     l1693:
  2551                           
  2552                           ; BSR set to: 0
  2553  001E68  0E00               	movlw	0
  2554  001E6A  6E10               	movwf	OpenPWM2@ccp2mx,c
  2555  001E6C                     l513:
  2556                           
  2557                           ; BSR set to: 0
  2558  001E6C  5010               	movf	OpenPWM2@ccp2mx,w,c
  2559  001E6E  B4D8               	btfsc	status,2,c
  2560  001E70  D002               	goto	l514
  2561                           
  2562                           ; BSR set to: 0
  2563  001E72  9294               	bcf	3988,1,c	;volatile
  2564  001E74  D001               	goto	l515
  2565  001E76                     l514:
  2566                           
  2567                           ; BSR set to: 0
  2568  001E76  9693               	bcf	3987,3,c	;volatile
  2569  001E78                     l515:
  2570                           
  2571                           ; BSR set to: 0
  2572  001E78  94CA               	bcf	4042,2,c	;volatile
  2573  001E7A  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2574  001E7E  84CA               	bsf	4042,2,c	;volatile
  2575                           
  2576                           ; BSR set to: 0
  2577  001E80  0012               	return		;funcret
  2578  001E82                     __end_of_OpenPWM2:
  2579                           	opt stack 0
  2580                           stkptr	equ	0xFFC
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           intcon	equ	0xFF2
  2586                           postinc0	equ	0xFEE
  2587                           wreg	equ	0xFE8
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function _OpenPWM1 *****************
  2591 ;; Defined at:
  2592 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  period          1    wreg     unsigned char 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  period          1   14[COMRAM] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;		None               void
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:        1 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_initialization
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text23
  2621  0020E2                     __ptext23:
  2622                           	opt stack 0
  2623  0020E2                     _OpenPWM1:
  2624                           	opt stack 28
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;incstack = 0
  2628                           ;OpenPWM1@period stored from wreg
  2629  0020E2  6E0F               	movwf	OpenPWM1@period,c
  2630  0020E4  0E0C               	movlw	12
  2631  0020E6  12BD               	iorwf	4029,f,c	;volatile
  2632  0020E8  9494               	bcf	3988,2,c	;volatile
  2633  0020EA  94CA               	bcf	4042,2,c	;volatile
  2634  0020EC  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2635  0020F0  84CA               	bsf	4042,2,c	;volatile
  2636  0020F2  0012               	return		;funcret
  2637  0020F4                     __end_of_OpenPWM1:
  2638                           	opt stack 0
  2639                           stkptr	equ	0xFFC
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           intcon	equ	0xFF2
  2645                           postinc0	equ	0xFEE
  2646                           wreg	equ	0xFE8
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function _OpenADC *****************
  2650 ;; Defined at:
  2651 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  config          1    wreg     unsigned char 
  2654 ;;  config2         1   14[COMRAM] unsigned char 
  2655 ;;  portconfig      1   15[COMRAM] unsigned char 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  config          1   18[COMRAM] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;Total ram usage:        5 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_initialization
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text24
  2682  001CDA                     __ptext24:
  2683                           	opt stack 0
  2684  001CDA                     _OpenADC:
  2685                           	opt stack 28
  2686                           
  2687                           ;incstack = 0
  2688                           ;OpenADC@config stored from wreg
  2689  001CDA  6E13               	movwf	OpenADC@config,c
  2690  001CDC  0E00               	movlw	0
  2691  001CDE  6EC2               	movwf	4034,c	;volatile
  2692  001CE0  0E00               	movlw	0
  2693  001CE2  6EC0               	movwf	4032,c	;volatile
  2694  001CE4  90D8               	bcf	status,0,c
  2695  001CE6  300F               	rrcf	OpenADC@config2,w,c
  2696  001CE8  0B3C               	andlw	60
  2697  001CEA  6EC2               	movwf	4034,c	;volatile
  2698  001CEC  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2699  001CF0  3A11               	swapf	??_OpenADC,f,c
  2700  001CF2  0EF0               	movlw	240
  2701  001CF4  1611               	andwf	??_OpenADC,f,c
  2702  001CF6  0E30               	movlw	48
  2703  001CF8  1611               	andwf	??_OpenADC,f,c
  2704  001CFA  5010               	movf	OpenADC@portconfig,w,c
  2705  001CFC  0B0F               	andlw	15
  2706  001CFE  1011               	iorwf	??_OpenADC,w,c
  2707  001D00  6EC1               	movwf	4033,c	;volatile
  2708  001D02  C013  F011         	movff	OpenADC@config,??_OpenADC
  2709  001D06  90D8               	bcf	status,0,c
  2710  001D08  3611               	rlcf	??_OpenADC,f,c
  2711  001D0A  90D8               	bcf	status,0,c
  2712  001D0C  3611               	rlcf	??_OpenADC,f,c
  2713  001D0E  0E38               	movlw	56
  2714  001D10  1611               	andwf	??_OpenADC,f,c
  2715  001D12  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2716  001D16  3A12               	swapf	??_OpenADC+1,f,c
  2717  001D18  0E0F               	movlw	15
  2718  001D1A  1612               	andwf	??_OpenADC+1,f,c
  2719  001D1C  0E07               	movlw	7
  2720  001D1E  1612               	andwf	??_OpenADC+1,f,c
  2721  001D20  5013               	movf	OpenADC@config,w,c
  2722  001D22  0B80               	andlw	128
  2723  001D24  1012               	iorwf	??_OpenADC+1,w,c
  2724  001D26  1011               	iorwf	??_OpenADC,w,c
  2725  001D28  6EC0               	movwf	4032,c	;volatile
  2726  001D2A  AE0F               	btfss	OpenADC@config2,7,c
  2727  001D2C  D003               	goto	l465
  2728  001D2E  9C9E               	bcf	3998,6,c	;volatile
  2729  001D30  8C9D               	bsf	3997,6,c	;volatile
  2730  001D32  8CF2               	bsf	intcon,6,c	;volatile
  2731  001D34                     l465:
  2732  001D34  80C2               	bsf	4034,0,c	;volatile
  2733  001D36  0012               	return		;funcret
  2734  001D38                     __end_of_OpenADC:
  2735                           	opt stack 0
  2736                           stkptr	equ	0xFFC
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           intcon	equ	0xFF2
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _PID_LineFollowing *****************
  2747 ;; Defined at:
  2748 ;;		line 118 in file "../Robot Files/main3.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  error           2   45[COMRAM] PTR char 
  2751 ;;		 -> main@error(3), 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;		None               void
  2756 ;; Registers used:
  2757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:        5 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    3
  2770 ;; This function calls:
  2771 ;;		_MotorControl
  2772 ;;		___lwdiv
  2773 ;;		___wmul
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text25
  2780  00107A                     __ptext25:
  2781                           	opt stack 0
  2782  00107A                     _PID_LineFollowing:
  2783                           	opt stack 27
  2784                           
  2785                           ;main3.c: 120: static int delta_velocity = 0;
  2786                           ;main3.c: 122: static int D = 0;
  2787                           ;main3.c: 125: if (I_time == I_CONSTANT)
  2788                           
  2789                           ;incstack = 0
  2790  00107A  0E03               	movlw	low _I_CONSTANT
  2791  00107C  6EF6               	movwf	tblptrl,c
  2792  00107E                     	if	1	;There is more than 1 active tblptr byte
  2793  00107E  0E10               	movlw	high _I_CONSTANT
  2794  001080  6EF7               	movwf	tblptrh,c
  2795  001082                     	endif
  2796  001082                     	if	1	;There are 3 active tblptr bytes
  2797  001082  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2798  001084  6EF8               	movwf	tblptru,c
  2799  001086                     	endif
  2800  001086  0009               	tblrd		*+
  2801  001088  50F5               	movf	tablat,w,c
  2802  00108A  1845               	xorwf	_I_time,w,c
  2803  00108C  E104               	bnz	u2171
  2804  00108E  0009               	tblrd		*+
  2805  001090  50F5               	movf	tablat,w,c
  2806  001092  1846               	xorwf	_I_time+1,w,c
  2807  001094  A4D8               	btfss	status,2,c
  2808  001096                     u2171:
  2809  001096  D07C               	goto	l2653
  2810                           
  2811                           ;main3.c: 126: {
  2812                           ;main3.c: 127: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=16
      +                          00 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2813  001098  BE40               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2814  00109A  D006               	goto	l2627
  2815  00109C  0E40               	movlw	64
  2816  00109E  5C3F               	subwf	PID_LineFollowing@delta_velocity,w,c
  2817  0010A0  0E06               	movlw	6
  2818  0010A2  5840               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2819  0010A4  B0D8               	btfsc	status,0,c
  2820  0010A6  D008               	goto	l2629
  2821  0010A8                     l2627:
  2822  0010A8  BE40               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2823  0010AA  D006               	goto	l2629
  2824  0010AC  0E41               	movlw	65
  2825  0010AE  5C3F               	subwf	PID_LineFollowing@delta_velocity,w,c
  2826  0010B0  0E06               	movlw	6
  2827  0010B2  5840               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2828  0010B4  B0D8               	btfsc	status,0,c
  2829  0010B6  D024               	goto	l2637
  2830  0010B8                     l2629:
  2831  0010B8  BE40               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2832  0010BA  D00F               	goto	l2633
  2833  0010BC  0E40               	movlw	64
  2834  0010BE  5C3F               	subwf	PID_LineFollowing@delta_velocity,w,c
  2835  0010C0  0E06               	movlw	6
  2836  0010C2  5840               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2837  0010C4  A0D8               	btfss	status,0,c
  2838  0010C6  D009               	goto	l2633
  2839  0010C8  EE20 F002          	lfsr	2,2
  2840  0010CC  502E               	movf	PID_LineFollowing@error,w,c
  2841  0010CE  26D9               	addwf	fsr2l,f,c
  2842  0010D0  502F               	movf	PID_LineFollowing@error+1,w,c
  2843  0010D2  22DA               	addwfc	fsr2h,f,c
  2844  0010D4  0E00               	movlw	0
  2845  0010D6  BEDB               	btfsc	plusw2,7,c
  2846  0010D8  D013               	goto	l2637
  2847  0010DA                     l2633:
  2848  0010DA  AE40               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2849  0010DC  D054               	goto	l2651
  2850  0010DE  0EC1               	movlw	193
  2851  0010E0  5C3F               	subwf	PID_LineFollowing@delta_velocity,w,c
  2852  0010E2  0EF9               	movlw	249
  2853  0010E4  5840               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2854  0010E6  B0D8               	btfsc	status,0,c
  2855  0010E8  D04E               	goto	l2651
  2856  0010EA  EE20 F002          	lfsr	2,2
  2857  0010EE  502E               	movf	PID_LineFollowing@error,w,c
  2858  0010F0  26D9               	addwf	fsr2l,f,c
  2859  0010F2  502F               	movf	PID_LineFollowing@error+1,w,c
  2860  0010F4  22DA               	addwfc	fsr2h,f,c
  2861  0010F6  50DF               	movf	indf2,w,c
  2862  0010F8  0A80               	xorlw	128
  2863  0010FA  0F7F               	addlw	-129
  2864  0010FC  A0D8               	btfss	status,0,c
  2865  0010FE  D043               	goto	l2651
  2866  001100                     l2637:
  2867                           
  2868                           ;main3.c: 129: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && err
      +                          or[2]>0))
  2869  001100  BE44               	btfsc	_I+1,7,c
  2870  001102  D006               	goto	l2639
  2871  001104  0EC9               	movlw	201
  2872  001106  5C43               	subwf	_I,w,c
  2873  001108  0E0C               	movlw	12
  2874  00110A  5844               	subwfb	_I+1,w,c
  2875  00110C  B0D8               	btfsc	status,0,c
  2876  00110E  D008               	goto	l2641
  2877  001110                     l2639:
  2878  001110  AE44               	btfss	_I+1,7,c
  2879  001112  D02A               	goto	l2649
  2880  001114  0E37               	movlw	55
  2881  001116  5C43               	subwf	_I,w,c
  2882  001118  0EF3               	movlw	243
  2883  00111A  5844               	subwfb	_I+1,w,c
  2884  00111C  B0D8               	btfsc	status,0,c
  2885  00111E  D024               	goto	l2649
  2886  001120                     l2641:
  2887  001120  BE44               	btfsc	_I+1,7,c
  2888  001122  D00F               	goto	l2645
  2889  001124  0EC9               	movlw	201
  2890  001126  5C43               	subwf	_I,w,c
  2891  001128  0E0C               	movlw	12
  2892  00112A  5844               	subwfb	_I+1,w,c
  2893  00112C  A0D8               	btfss	status,0,c
  2894  00112E  D009               	goto	l2645
  2895  001130  EE20 F002          	lfsr	2,2
  2896  001134  502E               	movf	PID_LineFollowing@error,w,c
  2897  001136  26D9               	addwf	fsr2l,f,c
  2898  001138  502F               	movf	PID_LineFollowing@error+1,w,c
  2899  00113A  22DA               	addwfc	fsr2h,f,c
  2900  00113C  0E00               	movlw	0
  2901  00113E  BEDB               	btfsc	plusw2,7,c
  2902  001140  D013               	goto	l2649
  2903  001142                     l2645:
  2904  001142  AE44               	btfss	_I+1,7,c
  2905  001144  D020               	goto	l2651
  2906  001146  0E37               	movlw	55
  2907  001148  5C43               	subwf	_I,w,c
  2908  00114A  0EF3               	movlw	243
  2909  00114C  5844               	subwfb	_I+1,w,c
  2910  00114E  B0D8               	btfsc	status,0,c
  2911  001150  D01A               	goto	l2651
  2912  001152  EE20 F002          	lfsr	2,2
  2913  001156  502E               	movf	PID_LineFollowing@error,w,c
  2914  001158  26D9               	addwf	fsr2l,f,c
  2915  00115A  502F               	movf	PID_LineFollowing@error+1,w,c
  2916  00115C  22DA               	addwfc	fsr2h,f,c
  2917  00115E  50DF               	movf	indf2,w,c
  2918  001160  0A80               	xorlw	128
  2919  001162  0F7F               	addlw	-129
  2920  001164  A0D8               	btfss	status,0,c
  2921  001166  D00F               	goto	l2651
  2922  001168                     l2649:
  2923                           
  2924                           ;main3.c: 131: I += error[2];
  2925  001168  EE20 F002          	lfsr	2,2
  2926  00116C  502E               	movf	PID_LineFollowing@error,w,c
  2927  00116E  26D9               	addwf	fsr2l,f,c
  2928  001170  502F               	movf	PID_LineFollowing@error+1,w,c
  2929  001172  22DA               	addwfc	fsr2h,f,c
  2930  001174  50DF               	movf	indf2,w,c
  2931  001176  6E30               	movwf	??_PID_LineFollowing& (0+255),c
  2932  001178  5030               	movf	??_PID_LineFollowing,w,c
  2933  00117A  2643               	addwf	_I,f,c
  2934  00117C  0E00               	movlw	0
  2935  00117E  BE30               	btfsc	??_PID_LineFollowing,7,c
  2936  001180  0EFF               	movlw	255
  2937  001182  2244               	addwfc	_I+1,f,c
  2938  001184  D000               	goto	l2651
  2939  001186                     l2651:
  2940                           
  2941                           ;main3.c: 132: I_time=0;
  2942  001186  0E00               	movlw	0
  2943  001188  6E46               	movwf	_I_time+1,c
  2944  00118A  0E00               	movlw	0
  2945  00118C  6E45               	movwf	_I_time,c
  2946  00118E  D000               	goto	l2653
  2947  001190                     l2653:
  2948                           
  2949                           ;main3.c: 133: }
  2950                           ;main3.c: 136: if((error[1]!=error[2]) || (D_time == 2000))
  2951  001190  EE20 F002          	lfsr	2,2
  2952  001194  502E               	movf	PID_LineFollowing@error,w,c
  2953  001196  26D9               	addwf	fsr2l,f,c
  2954  001198  502F               	movf	PID_LineFollowing@error+1,w,c
  2955  00119A  22DA               	addwfc	fsr2h,f,c
  2956  00119C  EE10 F001          	lfsr	1,1
  2957  0011A0  502E               	movf	PID_LineFollowing@error,w,c
  2958  0011A2  26E1               	addwf	fsr1l,f,c
  2959  0011A4  502F               	movf	PID_LineFollowing@error+1,w,c
  2960  0011A6  22E2               	addwfc	fsr1h,f,c
  2961  0011A8  50DE               	movf	postinc2,w,c
  2962  0011AA  18E6               	xorwf	postinc1,w,c
  2963  0011AC  A4D8               	btfss	status,2,c
  2964  0011AE  D007               	goto	l2657
  2965  0011B0  0ED0               	movlw	208
  2966  0011B2  1841               	xorwf	_D_time,w,c
  2967  0011B4  E15E               	bnz	l2665
  2968  0011B6  0E07               	movlw	7
  2969  0011B8  1842               	xorwf	_D_time+1,w,c
  2970  0011BA  A4D8               	btfss	status,2,c
  2971  0011BC  D05A               	goto	l2665
  2972  0011BE                     l2657:
  2973                           
  2974                           ;main3.c: 137: {
  2975                           ;main3.c: 138: D = D_CONSTANT/D_time*(error[2]-error[1]);
  2976  0011BE  EE20 F001          	lfsr	2,1
  2977  0011C2  502E               	movf	PID_LineFollowing@error,w,c
  2978  0011C4  26D9               	addwf	fsr2l,f,c
  2979  0011C6  502F               	movf	PID_LineFollowing@error+1,w,c
  2980  0011C8  22DA               	addwfc	fsr2h,f,c
  2981  0011CA  50DF               	movf	indf2,w,c
  2982  0011CC  6E30               	movwf	??_PID_LineFollowing& (0+255),c
  2983  0011CE  6A31               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  2984  0011D0  BE30               	btfsc	??_PID_LineFollowing& (0+255),7,c
  2985  0011D2  0631               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  2986  0011D4  1E30               	comf	??_PID_LineFollowing,f,c
  2987  0011D6  1E31               	comf	??_PID_LineFollowing+1,f,c
  2988  0011D8  4A30               	infsnz	??_PID_LineFollowing,f,c
  2989  0011DA  2A31               	incf	??_PID_LineFollowing+1,f,c
  2990  0011DC  EE20 F002          	lfsr	2,2
  2991  0011E0  502E               	movf	PID_LineFollowing@error,w,c
  2992  0011E2  26D9               	addwf	fsr2l,f,c
  2993  0011E4  502F               	movf	PID_LineFollowing@error+1,w,c
  2994  0011E6  22DA               	addwfc	fsr2h,f,c
  2995  0011E8  50DF               	movf	indf2,w,c
  2996  0011EA  6E32               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  2997  0011EC  5030               	movf	??_PID_LineFollowing,w,c
  2998  0011EE  2432               	addwf	??_PID_LineFollowing+2,w,c
  2999  0011F0  6E16               	movwf	___wmul@multiplier,c
  3000  0011F2  0E00               	movlw	0
  3001  0011F4  BE32               	btfsc	??_PID_LineFollowing+2,7,c
  3002  0011F6  0EFF               	movlw	255
  3003  0011F8  2031               	addwfc	??_PID_LineFollowing+1,w,c
  3004  0011FA  6E17               	movwf	___wmul@multiplier+1,c
  3005  0011FC  C041  F011         	movff	_D_time,___lwdiv@divisor
  3006  001200  C042  F012         	movff	_D_time+1,___lwdiv@divisor+1
  3007  001204  0E01               	movlw	low _D_CONSTANT
  3008  001206  6EF6               	movwf	tblptrl,c
  3009  001208                     	if	1	;There is more than 1 active tblptr byte
  3010  001208  0E10               	movlw	high _D_CONSTANT
  3011  00120A  6EF7               	movwf	tblptrh,c
  3012  00120C                     	endif
  3013  00120C                     	if	1	;There are 3 active tblptr bytes
  3014  00120C  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3015  00120E  6EF8               	movwf	tblptru,c
  3016  001210                     	endif
  3017  001210  0009               	tblrd		*+
  3018  001212  CFF5 F00F          	movff	tablat,___lwdiv@dividend
  3019  001216  000A               	tblrd		*-
  3020  001218  CFF5 F010          	movff	tablat,___lwdiv@dividend+1
  3021  00121C  EC9C  F00E         	call	___lwdiv	;wreg free
  3022  001220  C00F  F018         	movff	?___lwdiv,___wmul@multiplicand
  3023  001224  C010  F019         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3024  001228  EC82  F00F         	call	___wmul	;wreg free
  3025  00122C  C016  F03D         	movff	?___wmul,PID_LineFollowing@D
  3026  001230  C017  F03E         	movff	?___wmul+1,PID_LineFollowing@D+1
  3027                           
  3028                           ;main3.c: 141: error[0]=error[1];
  3029  001234  EE20 F001          	lfsr	2,1
  3030  001238  502E               	movf	PID_LineFollowing@error,w,c
  3031  00123A  26D9               	addwf	fsr2l,f,c
  3032  00123C  502F               	movf	PID_LineFollowing@error+1,w,c
  3033  00123E  22DA               	addwfc	fsr2h,f,c
  3034  001240  C02E  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3035  001244  C02F  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3036  001248  CFDF FFE7          	movff	indf2,indf1
  3037                           
  3038                           ;main3.c: 142: error[1]=error[2];
  3039  00124C  EE20 F002          	lfsr	2,2
  3040  001250  502E               	movf	PID_LineFollowing@error,w,c
  3041  001252  26D9               	addwf	fsr2l,f,c
  3042  001254  502F               	movf	PID_LineFollowing@error+1,w,c
  3043  001256  22DA               	addwfc	fsr2h,f,c
  3044  001258  EE10 F001          	lfsr	1,1
  3045  00125C  502E               	movf	PID_LineFollowing@error,w,c
  3046  00125E  26E1               	addwf	fsr1l,f,c
  3047  001260  502F               	movf	PID_LineFollowing@error+1,w,c
  3048  001262  22E2               	addwfc	fsr1h,f,c
  3049  001264  CFDF FFE7          	movff	indf2,indf1
  3050                           
  3051                           ;main3.c: 144: D_time=0;
  3052  001268  0E00               	movlw	0
  3053  00126A  6E42               	movwf	_D_time+1,c
  3054  00126C  0E00               	movlw	0
  3055  00126E  6E41               	movwf	_D_time,c
  3056  001270  D000               	goto	l2665
  3057  001272                     l2665:
  3058                           
  3059                           ;main3.c: 145: }
  3060                           ;main3.c: 148: delta_velocity = P_CONSTANT*error[2] + I + D;
  3061  001272  EE20 F002          	lfsr	2,2
  3062  001276  502E               	movf	PID_LineFollowing@error,w,c
  3063  001278  26D9               	addwf	fsr2l,f,c
  3064  00127A  502F               	movf	PID_LineFollowing@error+1,w,c
  3065  00127C  22DA               	addwfc	fsr2h,f,c
  3066  00127E  50DF               	movf	indf2,w,c
  3067  001280  6E16               	movwf	___wmul@multiplier,c
  3068  001282  6A17               	clrf	___wmul@multiplier+1,c
  3069  001284  BE16               	btfsc	___wmul@multiplier,7,c
  3070  001286  0617               	decf	___wmul@multiplier+1,f,c
  3071  001288  0E05               	movlw	low _P_CONSTANT
  3072  00128A  6EF6               	movwf	tblptrl,c
  3073  00128C                     	if	1	;There is more than 1 active tblptr byte
  3074  00128C  0E10               	movlw	high _P_CONSTANT
  3075  00128E  6EF7               	movwf	tblptrh,c
  3076  001290                     	endif
  3077  001290                     	if	1	;There are 3 active tblptr bytes
  3078  001290  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3079  001292  6EF8               	movwf	tblptru,c
  3080  001294                     	endif
  3081  001294  0009               	tblrd		*+
  3082  001296  CFF5 F018          	movff	tablat,___wmul@multiplicand
  3083  00129A  000A               	tblrd		*-
  3084  00129C  CFF5 F019          	movff	tablat,___wmul@multiplicand+1
  3085  0012A0  EC82  F00F         	call	___wmul	;wreg free
  3086  0012A4  5043               	movf	_I,w,c
  3087  0012A6  2616               	addwf	?___wmul,f,c
  3088  0012A8  5044               	movf	_I+1,w,c
  3089  0012AA  2217               	addwfc	?___wmul+1,f,c
  3090  0012AC  503D               	movf	PID_LineFollowing@D,w,c
  3091  0012AE  2416               	addwf	?___wmul,w,c
  3092  0012B0  6E3F               	movwf	PID_LineFollowing@delta_velocity,c
  3093  0012B2  503E               	movf	PID_LineFollowing@D+1,w,c
  3094  0012B4  2017               	addwfc	?___wmul+1,w,c
  3095  0012B6  6E40               	movwf	PID_LineFollowing@delta_velocity+1,c
  3096                           
  3097                           ;main3.c: 151: MotorControl(delta_velocity,0);
  3098  0012B8  C03F  F024         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3099  0012BC  C040  F025         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3100  0012C0  0E00               	movlw	0
  3101  0012C2  6E26               	movwf	MotorControl@speed_divider,c
  3102  0012C4  EC69  F009         	call	_MotorControl	;wreg free
  3103                           
  3104                           ;main3.c: 153: I_time++;
  3105  0012C8  4A45               	infsnz	_I_time,f,c
  3106  0012CA  2A46               	incf	_I_time+1,f,c
  3107                           
  3108                           ;main3.c: 154: D_time++;
  3109  0012CC  4A41               	infsnz	_D_time,f,c
  3110  0012CE  2A42               	incf	_D_time+1,f,c
  3111  0012D0  0012               	return		;funcret
  3112  0012D2                     __end_of_PID_LineFollowing:
  3113                           	opt stack 0
  3114                           stkptr	equ	0xFFC
  3115                           tblptru	equ	0xFF8
  3116                           tblptrh	equ	0xFF7
  3117                           tblptrl	equ	0xFF6
  3118                           tablat	equ	0xFF5
  3119                           intcon	equ	0xFF2
  3120                           postinc0	equ	0xFEE
  3121                           wreg	equ	0xFE8
  3122                           indf1	equ	0xFE7
  3123                           postinc1	equ	0xFE6
  3124                           fsr1h	equ	0xFE2
  3125                           fsr1l	equ	0xFE1
  3126                           indf2	equ	0xFDF
  3127                           postinc2	equ	0xFDE
  3128                           plusw2	equ	0xFDB
  3129                           fsr2h	equ	0xFDA
  3130                           fsr2l	equ	0xFD9
  3131                           status	equ	0xFD8
  3132                           
  3133 ;; *************** function ___lwdiv *****************
  3134 ;; Defined at:
  3135 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  dividend        2   14[COMRAM] unsigned int 
  3138 ;;  divisor         2   16[COMRAM] unsigned int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  quotient        2   18[COMRAM] unsigned int 
  3141 ;;  counter         1   20[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2   14[COMRAM] unsigned int 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;Total ram usage:        7 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_PID_LineFollowing
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text26
  3166  001D38                     __ptext26:
  3167                           	opt stack 0
  3168  001D38                     ___lwdiv:
  3169                           	opt stack 28
  3170                           
  3171                           ;incstack = 0
  3172  001D38  0E00               	movlw	0
  3173  001D3A  6E14               	movwf	___lwdiv@quotient+1,c
  3174  001D3C  0E00               	movlw	0
  3175  001D3E  6E13               	movwf	___lwdiv@quotient,c
  3176  001D40  5011               	movf	___lwdiv@divisor,w,c
  3177  001D42  1012               	iorwf	___lwdiv@divisor+1,w,c
  3178  001D44  B4D8               	btfsc	status,2,c
  3179  001D46  D021               	goto	l1151
  3180  001D48  0E01               	movlw	1
  3181  001D4A  6E15               	movwf	___lwdiv@counter,c
  3182  001D4C  D005               	goto	l2467
  3183  001D4E                     l2465:
  3184  001D4E  90D8               	bcf	status,0,c
  3185  001D50  3611               	rlcf	___lwdiv@divisor,f,c
  3186  001D52  3612               	rlcf	___lwdiv@divisor+1,f,c
  3187  001D54  2A15               	incf	___lwdiv@counter,f,c
  3188  001D56  D000               	goto	l2467
  3189  001D58                     l2467:
  3190  001D58  BE12               	btfsc	___lwdiv@divisor+1,7,c
  3191  001D5A  D002               	goto	l2469
  3192  001D5C  D7F8               	goto	l2465
  3193  001D5E  D000               	goto	l2469
  3194  001D60                     l2469:
  3195  001D60  90D8               	bcf	status,0,c
  3196  001D62  3613               	rlcf	___lwdiv@quotient,f,c
  3197  001D64  3614               	rlcf	___lwdiv@quotient+1,f,c
  3198  001D66  5011               	movf	___lwdiv@divisor,w,c
  3199  001D68  5C0F               	subwf	___lwdiv@dividend,w,c
  3200  001D6A  5012               	movf	___lwdiv@divisor+1,w,c
  3201  001D6C  5810               	subwfb	___lwdiv@dividend+1,w,c
  3202  001D6E  A0D8               	btfss	status,0,c
  3203  001D70  D006               	goto	l2477
  3204  001D72  5011               	movf	___lwdiv@divisor,w,c
  3205  001D74  5E0F               	subwf	___lwdiv@dividend,f,c
  3206  001D76  5012               	movf	___lwdiv@divisor+1,w,c
  3207  001D78  5A10               	subwfb	___lwdiv@dividend+1,f,c
  3208  001D7A  8013               	bsf	___lwdiv@quotient,0,c
  3209  001D7C  D000               	goto	l2477
  3210  001D7E                     l2477:
  3211  001D7E  90D8               	bcf	status,0,c
  3212  001D80  3212               	rrcf	___lwdiv@divisor+1,f,c
  3213  001D82  3211               	rrcf	___lwdiv@divisor,f,c
  3214  001D84  2E15               	decfsz	___lwdiv@counter,f,c
  3215  001D86  D7EC               	goto	l2469
  3216  001D88  D000               	goto	l1151
  3217  001D8A                     l1151:
  3218  001D8A  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3219  001D8E  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3220  001D92  0012               	return		;funcret
  3221  001D94                     __end_of___lwdiv:
  3222                           	opt stack 0
  3223                           stkptr	equ	0xFFC
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           intcon	equ	0xFF2
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           indf1	equ	0xFE7
  3232                           postinc1	equ	0xFE6
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           postinc2	equ	0xFDE
  3237                           plusw2	equ	0xFDB
  3238                           fsr2h	equ	0xFDA
  3239                           fsr2l	equ	0xFD9
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _OpenTimer0 *****************
  3243 ;; Defined at:
  3244 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  config          1    wreg     unsigned char 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  config          1   14[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text27
  3273  001FBA                     __ptext27:
  3274                           	opt stack 0
  3275  001FBA                     _OpenTimer0:
  3276                           	opt stack 29
  3277                           
  3278                           ;incstack = 0
  3279                           ;OpenTimer0@config stored from wreg
  3280  001FBA  6E0F               	movwf	OpenTimer0@config,c
  3281  001FBC  500F               	movf	OpenTimer0@config,w,c
  3282  001FBE  0B7F               	andlw	127
  3283  001FC0  6ED5               	movwf	4053,c	;volatile
  3284  001FC2  0E00               	movlw	0
  3285  001FC4  6ED7               	movwf	4055,c	;volatile
  3286  001FC6  0E00               	movlw	0
  3287  001FC8  6ED6               	movwf	4054,c	;volatile
  3288  001FCA  94F2               	bcf	intcon,2,c	;volatile
  3289  001FCC  AE0F               	btfss	OpenTimer0@config,7,c
  3290  001FCE  D002               	goto	l536
  3291  001FD0  8AF2               	bsf	intcon,5,c	;volatile
  3292  001FD2  D001               	goto	l537
  3293  001FD4                     l536:
  3294  001FD4  9AF2               	bcf	intcon,5,c	;volatile
  3295  001FD6                     l537:
  3296  001FD6  8ED5               	bsf	4053,7,c	;volatile
  3297  001FD8  0012               	return		;funcret
  3298  001FDA                     __end_of_OpenTimer0:
  3299                           	opt stack 0
  3300                           stkptr	equ	0xFFC
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           intcon	equ	0xFF2
  3306                           postinc0	equ	0xFEE
  3307                           wreg	equ	0xFE8
  3308                           indf1	equ	0xFE7
  3309                           postinc1	equ	0xFE6
  3310                           fsr1h	equ	0xFE2
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           plusw2	equ	0xFDB
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function _LVtrap *****************
  3320 ;; Defined at:
  3321 ;;		line 449 in file "../Robot Files/sumovore.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;		None               void
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    3
  3342 ;; This function calls:
  3343 ;;		_gtrap
  3344 ;;		_openPORTD
  3345 ;;		_printf
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text28
  3352  001FDA                     __ptext28:
  3353                           	opt stack 0
  3354  001FDA                     _LVtrap:
  3355                           	opt stack 27
  3356                           
  3357                           ;sumovore.c: 451: printf("\\<LVD>");
  3358                           
  3359                           ;incstack = 0
  3360  001FDA  0E66               	movlw	low STR_6
  3361  001FDC  6E0F               	movwf	printf@f,c
  3362  001FDE  0E10               	movlw	high STR_6
  3363  001FE0  6E10               	movwf	printf@f+1,c
  3364  001FE2  EC41  F00F         	call	_printf	;wreg free
  3365                           
  3366                           ;sumovore.c: 452: openPORTD();
  3367  001FE6  ECB4  F010         	call	_openPORTD	;wreg free
  3368                           
  3369                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3370  001FEA  9083               	bcf	3971,0,c	;volatile
  3371                           
  3372                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3373  001FEC  8283               	bsf	3971,1,c	;volatile
  3374                           
  3375                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3376  001FEE  8483               	bsf	3971,2,c	;volatile
  3377                           
  3378                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3379  001FF0  9683               	bcf	3971,3,c	;volatile
  3380                           
  3381                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3382  001FF2  8883               	bsf	3971,4,c	;volatile
  3383                           
  3384                           ;sumovore.c: 458: gtrap();
  3385  001FF4  EC3C  F00E         	call	_gtrap	;wreg free
  3386  001FF8  0012               	return		;funcret
  3387  001FFA                     __end_of_LVtrap:
  3388                           	opt stack 0
  3389                           stkptr	equ	0xFFC
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postinc1	equ	0xFE6
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           plusw2	equ	0xFDB
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function _printf *****************
  3409 ;; Defined at:
  3410 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3413 ;;		 -> STR_7(64), STR_6(7), STR_5(10), STR_4(9), 
  3414 ;;		 -> STR_3(9), STR_2(6), STR_1(6), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  tmpval          4    0        struct .
  3417 ;;  cp              3    0        PTR const unsigned char 
  3418 ;;  ap              2   16[COMRAM] PTR void [1]
  3419 ;;		 -> ?_printf(2), 
  3420 ;;  len             2    0        unsigned int 
  3421 ;;  val             2    0        unsigned int 
  3422 ;;  c               1   18[COMRAM] char 
  3423 ;;  flag            1    0        unsigned char 
  3424 ;;  prec            1    0        char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2   14[COMRAM] int 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;Total ram usage:        5 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    2
  3441 ;; This function calls:
  3442 ;;		_putch
  3443 ;; This function is called by:
  3444 ;;		_PORtask
  3445 ;;		_BORtask
  3446 ;;		_WDTtask
  3447 ;;		_STKFULtask
  3448 ;;		_RESETtask
  3449 ;;		_LVtrap
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text29
  3455  001E82                     __ptext29:
  3456                           	opt stack 0
  3457  001E82                     _printf:
  3458                           	opt stack 28
  3459                           
  3460                           ;doprnt.c: 466: va_list ap;
  3461                           ;doprnt.c: 499: signed char c;
  3462                           ;doprnt.c: 506: signed char prec;
  3463                           ;doprnt.c: 508: unsigned char flag;
  3464                           ;doprnt.c: 523: union {
  3465                           ;doprnt.c: 524: unsigned long vd;
  3466                           ;doprnt.c: 525: double integ;
  3467                           ;doprnt.c: 526: } tmpval;
  3468                           ;doprnt.c: 528: unsigned int val;
  3469                           ;doprnt.c: 529: unsigned len;
  3470                           ;doprnt.c: 530: const char * cp;
  3471                           ;doprnt.c: 533: *ap = __va_start();
  3472                           
  3473                           ;incstack = 0
  3474  001E82  0E11               	movlw	low (?_printf+2)
  3475  001E84  6E11               	movwf	printf@ap,c
  3476  001E86  0E00               	movlw	high (?_printf+2)
  3477  001E88  6E12               	movwf	printf@ap+1,c
  3478                           
  3479                           ;doprnt.c: 536: while(c = *f++) {
  3480  001E8A  D004               	goto	l2133
  3481  001E8C                     l2131:
  3482                           
  3483                           ;doprnt.c: 540: {
  3484                           ;doprnt.c: 541: (putch(c) );
  3485  001E8C  5013               	movf	printf@c,w,c
  3486  001E8E  ECB9  F010         	call	_putch
  3487                           
  3488                           ;doprnt.c: 542: continue;
  3489  001E92  D000               	goto	l2133
  3490  001E94                     l2133:
  3491  001E94  C00F  FFF6         	movff	printf@f,tblptrl
  3492  001E98  C010  FFF7         	movff	printf@f+1,tblptrh
  3493  001E9C  4A0F               	infsnz	printf@f,f,c
  3494  001E9E  2A10               	incf	printf@f+1,f,c
  3495  001EA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3496  001EA0  6AF8               	clrf	tblptru,c
  3497  001EA2                     	endif
  3498  001EA2                     	if	0	;tblptru may be non-zero
  3499  001EA2                     	endif
  3500  001EA2  0008               	tblrd		*
  3501  001EA4  CFF5 F013          	movff	tablat,printf@c
  3502  001EA8  5013               	movf	printf@c,w,c
  3503  001EAA  A4D8               	btfss	status,2,c
  3504  001EAC  D7EF               	goto	l2131
  3505                           
  3506                           ;doprnt.c: 1469: }
  3507                           ;doprnt.c: 1533: }
  3508                           ;doprnt.c: 1540: return 0;
  3509                           ;	Return value of _printf is never used
  3510  001EAE  0012               	return		;funcret
  3511  001EB0                     __end_of_printf:
  3512                           	opt stack 0
  3513                           stkptr	equ	0xFFC
  3514                           tblptru	equ	0xFF8
  3515                           tblptrh	equ	0xFF7
  3516                           tblptrl	equ	0xFF6
  3517                           tablat	equ	0xFF5
  3518                           intcon	equ	0xFF2
  3519                           postinc0	equ	0xFEE
  3520                           wreg	equ	0xFE8
  3521                           indf1	equ	0xFE7
  3522                           postinc1	equ	0xFE6
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           plusw2	equ	0xFDB
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _putch *****************
  3533 ;; Defined at:
  3534 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  c               1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  c               1    0[COMRAM] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_printf
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text30
  3563  002172                     __ptext30:
  3564                           	opt stack 0
  3565  002172                     _putch:
  3566                           	opt stack 28
  3567                           
  3568                           ;incstack = 0
  3569  002172  0012               	return		;funcret
  3570  002174                     __end_of_putch:
  3571                           	opt stack 0
  3572                           stkptr	equ	0xFFC
  3573                           tblptru	equ	0xFF8
  3574                           tblptrh	equ	0xFF7
  3575                           tblptrl	equ	0xFF6
  3576                           tablat	equ	0xFF5
  3577                           intcon	equ	0xFF2
  3578                           postinc0	equ	0xFEE
  3579                           wreg	equ	0xFE8
  3580                           indf1	equ	0xFE7
  3581                           postinc1	equ	0xFE6
  3582                           fsr1h	equ	0xFE2
  3583                           fsr1l	equ	0xFE1
  3584                           indf2	equ	0xFDF
  3585                           postinc2	equ	0xFDE
  3586                           plusw2	equ	0xFDB
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _openPORTD *****************
  3592 ;; Defined at:
  3593 ;;		line 168 in file "../Robot Files/sumovore.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;		None               void
  3600 ;; Registers used:
  3601 ;;		wreg, status,2
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_initialization
  3618 ;;		_LVtrap
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text31
  3623  002168                     __ptext31:
  3624                           	opt stack 0
  3625  002168                     _openPORTD:
  3626                           	opt stack 28
  3627                           
  3628                           ;sumovore.c: 170: TRISD = 0b01100000;
  3629                           
  3630                           ;incstack = 0
  3631  002168  0E60               	movlw	96
  3632  00216A  6E95               	movwf	3989,c	;volatile
  3633  00216C  0012               	return		;funcret
  3634  00216E                     __end_of_openPORTD:
  3635                           	opt stack 0
  3636                           stkptr	equ	0xFFC
  3637                           tblptru	equ	0xFF8
  3638                           tblptrh	equ	0xFF7
  3639                           tblptrl	equ	0xFF6
  3640                           tablat	equ	0xFF5
  3641                           intcon	equ	0xFF2
  3642                           postinc0	equ	0xFEE
  3643                           wreg	equ	0xFE8
  3644                           indf1	equ	0xFE7
  3645                           postinc1	equ	0xFE6
  3646                           fsr1h	equ	0xFE2
  3647                           fsr1l	equ	0xFE1
  3648                           indf2	equ	0xFDF
  3649                           postinc2	equ	0xFDE
  3650                           plusw2	equ	0xFDB
  3651                           fsr2h	equ	0xFDA
  3652                           fsr2l	equ	0xFD9
  3653                           status	equ	0xFD8
  3654                           
  3655 ;; *************** function _gtrap *****************
  3656 ;; Defined at:
  3657 ;;		line 464 in file "../Robot Files/sumovore.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  count           4   14[COMRAM] unsigned long 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;		None               void
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:        4 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_BORtask
  3682 ;;		_WDTtask
  3683 ;;		_STKFULtask
  3684 ;;		_RESETtask
  3685 ;;		_LVtrap
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text32
  3690  001C78                     __ptext32:
  3691                           	opt stack 0
  3692  001C78                     _gtrap:
  3693                           	opt stack 26
  3694                           
  3695                           ;sumovore.c: 466: unsigned long count=0;
  3696                           
  3697                           ;incstack = 0
  3698  001C78  0E00               	movlw	0
  3699  001C7A  6E0F               	movwf	gtrap@count,c
  3700  001C7C  0E00               	movlw	0
  3701  001C7E  6E10               	movwf	gtrap@count+1,c
  3702  001C80  0E00               	movlw	0
  3703  001C82  6E11               	movwf	gtrap@count+2,c
  3704  001C84  0E00               	movlw	0
  3705  001C86  6E12               	movwf	gtrap@count+3,c
  3706  001C88                     l175:
  3707  001C88  0004               	clrwdt		;# 
  3708                           
  3709                           ;sumovore.c: 471: if (count==30000u)
  3710  001C8A  0E30               	movlw	48
  3711  001C8C  180F               	xorwf	gtrap@count,w,c
  3712  001C8E  E111               	bnz	l1279
  3713  001C90  0E75               	movlw	117
  3714  001C92  1810               	xorwf	gtrap@count+1,w,c
  3715  001C94  1011               	iorwf	gtrap@count+2,w,c
  3716  001C96  1012               	iorwf	gtrap@count+3,w,c
  3717  001C98  A4D8               	btfss	status,2,c
  3718  001C9A  D00B               	goto	l1279
  3719                           
  3720                           ;sumovore.c: 472: {
  3721                           ;sumovore.c: 473: count=0;
  3722  001C9C  0E00               	movlw	0
  3723  001C9E  6E0F               	movwf	gtrap@count,c
  3724  001CA0  0E00               	movlw	0
  3725  001CA2  6E10               	movwf	gtrap@count+1,c
  3726  001CA4  0E00               	movlw	0
  3727  001CA6  6E11               	movwf	gtrap@count+2,c
  3728  001CA8  0E00               	movlw	0
  3729  001CAA  6E12               	movwf	gtrap@count+3,c
  3730                           
  3731                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  3732  001CAC  9083               	bcf	3971,0,c	;volatile
  3733                           
  3734                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  3735  001CAE  8283               	bsf	3971,1,c	;volatile
  3736                           
  3737                           ;sumovore.c: 476: }
  3738  001CB0  D00C               	goto	l1283
  3739  001CB2                     l1279:
  3740                           
  3741                           ;sumovore.c: 477: else if (count==15000u)
  3742  001CB2  0E98               	movlw	152
  3743  001CB4  180F               	xorwf	gtrap@count,w,c
  3744  001CB6  E109               	bnz	l1283
  3745  001CB8  0E3A               	movlw	58
  3746  001CBA  1810               	xorwf	gtrap@count+1,w,c
  3747  001CBC  1011               	iorwf	gtrap@count+2,w,c
  3748  001CBE  1012               	iorwf	gtrap@count+3,w,c
  3749  001CC0  A4D8               	btfss	status,2,c
  3750  001CC2  D003               	goto	l1283
  3751                           
  3752                           ;sumovore.c: 478: {
  3753                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  3754  001CC4  8083               	bsf	3971,0,c	;volatile
  3755                           
  3756                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  3757  001CC6  9283               	bcf	3971,1,c	;volatile
  3758  001CC8  D000               	goto	l1283
  3759  001CCA                     l1283:
  3760                           
  3761                           ;sumovore.c: 481: }
  3762                           ;sumovore.c: 482: count++;
  3763  001CCA  0E01               	movlw	1
  3764  001CCC  260F               	addwf	gtrap@count,f,c
  3765  001CCE  0E00               	movlw	0
  3766  001CD0  2210               	addwfc	gtrap@count+1,f,c
  3767  001CD2  2211               	addwfc	gtrap@count+2,f,c
  3768  001CD4  2212               	addwfc	gtrap@count+3,f,c
  3769  001CD6  D7D8               	goto	l175
  3770  001CD8  0012               	return		;funcret
  3771  001CDA                     __end_of_gtrap:
  3772                           	opt stack 0
  3773                           stkptr	equ	0xFFC
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           intcon	equ	0xFF2
  3779                           postinc0	equ	0xFEE
  3780                           wreg	equ	0xFE8
  3781                           indf1	equ	0xFE7
  3782                           postinc1	equ	0xFE6
  3783                           fsr1h	equ	0xFE2
  3784                           fsr1l	equ	0xFE1
  3785                           indf2	equ	0xFDF
  3786                           postinc2	equ	0xFDE
  3787                           plusw2	equ	0xFDB
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _GetBackonTrack *****************
  3793 ;; Defined at:
  3794 ;;		line 214 in file "../Robot Files/main3.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  error           2   49[COMRAM] PTR char 
  3797 ;;		 -> main@error(3), 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  i               2   52[COMRAM] unsigned int 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;		None               void
  3802 ;; Registers used:
  3803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        5 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    5
  3816 ;; This function calls:
  3817 ;;		_MotorControl
  3818 ;;		_ReadTimer0
  3819 ;;		_SharpTurn
  3820 ;;		_WriteTimer0
  3821 ;;		_check_sensors
  3822 ;;		_motors_brake_all
  3823 ;;		_set_leds
  3824 ;; This function is called by:
  3825 ;;		_main
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text33
  3830  00149E                     __ptext33:
  3831                           	opt stack 0
  3832  00149E                     _GetBackonTrack:
  3833                           	opt stack 25
  3834                           
  3835                           ;main3.c: 216: if((error[2]>2) || (error[1]>2) || CW_rotation_flag)
  3836                           
  3837                           ;incstack = 0
  3838  00149E  EE20 F002          	lfsr	2,2
  3839  0014A2  5032               	movf	GetBackonTrack@error,w,c
  3840  0014A4  26D9               	addwf	fsr2l,f,c
  3841  0014A6  5033               	movf	GetBackonTrack@error+1,w,c
  3842  0014A8  22DA               	addwfc	fsr2h,f,c
  3843  0014AA  50DF               	movf	indf2,w,c
  3844  0014AC  0A80               	xorlw	128
  3845  0014AE  0F7D               	addlw	-131
  3846  0014B0  B0D8               	btfsc	status,0,c
  3847  0014B2  D00E               	goto	l2549
  3848  0014B4  EE20 F001          	lfsr	2,1
  3849  0014B8  5032               	movf	GetBackonTrack@error,w,c
  3850  0014BA  26D9               	addwf	fsr2l,f,c
  3851  0014BC  5033               	movf	GetBackonTrack@error+1,w,c
  3852  0014BE  22DA               	addwfc	fsr2h,f,c
  3853  0014C0  50DF               	movf	indf2,w,c
  3854  0014C2  0A80               	xorlw	128
  3855  0014C4  0F7D               	addlw	-131
  3856  0014C6  B0D8               	btfsc	status,0,c
  3857  0014C8  D003               	goto	l2549
  3858  0014CA  504A               	movf	_CW_rotation_flag,w,c
  3859  0014CC  B4D8               	btfsc	status,2,c
  3860  0014CE  D004               	goto	l2551
  3861  0014D0                     l2549:
  3862                           
  3863                           ;main3.c: 217: SharpTurn(CW);
  3864  0014D0  0E01               	movlw	1
  3865  0014D2  EC64  F00C         	call	_SharpTurn
  3866  0014D6  D095               	goto	l2599
  3867  0014D8                     l2551:
  3868                           
  3869                           ;main3.c: 218: else if((error[2]<-2) || (error[1]<-2) || CCW_rotation_flag)
  3870  0014D8  EE20 F002          	lfsr	2,2
  3871  0014DC  5032               	movf	GetBackonTrack@error,w,c
  3872  0014DE  26D9               	addwf	fsr2l,f,c
  3873  0014E0  5033               	movf	GetBackonTrack@error+1,w,c
  3874  0014E2  22DA               	addwfc	fsr2h,f,c
  3875  0014E4  50DF               	movf	indf2,w,c
  3876  0014E6  0A80               	xorlw	128
  3877  0014E8  0F82               	addlw	130
  3878  0014EA  A0D8               	btfss	status,0,c
  3879  0014EC  D00E               	goto	l2557
  3880  0014EE  EE20 F001          	lfsr	2,1
  3881  0014F2  5032               	movf	GetBackonTrack@error,w,c
  3882  0014F4  26D9               	addwf	fsr2l,f,c
  3883  0014F6  5033               	movf	GetBackonTrack@error+1,w,c
  3884  0014F8  22DA               	addwfc	fsr2h,f,c
  3885  0014FA  50DF               	movf	indf2,w,c
  3886  0014FC  0A80               	xorlw	128
  3887  0014FE  0F82               	addlw	130
  3888  001500  A0D8               	btfss	status,0,c
  3889  001502  D003               	goto	l2557
  3890  001504  5049               	movf	_CCW_rotation_flag,w,c
  3891  001506  B4D8               	btfsc	status,2,c
  3892  001508  D004               	goto	l2559
  3893  00150A                     l2557:
  3894                           
  3895                           ;main3.c: 219: SharpTurn(CCW);
  3896  00150A  0E00               	movlw	0
  3897  00150C  EC64  F00C         	call	_SharpTurn
  3898  001510  D078               	goto	l2599
  3899  001512                     l2559:
  3900                           
  3901                           ;main3.c: 220: else
  3902                           ;main3.c: 221: {
  3903                           ;main3.c: 222: WriteTimer0(0);
  3904  001512  0E00               	movlw	0
  3905  001514  6E10               	movwf	WriteTimer0@timer0+1,c
  3906  001516  0E00               	movlw	0
  3907  001518  6E0F               	movwf	WriteTimer0@timer0,c
  3908  00151A  EC83  F010         	call	_WriteTimer0	;wreg free
  3909                           
  3910                           ;main3.c: 223: TMR0IF = 0;
  3911  00151E  94F2               	bcf	intcon,2,c	;volatile
  3912                           
  3913                           ;main3.c: 224: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  3914  001520  D00D               	goto	l2567
  3915  001522                     l2563:
  3916                           
  3917                           ;main3.c: 225: {
  3918                           ;main3.c: 226: check_sensors();
  3919  001522  ECAC  F00B         	call	_check_sensors	;wreg free
  3920                           
  3921                           ;main3.c: 227: set_leds();
  3922  001526  EC4C  F00D         	call	_set_leds	;wreg free
  3923                           
  3924                           ;main3.c: 228: MotorControl(0,0);
  3925  00152A  0E00               	movlw	0
  3926  00152C  6E25               	movwf	MotorControl@delta_velocity+1,c
  3927  00152E  0E00               	movlw	0
  3928  001530  6E24               	movwf	MotorControl@delta_velocity,c
  3929  001532  0E00               	movlw	0
  3930  001534  6E26               	movwf	MotorControl@speed_divider,c
  3931  001536  EC69  F009         	call	_MotorControl	;wreg free
  3932  00153A  D000               	goto	l2567
  3933  00153C                     l2567:
  3934  00153C  504B               	movf	_SeeLine,w,c
  3935  00153E  0B1F               	andlw	31
  3936  001540  0900               	iorlw	0
  3937  001542  A4D8               	btfss	status,2,c
  3938  001544  D00C               	goto	l2573
  3939  001546  A4F2               	btfss	intcon,2,c	;volatile
  3940  001548  D7EC               	goto	l2563
  3941  00154A  EC7A  F010         	call	_ReadTimer0	;wreg free
  3942  00154E  0E3B               	movlw	59
  3943  001550  5C0F               	subwf	?_ReadTimer0,w,c
  3944  001552  0EE8               	movlw	232
  3945  001554  5810               	subwfb	?_ReadTimer0+1,w,c
  3946  001556  B0D8               	btfsc	status,0,c
  3947  001558  D002               	goto	l2573
  3948  00155A  D7E3               	goto	l2563
  3949  00155C  D000               	goto	l2573
  3950  00155E                     l2573:
  3951                           
  3952                           ;main3.c: 229: }
  3953                           ;main3.c: 231: if(!SeeLine.B)
  3954  00155E  504B               	movf	_SeeLine,w,c
  3955  001560  0B1F               	andlw	31
  3956  001562  0900               	iorlw	0
  3957  001564  A4D8               	btfss	status,2,c
  3958  001566  D04D               	goto	l2599
  3959                           
  3960                           ;main3.c: 232: {
  3961                           ;main3.c: 233: motors_brake_all();
  3962  001568  ECBC  F00F         	call	_motors_brake_all	;wreg free
  3963                           
  3964                           ;main3.c: 234: _delay(50000);
  3965  00156C  0E41               	movlw	65
  3966  00156E  6E34               	movwf	??_GetBackonTrack& (0+255),c
  3967  001570  0EEE               	movlw	238
  3968  001572                     u2347:
  3969  001572  2EE8               	decfsz	wreg,f,c
  3970  001574  D7FE               	goto	u2347
  3971  001576  2E34               	decfsz	??_GetBackonTrack& (0+255),f,c
  3972  001578  D7FC               	goto	u2347
  3973  00157A  D000               	nop2	
  3974                           
  3975                           ;main3.c: 235: MotorControl(1600, TURN_SPEED_DIVIDER);
  3976  00157C  0E06               	movlw	6
  3977  00157E  6E25               	movwf	MotorControl@delta_velocity+1,c
  3978  001580  0E40               	movlw	64
  3979  001582  6E24               	movwf	MotorControl@delta_velocity,c
  3980  001584  0E09               	movlw	low _TURN_SPEED_DIVIDER
  3981  001586  6EF6               	movwf	tblptrl,c
  3982  001588                     	if	1	;There is more than 1 active tblptr byte
  3983  001588  0E10               	movlw	high _TURN_SPEED_DIVIDER
  3984  00158A  6EF7               	movwf	tblptrh,c
  3985  00158C                     	endif
  3986  00158C                     	if	1	;There are 3 active tblptr bytes
  3987  00158C  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  3988  00158E  6EF8               	movwf	tblptru,c
  3989  001590                     	endif
  3990  001590  0008               	tblrd		*
  3991  001592  CFF5 F026          	movff	tablat,MotorControl@speed_divider
  3992  001596  EC69  F009         	call	_MotorControl	;wreg free
  3993                           
  3994                           ;main3.c: 237: for(unsigned int i=0; i < TURN_TIME_ms; i++)
  3995  00159A  0E00               	movlw	0
  3996  00159C  6E36               	movwf	GetBackonTrack@i+1,c
  3997  00159E  0E00               	movlw	0
  3998  0015A0  6E35               	movwf	GetBackonTrack@i,c
  3999  0015A2                     l2583:
  4000  0015A2  0E07               	movlw	low _TURN_TIME_ms
  4001  0015A4  6EF6               	movwf	tblptrl,c
  4002  0015A6                     	if	1	;There is more than 1 active tblptr byte
  4003  0015A6  0E10               	movlw	high _TURN_TIME_ms
  4004  0015A8  6EF7               	movwf	tblptrh,c
  4005  0015AA                     	endif
  4006  0015AA                     	if	1	;There are 3 active tblptr bytes
  4007  0015AA  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4008  0015AC  6EF8               	movwf	tblptru,c
  4009  0015AE                     	endif
  4010  0015AE  0009               	tblrd		*+
  4011  0015B0  50F5               	movf	tablat,w,c
  4012  0015B2  5C35               	subwf	GetBackonTrack@i,w,c
  4013  0015B4  0009               	tblrd		*+
  4014  0015B6  50F5               	movf	tablat,w,c
  4015  0015B8  5836               	subwfb	GetBackonTrack@i+1,w,c
  4016  0015BA  B0D8               	btfsc	status,0,c
  4017  0015BC  D01B               	goto	l2597
  4018  0015BE  D001               	goto	l2587
  4019  0015C0  D019               	goto	l2597
  4020  0015C2                     l2587:
  4021                           
  4022                           ;main3.c: 238: _delay(7991);
  4023  0015C2  0E0B               	movlw	11
  4024  0015C4  6E34               	movwf	??_GetBackonTrack& (0+255),c
  4025  0015C6  0E5F               	movlw	95
  4026  0015C8                     u2357:
  4027  0015C8  2EE8               	decfsz	wreg,f,c
  4028  0015CA  D7FE               	goto	u2357
  4029  0015CC  2E34               	decfsz	??_GetBackonTrack& (0+255),f,c
  4030  0015CE  D7FC               	goto	u2357
  4031  0015D0  D000               	nop2	
  4032  0015D2  4A35               	infsnz	GetBackonTrack@i,f,c
  4033  0015D4  2A36               	incf	GetBackonTrack@i+1,f,c
  4034  0015D6  D7E5               	goto	l2583
  4035                           
  4036                           ;main3.c: 240: while (!SeeLine.B)
  4037  0015D8  D00D               	goto	l2597
  4038  0015DA                     l2593:
  4039                           
  4040                           ;main3.c: 241: {
  4041                           ;main3.c: 242: check_sensors();
  4042  0015DA  ECAC  F00B         	call	_check_sensors	;wreg free
  4043                           
  4044                           ;main3.c: 243: set_leds();
  4045  0015DE  EC4C  F00D         	call	_set_leds	;wreg free
  4046                           
  4047                           ;main3.c: 244: MotorControl(0,0);
  4048  0015E2  0E00               	movlw	0
  4049  0015E4  6E25               	movwf	MotorControl@delta_velocity+1,c
  4050  0015E6  0E00               	movlw	0
  4051  0015E8  6E24               	movwf	MotorControl@delta_velocity,c
  4052  0015EA  0E00               	movlw	0
  4053  0015EC  6E26               	movwf	MotorControl@speed_divider,c
  4054  0015EE  EC69  F009         	call	_MotorControl	;wreg free
  4055  0015F2  D000               	goto	l2597
  4056  0015F4                     l2597:
  4057  0015F4  504B               	movf	_SeeLine,w,c
  4058  0015F6  0B1F               	andlw	31
  4059  0015F8  0900               	iorlw	0
  4060  0015FA  A4D8               	btfss	status,2,c
  4061  0015FC  D002               	goto	l2599
  4062  0015FE  D7ED               	goto	l2593
  4063  001600  D000               	goto	l2599
  4064  001602                     l2599:
  4065                           
  4066                           ;main3.c: 245: }
  4067                           ;main3.c: 246: }
  4068                           ;main3.c: 247: }
  4069                           ;main3.c: 249: I_time=0;
  4070  001602  0E00               	movlw	0
  4071  001604  6E46               	movwf	_I_time+1,c
  4072  001606  0E00               	movlw	0
  4073  001608  6E45               	movwf	_I_time,c
  4074                           
  4075                           ;main3.c: 250: D_time=0;
  4076  00160A  0E00               	movlw	0
  4077  00160C  6E42               	movwf	_D_time+1,c
  4078  00160E  0E00               	movlw	0
  4079  001610  6E41               	movwf	_D_time,c
  4080  001612  0012               	return		;funcret
  4081  001614                     __end_of_GetBackonTrack:
  4082                           	opt stack 0
  4083                           stkptr	equ	0xFFC
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           intcon	equ	0xFF2
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           indf1	equ	0xFE7
  4092                           postinc1	equ	0xFE6
  4093                           fsr1h	equ	0xFE2
  4094                           fsr1l	equ	0xFE1
  4095                           indf2	equ	0xFDF
  4096                           postinc2	equ	0xFDE
  4097                           plusw2	equ	0xFDB
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _SharpTurn *****************
  4103 ;; Defined at:
  4104 ;;		line 254 in file "../Robot Files/main3.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  direction       1    wreg     enum E4173
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  direction       1   46[COMRAM] enum E4173
  4109 ;;  delta_veloci    2   47[COMRAM] int 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;		None               void
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        4 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    4
  4126 ;; This function calls:
  4127 ;;		_MotorControl
  4128 ;;		_check_sensors
  4129 ;;		_motors_brake_all
  4130 ;;		_set_leds
  4131 ;; This function is called by:
  4132 ;;		_GetBackonTrack
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text34
  4137  0018C8                     __ptext34:
  4138                           	opt stack 0
  4139  0018C8                     _SharpTurn:
  4140                           	opt stack 25
  4141                           
  4142                           ;incstack = 0
  4143                           ;SharpTurn@direction stored from wreg
  4144  0018C8  6E2F               	movwf	SharpTurn@direction,c
  4145                           
  4146                           ;main3.c: 256: int delta_velocity;
  4147                           ;main3.c: 258: motors_brake_all();
  4148  0018CA  ECBC  F00F         	call	_motors_brake_all	;wreg free
  4149                           
  4150                           ;main3.c: 259: _delay(50000);
  4151  0018CE  0E41               	movlw	65
  4152  0018D0  6E2E               	movwf	??_SharpTurn& (0+255),c
  4153  0018D2  0EEE               	movlw	238
  4154  0018D4                     u2367:
  4155  0018D4  2EE8               	decfsz	wreg,f,c
  4156  0018D6  D7FE               	goto	u2367
  4157  0018D8  2E2E               	decfsz	??_SharpTurn& (0+255),f,c
  4158  0018DA  D7FC               	goto	u2367
  4159  0018DC  D000               	nop2	
  4160                           
  4161                           ;main3.c: 260: if(direction)
  4162  0018DE  502F               	movf	SharpTurn@direction,w,c
  4163  0018E0  B4D8               	btfsc	status,2,c
  4164  0018E2  D022               	goto	l2441
  4165                           
  4166                           ;main3.c: 261: {
  4167                           ;main3.c: 262: delta_velocity = 1600;
  4168  0018E4  0E06               	movlw	6
  4169  0018E6  6E31               	movwf	SharpTurn@delta_velocity+1,c
  4170  0018E8  0E40               	movlw	64
  4171  0018EA  6E30               	movwf	SharpTurn@delta_velocity,c
  4172                           
  4173                           ;main3.c: 263: while (!SeeLine.b.CntLeft && delta_velocity)
  4174  0018EC  D012               	goto	l2435
  4175  0018EE                     l2427:
  4176                           
  4177                           ;main3.c: 265: {
  4178                           ;main3.c: 266: check_sensors();
  4179  0018EE  ECAC  F00B         	call	_check_sensors	;wreg free
  4180                           
  4181                           ;main3.c: 267: set_leds();
  4182  0018F2  EC4C  F00D         	call	_set_leds	;wreg free
  4183                           
  4184                           ;main3.c: 268: MotorControl(delta_velocity,0);
  4185  0018F6  C030  F024         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4186  0018FA  C031  F025         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4187  0018FE  0E00               	movlw	0
  4188  001900  6E26               	movwf	MotorControl@speed_divider,c
  4189  001902  EC69  F009         	call	_MotorControl	;wreg free
  4190                           
  4191                           ;main3.c: 269: if (SeeLine.b.Center)
  4192  001906  A44B               	btfss	_SeeLine,2,c
  4193  001908  D004               	goto	l2435
  4194                           
  4195                           ;main3.c: 270: delta_velocity--;
  4196  00190A  0630               	decf	SharpTurn@delta_velocity,f,c
  4197  00190C  A0D8               	btfss	status,0,c
  4198  00190E  0631               	decf	SharpTurn@delta_velocity+1,f,c
  4199  001910  D000               	goto	l2435
  4200  001912                     l2435:
  4201  001912  B64B               	btfsc	_SeeLine,3,c
  4202  001914  D006               	goto	l2439
  4203  001916  5030               	movf	SharpTurn@delta_velocity,w,c
  4204  001918  1031               	iorwf	SharpTurn@delta_velocity+1,w,c
  4205  00191A  B4D8               	btfsc	status,2,c
  4206  00191C  D002               	goto	l2439
  4207  00191E  D7E7               	goto	l2427
  4208  001920  D000               	goto	l2439
  4209  001922                     l2439:
  4210                           
  4211                           ;main3.c: 271: }
  4212                           ;main3.c: 272: CW_rotation_flag = 0;
  4213  001922  0E00               	movlw	0
  4214  001924  6E4A               	movwf	_CW_rotation_flag,c
  4215                           
  4216                           ;main3.c: 273: }
  4217  001926  D020               	goto	l400
  4218  001928                     l2441:
  4219                           
  4220                           ;main3.c: 274: else
  4221                           ;main3.c: 275: {
  4222                           ;main3.c: 276: delta_velocity = -1600;
  4223  001928  0EF9               	movlw	249
  4224  00192A  6E31               	movwf	SharpTurn@delta_velocity+1,c
  4225  00192C  0EC0               	movlw	192
  4226  00192E  6E30               	movwf	SharpTurn@delta_velocity,c
  4227                           
  4228                           ;main3.c: 277: while (!SeeLine.b.CntRight && delta_velocity)
  4229  001930  D011               	goto	l2451
  4230  001932                     l2443:
  4231                           
  4232                           ;main3.c: 279: {
  4233                           ;main3.c: 280: check_sensors();
  4234  001932  ECAC  F00B         	call	_check_sensors	;wreg free
  4235                           
  4236                           ;main3.c: 281: set_leds();
  4237  001936  EC4C  F00D         	call	_set_leds	;wreg free
  4238                           
  4239                           ;main3.c: 282: MotorControl(delta_velocity,0);
  4240  00193A  C030  F024         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4241  00193E  C031  F025         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4242  001942  0E00               	movlw	0
  4243  001944  6E26               	movwf	MotorControl@speed_divider,c
  4244  001946  EC69  F009         	call	_MotorControl	;wreg free
  4245                           
  4246                           ;main3.c: 283: if (SeeLine.b.Center)
  4247  00194A  A44B               	btfss	_SeeLine,2,c
  4248  00194C  D003               	goto	l2451
  4249                           
  4250                           ;main3.c: 284: delta_velocity++;
  4251  00194E  4A30               	infsnz	SharpTurn@delta_velocity,f,c
  4252  001950  2A31               	incf	SharpTurn@delta_velocity+1,f,c
  4253  001952  D000               	goto	l2451
  4254  001954                     l2451:
  4255  001954  B24B               	btfsc	_SeeLine,1,c
  4256  001956  D006               	goto	l2455
  4257  001958  5030               	movf	SharpTurn@delta_velocity,w,c
  4258  00195A  1031               	iorwf	SharpTurn@delta_velocity+1,w,c
  4259  00195C  B4D8               	btfsc	status,2,c
  4260  00195E  D002               	goto	l2455
  4261  001960  D7E8               	goto	l2443
  4262  001962  D000               	goto	l2455
  4263  001964                     l2455:
  4264                           
  4265                           ;main3.c: 285: }
  4266                           ;main3.c: 286: CCW_rotation_flag = 0;
  4267  001964  0E00               	movlw	0
  4268  001966  6E49               	movwf	_CCW_rotation_flag,c
  4269  001968                     l400:
  4270                           
  4271                           ;main3.c: 287: }
  4272                           ;main3.c: 288: I = 0;
  4273  001968  0E00               	movlw	0
  4274  00196A  6E44               	movwf	_I+1,c
  4275  00196C  0E00               	movlw	0
  4276  00196E  6E43               	movwf	_I,c
  4277  001970  0012               	return		;funcret
  4278  001972                     __end_of_SharpTurn:
  4279                           	opt stack 0
  4280                           stkptr	equ	0xFFC
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           intcon	equ	0xFF2
  4286                           postinc0	equ	0xFEE
  4287                           wreg	equ	0xFE8
  4288                           indf1	equ	0xFE7
  4289                           postinc1	equ	0xFE6
  4290                           fsr1h	equ	0xFE2
  4291                           fsr1l	equ	0xFE1
  4292                           indf2	equ	0xFDF
  4293                           postinc2	equ	0xFDE
  4294                           plusw2	equ	0xFDB
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _ReadTimer0 *****************
  4300 ;; Defined at:
  4301 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  timer           2   16[COMRAM] struct Timers
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2   14[COMRAM] unsigned int 
  4308 ;; Registers used:
  4309 ;;		None
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;Total ram usage:        4 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    1
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_GetBackonTrack
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text35
  4330  0020F4                     __ptext35:
  4331                           	opt stack 0
  4332  0020F4                     _ReadTimer0:
  4333                           	opt stack 28
  4334                           
  4335                           ;incstack = 0
  4336  0020F4  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4337  0020F8  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4338  0020FC  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4339  002100  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4340  002104  0012               	return		;funcret
  4341  002106                     __end_of_ReadTimer0:
  4342                           	opt stack 0
  4343                           stkptr	equ	0xFFC
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           intcon	equ	0xFF2
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           indf1	equ	0xFE7
  4352                           postinc1	equ	0xFE6
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           postinc2	equ	0xFDE
  4357                           plusw2	equ	0xFDB
  4358                           fsr2h	equ	0xFDA
  4359                           fsr2l	equ	0xFD9
  4360                           status	equ	0xFD8
  4361                           
  4362 ;; *************** function _FilterNearbyTrack *****************
  4363 ;; Defined at:
  4364 ;;		line 317 in file "../Robot Files/main3.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;		None               void
  4371 ;; Registers used:
  4372 ;;		None
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text36
  4393  001FFA                     __ptext36:
  4394                           	opt stack 0
  4395  001FFA                     _FilterNearbyTrack:
  4396                           	opt stack 29
  4397                           
  4398                           ;main3.c: 321: if((SeeLine.b.Left && !SeeLine.b.CntLeft) && (SeeLine.b.Center || SeeLine
      +                          .b.CntRight))
  4399                           
  4400                           ;incstack = 0
  4401  001FFA  B84B               	btfsc	_SeeLine,4,c
  4402  001FFC  B64B               	btfsc	_SeeLine,3,c
  4403  001FFE  D003               	goto	l422
  4404  002000  A44B               	btfss	_SeeLine,2,c
  4405  002002  B24B               	btfsc	_SeeLine,1,c
  4406                           
  4407                           ;main3.c: 322: SeeLine.b.Left = 0;
  4408  002004  984B               	bcf	_SeeLine,4,c
  4409  002006                     l422:
  4410                           
  4411                           ;main3.c: 326: if((SeeLine.b.Right && !SeeLine.b.CntRight) && (SeeLine.b.Center || SeeLi
      +                          ne.b.CntLeft))
  4412  002006  B04B               	btfsc	_SeeLine,0,c
  4413  002008  B24B               	btfsc	_SeeLine,1,c
  4414  00200A  D006               	goto	l428
  4415  00200C  B44B               	btfsc	_SeeLine,2,c
  4416  00200E  D002               	goto	l427
  4417  002010  A64B               	btfss	_SeeLine,3,c
  4418  002012  D002               	goto	l428
  4419  002014                     l427:
  4420                           
  4421                           ;main3.c: 327: SeeLine.b.Right = 0;
  4422  002014  904B               	bcf	_SeeLine,0,c
  4423  002016  D000               	goto	l428
  4424  002018                     l428:
  4425  002018  0012               	return		;funcret
  4426  00201A                     __end_of_FilterNearbyTrack:
  4427                           	opt stack 0
  4428                           stkptr	equ	0xFFC
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           intcon	equ	0xFF2
  4434                           postinc0	equ	0xFEE
  4435                           wreg	equ	0xFE8
  4436                           indf1	equ	0xFE7
  4437                           postinc1	equ	0xFE6
  4438                           fsr1h	equ	0xFE2
  4439                           fsr1l	equ	0xFE1
  4440                           indf2	equ	0xFDF
  4441                           postinc2	equ	0xFDE
  4442                           plusw2	equ	0xFDB
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _AllSensorsTriggered *****************
  4448 ;; Defined at:
  4449 ;;		line 292 in file "../Robot Files/main3.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;		None               void
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        0 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    4
  4470 ;; This function calls:
  4471 ;;		_MotorControl
  4472 ;;		_WriteTimer0
  4473 ;;		_check_sensors
  4474 ;;		_motors_brake_all
  4475 ;;		_set_leds
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text37
  4482  001B94                     __ptext37:
  4483                           	opt stack 0
  4484  001B94                     _AllSensorsTriggered:
  4485                           	opt stack 26
  4486                           
  4487                           ;main3.c: 294: WriteTimer0(0);
  4488                           
  4489                           ;incstack = 0
  4490  001B94  0E00               	movlw	0
  4491  001B96  6E10               	movwf	WriteTimer0@timer0+1,c
  4492  001B98  0E00               	movlw	0
  4493  001B9A  6E0F               	movwf	WriteTimer0@timer0,c
  4494  001B9C  EC83  F010         	call	_WriteTimer0	;wreg free
  4495                           
  4496                           ;main3.c: 295: TMR0IF = 0;
  4497  001BA0  94F2               	bcf	intcon,2,c	;volatile
  4498                           
  4499                           ;main3.c: 296: while (SeeLine.B==0b11111u && !(TMR0IF))
  4500  001BA2  D00D               	goto	l2609
  4501  001BA4                     l2605:
  4502                           
  4503                           ;main3.c: 297: {
  4504                           ;main3.c: 298: check_sensors();
  4505  001BA4  ECAC  F00B         	call	_check_sensors	;wreg free
  4506                           
  4507                           ;main3.c: 299: set_leds();
  4508  001BA8  EC4C  F00D         	call	_set_leds	;wreg free
  4509                           
  4510                           ;main3.c: 300: MotorControl(0,0);
  4511  001BAC  0E00               	movlw	0
  4512  001BAE  6E25               	movwf	MotorControl@delta_velocity+1,c
  4513  001BB0  0E00               	movlw	0
  4514  001BB2  6E24               	movwf	MotorControl@delta_velocity,c
  4515  001BB4  0E00               	movlw	0
  4516  001BB6  6E26               	movwf	MotorControl@speed_divider,c
  4517  001BB8  EC69  F009         	call	_MotorControl	;wreg free
  4518  001BBC  D000               	goto	l2609
  4519  001BBE                     l2609:
  4520  001BBE  504B               	movf	_SeeLine,w,c
  4521  001BC0  0B1F               	andlw	31
  4522  001BC2  0A1F               	xorlw	31
  4523  001BC4  B4D8               	btfsc	status,2,c
  4524  001BC6  B4F2               	btfsc	intcon,2,c	;volatile
  4525  001BC8  D002               	goto	l2613
  4526  001BCA  D7EC               	goto	l2605
  4527  001BCC  D000               	goto	l2613
  4528  001BCE                     l2613:
  4529                           
  4530                           ;main3.c: 301: }
  4531                           ;main3.c: 302: if (SeeLine.B==0b11111u)
  4532  001BCE  504B               	movf	_SeeLine,w,c
  4533  001BD0  0B1F               	andlw	31
  4534  001BD2  0A1F               	xorlw	31
  4535  001BD4  A4D8               	btfss	status,2,c
  4536  001BD6  D00F               	goto	l2621
  4537                           
  4538                           ;main3.c: 303: {
  4539                           ;main3.c: 304: motors_brake_all();
  4540  001BD8  ECBC  F00F         	call	_motors_brake_all	;wreg free
  4541                           
  4542                           ;main3.c: 305: while (SeeLine.B==0b11111u)
  4543  001BDC  D005               	goto	l2619
  4544  001BDE                     l2617:
  4545                           
  4546                           ;main3.c: 306: {
  4547                           ;main3.c: 307: check_sensors();
  4548  001BDE  ECAC  F00B         	call	_check_sensors	;wreg free
  4549                           
  4550                           ;main3.c: 308: set_leds();
  4551  001BE2  EC4C  F00D         	call	_set_leds	;wreg free
  4552  001BE6  D000               	goto	l2619
  4553  001BE8                     l2619:
  4554  001BE8  504B               	movf	_SeeLine,w,c
  4555  001BEA  0B1F               	andlw	31
  4556  001BEC  0A1F               	xorlw	31
  4557  001BEE  A4D8               	btfss	status,2,c
  4558  001BF0  D002               	goto	l2621
  4559  001BF2  D7F5               	goto	l2617
  4560  001BF4  D000               	goto	l2621
  4561  001BF6                     l2621:
  4562                           
  4563                           ;main3.c: 309: }
  4564                           ;main3.c: 310: }
  4565                           ;main3.c: 312: I_time=0;
  4566  001BF6  0E00               	movlw	0
  4567  001BF8  6E46               	movwf	_I_time+1,c
  4568  001BFA  0E00               	movlw	0
  4569  001BFC  6E45               	movwf	_I_time,c
  4570                           
  4571                           ;main3.c: 313: D_time=0;
  4572  001BFE  0E00               	movlw	0
  4573  001C00  6E42               	movwf	_D_time+1,c
  4574  001C02  0E00               	movlw	0
  4575  001C04  6E41               	movwf	_D_time,c
  4576  001C06  0012               	return		;funcret
  4577  001C08                     __end_of_AllSensorsTriggered:
  4578                           	opt stack 0
  4579                           stkptr	equ	0xFFC
  4580                           tblptru	equ	0xFF8
  4581                           tblptrh	equ	0xFF7
  4582                           tblptrl	equ	0xFF6
  4583                           tablat	equ	0xFF5
  4584                           intcon	equ	0xFF2
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           indf1	equ	0xFE7
  4588                           postinc1	equ	0xFE6
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           indf2	equ	0xFDF
  4592                           postinc2	equ	0xFDE
  4593                           plusw2	equ	0xFDB
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function _set_leds *****************
  4599 ;; Defined at:
  4600 ;;		line 256 in file "../Robot Files/sumovore.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;		None               void
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        1 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_main
  4625 ;;		_GetBackonTrack
  4626 ;;		_SharpTurn
  4627 ;;		_AllSensorsTriggered
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text38
  4632  001A98                     __ptext38:
  4633                           	opt stack 0
  4634  001A98                     _set_leds:
  4635                           	opt stack 29
  4636                           
  4637                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4638                           
  4639                           ;incstack = 0
  4640  001A98  B84B               	btfsc	_SeeLine,4,c
  4641  001A9A  D003               	goto	u240
  4642  001A9C  6A0F               	clrf	??_set_leds& (0+255),c
  4643  001A9E  2A0F               	incf	??_set_leds& (0+255),f,c
  4644  001AA0  D001               	goto	u258
  4645  001AA2                     u240:
  4646  001AA2  6A0F               	clrf	??_set_leds& (0+255),c
  4647  001AA4                     u258:
  4648  001AA4  5083               	movf	3971,w,c	;volatile
  4649  001AA6  180F               	xorwf	??_set_leds,w,c
  4650  001AA8  0BFE               	andlw	-2
  4651  001AAA  180F               	xorwf	??_set_leds,w,c
  4652  001AAC  6E83               	movwf	3971,c	;volatile
  4653                           
  4654                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  4655  001AAE  B64B               	btfsc	_SeeLine,3,c
  4656  001AB0  D003               	goto	u260
  4657  001AB2  6A0F               	clrf	??_set_leds& (0+255),c
  4658  001AB4  2A0F               	incf	??_set_leds& (0+255),f,c
  4659  001AB6  D001               	goto	u278
  4660  001AB8                     u260:
  4661  001AB8  6A0F               	clrf	??_set_leds& (0+255),c
  4662  001ABA                     u278:
  4663  001ABA  460F               	rlncf	??_set_leds,f,c
  4664  001ABC  5083               	movf	3971,w,c	;volatile
  4665  001ABE  180F               	xorwf	??_set_leds,w,c
  4666  001AC0  0BFD               	andlw	-3
  4667  001AC2  180F               	xorwf	??_set_leds,w,c
  4668  001AC4  6E83               	movwf	3971,c	;volatile
  4669                           
  4670                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  4671  001AC6  B44B               	btfsc	_SeeLine,2,c
  4672  001AC8  D003               	goto	u280
  4673  001ACA  6A0F               	clrf	??_set_leds& (0+255),c
  4674  001ACC  2A0F               	incf	??_set_leds& (0+255),f,c
  4675  001ACE  D001               	goto	u298
  4676  001AD0                     u280:
  4677  001AD0  6A0F               	clrf	??_set_leds& (0+255),c
  4678  001AD2                     u298:
  4679  001AD2  460F               	rlncf	??_set_leds,f,c
  4680  001AD4  460F               	rlncf	??_set_leds,f,c
  4681  001AD6  5083               	movf	3971,w,c	;volatile
  4682  001AD8  180F               	xorwf	??_set_leds,w,c
  4683  001ADA  0BFB               	andlw	-5
  4684  001ADC  180F               	xorwf	??_set_leds,w,c
  4685  001ADE  6E83               	movwf	3971,c	;volatile
  4686                           
  4687                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  4688  001AE0  B24B               	btfsc	_SeeLine,1,c
  4689  001AE2  D003               	goto	u300
  4690  001AE4  6A0F               	clrf	??_set_leds& (0+255),c
  4691  001AE6  2A0F               	incf	??_set_leds& (0+255),f,c
  4692  001AE8  D001               	goto	u318
  4693  001AEA                     u300:
  4694  001AEA  6A0F               	clrf	??_set_leds& (0+255),c
  4695  001AEC                     u318:
  4696  001AEC  460F               	rlncf	??_set_leds,f,c
  4697  001AEE  460F               	rlncf	??_set_leds,f,c
  4698  001AF0  460F               	rlncf	??_set_leds,f,c
  4699  001AF2  5083               	movf	3971,w,c	;volatile
  4700  001AF4  180F               	xorwf	??_set_leds,w,c
  4701  001AF6  0BF7               	andlw	-9
  4702  001AF8  180F               	xorwf	??_set_leds,w,c
  4703  001AFA  6E83               	movwf	3971,c	;volatile
  4704                           
  4705                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  4706  001AFC  B04B               	btfsc	_SeeLine,0,c
  4707  001AFE  D003               	goto	u320
  4708  001B00  6A0F               	clrf	??_set_leds& (0+255),c
  4709  001B02  2A0F               	incf	??_set_leds& (0+255),f,c
  4710  001B04  D001               	goto	u338
  4711  001B06                     u320:
  4712  001B06  6A0F               	clrf	??_set_leds& (0+255),c
  4713  001B08                     u338:
  4714  001B08  3A0F               	swapf	??_set_leds,f,c
  4715  001B0A  5083               	movf	3971,w,c	;volatile
  4716  001B0C  180F               	xorwf	??_set_leds,w,c
  4717  001B0E  0BEF               	andlw	-17
  4718  001B10  180F               	xorwf	??_set_leds,w,c
  4719  001B12  6E83               	movwf	3971,c	;volatile
  4720  001B14  0012               	return		;funcret
  4721  001B16                     __end_of_set_leds:
  4722                           	opt stack 0
  4723                           stkptr	equ	0xFFC
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           intcon	equ	0xFF2
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           indf1	equ	0xFE7
  4732                           postinc1	equ	0xFE6
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           indf2	equ	0xFDF
  4736                           postinc2	equ	0xFDE
  4737                           plusw2	equ	0xFDB
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _motors_brake_all *****************
  4743 ;; Defined at:
  4744 ;;		line 219 in file "../Robot Files/sumovore.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;		None               void
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    2
  4765 ;; This function calls:
  4766 ;;		_SetDCPWM1
  4767 ;;		_SetDCPWM2
  4768 ;; This function is called by:
  4769 ;;		_GetBackonTrack
  4770 ;;		_SharpTurn
  4771 ;;		_AllSensorsTriggered
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text39
  4776  001F78                     __ptext39:
  4777                           	opt stack 0
  4778  001F78                     _motors_brake_all:
  4779                           	opt stack 27
  4780                           
  4781                           ;sumovore.c: 221: SetDCPWM1(800u );
  4782                           
  4783                           ;incstack = 0
  4784  001F78  0E03               	movlw	3
  4785  001F7A  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  4786  001F7C  0E20               	movlw	32
  4787  001F7E  6E0F               	movwf	SetDCPWM1@dutycycle,c
  4788  001F80  EC08  F00F         	call	_SetDCPWM1	;wreg free
  4789                           
  4790                           ;sumovore.c: 222: SetDCPWM2(800u );
  4791  001F84  0E03               	movlw	3
  4792  001F86  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  4793  001F88  0E20               	movlw	32
  4794  001F8A  6E0F               	movwf	SetDCPWM2@dutycycle,c
  4795  001F8C  ECEB  F00E         	call	_SetDCPWM2	;wreg free
  4796                           
  4797                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  4798  001F90  9284               	bcf	3972,1,c	;volatile
  4799                           
  4800                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  4801  001F92  9082               	bcf	3970,0,c	;volatile
  4802                           
  4803                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  4804  001F94  9084               	bcf	3972,0,c	;volatile
  4805                           
  4806                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  4807  001F96  9A82               	bcf	3970,5,c	;volatile
  4808  001F98  0012               	return		;funcret
  4809  001F9A                     __end_of_motors_brake_all:
  4810                           	opt stack 0
  4811                           stkptr	equ	0xFFC
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           intcon	equ	0xFF2
  4817                           postinc0	equ	0xFEE
  4818                           wreg	equ	0xFE8
  4819                           indf1	equ	0xFE7
  4820                           postinc1	equ	0xFE6
  4821                           fsr1h	equ	0xFE2
  4822                           fsr1l	equ	0xFE1
  4823                           indf2	equ	0xFDF
  4824                           postinc2	equ	0xFDE
  4825                           plusw2	equ	0xFDB
  4826                           fsr2h	equ	0xFDA
  4827                           fsr2l	equ	0xFD9
  4828                           status	equ	0xFD8
  4829                           
  4830 ;; *************** function _check_sensors *****************
  4831 ;; Defined at:
  4832 ;;		line 242 in file "../Robot Files/sumovore.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;		None               void
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;Total ram usage:        1 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    3
  4853 ;; This function calls:
  4854 ;;		_adc
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;;		_GetBackonTrack
  4858 ;;		_SharpTurn
  4859 ;;		_AllSensorsTriggered
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text40
  4864  001758                     __ptext40:
  4865                           	opt stack 0
  4866  001758                     _check_sensors:
  4867                           	opt stack 27
  4868                           
  4869                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  4870                           
  4871                           ;incstack = 0
  4872  001758  0E87               	movlw	135
  4873  00175A  EC6E  F00F         	call	_adc
  4874  00175E  5013               	movf	?_adc,w,c
  4875  001760  5C47               	subwf	_threshold,w,c
  4876  001762  5014               	movf	?_adc+1,w,c
  4877  001764  5848               	subwfb	_threshold+1,w,c
  4878  001766  B0D8               	btfsc	status,0,c
  4879  001768  D003               	goto	u1500
  4880  00176A  6A16               	clrf	??_check_sensors& (0+255),c
  4881  00176C  2A16               	incf	??_check_sensors& (0+255),f,c
  4882  00176E  D001               	goto	u1518
  4883  001770                     u1500:
  4884  001770  6A16               	clrf	??_check_sensors& (0+255),c
  4885  001772                     u1518:
  4886  001772  3A16               	swapf	??_check_sensors,f,c
  4887  001774  504B               	movf	_SeeLine,w,c
  4888  001776  1816               	xorwf	??_check_sensors,w,c
  4889  001778  0BEF               	andlw	-17
  4890  00177A  1816               	xorwf	??_check_sensors,w,c
  4891  00177C  6E4B               	movwf	_SeeLine,c
  4892                           
  4893                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  4894  00177E  0E8F               	movlw	143
  4895  001780  EC6E  F00F         	call	_adc
  4896  001784  5013               	movf	?_adc,w,c
  4897  001786  5C47               	subwf	_threshold,w,c
  4898  001788  5014               	movf	?_adc+1,w,c
  4899  00178A  5848               	subwfb	_threshold+1,w,c
  4900  00178C  B0D8               	btfsc	status,0,c
  4901  00178E  D003               	goto	u1520
  4902  001790  6A16               	clrf	??_check_sensors& (0+255),c
  4903  001792  2A16               	incf	??_check_sensors& (0+255),f,c
  4904  001794  D001               	goto	u1538
  4905  001796                     u1520:
  4906  001796  6A16               	clrf	??_check_sensors& (0+255),c
  4907  001798                     u1538:
  4908  001798  4616               	rlncf	??_check_sensors,f,c
  4909  00179A  4616               	rlncf	??_check_sensors,f,c
  4910  00179C  4616               	rlncf	??_check_sensors,f,c
  4911  00179E  504B               	movf	_SeeLine,w,c
  4912  0017A0  1816               	xorwf	??_check_sensors,w,c
  4913  0017A2  0BF7               	andlw	-9
  4914  0017A4  1816               	xorwf	??_check_sensors,w,c
  4915  0017A6  6E4B               	movwf	_SeeLine,c
  4916                           
  4917                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  4918  0017A8  0E97               	movlw	151
  4919  0017AA  EC6E  F00F         	call	_adc
  4920  0017AE  5013               	movf	?_adc,w,c
  4921  0017B0  5C47               	subwf	_threshold,w,c
  4922  0017B2  5014               	movf	?_adc+1,w,c
  4923  0017B4  5848               	subwfb	_threshold+1,w,c
  4924  0017B6  B0D8               	btfsc	status,0,c
  4925  0017B8  D003               	goto	u1540
  4926  0017BA  6A16               	clrf	??_check_sensors& (0+255),c
  4927  0017BC  2A16               	incf	??_check_sensors& (0+255),f,c
  4928  0017BE  D001               	goto	u1558
  4929  0017C0                     u1540:
  4930  0017C0  6A16               	clrf	??_check_sensors& (0+255),c
  4931  0017C2                     u1558:
  4932  0017C2  4616               	rlncf	??_check_sensors,f,c
  4933  0017C4  4616               	rlncf	??_check_sensors,f,c
  4934  0017C6  504B               	movf	_SeeLine,w,c
  4935  0017C8  1816               	xorwf	??_check_sensors,w,c
  4936  0017CA  0BFB               	andlw	-5
  4937  0017CC  1816               	xorwf	??_check_sensors,w,c
  4938  0017CE  6E4B               	movwf	_SeeLine,c
  4939                           
  4940                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  4941  0017D0  0E9F               	movlw	159
  4942  0017D2  EC6E  F00F         	call	_adc
  4943  0017D6  5013               	movf	?_adc,w,c
  4944  0017D8  5C47               	subwf	_threshold,w,c
  4945  0017DA  5014               	movf	?_adc+1,w,c
  4946  0017DC  5848               	subwfb	_threshold+1,w,c
  4947  0017DE  B0D8               	btfsc	status,0,c
  4948  0017E0  D003               	goto	u1560
  4949  0017E2  6A16               	clrf	??_check_sensors& (0+255),c
  4950  0017E4  2A16               	incf	??_check_sensors& (0+255),f,c
  4951  0017E6  D001               	goto	u1578
  4952  0017E8                     u1560:
  4953  0017E8  6A16               	clrf	??_check_sensors& (0+255),c
  4954  0017EA                     u1578:
  4955  0017EA  4616               	rlncf	??_check_sensors,f,c
  4956  0017EC  504B               	movf	_SeeLine,w,c
  4957  0017EE  1816               	xorwf	??_check_sensors,w,c
  4958  0017F0  0BFD               	andlw	-3
  4959  0017F2  1816               	xorwf	??_check_sensors,w,c
  4960  0017F4  6E4B               	movwf	_SeeLine,c
  4961                           
  4962                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  4963  0017F6  0EA7               	movlw	167
  4964  0017F8  EC6E  F00F         	call	_adc
  4965  0017FC  5013               	movf	?_adc,w,c
  4966  0017FE  5C47               	subwf	_threshold,w,c
  4967  001800  5014               	movf	?_adc+1,w,c
  4968  001802  5848               	subwfb	_threshold+1,w,c
  4969  001804  B0D8               	btfsc	status,0,c
  4970  001806  D003               	goto	u1580
  4971  001808  6A16               	clrf	??_check_sensors& (0+255),c
  4972  00180A  2A16               	incf	??_check_sensors& (0+255),f,c
  4973  00180C  D001               	goto	u1598
  4974  00180E                     u1580:
  4975  00180E  6A16               	clrf	??_check_sensors& (0+255),c
  4976  001810                     u1598:
  4977  001810  504B               	movf	_SeeLine,w,c
  4978  001812  1816               	xorwf	??_check_sensors,w,c
  4979  001814  0BFE               	andlw	-2
  4980  001816  1816               	xorwf	??_check_sensors,w,c
  4981  001818  6E4B               	movwf	_SeeLine,c
  4982  00181A  0012               	return		;funcret
  4983  00181C                     __end_of_check_sensors:
  4984                           	opt stack 0
  4985                           stkptr	equ	0xFFC
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           intcon	equ	0xFF2
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           indf1	equ	0xFE7
  4994                           postinc1	equ	0xFE6
  4995                           fsr1h	equ	0xFE2
  4996                           fsr1l	equ	0xFE1
  4997                           indf2	equ	0xFDF
  4998                           postinc2	equ	0xFDE
  4999                           plusw2	equ	0xFDB
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _adc *****************
  5005 ;; Defined at:
  5006 ;;		line 230 in file "../Robot Files/sumovore.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  channel         1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  channel         1   20[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  2   18[COMRAM] unsigned int 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;Total ram usage:        3 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		_BusyADC
  5029 ;;		_ConvertADC
  5030 ;;		_ReadADC
  5031 ;;		_SetChanADC
  5032 ;; This function is called by:
  5033 ;;		_check_sensors
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text41
  5038  001EDC                     __ptext41:
  5039                           	opt stack 0
  5040  001EDC                     _adc:
  5041                           	opt stack 27
  5042                           
  5043                           ;incstack = 0
  5044                           ;adc@channel stored from wreg
  5045  001EDC  6E15               	movwf	adc@channel,c
  5046                           
  5047                           ;sumovore.c: 232: SetChanADC( channel );
  5048  001EDE  5015               	movf	adc@channel,w,c
  5049  001EE0  EC5D  F010         	call	_SetChanADC
  5050                           
  5051                           ;sumovore.c: 233: ConvertADC();
  5052  001EE4  ECB7  F010         	call	_ConvertADC	;wreg free
  5053                           
  5054                           ;sumovore.c: 234: while( BusyADC() );
  5055  001EE8  D000               	goto	l2123
  5056  001EEA                     l2123:
  5057  001EEA  EC9B  F010         	call	_BusyADC	;wreg free
  5058  001EEE  0900               	iorlw	0
  5059  001EF0  A4D8               	btfss	status,2,c
  5060  001EF2  D7FB               	goto	l2123
  5061                           
  5062                           ;sumovore.c: 236: return ReadADC();
  5063  001EF4  EC8C  F010         	call	_ReadADC	;wreg free
  5064  001EF8  C00F  F013         	movff	?_ReadADC,?_adc
  5065  001EFC  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5066  001F00  D000               	goto	l128
  5067  001F02                     l128:
  5068  001F02  0012               	return		;funcret
  5069  001F04                     __end_of_adc:
  5070                           	opt stack 0
  5071                           stkptr	equ	0xFFC
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           intcon	equ	0xFF2
  5077                           postinc0	equ	0xFEE
  5078                           wreg	equ	0xFE8
  5079                           indf1	equ	0xFE7
  5080                           postinc1	equ	0xFE6
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           plusw2	equ	0xFDB
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _SetChanADC *****************
  5091 ;; Defined at:
  5092 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  channel         1    wreg     unsigned char 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  channel         1   15[COMRAM] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;Total ram usage:        2 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    1
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_adc
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text42
  5121  0020BA                     __ptext42:
  5122                           	opt stack 0
  5123  0020BA                     _SetChanADC:
  5124                           	opt stack 27
  5125                           
  5126                           ;incstack = 0
  5127                           ;SetChanADC@channel stored from wreg
  5128  0020BA  6E10               	movwf	SetChanADC@channel,c
  5129  0020BC  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5130  0020C0  0EC3               	movlw	195
  5131  0020C2  160F               	andwf	??_SetChanADC,f,c
  5132  0020C4  90D8               	bcf	status,0,c
  5133  0020C6  3010               	rrcf	SetChanADC@channel,w,c
  5134  0020C8  0B3C               	andlw	60
  5135  0020CA  100F               	iorwf	??_SetChanADC,w,c
  5136  0020CC  6EC2               	movwf	4034,c	;volatile
  5137  0020CE  0012               	return		;funcret
  5138  0020D0                     __end_of_SetChanADC:
  5139                           	opt stack 0
  5140                           stkptr	equ	0xFFC
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           intcon	equ	0xFF2
  5146                           postinc0	equ	0xFEE
  5147                           wreg	equ	0xFE8
  5148                           indf1	equ	0xFE7
  5149                           postinc1	equ	0xFE6
  5150                           fsr1h	equ	0xFE2
  5151                           fsr1l	equ	0xFE1
  5152                           indf2	equ	0xFDF
  5153                           postinc2	equ	0xFDE
  5154                           plusw2	equ	0xFDB
  5155                           fsr2h	equ	0xFDA
  5156                           fsr2l	equ	0xFD9
  5157                           status	equ	0xFD8
  5158                           
  5159 ;; *************** function _ReadADC *****************
  5160 ;; Defined at:
  5161 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2   14[COMRAM] int 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;Total ram usage:        4 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_adc
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text43
  5190  002118                     __ptext43:
  5191                           	opt stack 0
  5192  002118                     _ReadADC:
  5193                           	opt stack 27
  5194                           
  5195                           ;incstack = 0
  5196  002118  50C4               	movf	4036,w,c	;volatile
  5197  00211A  6E11               	movwf	??_ReadADC& (0+255),c
  5198  00211C  50C3               	movf	4035,w,c	;volatile
  5199  00211E  6E0F               	movwf	?_ReadADC,c
  5200  002120  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5201  002124  D000               	goto	l473
  5202  002126                     l473:
  5203  002126  0012               	return		;funcret
  5204  002128                     __end_of_ReadADC:
  5205                           	opt stack 0
  5206                           stkptr	equ	0xFFC
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           indf1	equ	0xFE7
  5215                           postinc1	equ	0xFE6
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           indf2	equ	0xFDF
  5219                           postinc2	equ	0xFDE
  5220                           plusw2	equ	0xFDB
  5221                           fsr2h	equ	0xFDA
  5222                           fsr2l	equ	0xFD9
  5223                           status	equ	0xFD8
  5224                           
  5225 ;; *************** function _ConvertADC *****************
  5226 ;; Defined at:
  5227 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		None
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;Total ram usage:        0 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_adc
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text44
  5256  00216E                     __ptext44:
  5257                           	opt stack 0
  5258  00216E                     _ConvertADC:
  5259                           	opt stack 27
  5260                           
  5261                           ;incstack = 0
  5262  00216E  82C2               	bsf	4034,1,c	;volatile
  5263  002170  0012               	return		;funcret
  5264  002172                     __end_of_ConvertADC:
  5265                           	opt stack 0
  5266                           stkptr	equ	0xFFC
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           wreg	equ	0xFE8
  5274                           indf1	equ	0xFE7
  5275                           postinc1	equ	0xFE6
  5276                           fsr1h	equ	0xFE2
  5277                           fsr1l	equ	0xFE1
  5278                           indf2	equ	0xFDF
  5279                           postinc2	equ	0xFDE
  5280                           plusw2	equ	0xFDB
  5281                           fsr2h	equ	0xFDA
  5282                           fsr2l	equ	0xFD9
  5283                           status	equ	0xFD8
  5284                           
  5285 ;; *************** function _BusyADC *****************
  5286 ;; Defined at:
  5287 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      unsigned char 
  5294 ;; Registers used:
  5295 ;;		wreg
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;Total ram usage:        0 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_adc
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text45
  5316  002136                     __ptext45:
  5317                           	opt stack 0
  5318  002136                     _BusyADC:
  5319                           	opt stack 27
  5320                           
  5321                           ;incstack = 0
  5322  002136  A2C2               	btfss	4034,1,c	;volatile
  5323  002138  D002               	goto	u10
  5324  00213A  0E01               	movlw	1
  5325  00213C  D002               	goto	l443
  5326  00213E                     u10:
  5327  00213E  0E00               	movlw	0
  5328  002140  D000               	goto	l443
  5329  002142                     l443:
  5330  002142  0012               	return		;funcret
  5331  002144                     __end_of_BusyADC:
  5332                           	opt stack 0
  5333                           stkptr	equ	0xFFC
  5334                           tblptru	equ	0xFF8
  5335                           tblptrh	equ	0xFF7
  5336                           tblptrl	equ	0xFF6
  5337                           tablat	equ	0xFF5
  5338                           intcon	equ	0xFF2
  5339                           postinc0	equ	0xFEE
  5340                           wreg	equ	0xFE8
  5341                           indf1	equ	0xFE7
  5342                           postinc1	equ	0xFE6
  5343                           fsr1h	equ	0xFE2
  5344                           fsr1l	equ	0xFE1
  5345                           indf2	equ	0xFDF
  5346                           postinc2	equ	0xFDE
  5347                           plusw2	equ	0xFDB
  5348                           fsr2h	equ	0xFDA
  5349                           fsr2l	equ	0xFD9
  5350                           status	equ	0xFD8
  5351                           
  5352 ;; *************** function _WriteTimer0 *****************
  5353 ;; Defined at:
  5354 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  timer0          2   14[COMRAM] unsigned int 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  timer           2   16[COMRAM] struct Timers
  5359 ;; Return value:  Size  Location     Type
  5360 ;;		None               void
  5361 ;; Registers used:
  5362 ;;		None
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;Total ram usage:        4 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    1
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_main
  5379 ;;		_GetBackonTrack
  5380 ;;		_AllSensorsTriggered
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text46
  5385  002106                     __ptext46:
  5386                           	opt stack 0
  5387  002106                     _WriteTimer0:
  5388                           	opt stack 29
  5389                           
  5390                           ;incstack = 0
  5391  002106  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5392  00210A  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5393  00210E  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5394  002112  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5395  002116  0012               	return		;funcret
  5396  002118                     __end_of_WriteTimer0:
  5397                           	opt stack 0
  5398                           stkptr	equ	0xFFC
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           intcon	equ	0xFF2
  5404                           postinc0	equ	0xFEE
  5405                           wreg	equ	0xFE8
  5406                           indf1	equ	0xFE7
  5407                           postinc1	equ	0xFE6
  5408                           fsr1h	equ	0xFE2
  5409                           fsr1l	equ	0xFE1
  5410                           indf2	equ	0xFDF
  5411                           postinc2	equ	0xFDE
  5412                           plusw2	equ	0xFDB
  5413                           fsr2h	equ	0xFDA
  5414                           fsr2l	equ	0xFD9
  5415                           status	equ	0xFD8
  5416                           
  5417 ;; *************** function _MotorControl *****************
  5418 ;; Defined at:
  5419 ;;		line 158 in file "../Robot Files/main3.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  delta_veloci    2   35[COMRAM] int 
  5422 ;;  speed_divide    1   37[COMRAM] unsigned char 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  right_duty_c    2   43[COMRAM] int 
  5425 ;;  left_duty_cy    2   41[COMRAM] int 
  5426 ;;  right_dir_mo    1   40[COMRAM] enum E4173
  5427 ;;  left_dir_mod    1   39[COMRAM] enum E4173
  5428 ;; Return value:  Size  Location     Type
  5429 ;;		None               void
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5437 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;Total ram usage:       10 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    2
  5444 ;; This function calls:
  5445 ;;		_SetDCPWM1
  5446 ;;		_SetDCPWM2
  5447 ;;		___awdiv
  5448 ;;		___wmul
  5449 ;; This function is called by:
  5450 ;;		_PID_LineFollowing
  5451 ;;		_GetBackonTrack
  5452 ;;		_SharpTurn
  5453 ;;		_AllSensorsTriggered
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text47
  5458  0012D2                     __ptext47:
  5459                           	opt stack 0
  5460  0012D2                     _MotorControl:
  5461                           	opt stack 27
  5462                           
  5463                           ;main3.c: 160: int left_duty_cycle = 700, right_duty_cycle = 700;
  5464                           
  5465                           ;incstack = 0
  5466  0012D2  0E02               	movlw	2
  5467  0012D4  6E2B               	movwf	MotorControl@left_duty_cycle+1,c
  5468  0012D6  0EBC               	movlw	188
  5469  0012D8  6E2A               	movwf	MotorControl@left_duty_cycle,c
  5470  0012DA  0E02               	movlw	2
  5471  0012DC  6E2D               	movwf	MotorControl@right_duty_cycle+1,c
  5472  0012DE  0EBC               	movlw	188
  5473  0012E0  6E2C               	movwf	MotorControl@right_duty_cycle,c
  5474                           
  5475                           ;main3.c: 161: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5476  0012E2  0E01               	movlw	1
  5477  0012E4  6E28               	movwf	MotorControl@left_dir_modifier,c
  5478  0012E6  0E01               	movlw	1
  5479  0012E8  6E29               	movwf	MotorControl@right_dir_modifier,c
  5480                           
  5481                           ;main3.c: 164: if ( delta_velocity < 0 )
  5482  0012EA  AE25               	btfss	MotorControl@delta_velocity+1,7,c
  5483  0012EC  D023               	goto	l2297
  5484                           
  5485                           ;main3.c: 165: {
  5486                           ;main3.c: 166: left_duty_cycle += delta_velocity*15/16;
  5487  0012EE  C024  F016         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5488  0012F2  C025  F017         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5489  0012F6  0E00               	movlw	0
  5490  0012F8  6E19               	movwf	___wmul@multiplicand+1,c
  5491  0012FA  0E0F               	movlw	15
  5492  0012FC  6E18               	movwf	___wmul@multiplicand,c
  5493  0012FE  EC82  F00F         	call	___wmul	;wreg free
  5494  001302  C016  F01C         	movff	?___wmul,___awdiv@dividend
  5495  001306  C017  F01D         	movff	?___wmul+1,___awdiv@dividend+1
  5496  00130A  0E00               	movlw	0
  5497  00130C  6E1F               	movwf	___awdiv@divisor+1,c
  5498  00130E  0E10               	movlw	16
  5499  001310  6E1E               	movwf	___awdiv@divisor,c
  5500  001312  ECB9  F00C         	call	___awdiv	;wreg free
  5501  001316  501C               	movf	?___awdiv,w,c
  5502  001318  262A               	addwf	MotorControl@left_duty_cycle,f,c
  5503  00131A  501D               	movf	?___awdiv+1,w,c
  5504  00131C  222B               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5505                           
  5506                           ;main3.c: 167: right_duty_cycle -= delta_velocity/16;
  5507  00131E  C024  F01C         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5508  001322  C025  F01D         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5509  001326  0E00               	movlw	0
  5510  001328  6E1F               	movwf	___awdiv@divisor+1,c
  5511  00132A  0E10               	movlw	16
  5512  00132C  6E1E               	movwf	___awdiv@divisor,c
  5513  00132E  ECB9  F00C         	call	___awdiv	;wreg free
  5514  001332  D022               	goto	L8
  5515  001334                     l2297:
  5516                           
  5517                           ;main3.c: 170: else
  5518                           ;main3.c: 171: {
  5519                           ;main3.c: 172: left_duty_cycle += delta_velocity/16;
  5520  001334  C024  F01C         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5521  001338  C025  F01D         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5522  00133C  0E00               	movlw	0
  5523  00133E  6E1F               	movwf	___awdiv@divisor+1,c
  5524  001340  0E10               	movlw	16
  5525  001342  6E1E               	movwf	___awdiv@divisor,c
  5526  001344  ECB9  F00C         	call	___awdiv	;wreg free
  5527  001348  501C               	movf	?___awdiv,w,c
  5528  00134A  262A               	addwf	MotorControl@left_duty_cycle,f,c
  5529  00134C  501D               	movf	?___awdiv+1,w,c
  5530  00134E  222B               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5531                           
  5532                           ;main3.c: 173: right_duty_cycle -= delta_velocity*15/16;
  5533  001350  C024  F016         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5534  001354  C025  F017         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5535  001358  0E00               	movlw	0
  5536  00135A  6E19               	movwf	___wmul@multiplicand+1,c
  5537  00135C  0E0F               	movlw	15
  5538  00135E  6E18               	movwf	___wmul@multiplicand,c
  5539  001360  EC82  F00F         	call	___wmul	;wreg free
  5540  001364  C016  F01C         	movff	?___wmul,___awdiv@dividend
  5541  001368  C017  F01D         	movff	?___wmul+1,___awdiv@dividend+1
  5542  00136C  0E00               	movlw	0
  5543  00136E  6E1F               	movwf	___awdiv@divisor+1,c
  5544  001370  0E10               	movlw	16
  5545  001372  6E1E               	movwf	___awdiv@divisor,c
  5546  001374  ECB9  F00C         	call	___awdiv	;wreg free
  5547  001378                     L8:
  5548  001378  501C               	movf	?___awdiv,w,c
  5549  00137A  5E2C               	subwf	MotorControl@right_duty_cycle,f,c
  5550  00137C  501D               	movf	?___awdiv+1,w,c
  5551  00137E  5A2D               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5552  001380  D000               	goto	l2301
  5553  001382                     l2301:
  5554                           
  5555                           ;main3.c: 174: }
  5556                           ;main3.c: 180: if (speed_divider)
  5557  001382  5026               	movf	MotorControl@speed_divider,w,c
  5558  001384  B4D8               	btfsc	status,2,c
  5559  001386  D01B               	goto	l2305
  5560                           
  5561                           ;main3.c: 181: {
  5562                           ;main3.c: 182: left_duty_cycle /= speed_divider;
  5563  001388  C02A  F01C         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  5564  00138C  C02B  F01D         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  5565  001390  C026  F01E         	movff	MotorControl@speed_divider,___awdiv@divisor
  5566  001394  6A1F               	clrf	___awdiv@divisor+1,c
  5567  001396  ECB9  F00C         	call	___awdiv	;wreg free
  5568  00139A  C01C  F02A         	movff	?___awdiv,MotorControl@left_duty_cycle
  5569  00139E  C01D  F02B         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  5570                           
  5571                           ;main3.c: 183: right_duty_cycle /= speed_divider;
  5572  0013A2  C02C  F01C         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  5573  0013A6  C02D  F01D         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  5574  0013AA  C026  F01E         	movff	MotorControl@speed_divider,___awdiv@divisor
  5575  0013AE  6A1F               	clrf	___awdiv@divisor+1,c
  5576  0013B0  ECB9  F00C         	call	___awdiv	;wreg free
  5577  0013B4  C01C  F02C         	movff	?___awdiv,MotorControl@right_duty_cycle
  5578  0013B8  C01D  F02D         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  5579  0013BC  D000               	goto	l2305
  5580  0013BE                     l2305:
  5581                           
  5582                           ;main3.c: 184: }
  5583                           ;main3.c: 187: if ( left_duty_cycle < 0 )
  5584  0013BE  AE2B               	btfss	MotorControl@left_duty_cycle+1,7,c
  5585  0013C0  D010               	goto	l2311
  5586                           
  5587                           ;main3.c: 188: {
  5588                           ;main3.c: 189: left_dir_modifier = reverse;
  5589  0013C2  0E00               	movlw	0
  5590  0013C4  6E28               	movwf	MotorControl@left_dir_modifier,c
  5591                           
  5592                           ;main3.c: 190: left_duty_cycle *= -1;
  5593  0013C6  C02A  F016         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5594  0013CA  C02B  F017         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5595  0013CE  0EFF               	movlw	255
  5596  0013D0  6E19               	movwf	___wmul@multiplicand+1,c
  5597  0013D2  6818               	setf	___wmul@multiplicand,c
  5598  0013D4  EC82  F00F         	call	___wmul	;wreg free
  5599  0013D8  C016  F02A         	movff	?___wmul,MotorControl@left_duty_cycle
  5600  0013DC  C017  F02B         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5601  0013E0  D000               	goto	l2311
  5602  0013E2                     l2311:
  5603                           
  5604                           ;main3.c: 191: }
  5605                           ;main3.c: 192: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5606  0013E2  BE2B               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5607  0013E4  D00B               	goto	l2315
  5608  0013E6  0E21               	movlw	33
  5609  0013E8  5C2A               	subwf	MotorControl@left_duty_cycle,w,c
  5610  0013EA  0E03               	movlw	3
  5611  0013EC  582B               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5612  0013EE  A0D8               	btfss	status,0,c
  5613  0013F0  D005               	goto	l2315
  5614  0013F2  0E03               	movlw	3
  5615  0013F4  6E2B               	movwf	MotorControl@left_duty_cycle+1,c
  5616  0013F6  0E20               	movlw	32
  5617  0013F8  6E2A               	movwf	MotorControl@left_duty_cycle,c
  5618  0013FA  D000               	goto	l2315
  5619  0013FC                     l2315:
  5620                           
  5621                           ;main3.c: 194: SetDCPWM2((unsigned int) left_duty_cycle );
  5622  0013FC  C02A  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5623  001400  C02B  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5624  001404  ECEB  F00E         	call	_SetDCPWM2	;wreg free
  5625                           
  5626                           ;main3.c: 195: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5627  001408  5028               	movf	MotorControl@left_dir_modifier,w,c
  5628  00140A  A4D8               	btfss	status,2,c
  5629  00140C  D002               	goto	l362
  5630  00140E  9082               	bcf	3970,0,c	;volatile
  5631  001410  D002               	goto	l2321
  5632  001412                     l362:
  5633                           
  5634                           ;main3.c: 196: else PORTCbits.RC0 = 0b1;
  5635  001412  8082               	bsf	3970,0,c	;volatile
  5636  001414  D000               	goto	l2321
  5637  001416                     l2321:
  5638                           
  5639                           ;main3.c: 197: PORTEbits.RE1 = !PORTCbits.RC0;
  5640  001416  B082               	btfsc	3970,0,c	;volatile
  5641  001418  D003               	goto	u1680
  5642  00141A  6A27               	clrf	??_MotorControl& (0+255),c
  5643  00141C  2A27               	incf	??_MotorControl& (0+255),f,c
  5644  00141E  D001               	goto	u1698
  5645  001420                     u1680:
  5646  001420  6A27               	clrf	??_MotorControl& (0+255),c
  5647  001422                     u1698:
  5648  001422  4627               	rlncf	??_MotorControl,f,c
  5649  001424  5084               	movf	3972,w,c	;volatile
  5650  001426  1827               	xorwf	??_MotorControl,w,c
  5651  001428  0BFD               	andlw	-3
  5652  00142A  1827               	xorwf	??_MotorControl,w,c
  5653  00142C  6E84               	movwf	3972,c	;volatile
  5654                           
  5655                           ;main3.c: 200: if ( right_duty_cycle < 0 )
  5656  00142E  AE2D               	btfss	MotorControl@right_duty_cycle+1,7,c
  5657  001430  D010               	goto	l2327
  5658                           
  5659                           ;main3.c: 201: {
  5660                           ;main3.c: 202: right_dir_modifier = reverse;
  5661  001432  0E00               	movlw	0
  5662  001434  6E29               	movwf	MotorControl@right_dir_modifier,c
  5663                           
  5664                           ;main3.c: 203: right_duty_cycle *= -1;
  5665  001436  C02C  F016         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5666  00143A  C02D  F017         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5667  00143E  0EFF               	movlw	255
  5668  001440  6E19               	movwf	___wmul@multiplicand+1,c
  5669  001442  6818               	setf	___wmul@multiplicand,c
  5670  001444  EC82  F00F         	call	___wmul	;wreg free
  5671  001448  C016  F02C         	movff	?___wmul,MotorControl@right_duty_cycle
  5672  00144C  C017  F02D         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5673  001450  D000               	goto	l2327
  5674  001452                     l2327:
  5675                           
  5676                           ;main3.c: 204: }
  5677                           ;main3.c: 205: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5678  001452  BE2D               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5679  001454  D00B               	goto	l2331
  5680  001456  0E21               	movlw	33
  5681  001458  5C2C               	subwf	MotorControl@right_duty_cycle,w,c
  5682  00145A  0E03               	movlw	3
  5683  00145C  582D               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5684  00145E  A0D8               	btfss	status,0,c
  5685  001460  D005               	goto	l2331
  5686  001462  0E03               	movlw	3
  5687  001464  6E2D               	movwf	MotorControl@right_duty_cycle+1,c
  5688  001466  0E20               	movlw	32
  5689  001468  6E2C               	movwf	MotorControl@right_duty_cycle,c
  5690  00146A  D000               	goto	l2331
  5691  00146C                     l2331:
  5692                           
  5693                           ;main3.c: 207: SetDCPWM1((unsigned int) right_duty_cycle );
  5694  00146C  C02C  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5695  001470  C02D  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5696  001474  EC08  F00F         	call	_SetDCPWM1	;wreg free
  5697                           
  5698                           ;main3.c: 208: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5699  001478  5029               	movf	MotorControl@right_dir_modifier,w,c
  5700  00147A  A4D8               	btfss	status,2,c
  5701  00147C  D002               	goto	l366
  5702  00147E  9A82               	bcf	3970,5,c	;volatile
  5703  001480  D002               	goto	l2337
  5704  001482                     l366:
  5705                           
  5706                           ;main3.c: 209: else PORTCbits.RC5 = 0b1;
  5707  001482  8A82               	bsf	3970,5,c	;volatile
  5708  001484  D000               	goto	l2337
  5709  001486                     l2337:
  5710                           
  5711                           ;main3.c: 210: PORTEbits.RE0 = !PORTCbits.RC5;
  5712  001486  BA82               	btfsc	3970,5,c	;volatile
  5713  001488  D003               	goto	u1730
  5714  00148A  6A27               	clrf	??_MotorControl& (0+255),c
  5715  00148C  2A27               	incf	??_MotorControl& (0+255),f,c
  5716  00148E  D001               	goto	u1748
  5717  001490                     u1730:
  5718  001490  6A27               	clrf	??_MotorControl& (0+255),c
  5719  001492                     u1748:
  5720  001492  5084               	movf	3972,w,c	;volatile
  5721  001494  1827               	xorwf	??_MotorControl,w,c
  5722  001496  0BFE               	andlw	-2
  5723  001498  1827               	xorwf	??_MotorControl,w,c
  5724  00149A  6E84               	movwf	3972,c	;volatile
  5725  00149C  0012               	return		;funcret
  5726  00149E                     __end_of_MotorControl:
  5727                           	opt stack 0
  5728                           stkptr	equ	0xFFC
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           intcon	equ	0xFF2
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           indf1	equ	0xFE7
  5737                           postinc1	equ	0xFE6
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           plusw2	equ	0xFDB
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function ___wmul *****************
  5748 ;; Defined at:
  5749 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  multiplier      2   21[COMRAM] unsigned int 
  5752 ;;  multiplicand    2   23[COMRAM] unsigned int 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  product         2   25[COMRAM] unsigned int 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2   21[COMRAM] unsigned int 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, prodl, prodh
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;Total ram usage:        6 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_PID_LineFollowing
  5775 ;;		_MotorControl
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text48
  5780  001F04                     __ptext48:
  5781                           	opt stack 0
  5782  001F04                     ___wmul:
  5783                           	opt stack 28
  5784                           
  5785                           ;incstack = 0
  5786  001F04  5016               	movf	___wmul@multiplier,w,c
  5787  001F06  0218               	mulwf	___wmul@multiplicand,c
  5788  001F08  CFF3 F01A          	movff	prodl,___wmul@product
  5789  001F0C  CFF4 F01B          	movff	prodh,___wmul@product+1
  5790  001F10  5016               	movf	___wmul@multiplier,w,c
  5791  001F12  0219               	mulwf	___wmul@multiplicand+1,c
  5792  001F14  50F3               	movf	prodl,w,c
  5793  001F16  261B               	addwf	___wmul@product+1,f,c
  5794  001F18  5017               	movf	___wmul@multiplier+1,w,c
  5795  001F1A  0218               	mulwf	___wmul@multiplicand,c
  5796  001F1C  50F3               	movf	prodl,w,c
  5797  001F1E  261B               	addwf	___wmul@product+1,f,c
  5798  001F20  C01A  F016         	movff	___wmul@product,?___wmul
  5799  001F24  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  5800  001F28  D000               	goto	l633
  5801  001F2A                     l633:
  5802  001F2A  0012               	return		;funcret
  5803  001F2C                     __end_of___wmul:
  5804                           	opt stack 0
  5805                           stkptr	equ	0xFFC
  5806                           tblptru	equ	0xFF8
  5807                           tblptrh	equ	0xFF7
  5808                           tblptrl	equ	0xFF6
  5809                           tablat	equ	0xFF5
  5810                           prodh	equ	0xFF4
  5811                           prodl	equ	0xFF3
  5812                           intcon	equ	0xFF2
  5813                           postinc0	equ	0xFEE
  5814                           wreg	equ	0xFE8
  5815                           indf1	equ	0xFE7
  5816                           postinc1	equ	0xFE6
  5817                           fsr1h	equ	0xFE2
  5818                           fsr1l	equ	0xFE1
  5819                           indf2	equ	0xFDF
  5820                           postinc2	equ	0xFDE
  5821                           plusw2	equ	0xFDB
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826 ;; *************** function ___awdiv *****************
  5827 ;; Defined at:
  5828 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  dividend        2   27[COMRAM] int 
  5831 ;;  divisor         2   29[COMRAM] int 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  quotient        2   33[COMRAM] int 
  5834 ;;  sign            1   32[COMRAM] unsigned char 
  5835 ;;  counter         1   31[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  2   27[COMRAM] int 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;Total ram usage:        8 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_MotorControl
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text49
  5860  001972                     __ptext49:
  5861                           	opt stack 0
  5862  001972                     ___awdiv:
  5863                           	opt stack 27
  5864                           
  5865                           ;incstack = 0
  5866  001972  0E00               	movlw	0
  5867  001974  6E21               	movwf	___awdiv@sign,c
  5868  001976  AE1F               	btfss	___awdiv@divisor+1,7,c
  5869  001978  D007               	goto	l2149
  5870  00197A  6C1E               	negf	___awdiv@divisor,c
  5871  00197C  1E1F               	comf	___awdiv@divisor+1,f,c
  5872  00197E  B0D8               	btfsc	status,0,c
  5873  001980  2A1F               	incf	___awdiv@divisor+1,f,c
  5874  001982  0E01               	movlw	1
  5875  001984  6E21               	movwf	___awdiv@sign,c
  5876  001986  D000               	goto	l2149
  5877  001988                     l2149:
  5878  001988  AE1D               	btfss	___awdiv@dividend+1,7,c
  5879  00198A  D007               	goto	l2155
  5880  00198C  6C1C               	negf	___awdiv@dividend,c
  5881  00198E  1E1D               	comf	___awdiv@dividend+1,f,c
  5882  001990  B0D8               	btfsc	status,0,c
  5883  001992  2A1D               	incf	___awdiv@dividend+1,f,c
  5884  001994  0E01               	movlw	1
  5885  001996  1A21               	xorwf	___awdiv@sign,f,c
  5886  001998  D000               	goto	l2155
  5887  00199A                     l2155:
  5888  00199A  0E00               	movlw	0
  5889  00199C  6E23               	movwf	___awdiv@quotient+1,c
  5890  00199E  0E00               	movlw	0
  5891  0019A0  6E22               	movwf	___awdiv@quotient,c
  5892  0019A2  501E               	movf	___awdiv@divisor,w,c
  5893  0019A4  101F               	iorwf	___awdiv@divisor+1,w,c
  5894  0019A6  B4D8               	btfsc	status,2,c
  5895  0019A8  D021               	goto	l2177
  5896  0019AA  0E01               	movlw	1
  5897  0019AC  6E20               	movwf	___awdiv@counter,c
  5898  0019AE  D005               	goto	l2163
  5899  0019B0                     l2161:
  5900  0019B0  90D8               	bcf	status,0,c
  5901  0019B2  361E               	rlcf	___awdiv@divisor,f,c
  5902  0019B4  361F               	rlcf	___awdiv@divisor+1,f,c
  5903  0019B6  2A20               	incf	___awdiv@counter,f,c
  5904  0019B8  D000               	goto	l2163
  5905  0019BA                     l2163:
  5906  0019BA  BE1F               	btfsc	___awdiv@divisor+1,7,c
  5907  0019BC  D002               	goto	l2165
  5908  0019BE  D7F8               	goto	l2161
  5909  0019C0  D000               	goto	l2165
  5910  0019C2                     l2165:
  5911  0019C2  90D8               	bcf	status,0,c
  5912  0019C4  3622               	rlcf	___awdiv@quotient,f,c
  5913  0019C6  3623               	rlcf	___awdiv@quotient+1,f,c
  5914  0019C8  501E               	movf	___awdiv@divisor,w,c
  5915  0019CA  5C1C               	subwf	___awdiv@dividend,w,c
  5916  0019CC  501F               	movf	___awdiv@divisor+1,w,c
  5917  0019CE  581D               	subwfb	___awdiv@dividend+1,w,c
  5918  0019D0  A0D8               	btfss	status,0,c
  5919  0019D2  D006               	goto	l2173
  5920  0019D4  501E               	movf	___awdiv@divisor,w,c
  5921  0019D6  5E1C               	subwf	___awdiv@dividend,f,c
  5922  0019D8  501F               	movf	___awdiv@divisor+1,w,c
  5923  0019DA  5A1D               	subwfb	___awdiv@dividend+1,f,c
  5924  0019DC  8022               	bsf	___awdiv@quotient,0,c
  5925  0019DE  D000               	goto	l2173
  5926  0019E0                     l2173:
  5927  0019E0  90D8               	bcf	status,0,c
  5928  0019E2  321F               	rrcf	___awdiv@divisor+1,f,c
  5929  0019E4  321E               	rrcf	___awdiv@divisor,f,c
  5930  0019E6  2E20               	decfsz	___awdiv@counter,f,c
  5931  0019E8  D7EC               	goto	l2165
  5932  0019EA  D000               	goto	l2177
  5933  0019EC                     l2177:
  5934  0019EC  5021               	movf	___awdiv@sign,w,c
  5935  0019EE  B4D8               	btfsc	status,2,c
  5936  0019F0  D005               	goto	l2181
  5937  0019F2  6C22               	negf	___awdiv@quotient,c
  5938  0019F4  1E23               	comf	___awdiv@quotient+1,f,c
  5939  0019F6  B0D8               	btfsc	status,0,c
  5940  0019F8  2A23               	incf	___awdiv@quotient+1,f,c
  5941  0019FA  D000               	goto	l2181
  5942  0019FC                     l2181:
  5943  0019FC  C022  F01C         	movff	___awdiv@quotient,?___awdiv
  5944  001A00  C023  F01D         	movff	___awdiv@quotient+1,?___awdiv+1
  5945  001A04  D000               	goto	l826
  5946  001A06                     l826:
  5947  001A06  0012               	return		;funcret
  5948  001A08                     __end_of___awdiv:
  5949                           	opt stack 0
  5950                           stkptr	equ	0xFFC
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           intcon	equ	0xFF2
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           indf1	equ	0xFE7
  5961                           postinc1	equ	0xFE6
  5962                           fsr1h	equ	0xFE2
  5963                           fsr1l	equ	0xFE1
  5964                           indf2	equ	0xFDF
  5965                           postinc2	equ	0xFDE
  5966                           plusw2	equ	0xFDB
  5967                           fsr2h	equ	0xFDA
  5968                           fsr2l	equ	0xFD9
  5969                           status	equ	0xFD8
  5970                           
  5971 ;; *************** function _SetDCPWM2 *****************
  5972 ;; Defined at:
  5973 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  dutycycle       2   14[COMRAM] unsigned int 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  DCycle          2   18[COMRAM] struct PWMDC
  5978 ;; Return value:  Size  Location     Type
  5979 ;;		None               void
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;Total ram usage:        6 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_initialization
  5998 ;;		_motors_brake_all
  5999 ;;		_MotorControl
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text50
  6004  001DD6                     __ptext50:
  6005                           	opt stack 0
  6006  001DD6                     _SetDCPWM2:
  6007                           	opt stack 28
  6008                           
  6009                           ;incstack = 0
  6010  001DD6  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6011  001DDA  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6012  001DDE  0E06               	movlw	6
  6013  001DE0                     u1415:
  6014  001DE0  90D8               	bcf	status,0,c
  6015  001DE2  3611               	rlcf	??_SetDCPWM2,f,c
  6016  001DE4  3612               	rlcf	??_SetDCPWM2+1,f,c
  6017  001DE6  2EE8               	decfsz	wreg,f,c
  6018  001DE8  D7FB               	goto	u1415
  6019  001DEA  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6020  001DEE  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6021  001DF2  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6022  001DF6  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6023  001DFA  90D8               	bcf	status,0,c
  6024  001DFC  3211               	rrcf	??_SetDCPWM2,f,c
  6025  001DFE  90D8               	bcf	status,0,c
  6026  001E00  3211               	rrcf	??_SetDCPWM2,f,c
  6027  001E02  0E30               	movlw	48
  6028  001E04  1611               	andwf	??_SetDCPWM2,f,c
  6029  001E06  50BA               	movf	4026,w,c	;volatile
  6030  001E08  0BCF               	andlw	207
  6031  001E0A  1011               	iorwf	??_SetDCPWM2,w,c
  6032  001E0C  6EBA               	movwf	4026,c	;volatile
  6033  001E0E  0012               	return		;funcret
  6034  001E10                     __end_of_SetDCPWM2:
  6035                           	opt stack 0
  6036                           stkptr	equ	0xFFC
  6037                           tblptru	equ	0xFF8
  6038                           tblptrh	equ	0xFF7
  6039                           tblptrl	equ	0xFF6
  6040                           tablat	equ	0xFF5
  6041                           prodh	equ	0xFF4
  6042                           prodl	equ	0xFF3
  6043                           intcon	equ	0xFF2
  6044                           postinc0	equ	0xFEE
  6045                           wreg	equ	0xFE8
  6046                           indf1	equ	0xFE7
  6047                           postinc1	equ	0xFE6
  6048                           fsr1h	equ	0xFE2
  6049                           fsr1l	equ	0xFE1
  6050                           indf2	equ	0xFDF
  6051                           postinc2	equ	0xFDE
  6052                           plusw2	equ	0xFDB
  6053                           fsr2h	equ	0xFDA
  6054                           fsr2l	equ	0xFD9
  6055                           status	equ	0xFD8
  6056                           
  6057 ;; *************** function _SetDCPWM1 *****************
  6058 ;; Defined at:
  6059 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6064 ;; Return value:  Size  Location     Type
  6065 ;;		None               void
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;Total ram usage:        6 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    1
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_initialization
  6084 ;;		_motors_brake_all
  6085 ;;		_MotorControl
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text51
  6090  001E10                     __ptext51:
  6091                           	opt stack 0
  6092  001E10                     _SetDCPWM1:
  6093                           	opt stack 28
  6094                           
  6095                           ;incstack = 0
  6096  001E10  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6097  001E14  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6098  001E18  0E06               	movlw	6
  6099  001E1A                     u1405:
  6100  001E1A  90D8               	bcf	status,0,c
  6101  001E1C  3611               	rlcf	??_SetDCPWM1,f,c
  6102  001E1E  3612               	rlcf	??_SetDCPWM1+1,f,c
  6103  001E20  2EE8               	decfsz	wreg,f,c
  6104  001E22  D7FB               	goto	u1405
  6105  001E24  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6106  001E28  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6107  001E2C  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6108  001E30  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6109  001E34  90D8               	bcf	status,0,c
  6110  001E36  3211               	rrcf	??_SetDCPWM1,f,c
  6111  001E38  90D8               	bcf	status,0,c
  6112  001E3A  3211               	rrcf	??_SetDCPWM1,f,c
  6113  001E3C  0E30               	movlw	48
  6114  001E3E  1611               	andwf	??_SetDCPWM1,f,c
  6115  001E40  50BD               	movf	4029,w,c	;volatile
  6116  001E42  0BCF               	andlw	207
  6117  001E44  1011               	iorwf	??_SetDCPWM1,w,c
  6118  001E46  6EBD               	movwf	4029,c	;volatile
  6119  001E48  0012               	return		;funcret
  6120  001E4A                     __end_of_SetDCPWM1:
  6121                           	opt stack 0
  6122                           stkptr	equ	0xFFC
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           intcon	equ	0xFF2
  6130                           postinc0	equ	0xFEE
  6131                           wreg	equ	0xFE8
  6132                           indf1	equ	0xFE7
  6133                           postinc1	equ	0xFE6
  6134                           fsr1h	equ	0xFE2
  6135                           fsr1l	equ	0xFE1
  6136                           indf2	equ	0xFDF
  6137                           postinc2	equ	0xFDE
  6138                           plusw2	equ	0xFDB
  6139                           fsr2h	equ	0xFDA
  6140                           fsr2l	equ	0xFD9
  6141                           status	equ	0xFD8
  6142                           
  6143 ;; *************** function _high_isr *****************
  6144 ;; Defined at:
  6145 ;;		line 24 in file "../Robot Files/interrupts.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;		None               void
  6152 ;; Registers used:
  6153 ;;		wreg, status,2
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;Total ram usage:       14 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		Interrupt level 2
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	intcode
  6173  000008                     __pintcode:
  6174                           	opt stack 0
  6175  000008                     _high_isr:
  6176                           	opt stack 25
  6177                           
  6178                           ;incstack = 0
  6179  000008  CFFA F001          	movff	pclath,??_high_isr
  6180  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6181  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6182  000014  ED8B  F00D         	call	int_func,f	;refresh shadow registers
  6183                           stkptr	equ	0xFFC
  6184                           pclatu	equ	0xFFB
  6185                           pclath	equ	0xFFA
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           fsr0l	equ	0xFE9
  6195                           wreg	equ	0xFE8
  6196                           indf1	equ	0xFE7
  6197                           postinc1	equ	0xFE6
  6198                           fsr1h	equ	0xFE2
  6199                           fsr1l	equ	0xFE1
  6200                           indf2	equ	0xFDF
  6201                           postinc2	equ	0xFDE
  6202                           plusw2	equ	0xFDB
  6203                           fsr2h	equ	0xFDA
  6204                           fsr2l	equ	0xFD9
  6205                           status	equ	0xFD8
  6206                           
  6207                           	psect	intcode_body
  6208  001B16                     __pintcode_body:
  6209                           	opt stack 25
  6210  001B16                     int_func:
  6211                           	opt stack 25
  6212  001B16  0006               	pop		; remove dummy address from shadow register refresh
  6213  001B18  CFEA F004          	movff	fsr0h,??_high_isr+3
  6214  001B1C  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6215  001B20  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6216  001B24  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6217  001B28  CFDA F008          	movff	fsr2h,??_high_isr+7
  6218  001B2C  CFF3 F009          	movff	prodl,??_high_isr+8
  6219  001B30  CFF4 F00A          	movff	prodh,??_high_isr+9
  6220  001B34  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6221  001B38  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6222  001B3C  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6223  001B40  CFF5 F00E          	movff	tablat,??_high_isr+13
  6224                           
  6225                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6226  001B44  94A1               	bcf	4001,2,c	;volatile
  6227                           
  6228                           ;interrupts.c: 27: TRISA = 0xff;
  6229  001B46  6892               	setf	3986,c	;volatile
  6230                           
  6231                           ;interrupts.c: 28: TRISB = 0xff;
  6232  001B48  6893               	setf	3987,c	;volatile
  6233                           
  6234                           ;interrupts.c: 29: TRISC = 0xff;
  6235  001B4A  6894               	setf	3988,c	;volatile
  6236                           
  6237                           ;interrupts.c: 30: TRISD = 0xff;
  6238  001B4C  6895               	setf	3989,c	;volatile
  6239                           
  6240                           ;interrupts.c: 31: TRISE = 0x03;
  6241  001B4E  0E03               	movlw	3
  6242  001B50  6E96               	movwf	3990,c	;volatile
  6243                           
  6244                           ;interrupts.c: 32: lvd_flag =1;
  6245  001B52  0E01               	movlw	1
  6246  001B54  6E4C               	movwf	_lvd_flag,c
  6247                           
  6248                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6249  001B56  94A0               	bcf	4000,2,c	;volatile
  6250                           
  6251                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6252  001B58  98D2               	bcf	4050,4,c	;volatile
  6253  001B5A  C00E  FFF5         	movff	??_high_isr+13,tablat
  6254  001B5E  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6255  001B62  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6256  001B66  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6257  001B6A  C00A  FFF4         	movff	??_high_isr+9,prodh
  6258  001B6E  C009  FFF3         	movff	??_high_isr+8,prodl
  6259  001B72  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6260  001B76  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6261  001B7A  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6262  001B7E  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6263  001B82  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6264  001B86  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6265  001B8A  C002  FFFB         	movff	??_high_isr+1,pclatu
  6266  001B8E  C001  FFFA         	movff	??_high_isr,pclath
  6267  001B92  0011               	retfie		f
  6268  001B94                     __end_of_high_isr:
  6269                           	opt stack 0
  6270                           stkptr	equ	0xFFC
  6271                           pclatu	equ	0xFFB
  6272                           pclath	equ	0xFFA
  6273                           tblptru	equ	0xFF8
  6274                           tblptrh	equ	0xFF7
  6275                           tblptrl	equ	0xFF6
  6276                           tablat	equ	0xFF5
  6277                           prodh	equ	0xFF4
  6278                           prodl	equ	0xFF3
  6279                           intcon	equ	0xFF2
  6280                           postinc0	equ	0xFEE
  6281                           fsr0h	equ	0xFEA
  6282                           fsr0l	equ	0xFE9
  6283                           wreg	equ	0xFE8
  6284                           indf1	equ	0xFE7
  6285                           postinc1	equ	0xFE6
  6286                           fsr1h	equ	0xFE2
  6287                           fsr1l	equ	0xFE1
  6288                           indf2	equ	0xFDF
  6289                           postinc2	equ	0xFDE
  6290                           plusw2	equ	0xFDB
  6291                           fsr2h	equ	0xFDA
  6292                           fsr2l	equ	0xFD9
  6293                           status	equ	0xFD8
  6294                           stkptr	equ	0xFFC
  6295                           pclatu	equ	0xFFB
  6296                           pclath	equ	0xFFA
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           postinc0	equ	0xFEE
  6305                           fsr0h	equ	0xFEA
  6306                           fsr0l	equ	0xFE9
  6307                           wreg	equ	0xFE8
  6308                           indf1	equ	0xFE7
  6309                           postinc1	equ	0xFE6
  6310                           fsr1h	equ	0xFE2
  6311                           fsr1l	equ	0xFE1
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           plusw2	equ	0xFDB
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319                           	psect	rparam
  6320  0000                     stkptr	equ	0xFFC
  6321                           pclatu	equ	0xFFB
  6322                           pclath	equ	0xFFA
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           intcon	equ	0xFF2
  6330                           postinc0	equ	0xFEE
  6331                           fsr0h	equ	0xFEA
  6332                           fsr0l	equ	0xFE9
  6333                           wreg	equ	0xFE8
  6334                           indf1	equ	0xFE7
  6335                           postinc1	equ	0xFE6
  6336                           fsr1h	equ	0xFE2
  6337                           fsr1l	equ	0xFE1
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           plusw2	equ	0xFDB
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      76
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[64]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25469
                                             54 COMRAM     3     3      0
                _AllSensorsTriggered
                  _FilterNearbyTrack
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    5     3      2    5456
                                             45 COMRAM     5     3      2
                       _MotorControl
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9595
                                             49 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4538
                                             45 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _FilterNearbyTrack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  0     0      0    4812
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      37
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      37
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     388
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3867
                                             35 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     927
                                             21 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             27 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           ___lwdiv (ARG)
       ___wmul
         ___lwdiv (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _FilterNearbyTrack
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           ___lwdiv (ARG)
       ___wmul
         ___lwdiv (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             ___lwdiv (ARG)
         ___wmul
           ___lwdiv (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           ___lwdiv (ARG)
       ___wmul
         ___lwdiv (ARG)
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      34        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 06 12:40:15 2020

                     _STKPTRbits 000FFC                                _I 0043  
                             u10 213E                     ___awdiv@sign 0021  
            ___wmul@multiplicand 0018                      __CFG_BORV$0 000000  
                            l141 1DC4                              l205 2148  
                            l214 1EDA                              l310 1722  
                            l128 1F02                              l400 1968  
                            l145 1DD4                              l154 18C6  
                            l314 166A                              l148 18B2  
                            l149 1858                              l422 2006  
                            l175 1C88                              l600 1C76  
                            l513 1E6C                              l362 1412  
                            l514 1E76                              l443 2142  
                            l427 2014                              l515 1E78  
                            l428 2018                              l366 1482  
                            l607 20B8                              l536 1FD4  
                            l616 1F76                              l633 1F2A  
                            l473 2126                              l537 1FD6  
                            l465 1D34                              l625 1F50  
                            l565 2086                              l566 2088  
                            l591 1C34                              l826 1A06  
                            l595 1C4E                              l596 1C50  
                            l597 1C5A                              l598 1C5C  
                            u300 1AEA                              u320 1B06  
                            u240 1AA2                              u260 1AB8  
                            u318 1AEC                              _PR2 000FCB  
                            u280 1AD0                              u338 1B08  
                            u258 1AA4                              u278 1ABA  
                            u298 1AD2             __size_of_WriteTimer0 0012  
                            _adc 1EDC                              wreg 000FE8  
                ReadTimer0@timer 0011                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_adc 0013  
                           l1151 1D8A                             l2123 1EEA  
                           l2131 1E8C                             l2301 1382  
                           l2133 1E94                             l1421 20B4  
                           l2311 13E2                             l2223 188E  
                           l2161 19B0                             l2321 1416  
                           l2305 13BE                             l1417 20B0  
                           l1361 1F66                             l2163 19BA  
                           l2155 199A                             l2331 146C  
                           l2315 13FC                             l1283 1CCA  
                           l2227 18A6                             l2403 1DCE  
                           l2181 19FC                             l2173 19E0  
                           l2165 19C2                             l2149 1988  
                           l1365 1F6A                             l1373 1F72  
                           l1453 1F40                             l1461 1F48  
                           l2327 1452                             l1279 1CB2  
                           l2177 19EC                             l2337 1486  
                           l2441 1928                             l2353 1C2C  
                           l2345 1C1A                             l1369 1F6E  
                           l1457 1F44                             l1465 1F4C  
                           l2443 1932                             l2451 1954  
                           l2427 18EE                             l2435 1912  
                           l1571 1ED4                             l2621 1BF6  
                           l2613 1BCE                             l2605 1BA4  
                           l2365 1C46                             l2357 1C38  
                           l2349 1C24                             l2701 1676  
                           l2455 1964                             l2439 1922  
                           l2551 14D8                             l1567 1EC0  
                           l2711 1696                             l2703 167C  
                           l2297 1334                             l2617 1BDE  
                           l2609 1BBE                             l2465 1D4E  
                           l2641 1120                             l2633 10DA  
                           l2393 1DA4                             l2721 16BC  
                           l2619 1BE8                             l2563 1522  
                           l2467 1D58                             l2651 1186  
                           l2627 10A8                             l2723 16C2  
                           l2573 155E                             l2557 150A  
                           l2549 14D0                             l2477 1D7E  
                           l2469 1D60                             l2645 1142  
                           l2637 1100                             l2629 10B8  
                           l2653 1190                             l1693 1E68  
                           l2397 1DB4                             l2733 1732  
                           l2583 15A2                             l2567 153C  
                           l2559 1512                             l2639 1110  
                           l2719 16AE                             l2727 16C8  
                           l2593 15DA                             l2665 1272  
                           l2657 11BE                             l2649 1168  
                           l2587 15C2                             l2691 165E  
                           l2597 15F4                             l2693 1662  
                           l2685 1650                             l2599 1602  
                           l2695 1666                             l2697 166E  
                           l2689 165A                             l2699 1672  
                __end_of_BORtask 1FBA                             STR_1 1073  
                           STR_2 106D                             STR_3 105D  
                           STR_4 1054                             STR_5 104A  
                           STR_6 1066                             STR_7 100A  
                           u1500 1770                             u1405 1E1A  
                           u1415 1DE0                             u1520 1796  
                           u2171 1096                             u1540 17C0  
                           u1518 1772                             u1560 17E8  
                           u1730 1490                             u1538 1798  
                           u2347 1572                             u1580 180E  
                           u2357 15C8                             u1558 17C2  
                           u2367 18D4                             u1680 1420  
                           u1578 17EA                             u1748 1492  
                           u1598 1810                             u1698 1422  
                ?_GetBackonTrack 0032                             _TMR2 000FCC  
                   __CFG_WDTPS$8 000000                 ??_initialization 001C  
                           _main 1614            __end_of_check_sensors 181C  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                    __CFG_BOREN$ON 000000  
                __end_of_PORtask 18C8                             prodh 000FF4  
                           prodl 000FF3       MotorControl@delta_velocity 0024  
                           start 0018                  __end_of_WDTtask 2054  
                   ___param_bank 000010                  __end_of_BusyADC 2144  
                __end_of_ReadADC 2128                  __end_of_OpenADC 1D38  
                          ??_adc 0015           PID_LineFollowing@error 002E  
                          ?_main 0001                  __end_of___awdiv 1A08  
                          _T0CON 000FD5                  ___awdiv@divisor 001E  
                          _T2CON 000FCA                  __end_of___lwdiv 1D94  
                ___awdiv@counter 0020               __size_of_RESETtask 001C  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TXSTA 000FAC                  __end_of_isWDTTO 1F52  
        __end_of_openPORTCforPWM 2136                            _isBOR 20A4  
                          _isPOR 1F52                            _gtrap 1C78  
                          _putch 2172                  __end_of_openLVD 20A4  
                   _TURN_TIME_ms 1007                       _ConvertADC 216E  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 20D0                     __end_of_main 1758  
                     _ReadTimer0 20F4                 __end_of_OpenPWM1 20F4  
               __end_of_OpenPWM2 1E82                           ??_main 0037  
                  __activetblptr 000003                       _SetChanADC 20BA  
                      ??_BORtask 0014        MotorControl@speed_divider 0026  
                         ?_isBOR 0001              GetBackonTrack@error 0032  
                         ?_isPOR 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_gtrap 0001                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                 ___awdiv@dividend 001C  
                         ?_putch 0001                        ??_PORtask 0014  
                      ??_WDTtask 0014                       _OpenTimer0 1FBA  
                     _OpenTimer2 2070                           _TMR0IF 007F92  
                         _SPBRGH 000FB0               __size_of_SetDCPWM1 003A  
             __size_of_SetDCPWM2 003A                        ??_BusyADC 000F  
                      ??_ReadADC 0011                           _D_time 0041  
                         _LVtrap 1FDA                __end_of_RESETtask 2070  
                         _I_time 0045                        ??_OpenADC 0011  
                   ?_reset_codes 0001                 __end_of_high_isr 1B94  
             __size_of_OpenUSART 0070                           ___wmul 1F04  
                      ??___awdiv 0020                   __CFG_STVREN$ON 000000  
               OpenTimer0@config 000F                        ??___lwdiv 0013  
             __size_of_SharpTurn 00AA                 OpenTimer2@config 000F  
                         clear_0 20D6                 ___awdiv@quotient 0022  
                      ??_isWDTTO 000F                           _printf 1E82  
               __end_of_set_leds 1B16                        ??_openLVD 000F  
            __size_of_STKFULtask 001E                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_openPORTCforPWM 0001  
              ?_motors_brake_all 0001                           putch@c 0001  
             ??_motors_brake_all 0015                      ?_ConvertADC 0001  
                     __accesstop 0080          __end_of__initialization 20DC  
              _FilterNearbyTrack 1FFA                       adc@channel 0015  
                  ___rparam_used 000001               ?_FilterNearbyTrack 0001  
          __end_of_set_osc_32MHz 1EDC                   __pcstackCOMRAM 0001  
                    ?_ReadTimer0 000F                    __end_of_isBOR 20BA  
                  __end_of_isPOR 1F78                    __end_of_gtrap 1CDA  
            ??_FilterNearbyTrack 000F                    __end_of_putch 2174  
   __size_of_AllSensorsTriggered 0074                __end_of_SetDCPWM1 1E4A  
              __end_of_SetDCPWM2 1E10                    ??_StatusReset 000F  
                    ?_SetChanADC 0001                 ??_GetBackonTrack 0034  
                  ?_lvd_flag_set 0001                          ??_isBOR 000F  
                        ??_isPOR 000F                __end_of_OpenUSART 1C78  
                        ??_gtrap 000F                          ??_putch 000F  
      __end_of_FilterNearbyTrack 201A                      ?_OpenTimer0 0001  
                    ?_OpenTimer2 0001                __end_of_SharpTurn 1972  
                      ?_OpenPWM1 0001                        ?_OpenPWM2 0001  
                        ?_LVtrap 0001                    ?_MotorControl 0024  
             __end_of_D_CONSTANT 1003               __size_of_openPORTA 0006  
             __size_of_openPORTB 0006               __size_of_openPORTD 0006  
             __size_of_openPORTE 0006                          ?___wmul 0016  
                        _CCP1CON 000FBD                          _CCP2CON 000FBA  
               WriteTimer0@timer 0011                    ??_WriteTimer0 0011  
              _CCW_rotation_flag 0049              __size_of_ConvertADC 0004  
                        ?_printf 000F                          _BORtask 1F9A  
                 ??_lvd_flag_set 000F                        ?_high_isr 0001  
            __end_of_StatusReset 2150              __size_of_ReadTimer0 0012  
                        _PORtask 181C               __end_of_I_CONSTANT 1005  
                        _WDTtask 2038                          _BusyADC 2136  
                        _ReadADC 2118                       ??_OpenPWM1 000F  
                     ??_OpenPWM2 000F                     ??_STKFULtask 0014  
                        _SeeLine 004B                   ??_MotorControl 0027  
                        _OpenADC 1CDA                  __size_of_LVtrap 0020  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        __Lparam 0000                        ?_set_leds 0001  
           __size_of_reset_codes 0042                          ___awdiv 1972  
                __size_of___wmul 0028                          ___lwdiv 1D38  
                   __psmallconst 1000                          __pcinit 20D0  
                        _isWDTTO 1F2C                          __ramtop 1000  
            __size_of_OpenTimer0 0020              __size_of_OpenTimer2 001C  
                        __ptext0 1614                          __ptext1 2144  
                        __ptext2 1A08                          __ptext3 1EB0  
                        __ptext4 1D94                          __ptext5 1F2C  
                        __ptext6 1F52                          __ptext7 20A4  
                        __ptext8 2038                          __ptext9 201A  
                __size_of_printf 002E                        _T0CONbits 000FD5  
                   __size_of_adc 0028                        _T2CONbits 000FCA  
         __size_of_check_sensors 00C4                          _openLVD 208C  
            __end_of_WriteTimer0 2118               __end_of_STKFULtask 2038  
             __end_of_P_CONSTANT 1007                __end_of_openPORTA 2168  
              __end_of_openPORTB 2162                __end_of_openPORTD 216E  
              __end_of_openPORTE 2156                   OpenADC@config2 000F  
                     ??_high_isr 0001                   __pintcode_body 1B16  
           end_of_initialization 20DC       __size_of_FilterNearbyTrack 0020  
                        int_func 1B16                       ??_set_leds 000F  
                      _RCSTAbits 000FAB                          printf@c 0013  
                        printf@f 000F                        _RESETtask 2054  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE          __size_of_initialization 0090  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
                      _PORTEbits 000F84                   set_osc_32MHz@i 000F  
                    _StatusReset 214A                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     ??_ConvertADC 000F  
    MotorControl@left_duty_cycle 002A                _PID_LineFollowing 107A  
  MotorControl@left_dir_modifier 0028              _AllSensorsTriggered 1B94  
             ?_PID_LineFollowing 002E                        _TXSTAbits 000FAC  
                  _check_sensors 1758        __size_of_motors_brake_all 0022  
                 __end_of_LVtrap 1FFA             __end_of_lvd_flag_set 214A  
 MotorControl@right_dir_modifier 0029              ??_PID_LineFollowing 0030  
                   ??_ReadTimer0 0011                       ?_RESETtask 0001  
                 __end_of___wmul 1F2C                      _WriteTimer0 2106  
           ?_AllSensorsTriggered 0001               __end_of_ConvertADC 2172  
                   ??_SetChanADC 000F                   __end_of_printf 1EB0  
            start_initialization 20D0             __end_of_MotorControl 149E  
                      _SetDCPWM1 1E10                        _SetDCPWM2 1DD6  
                SetDCPWM1@DCycle 0013                      __end_of_adc 1F04  
                SetDCPWM2@DCycle 0013        __end_of_PID_LineFollowing 12D2  
                   ??_OpenTimer0 000F                     ??_OpenTimer2 000F  
             __end_of_ReadTimer0 2106                        _OpenUSART 1C08  
       __size_of_openPORTCforPWM 000E                   ?_check_sensors 0001  
               __CFG_OSC$INTIO67 000000                         ??_LVtrap 0014  
                      _SharpTurn 18C8               __end_of_SetChanADC 20D0  
              __size_of_OpenPWM1 0012                __size_of_OpenPWM2 0038  
                       ??___wmul 001A       __end_of_TURN_SPEED_DIVIDER 100A  
          ??_AllSensorsTriggered 002E                         ??_printf 0011  
                     gtrap@count 000F               __end_of_OpenTimer0 1FDA  
             __end_of_OpenTimer2 208C               SharpTurn@direction 002F  
                    __pbssCOMRAM 003A                         ?_BORtask 0001  
                     ?_SetDCPWM1 000F                       ?_SetDCPWM2 000F  
                  PORtask@count1 0014                    PORtask@count2 0018  
         __size_of_set_osc_32MHz 002C                         ?_PORtask 0001  
                       ?_WDTtask 0001                       ?_OpenUSART 000F  
              __size_of_high_isr 1B8C                         ?_BusyADC 0001  
                       ?_ReadADC 000F                       ?_SharpTurn 0001  
              OpenADC@portconfig 0010                         ?_OpenADC 000F  
               ___lwdiv@dividend 000F                        __pintcode 0008  
                    ??_RESETtask 0014                         ?___awdiv 001C  
                 _initialization 1A08                __size_of_set_leds 007E  
                       ?___lwdiv 000F                         ?_isWDTTO 0001  
                    __smallconst 1000                WriteTimer0@timer0 000F  
             PID_LineFollowing@D 003D                         ?_openLVD 0001  
        SharpTurn@delta_velocity 0030       __size_of_PID_LineFollowing 0258  
                 __size_of_isBOR 0016                 ___lwdiv@quotient 0013  
                 __size_of_isPOR 0026                   __size_of_gtrap 0062  
                 __size_of_putch 0002                  ??_check_sensors 0016  
                      _openPORTA 2162                        _openPORTB 215C  
                      _openPORTD 2168                        _openPORTE 2150  
                 ___wmul@product 001A                    OpenADC@config 0013  
          __size_of_lvd_flag_set 0006          __size_of_GetBackonTrack 0176  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                    ??_reset_codes 001C  
               _motors_brake_all 1F78                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1           __end_of_initialization 1A98  
                       _RCONbits 000FD0                ??_openPORTCforPWM 000F  
                  _set_osc_32MHz 1EB0                        main@F4197 003A  
                    _HLVDCONbits 000FD2                        _threshold 0047  
          __size_of_MotorControl 01CC                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0016                     ?_StatusReset 0001  
                GetBackonTrack@i 0035                        main@error 0037  
   MotorControl@right_duty_cycle 002C                      ??_SetDCPWM1 0011  
                    ??_SetDCPWM2 0011                 __size_of_BORtask 0020  
                   _lvd_flag_set 2144                 __size_of_PORtask 00AC  
                    ??_OpenUSART 0011               SetDCPWM1@dutycycle 000F  
                     ?_openPORTA 0001                       ?_openPORTB 0001  
                     ?_openPORTD 0001                       ?_openPORTE 0001  
               __size_of_WDTtask 001C                  OpenUSART@config 0011  
                       _OpenPWM1 20E2                         _OpenPWM2 1E4A  
PID_LineFollowing@delta_velocity 003F                 __size_of_BusyADC 000E  
                    ??_SharpTurn 002E                 __size_of_ReadADC 0010  
                       __Hrparam 0000                 __size_of_OpenADC 005E  
                   _MotorControl 12D2                  ?_initialization 0001  
                       __Lrparam 0000               SetDCPWM2@dutycycle 000F  
                 ?_set_osc_32MHz 0001              __end_of_reset_codes 1DD6  
               __size_of___awdiv 0096                 __size_of___lwdiv 005C  
                   ?_WriteTimer0 000F                   OpenPWM2@ccp2mx 0010  
               __size_of_isWDTTO 0026                   OpenPWM1@period 000F  
                 OpenPWM2@period 000F                  ___lwdiv@divisor 0011  
               __size_of_openLVD 0018                  ___lwdiv@counter 0015  
                       __ptext10 2054                         __ptext11 181C  
                       __ptext20 1C08                         __ptext12 1F9A  
                       __ptext21 2070                         __ptext13 214A  
                       __ptext30 2172                         __ptext22 1E4A  
                       __ptext14 2150                         __ptext31 2168  
                       __ptext23 20E2                         __ptext15 2156  
                       __ptext40 1758                         __ptext32 1C78  
                       __ptext24 1CDA                         __ptext16 2128  
                       __ptext41 1EDC                         __ptext33 149E  
                       __ptext25 107A                         __ptext17 215C  
                       __ptext50 1DD6                         __ptext42 20BA  
                       __ptext34 18C8                         __ptext26 1D38  
                       __ptext18 2162                         __ptext51 1E10  
                       __ptext43 2118                         __ptext35 20F4  
                       __ptext27 1FBA                         __ptext19 208C  
                       __ptext44 216E                         __ptext36 1FFA  
                       __ptext28 1FDA                         __ptext45 2136  
                       __ptext37 1B94                         __ptext29 1E82  
                       __ptext46 2106                         __ptext38 1A98  
                       __ptext47 12D2                         __ptext39 1F78  
                       __ptext48 1F04                         __ptext49 1972  
                       _high_isr 0008                 _CW_rotation_flag 004A  
                  __size_of_main 0144                         _lvd_flag 004C  
                       _set_leds 1A98             __end_of_TURN_TIME_ms 1009  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                     _D_CONSTANT 1001                   OpenUSART@spbrg 000F  
             _TURN_SPEED_DIVIDER 1009                         intlevel2 0000  
                    ??_openPORTA 000F                      ??_openPORTB 000F  
                    ??_openPORTD 000F                      ??_openPORTE 000F  
                 _GetBackonTrack 149E                _openPORTCforUSART 2156  
              SetChanADC@channel 0010                  ??_set_osc_32MHz 000F  
                    _reset_codes 1D94                       _OSCCONbits 000FD3  
             ?_openPORTCforUSART 0001      __end_of_AllSensorsTriggered 1C08  
                     _I_CONSTANT 1003                         printf@ap 0011  
            ??_openPORTCforUSART 000F         __end_of_motors_brake_all 1F9A  
           __size_of_StatusReset 0006           __end_of_GetBackonTrack 1614  
                _openPORTCforPWM 2128        __end_of_openPORTCforUSART 215C  
                     _STKFULtask 201A                       _P_CONSTANT 1005  
