

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 02 20:43:47 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	smallconst
    64  001000                     __psmallconst:
    65                           	opt stack 0
    66  001000  00                 	db	0
    67  001001                     set_motor_speed@motor_speeds:
    68                           	opt stack 0
    69  001001  FCE0               	dw	64736
    70  001003  FD2B               	dw	64811
    71  001005  FD76               	dw	64886
    72  001007  0000               	dw	0
    73  001009  028A               	dw	650
    74  00100B  02D5               	dw	725
    75  00100D  0320               	dw	800
    76  00100F                     __end_ofset_motor_speed@motor_speeds:
    77                           	opt stack 0
    78  00100F                     _D_CONSTANT:
    79                           	opt stack 0
    80  00100F  0000               	dw	0
    81  001011                     __end_of_D_CONSTANT:
    82                           	opt stack 0
    83  001011                     _I_CONSTANT:
    84                           	opt stack 0
    85  001011  0000               	dw	0
    86  001013                     __end_of_I_CONSTANT:
    87                           	opt stack 0
    88  001013                     _P_CONSTANT:
    89                           	opt stack 0
    90  001013  0000               	dw	0
    91  001015                     __end_of_P_CONSTANT:
    92                           	opt stack 0
    93  0000                     _ADCON0	set	4034
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADRESL	set	4035
    99  0000                     _CCP1CON	set	4029
   100  0000                     _CCP2CON	set	4026
   101  0000                     _CCPR1L	set	4030
   102  0000                     _CCPR2L	set	4027
   103  0000                     _HLVDCONbits	set	4050
   104  0000                     _INTCONbits	set	4082
   105  0000                     _IPR2bits	set	4002
   106  0000                     _OSCCONbits	set	4051
   107  0000                     _OSCTUNEbits	set	3995
   108  0000                     _PIE1bits	set	3997
   109  0000                     _PIE2bits	set	4000
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PIR2bits	set	4001
   112  0000                     _PORTCbits	set	3970
   113  0000                     _PORTD	set	3971
   114  0000                     _PORTDbits	set	3971
   115  0000                     _PORTEbits	set	3972
   116  0000                     _PR2	set	4043
   117  0000                     _RCONbits	set	4048
   118  0000                     _RCSTA	set	4011
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _SPBRG	set	4015
   121  0000                     _SPBRGH	set	4016
   122  0000                     _STKPTRbits	set	4092
   123  0000                     _T0CON	set	4053
   124  0000                     _T0CONbits	set	4053
   125  0000                     _T2CON	set	4042
   126  0000                     _T2CONbits	set	4042
   127  0000                     _TMR0H	set	4055
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR2	set	4044
   130  0000                     _TRISA	set	3986
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISBbits	set	3987
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISCbits	set	3988
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISE	set	3990
   137  0000                     _TXSTA	set	4012
   138  0000                     _TXSTAbits	set	4012
   139  0000                     _TMR0IF	set	32658
   140  001015                     STR_1:
   141  001015  0A                 	db	10
   142  001016  0D                 	db	13
   143  001017  4B                 	db	75	;'K'
   144  001018  77                 	db	119	;'w'
   145  001019  61                 	db	97	;'a'
   146  00101A  6E                 	db	110	;'n'
   147  00101B  74                 	db	116	;'t'
   148  00101C  6C                 	db	108	;'l'
   149  00101D  65                 	db	101	;'e'
   150  00101E  6E                 	db	110	;'n'
   151  00101F  20                 	db	32
   152  001020  41                 	db	65	;'A'
   153  001021  50                 	db	80	;'P'
   154  001022  53                 	db	83	;'S'
   155  001023  43                 	db	67	;'C'
   156  001024  31                 	db	49	;'1'
   157  001025  32                 	db	50	;'2'
   158  001026  39                 	db	57	;'9'
   159  001027  39                 	db	57	;'9'
   160  001028  20                 	db	32
   161  001029  73                 	db	115	;'s'
   162  00102A  69                 	db	105	;'i'
   163  00102B  6D                 	db	109	;'m'
   164  00102C  70                 	db	112	;'p'
   165  00102D  6C                 	db	108	;'l'
   166  00102E  65                 	db	101	;'e'
   167  00102F  20                 	db	32
   168  001030  63                 	db	99	;'c'
   169  001031  75                 	db	117	;'u'
   170  001032  72                 	db	114	;'r'
   171  001033  76                 	db	118	;'v'
   172  001034  65                 	db	101	;'e'
   173  001035  20                 	db	32
   174  001036  66                 	db	102	;'f'
   175  001037  6F                 	db	111	;'o'
   176  001038  6C                 	db	108	;'l'
   177  001039  6C                 	db	108	;'l'
   178  00103A  6F                 	db	111	;'o'
   179  00103B  77                 	db	119	;'w'
   180  00103C  65                 	db	101	;'e'
   181  00103D  72                 	db	114	;'r'
   182  00103E  20                 	db	32
   183  00103F  2D                 	db	45
   184  001040  2D                 	db	45
   185  001041  20                 	db	32
   186  001042  77                 	db	119	;'w'
   187  001043  69                 	db	105	;'i'
   188  001044  74                 	db	116	;'t'
   189  001045  68                 	db	104	;'h'
   190  001046  20                 	db	32
   191  001047  65                 	db	101	;'e'
   192  001048  72                 	db	114	;'r'
   193  001049  72                 	db	114	;'r'
   194  00104A  6F                 	db	111	;'o'
   195  00104B  72                 	db	114	;'r'
   196  00104C  20                 	db	32
   197  00104D  63                 	db	99	;'c'
   198  00104E  6F                 	db	111	;'o'
   199  00104F  64                 	db	100	;'d'
   200  001050  65                 	db	101	;'e'
   201  001051  73                 	db	115	;'s'
   202  001052  0A                 	db	10
   203  001053  0D                 	db	13
   204  001054  00                 	db	0
   205  001055                     STR_6:
   206  001055  20                 	db	32
   207  001056  3C                 	db	60	;'<'
   208  001057  72                 	db	114	;'r'
   209  001058  65                 	db	101	;'e'
   210  001059  73                 	db	115	;'s'
   211  00105A  65                 	db	101	;'e'
   212  00105B  74                 	db	116	;'t'
   213  00105C  3E                 	db	62	;'>'
   214  00105D  20                 	db	32
   215  00105E  00                 	db	0
   216  00105F                     STR_5:
   217  00105F  3C                 	db	60	;'<'
   218  001060  53                 	db	83	;'S'
   219  001061  54                 	db	84	;'T'
   220  001062  4B                 	db	75	;'K'
   221  001063  46                 	db	70	;'F'
   222  001064  55                 	db	85	;'U'
   223  001065  4C                 	db	76	;'L'
   224  001066  3E                 	db	62	;'>'
   225  001067  00                 	db	0
   226  001068                     STR_4:
   227  001068  3C                 	db	60	;'<'
   228  001069  57                 	db	87	;'W'
   229  00106A  44                 	db	68	;'D'
   230  00106B  54                 	db	84	;'T'
   231  00106C  20                 	db	32
   232  00106D  54                 	db	84	;'T'
   233  00106E  4F                 	db	79	;'O'
   234  00106F  3E                 	db	62	;'>'
   235  001070  00                 	db	0
   236  001071                     STR_7:
   237  001071  5C                 	db	92	;'\'
   238  001072  3C                 	db	60	;'<'
   239  001073  4C                 	db	76	;'L'
   240  001074  56                 	db	86	;'V'
   241  001075  44                 	db	68	;'D'
   242  001076  3E                 	db	62	;'>'
   243  001077  00                 	db	0
   244  001078                     STR_3:
   245  001078  3C                 	db	60	;'<'
   246  001079  42                 	db	66	;'B'
   247  00107A  4F                 	db	79	;'O'
   248  00107B  52                 	db	82	;'R'
   249  00107C  3E                 	db	62	;'>'
   250  00107D  00                 	db	0
   251  00107E                     STR_2:
   252  00107E  3C                 	db	60	;'<'
   253  00107F  50                 	db	80	;'P'
   254  001080  4F                 	db	79	;'O'
   255  001081  52                 	db	82	;'R'
   256  001082  3E                 	db	62	;'>'
   257  001083  00                 	db	0
   258                           
   259                           ; #config settings
   260  001084  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           	psect	cinit
   263  001F06                     __pcinit:
   264                           	opt stack 0
   265  001F06                     start_initialization:
   266                           	opt stack 0
   267  001F06                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Clear objects allocated to COMRAM (15 bytes)
   271  001F06  EE00  F03E         	lfsr	0,__pbssCOMRAM
   272  001F0A  0E0F               	movlw	15
   273  001F0C                     clear_0:
   274  001F0C  6AEE               	clrf	postinc0,c
   275  001F0E  06E8               	decf	wreg,f,c
   276  001F10  E1FD               	bnz	clear_0
   277  001F12                     end_of_initialization:
   278                           	opt stack 0
   279  001F12                     __end_of__initialization:
   280                           	opt stack 0
   281  001F12  0100               	movlb	0
   282  001F14  EF72  F00A         	goto	_main	;jump to C main() function
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssCOMRAM
   287  00003E                     __pbssCOMRAM:
   288                           	opt stack 0
   289  00003E                     main@F4186:
   290                           	opt stack 0
   291  00003E                     	ds	3
   292  000041                     PID_LineFollowing@D:
   293                           	opt stack 0
   294  000041                     	ds	2
   295  000043                     PID_LineFollowing@delta_velocity:
   296                           	opt stack 0
   297  000043                     	ds	2
   298  000045                     _I:
   299                           	opt stack 0
   300  000045                     	ds	2
   301  000047                     _flag_count:
   302                           	opt stack 0
   303  000047                     	ds	2
   304  000049                     _threshold:
   305                           	opt stack 0
   306  000049                     	ds	2
   307  00004B                     _SeeLine:
   308                           	opt stack 0
   309  00004B                     	ds	1
   310  00004C                     _lvd_flag:
   311                           	opt stack 0
   312  00004C                     	ds	1
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	cstackCOMRAM
   317  000001                     __pcstackCOMRAM:
   318                           	opt stack 0
   319  000001                     ??_high_isr:
   320  000001                     
   321                           ; 1 bytes @ 0x0
   322  000001                     	ds	14
   323  00000F                     ??_set_leds:
   324  00000F                     ??_SetChanADC:
   325  00000F                     ?_printf:
   326                           	opt stack 0
   327  00000F                     ?_ReadTimer0:
   328                           	opt stack 0
   329  00000F                     ?_ReadADC:
   330                           	opt stack 0
   331  00000F                     ?___aldiv:
   332                           	opt stack 0
   333  00000F                     OpenADC@config2:
   334                           	opt stack 0
   335  00000F                     OpenPWM1@period:
   336                           	opt stack 0
   337  00000F                     OpenPWM2@period:
   338                           	opt stack 0
   339  00000F                     OpenTimer0@config:
   340                           	opt stack 0
   341  00000F                     OpenTimer2@config:
   342                           	opt stack 0
   343  00000F                     set_osc_32MHz@i:
   344                           	opt stack 0
   345  00000F                     printf@f:
   346                           	opt stack 0
   347  00000F                     SetDCPWM1@dutycycle:
   348                           	opt stack 0
   349  00000F                     SetDCPWM2@dutycycle:
   350                           	opt stack 0
   351  00000F                     WriteTimer0@timer0:
   352                           	opt stack 0
   353  00000F                     OpenUSART@spbrg:
   354                           	opt stack 0
   355  00000F                     gtrap@count:
   356                           	opt stack 0
   357  00000F                     ___aldiv@dividend:
   358                           	opt stack 0
   359                           
   360                           ; 4 bytes @ 0xE
   361  00000F                     	ds	1
   362  000010                     OpenADC@portconfig:
   363                           	opt stack 0
   364  000010                     SetChanADC@channel:
   365                           	opt stack 0
   366  000010                     OpenPWM2@ccp2mx:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0xF
   370  000010                     	ds	1
   371  000011                     ??_SetDCPWM2:
   372  000011                     ??_SetDCPWM1:
   373  000011                     ??_OpenADC:
   374  000011                     ??_ReadADC:
   375  000011                     OpenUSART@config:
   376                           	opt stack 0
   377  000011                     printf@ap:
   378                           	opt stack 0
   379  000011                     ReadTimer0@timer:
   380                           	opt stack 0
   381  000011                     WriteTimer0@timer:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385  000011                     	ds	2
   386  000013                     ?_adc:
   387                           	opt stack 0
   388  000013                     ?___lwdiv:
   389                           	opt stack 0
   390  000013                     ?___lwmod:
   391                           	opt stack 0
   392  000013                     printf@c:
   393                           	opt stack 0
   394  000013                     OpenADC@config:
   395                           	opt stack 0
   396  000013                     SetDCPWM1@DCycle:
   397                           	opt stack 0
   398  000013                     SetDCPWM2@DCycle:
   399                           	opt stack 0
   400  000013                     ___lwdiv@dividend:
   401                           	opt stack 0
   402  000013                     ___lwmod@dividend:
   403                           	opt stack 0
   404  000013                     ___aldiv@divisor:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x12
   408  000013                     	ds	1
   409  000014                     PORtask@count1:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x13
   413  000014                     	ds	1
   414  000015                     adc@channel:
   415                           	opt stack 0
   416  000015                     ___lwdiv@divisor:
   417                           	opt stack 0
   418  000015                     ___lwmod@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x14
   422  000015                     	ds	1
   423  000016                     ??_check_sensors:
   424                           
   425                           ; 0 bytes @ 0x15
   426  000016                     	ds	1
   427  000017                     ___aldiv@counter:
   428                           	opt stack 0
   429  000017                     ___lwmod@counter:
   430                           	opt stack 0
   431  000017                     ___lwdiv@quotient:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x16
   435  000017                     	ds	1
   436  000018                     ___aldiv@sign:
   437                           	opt stack 0
   438  000018                     PORtask@count2:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x17
   442  000018                     	ds	1
   443  000019                     ___lwdiv@counter:
   444                           	opt stack 0
   445  000019                     ___aldiv@quotient:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x18
   449  000019                     	ds	3
   450  00001C                     
   451                           ; 0 bytes @ 0x1B
   452  00001C                     	ds	1
   453  00001D                     ?___wmul:
   454                           	opt stack 0
   455  00001D                     ___wmul@multiplier:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1C
   459  00001D                     	ds	2
   460  00001F                     ___wmul@multiplicand:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1E
   464  00001F                     	ds	2
   465  000021                     ___wmul@product:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x20
   469  000021                     	ds	2
   470  000023                     ?___awdiv:
   471                           	opt stack 0
   472  000023                     ___awdiv@dividend:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x22
   476  000023                     	ds	2
   477  000025                     ___awdiv@divisor:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x24
   481  000025                     	ds	2
   482  000027                     ___awdiv@counter:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x26
   486  000027                     	ds	1
   487  000028                     ___awdiv@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x27
   491  000028                     	ds	1
   492  000029                     ___awdiv@quotient:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x28
   496  000029                     	ds	2
   497  00002B                     MotorControl@delta_velocity:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x2A
   501  00002B                     	ds	2
   502  00002D                     ??_MotorControl:
   503                           
   504                           ; 0 bytes @ 0x2C
   505  00002D                     	ds	1
   506  00002E                     MotorControl@left_dir_modifier:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x2D
   510  00002E                     	ds	1
   511  00002F                     MotorControl@right_dir_modifier:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x2E
   515  00002F                     	ds	1
   516  000030                     MotorControl@left_duty_cycle:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x2F
   520  000030                     	ds	2
   521  000032                     MotorControl@right_duty_cycle:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x31
   525  000032                     	ds	2
   526  000034                     PID_LineFollowing@error:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x33
   530  000034                     	ds	2
   531  000036                     ??_PID_LineFollowing:
   532                           
   533                           ; 0 bytes @ 0x35
   534  000036                     	ds	5
   535  00003B                     main@error:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x3A
   539  00003B                     	ds	3
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           
   543 ;;
   544 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   545 ;;
   546 ;; *************** function _main *****************
   547 ;; Defined at:
   548 ;;		line 21 in file "../Robot Files/main.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  error           3   58[COMRAM] char [3]
   553 ;; Return value:  Size  Location     Type
   554 ;;		None               void
   555 ;; Registers used:
   556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        3 bytes
   567 ;; Hardware stack levels required when called:    6
   568 ;; This function calls:
   569 ;;		_LVtrap
   570 ;;		_OpenTimer0
   571 ;;		_PID_LineFollowing
   572 ;;		_WriteTimer0
   573 ;;		_check_sensors
   574 ;;		_initialization
   575 ;;		_lvd_flag_set
   576 ;;		_printf
   577 ;;		_set_leds
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  0014E4                     __ptext0:
   585                           	opt stack 0
   586  0014E4                     _main:
   587                           	opt stack 25
   588                           
   589                           ;main.c: 23: signed char error[3]={0};
   590                           
   591                           ;incstack = 0
   592  0014E4  C03E  F03B         	movff	main@F4186,main@error
   593  0014E8  C03F  F03C         	movff	main@F4186+1,main@error+1
   594  0014EC  C040  F03D         	movff	main@F4186+2,main@error+2
   595                           
   596                           ;main.c: 24: initialization();
   597  0014F0  EC54  F00C         	call	_initialization	;wreg free
   598                           
   599                           ;main.c: 29: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   600  0014F4  0E15               	movlw	low STR_1
   601  0014F6  6E0F               	movwf	printf@f,c
   602  0014F8  0E10               	movlw	high STR_1
   603  0014FA  6E10               	movwf	printf@f+1,c
   604  0014FC  EC7D  F00E         	call	_printf	;wreg free
   605  001500  0004               	clrwdt		;# 
   606                           
   607                           ;main.c: 32: threshold = 620u;
   608  001502  0E02               	movlw	2
   609  001504  6E4A               	movwf	_threshold+1,c
   610  001506  0E6C               	movlw	108
   611  001508  6E49               	movwf	_threshold,c
   612                           
   613                           ;main.c: 36: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   614  00150A  0E16               	movlw	22
   615  00150C  EC08  F00F         	call	_OpenTimer0
   616                           
   617                           ;main.c: 37: WriteTimer0(0);
   618  001510  0E00               	movlw	0
   619  001512  6E10               	movwf	WriteTimer0@timer0+1,c
   620  001514  0E00               	movlw	0
   621  001516  6E0F               	movwf	WriteTimer0@timer0,c
   622  001518  EC95  F00F         	call	_WriteTimer0	;wreg free
   623                           
   624                           ;main.c: 38: TMR0IF = 0;
   625  00151C  94F2               	bcf	intcon,2,c	;volatile
   626  00151E  D000               	goto	l2643
   627  001520                     l2643:
   628                           
   629                           ;main.c: 41: {
   630                           ;main.c: 42: check_sensors();
   631  001520  EC51  F00B         	call	_check_sensors	;wreg free
   632                           
   633                           ;main.c: 45: switch(SeeLine.B)
   634  001524  D014               	goto	l2663
   635  001526                     l2645:
   636                           
   637                           ;main.c: 48: error[2]=1; break;
   638  001526  0E01               	movlw	1
   639  001528  D010               	goto	L7
   640  00152A                     l2647:
   641                           
   642                           ;main.c: 50: error[2]=2; break;
   643  00152A  0E02               	movlw	2
   644  00152C  D00E               	goto	L7
   645  00152E                     l2649:
   646                           
   647                           ;main.c: 52: error[2]=3; break;
   648  00152E  0E03               	movlw	3
   649  001530  D00C               	goto	L7
   650  001532                     l2651:
   651                           
   652                           ;main.c: 54: error[2]=4; break;
   653  001532  0E04               	movlw	4
   654  001534  D00A               	goto	L7
   655  001536                     l86:
   656                           
   657                           ;main.c: 56: error[2]=-1; break;
   658  001536  683D               	setf	main@error+2,c
   659  001538  D032               	goto	l2665
   660  00153A                     l2653:
   661                           
   662                           ;main.c: 58: error[2]=-2; break;
   663  00153A  0EFE               	movlw	254
   664  00153C  D006               	goto	L7
   665  00153E                     l2655:
   666                           
   667                           ;main.c: 60: error[2]=-3; break;
   668  00153E  0EFD               	movlw	253
   669  001540  D004               	goto	L7
   670  001542                     l2657:
   671                           
   672                           ;main.c: 62: error[2]=-4; break;
   673  001542  0EFC               	movlw	252
   674  001544  D002               	goto	L7
   675                           
   676                           ;main.c: 63: case 0b00111u:
   677  001546  D000               	goto	l2659
   678  001548                     l2659:
   679                           
   680                           ;main.c: 72: error[2]=0; break;
   681  001548  0E00               	movlw	0
   682  00154A                     L7:
   683  00154A  6E3D               	movwf	main@error+2,c
   684                           
   685                           ;main.c: 73: }
   686  00154C  D028               	goto	l2665
   687  00154E                     l2663:
   688  00154E  504B               	movf	_SeeLine,w,c
   689  001550  0B1F               	andlw	31
   690                           
   691                           ; Switch size 1, requested type "space"
   692                           ; Number of cases is 13, Range of values is 0 to 28
   693                           ; switch strategies available:
   694                           ; Name         Instructions Cycles
   695                           ; simple_byte           40    21 (average)
   696                           ;	Chosen strategy is simple_byte
   697  001552  0A00               	xorlw	0	; case 0
   698  001554  B4D8               	btfsc	status,2,c
   699  001556  D7F8               	goto	l2659
   700  001558  0A01               	xorlw	1	; case 1
   701  00155A  B4D8               	btfsc	status,2,c
   702  00155C  D7EA               	goto	l2651
   703  00155E  0A03               	xorlw	3	; case 2
   704  001560  B4D8               	btfsc	status,2,c
   705  001562  D7E3               	goto	l2647
   706  001564  0A01               	xorlw	1	; case 3
   707  001566  B4D8               	btfsc	status,2,c
   708  001568  D7E2               	goto	l2649
   709  00156A  0A06               	xorlw	6	; case 5
   710  00156C  B4D8               	btfsc	status,2,c
   711  00156E  D7EC               	goto	l2659
   712  001570  0A03               	xorlw	3	; case 6
   713  001572  B4D8               	btfsc	status,2,c
   714  001574  D7D8               	goto	l2645
   715  001576  0A01               	xorlw	1	; case 7
   716  001578  B4D8               	btfsc	status,2,c
   717  00157A  D7E6               	goto	l2659
   718  00157C  0A0F               	xorlw	15	; case 8
   719  00157E  B4D8               	btfsc	status,2,c
   720  001580  D7DC               	goto	l2653
   721  001582  0A04               	xorlw	4	; case 12
   722  001584  B4D8               	btfsc	status,2,c
   723  001586  D7D7               	goto	l86
   724  001588  0A1C               	xorlw	28	; case 16
   725  00158A  B4D8               	btfsc	status,2,c
   726  00158C  D7DA               	goto	l2657
   727  00158E  0A04               	xorlw	4	; case 20
   728  001590  B4D8               	btfsc	status,2,c
   729  001592  D7DA               	goto	l2659
   730  001594  0A0C               	xorlw	12	; case 24
   731  001596  B4D8               	btfsc	status,2,c
   732  001598  D7D2               	goto	l2655
   733  00159A  0A04               	xorlw	4	; case 28
   734  00159C  D7D5               	goto	l2659
   735  00159E                     l2665:
   736                           
   737                           ;main.c: 74: set_leds();
   738  00159E  EC9C  F00C         	call	_set_leds	;wreg free
   739                           
   740                           ;main.c: 75: PID_LineFollowing(error);
   741  0015A2  0E3B               	movlw	low main@error
   742  0015A4  6E34               	movwf	PID_LineFollowing@error,c
   743  0015A6  0E00               	movlw	high main@error
   744  0015A8  6E35               	movwf	PID_LineFollowing@error+1,c
   745  0015AA  EC43  F008         	call	_PID_LineFollowing	;wreg free
   746  0015AE  0004               	clrwdt		;# 
   747                           
   748                           ;main.c: 78: if(lvd_flag_set()) LVtrap();
   749  0015B0  ECBD  F00F         	call	_lvd_flag_set	;wreg free
   750  0015B4  0900               	iorlw	0
   751  0015B6  B4D8               	btfsc	status,2,c
   752  0015B8  D7B3               	goto	l2643
   753  0015BA  EC18  F00F         	call	_LVtrap	;wreg free
   754  0015BE  D7B0               	goto	l2643
   755  0015C0  EF0C  F000         	goto	start
   756  0015C4                     __end_of_main:
   757                           	opt stack 0
   758                           intcon	equ	0xFF2
   759                           postinc0	equ	0xFEE
   760                           wreg	equ	0xFE8
   761                           status	equ	0xFD8
   762                           
   763 ;; *************** function _set_leds *****************
   764 ;; Defined at:
   765 ;;		line 255 in file "../Robot Files/sumovore.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;		None               void
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text1
   794  001938                     __ptext1:
   795                           	opt stack 0
   796  001938                     _set_leds:
   797                           	opt stack 29
   798                           
   799                           ;sumovore.c: 257: PORTDbits.RD0=!SeeLine.b.Left;
   800                           
   801                           ;incstack = 0
   802  001938  B84B               	btfsc	_SeeLine,4,c
   803  00193A  D003               	goto	u810
   804  00193C  6A0F               	clrf	??_set_leds& (0+255),c
   805  00193E  2A0F               	incf	??_set_leds& (0+255),f,c
   806  001940  D001               	goto	u828
   807  001942                     u810:
   808  001942  6A0F               	clrf	??_set_leds& (0+255),c
   809  001944                     u828:
   810  001944  5083               	movf	3971,w,c	;volatile
   811  001946  180F               	xorwf	??_set_leds,w,c
   812  001948  0BFE               	andlw	-2
   813  00194A  180F               	xorwf	??_set_leds,w,c
   814  00194C  6E83               	movwf	3971,c	;volatile
   815                           
   816                           ;sumovore.c: 258: PORTDbits.RD1=!SeeLine.b.CntLeft;
   817  00194E  B64B               	btfsc	_SeeLine,3,c
   818  001950  D003               	goto	u830
   819  001952  6A0F               	clrf	??_set_leds& (0+255),c
   820  001954  2A0F               	incf	??_set_leds& (0+255),f,c
   821  001956  D001               	goto	u848
   822  001958                     u830:
   823  001958  6A0F               	clrf	??_set_leds& (0+255),c
   824  00195A                     u848:
   825  00195A  460F               	rlncf	??_set_leds,f,c
   826  00195C  5083               	movf	3971,w,c	;volatile
   827  00195E  180F               	xorwf	??_set_leds,w,c
   828  001960  0BFD               	andlw	-3
   829  001962  180F               	xorwf	??_set_leds,w,c
   830  001964  6E83               	movwf	3971,c	;volatile
   831                           
   832                           ;sumovore.c: 259: PORTDbits.RD2=!SeeLine.b.Center;
   833  001966  B44B               	btfsc	_SeeLine,2,c
   834  001968  D003               	goto	u850
   835  00196A  6A0F               	clrf	??_set_leds& (0+255),c
   836  00196C  2A0F               	incf	??_set_leds& (0+255),f,c
   837  00196E  D001               	goto	u868
   838  001970                     u850:
   839  001970  6A0F               	clrf	??_set_leds& (0+255),c
   840  001972                     u868:
   841  001972  460F               	rlncf	??_set_leds,f,c
   842  001974  460F               	rlncf	??_set_leds,f,c
   843  001976  5083               	movf	3971,w,c	;volatile
   844  001978  180F               	xorwf	??_set_leds,w,c
   845  00197A  0BFB               	andlw	-5
   846  00197C  180F               	xorwf	??_set_leds,w,c
   847  00197E  6E83               	movwf	3971,c	;volatile
   848                           
   849                           ;sumovore.c: 260: PORTDbits.RD3=!SeeLine.b.CntRight;
   850  001980  B24B               	btfsc	_SeeLine,1,c
   851  001982  D003               	goto	u870
   852  001984  6A0F               	clrf	??_set_leds& (0+255),c
   853  001986  2A0F               	incf	??_set_leds& (0+255),f,c
   854  001988  D001               	goto	u888
   855  00198A                     u870:
   856  00198A  6A0F               	clrf	??_set_leds& (0+255),c
   857  00198C                     u888:
   858  00198C  460F               	rlncf	??_set_leds,f,c
   859  00198E  460F               	rlncf	??_set_leds,f,c
   860  001990  460F               	rlncf	??_set_leds,f,c
   861  001992  5083               	movf	3971,w,c	;volatile
   862  001994  180F               	xorwf	??_set_leds,w,c
   863  001996  0BF7               	andlw	-9
   864  001998  180F               	xorwf	??_set_leds,w,c
   865  00199A  6E83               	movwf	3971,c	;volatile
   866                           
   867                           ;sumovore.c: 261: PORTDbits.RD4=!SeeLine.b.Right;
   868  00199C  B04B               	btfsc	_SeeLine,0,c
   869  00199E  D003               	goto	u890
   870  0019A0  6A0F               	clrf	??_set_leds& (0+255),c
   871  0019A2  2A0F               	incf	??_set_leds& (0+255),f,c
   872  0019A4  D001               	goto	u908
   873  0019A6                     u890:
   874  0019A6  6A0F               	clrf	??_set_leds& (0+255),c
   875  0019A8                     u908:
   876  0019A8  3A0F               	swapf	??_set_leds,f,c
   877  0019AA  5083               	movf	3971,w,c	;volatile
   878  0019AC  180F               	xorwf	??_set_leds,w,c
   879  0019AE  0BEF               	andlw	-17
   880  0019B0  180F               	xorwf	??_set_leds,w,c
   881  0019B2  6E83               	movwf	3971,c	;volatile
   882  0019B4  0012               	return		;funcret
   883  0019B6                     __end_of_set_leds:
   884                           	opt stack 0
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           status	equ	0xFD8
   889                           
   890 ;; *************** function _lvd_flag_set *****************
   891 ;; Defined at:
   892 ;;		line 47 in file "../Robot Files/interrupts.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      unsigned char 
   899 ;; Registers used:
   900 ;;		wreg, status,2
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text2
   921  001F7A                     __ptext2:
   922                           	opt stack 0
   923  001F7A                     _lvd_flag_set:
   924                           	opt stack 29
   925                           
   926                           ;interrupts.c: 49: return lvd_flag;
   927                           
   928                           ;incstack = 0
   929  001F7A  504C               	movf	_lvd_flag,w,c
   930  001F7C  D000               	goto	l24
   931  001F7E                     l24:
   932  001F7E  0012               	return		;funcret
   933  001F80                     __end_of_lvd_flag_set:
   934                           	opt stack 0
   935                           intcon	equ	0xFF2
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           status	equ	0xFD8
   939                           
   940 ;; *************** function _initialization *****************
   941 ;; Defined at:
   942 ;;		line 65 in file "../Robot Files/sumovore.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;		None               void
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    5
   963 ;; This function calls:
   964 ;;		_OpenADC
   965 ;;		_OpenPWM1
   966 ;;		_OpenPWM2
   967 ;;		_OpenTimer2
   968 ;;		_OpenUSART
   969 ;;		_SetDCPWM1
   970 ;;		_SetDCPWM2
   971 ;;		_openLVD
   972 ;;		_openPORTA
   973 ;;		_openPORTB
   974 ;;		_openPORTCforPWM
   975 ;;		_openPORTCforUSART
   976 ;;		_openPORTD
   977 ;;		_openPORTE
   978 ;;		_reset_codes
   979 ;;		_set_osc_32MHz
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text3
   986  0018A8                     __ptext3:
   987                           	opt stack 0
   988  0018A8                     _initialization:
   989                           	opt stack 25
   990                           
   991                           ;sumovore.c: 67: SeeLine.B = 0;
   992                           
   993                           ;incstack = 0
   994  0018A8  904B               	bcf	_SeeLine,0,c
   995  0018AA  924B               	bcf	_SeeLine,1,c
   996  0018AC  944B               	bcf	_SeeLine,2,c
   997  0018AE  964B               	bcf	_SeeLine,3,c
   998  0018B0  984B               	bcf	_SeeLine,4,c
   999                           
  1000                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  1001  0018B2  8ED0               	bsf	4048,7,c	;volatile
  1002                           
  1003                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  1004  0018B4  9EF2               	bcf	intcon,7,c	;volatile
  1005                           
  1006                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  1007  0018B6  9CF2               	bcf	intcon,6,c	;volatile
  1008                           
  1009                           ;sumovore.c: 72: set_osc_32MHz();
  1010  0018B8  EC94  F00E         	call	_set_osc_32MHz	;wreg free
  1011                           
  1012                           ;sumovore.c: 73: openPORTCforUSART();
  1013  0018BC  ECC6  F00F         	call	_openPORTCforUSART	;wreg free
  1014                           
  1015                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1016                           ;sumovore.c: 76: 16 );
  1017  0018C0  0E00               	movlw	0
  1018  0018C2  6E10               	movwf	OpenUSART@spbrg+1,c
  1019  0018C4  0E10               	movlw	16
  1020  0018C6  6E0F               	movwf	OpenUSART@spbrg,c
  1021  0018C8  0E3C               	movlw	60
  1022  0018CA  EC1A  F00D         	call	_OpenUSART
  1023                           
  1024                           ;sumovore.c: 82: openPORTD();
  1025  0018CE  ECCF  F00F         	call	_openPORTD	;wreg free
  1026                           
  1027                           ;sumovore.c: 83: PORTD = 0;
  1028  0018D2  0E00               	movlw	0
  1029  0018D4  6E83               	movwf	3971,c	;volatile
  1030                           
  1031                           ;sumovore.c: 85: reset_codes();
  1032  0018D6  EC06  F00E         	call	_reset_codes	;wreg free
  1033                           
  1034                           ;sumovore.c: 87: openPORTCforPWM();
  1035  0018DA  ECAF  F00F         	call	_openPORTCforPWM	;wreg free
  1036                           
  1037                           ;sumovore.c: 89: openPORTA();
  1038  0018DE  ECCC  F00F         	call	_openPORTA	;wreg free
  1039                           
  1040                           ;sumovore.c: 90: openPORTB();
  1041  0018E2  ECC9  F00F         	call	_openPORTB	;wreg free
  1042                           
  1043                           ;sumovore.c: 91: openPORTE();
  1044  0018E6  ECC3  F00F         	call	_openPORTE	;wreg free
  1045                           
  1046                           ;sumovore.c: 94: openLVD();
  1047  0018EA  EC61  F00F         	call	_openLVD	;wreg free
  1048                           
  1049                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1050  0018EE  0E0C               	movlw	12
  1051  0018F0  6E0F               	movwf	OpenADC@config2,c
  1052  0018F2  0E0A               	movlw	10
  1053  0018F4  6E10               	movwf	OpenADC@portconfig,c
  1054  0018F6  0EA7               	movlw	167
  1055  0018F8  EC83  F00D         	call	_OpenADC
  1056                           
  1057                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1058  0018FC  9A82               	bcf	3970,5,c	;volatile
  1059                           
  1060                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1061  0018FE  9084               	bcf	3972,0,c	;volatile
  1062                           
  1063                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1064  001900  9082               	bcf	3970,0,c	;volatile
  1065                           
  1066                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1067  001902  9284               	bcf	3972,1,c	;volatile
  1068                           
  1069                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1070  001904  0E06               	movlw	6
  1071  001906  EC53  F00F         	call	_OpenTimer2
  1072                           
  1073                           ;sumovore.c: 110: OpenPWM1(199);
  1074  00190A  0EC7               	movlw	199
  1075  00190C  EC8C  F00F         	call	_OpenPWM1
  1076                           
  1077                           ;sumovore.c: 112: OpenPWM2(199);
  1078  001910  0EC7               	movlw	199
  1079  001912  EC61  F00E         	call	_OpenPWM2
  1080                           
  1081                           ;sumovore.c: 113: SetDCPWM1(0);
  1082  001916  0E00               	movlw	0
  1083  001918  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1084  00191A  0E00               	movlw	0
  1085  00191C  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1086  00191E  EC44  F00E         	call	_SetDCPWM1	;wreg free
  1087                           
  1088                           ;sumovore.c: 116: SetDCPWM2(0);
  1089  001922  0E00               	movlw	0
  1090  001924  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1091  001926  0E00               	movlw	0
  1092  001928  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1093  00192A  EC27  F00E         	call	_SetDCPWM2	;wreg free
  1094                           
  1095                           ;sumovore.c: 117: threshold = 512u;
  1096  00192E  0E02               	movlw	2
  1097  001930  6E4A               	movwf	_threshold+1,c
  1098  001932  0E00               	movlw	0
  1099  001934  6E49               	movwf	_threshold,c
  1100  001936  0012               	return		;funcret
  1101  001938                     __end_of_initialization:
  1102                           	opt stack 0
  1103                           intcon	equ	0xFF2
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _set_osc_32MHz *****************
  1109 ;; Defined at:
  1110 ;;		line 18 in file "../../Common/osc.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  i               2   14[COMRAM] int 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_initialization
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text4
  1139  001D28                     __ptext4:
  1140                           	opt stack 0
  1141  001D28                     _set_osc_32MHz:
  1142                           	opt stack 28
  1143                           
  1144                           ;osc.c: 20: int i;
  1145                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1146                           
  1147                           ;incstack = 0
  1148  001D28  8CD3               	bsf	4051,6,c	;volatile
  1149                           
  1150                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1151  001D2A  8AD3               	bsf	4051,5,c	;volatile
  1152                           
  1153                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1154  001D2C  88D3               	bsf	4051,4,c	;volatile
  1155                           
  1156                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1157  001D2E  8C9B               	bsf	3995,6,c	;volatile
  1158                           
  1159                           ;osc.c: 28: for(i=0;i<500;i++);
  1160  001D30  0E00               	movlw	0
  1161  001D32  6E10               	movwf	set_osc_32MHz@i+1,c
  1162  001D34  0E00               	movlw	0
  1163  001D36  6E0F               	movwf	set_osc_32MHz@i,c
  1164  001D38                     l1515:
  1165  001D38  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1166  001D3A  D008               	goto	l1519
  1167  001D3C  0EF4               	movlw	244
  1168  001D3E  5C0F               	subwf	set_osc_32MHz@i,w,c
  1169  001D40  0E01               	movlw	1
  1170  001D42  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1171  001D44  B0D8               	btfsc	status,0,c
  1172  001D46  D005               	goto	l382
  1173  001D48  D001               	goto	l1519
  1174  001D4A  D003               	goto	l382
  1175  001D4C                     l1519:
  1176  001D4C  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1177  001D4E  2A10               	incf	set_osc_32MHz@i+1,f,c
  1178  001D50  D7F3               	goto	l1515
  1179  001D52                     l382:
  1180  001D52  0012               	return		;funcret
  1181  001D54                     __end_of_set_osc_32MHz:
  1182                           	opt stack 0
  1183                           intcon	equ	0xFF2
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _reset_codes *****************
  1189 ;; Defined at:
  1190 ;;		line 281 in file "../Robot Files/sumovore.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;		None               void
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    4
  1211 ;; This function calls:
  1212 ;;		_BORtask
  1213 ;;		_PORtask
  1214 ;;		_RESETtask
  1215 ;;		_STKFULtask
  1216 ;;		_WDTtask
  1217 ;;		_isBOR
  1218 ;;		_isPOR
  1219 ;;		_isWDTTO
  1220 ;; This function is called by:
  1221 ;;		_initialization
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text5
  1226  001C0C                     __ptext5:
  1227                           	opt stack 0
  1228  001C0C                     _reset_codes:
  1229                           	opt stack 25
  1230                           
  1231                           ;sumovore.c: 283: if( isPOR() ) PORtask();
  1232                           
  1233                           ;incstack = 0
  1234  001C0C  ECE5  F00E         	call	_isPOR	;wreg free
  1235  001C10  0900               	iorlw	0
  1236  001C12  B4D8               	btfsc	status,2,c
  1237  001C14  D003               	goto	l2357
  1238  001C16  ECB3  F00B         	call	_PORtask	;wreg free
  1239  001C1A  D018               	goto	l337
  1240  001C1C                     l2357:
  1241                           
  1242                           ;sumovore.c: 286: else if (isBOR() ) BORtask();
  1243  001C1C  EC6D  F00F         	call	_isBOR	;wreg free
  1244  001C20  0900               	iorlw	0
  1245  001C22  B4D8               	btfsc	status,2,c
  1246  001C24  D003               	goto	l2361
  1247  001C26  ECF8  F00E         	call	_BORtask	;wreg free
  1248  001C2A  D010               	goto	l337
  1249  001C2C                     l2361:
  1250                           
  1251                           ;sumovore.c: 288: else if(isWDTTO() ) WDTtask();
  1252  001C2C  ECD2  F00E         	call	_isWDTTO	;wreg free
  1253  001C30  0900               	iorlw	0
  1254  001C32  B4D8               	btfsc	status,2,c
  1255  001C34  D003               	goto	l333
  1256  001C36  EC37  F00F         	call	_WDTtask	;wreg free
  1257  001C3A  D008               	goto	l337
  1258  001C3C                     l333:
  1259                           
  1260                           ;sumovore.c: 292: else if(STKPTRbits.STKFUL) STKFULtask();
  1261  001C3C  AEFC               	btfss	stkptr,7,c	;volatile
  1262  001C3E  D003               	goto	l2367
  1263  001C40  EC28  F00F         	call	_STKFULtask	;wreg free
  1264  001C44  D003               	goto	l337
  1265  001C46                     l2367:
  1266                           
  1267                           ;sumovore.c: 296: else RESETtask();
  1268  001C46  EC45  F00F         	call	_RESETtask	;wreg free
  1269  001C4A  D000               	goto	l337
  1270  001C4C                     l337:
  1271  001C4C  0012               	return		;funcret
  1272  001C4E                     __end_of_reset_codes:
  1273                           	opt stack 0
  1274                           stkptr	equ	0xFFC
  1275                           intcon	equ	0xFF2
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _isWDTTO *****************
  1281 ;; Defined at:
  1282 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_reset_codes
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text6
  1311  001DA4                     __ptext6:
  1312                           	opt stack 0
  1313  001DA4                     _isWDTTO:
  1314                           	opt stack 27
  1315                           
  1316                           ;incstack = 0
  1317  001DA4  A2D0               	btfss	4048,1,c	;volatile
  1318  001DA6  D00E               	goto	l1365
  1319  001DA8  A4D0               	btfss	4048,2,c	;volatile
  1320  001DAA  D00A               	goto	l1361
  1321  001DAC  A0D0               	btfss	4048,0,c	;volatile
  1322  001DAE  D006               	goto	l1357
  1323  001DB0  A6D0               	btfss	4048,3,c	;volatile
  1324  001DB2  D002               	goto	l1353
  1325  001DB4  D003               	goto	l1357
  1326  001DB6  D008               	goto	l599
  1327  001DB8                     l1353:
  1328  001DB8  0E01               	movlw	1
  1329  001DBA  D006               	goto	l599
  1330  001DBC                     l1357:
  1331  001DBC  0E00               	movlw	0
  1332  001DBE  D004               	goto	l599
  1333  001DC0                     l1361:
  1334  001DC0  0E00               	movlw	0
  1335  001DC2  D002               	goto	l599
  1336  001DC4                     l1365:
  1337  001DC4  0E00               	movlw	0
  1338  001DC6  D000               	goto	l599
  1339  001DC8                     l599:
  1340  001DC8  0012               	return		;funcret
  1341  001DCA                     __end_of_isWDTTO:
  1342                           	opt stack 0
  1343                           stkptr	equ	0xFFC
  1344                           intcon	equ	0xFF2
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _isPOR *****************
  1350 ;; Defined at:
  1351 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      unsigned char 
  1358 ;; Registers used:
  1359 ;;		wreg
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_reset_codes
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text7
  1380  001DCA                     __ptext7:
  1381                           	opt stack 0
  1382  001DCA                     _isPOR:
  1383                           	opt stack 27
  1384                           
  1385                           ;incstack = 0
  1386  001DCA  B2D0               	btfsc	4048,1,c	;volatile
  1387  001DCC  D00E               	goto	l1273
  1388  001DCE  A4D0               	btfss	4048,2,c	;volatile
  1389  001DD0  D00A               	goto	l1269
  1390  001DD2  B0D0               	btfsc	4048,0,c	;volatile
  1391  001DD4  D006               	goto	l1265
  1392  001DD6  B6D0               	btfsc	4048,3,c	;volatile
  1393  001DD8  D002               	goto	l1261
  1394  001DDA  D003               	goto	l1265
  1395  001DDC  D008               	goto	l590
  1396  001DDE                     l1261:
  1397  001DDE  0E01               	movlw	1
  1398  001DE0  D006               	goto	l590
  1399  001DE2                     l1265:
  1400  001DE2  0E00               	movlw	0
  1401  001DE4  D004               	goto	l590
  1402  001DE6                     l1269:
  1403  001DE6  0E00               	movlw	0
  1404  001DE8  D002               	goto	l590
  1405  001DEA                     l1273:
  1406  001DEA  0E00               	movlw	0
  1407  001DEC  D000               	goto	l590
  1408  001DEE                     l590:
  1409  001DEE  0012               	return		;funcret
  1410  001DF0                     __end_of_isPOR:
  1411                           	opt stack 0
  1412                           stkptr	equ	0xFFC
  1413                           intcon	equ	0xFF2
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           status	equ	0xFD8
  1417                           
  1418 ;; *************** function _isBOR *****************
  1419 ;; Defined at:
  1420 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      unsigned char 
  1427 ;; Registers used:
  1428 ;;		wreg
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_reset_codes
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text8
  1449  001EDA                     __ptext8:
  1450                           	opt stack 0
  1451  001EDA                     _isBOR:
  1452                           	opt stack 27
  1453                           
  1454                           ;incstack = 0
  1455  001EDA  B0D0               	btfsc	4048,0,c	;volatile
  1456  001EDC  D006               	goto	l1321
  1457  001EDE  B2D0               	btfsc	4048,1,c	;volatile
  1458  001EE0  D002               	goto	l1317
  1459  001EE2  D003               	goto	l1321
  1460  001EE4  D004               	goto	l581
  1461  001EE6                     l1317:
  1462  001EE6  0E01               	movlw	1
  1463  001EE8  D002               	goto	l581
  1464  001EEA                     l1321:
  1465  001EEA  0E00               	movlw	0
  1466  001EEC  D000               	goto	l581
  1467  001EEE                     l581:
  1468  001EEE  0012               	return		;funcret
  1469  001EF0                     __end_of_isBOR:
  1470                           	opt stack 0
  1471                           stkptr	equ	0xFFC
  1472                           intcon	equ	0xFF2
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _WDTtask *****************
  1478 ;; Defined at:
  1479 ;;		line 369 in file "../Robot Files/sumovore.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;		None               void
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    3
  1500 ;; This function calls:
  1501 ;;		_gtrap
  1502 ;;		_printf
  1503 ;; This function is called by:
  1504 ;;		_reset_codes
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text9
  1509  001E6E                     __ptext9:
  1510                           	opt stack 0
  1511  001E6E                     _WDTtask:
  1512                           	opt stack 25
  1513                           
  1514                           ;sumovore.c: 371: printf("<WDT TO>");
  1515                           
  1516                           ;incstack = 0
  1517  001E6E  0E68               	movlw	low STR_4
  1518  001E70  6E0F               	movwf	printf@f,c
  1519  001E72  0E10               	movlw	high STR_4
  1520  001E74  6E10               	movwf	printf@f+1,c
  1521  001E76  EC7D  F00E         	call	_printf	;wreg free
  1522                           
  1523                           ;sumovore.c: 372: PORTDbits.RD0=!1;
  1524  001E7A  9083               	bcf	3971,0,c	;volatile
  1525                           
  1526                           ;sumovore.c: 373: PORTDbits.RD1=!0;
  1527  001E7C  8283               	bsf	3971,1,c	;volatile
  1528                           
  1529                           ;sumovore.c: 374: PORTDbits.RD2=!1;
  1530  001E7E  9483               	bcf	3971,2,c	;volatile
  1531                           
  1532                           ;sumovore.c: 375: PORTDbits.RD3=!0;
  1533  001E80  8683               	bsf	3971,3,c	;volatile
  1534                           
  1535                           ;sumovore.c: 376: PORTDbits.RD4=!0;
  1536  001E82  8883               	bsf	3971,4,c	;volatile
  1537                           
  1538                           ;sumovore.c: 377: gtrap();
  1539  001E84  EC52  F00D         	call	_gtrap	;wreg free
  1540  001E88  0012               	return		;funcret
  1541  001E8A                     __end_of_WDTtask:
  1542                           	opt stack 0
  1543                           stkptr	equ	0xFFC
  1544                           intcon	equ	0xFF2
  1545                           postinc0	equ	0xFEE
  1546                           wreg	equ	0xFE8
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _STKFULtask *****************
  1550 ;; Defined at:
  1551 ;;		line 388 in file "../Robot Files/sumovore.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;		None               void
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    3
  1572 ;; This function calls:
  1573 ;;		_gtrap
  1574 ;;		_printf
  1575 ;; This function is called by:
  1576 ;;		_reset_codes
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text10
  1581  001E50                     __ptext10:
  1582                           	opt stack 0
  1583  001E50                     _STKFULtask:
  1584                           	opt stack 25
  1585                           
  1586                           ;sumovore.c: 391: STKPTRbits.STKFUL = 0;
  1587                           
  1588                           ;incstack = 0
  1589  001E50  9EFC               	bcf	stkptr,7,c	;volatile
  1590                           
  1591                           ;sumovore.c: 392: printf("<STKFUL>");
  1592  001E52  0E5F               	movlw	low STR_5
  1593  001E54  6E0F               	movwf	printf@f,c
  1594  001E56  0E10               	movlw	high STR_5
  1595  001E58  6E10               	movwf	printf@f+1,c
  1596  001E5A  EC7D  F00E         	call	_printf	;wreg free
  1597                           
  1598                           ;sumovore.c: 393: PORTDbits.RD0=!1;
  1599  001E5E  9083               	bcf	3971,0,c	;volatile
  1600                           
  1601                           ;sumovore.c: 394: PORTDbits.RD1=!0;
  1602  001E60  8283               	bsf	3971,1,c	;volatile
  1603                           
  1604                           ;sumovore.c: 395: PORTDbits.RD2=!1;
  1605  001E62  9483               	bcf	3971,2,c	;volatile
  1606                           
  1607                           ;sumovore.c: 396: PORTDbits.RD3=!0;
  1608  001E64  8683               	bsf	3971,3,c	;volatile
  1609                           
  1610                           ;sumovore.c: 397: PORTDbits.RD4=!1;
  1611  001E66  9883               	bcf	3971,4,c	;volatile
  1612                           
  1613                           ;sumovore.c: 398: gtrap();
  1614  001E68  EC52  F00D         	call	_gtrap	;wreg free
  1615  001E6C  0012               	return		;funcret
  1616  001E6E                     __end_of_STKFULtask:
  1617                           	opt stack 0
  1618                           stkptr	equ	0xFFC
  1619                           intcon	equ	0xFF2
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _RESETtask *****************
  1625 ;; Defined at:
  1626 ;;		line 404 in file "../Robot Files/sumovore.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;		None               void
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    3
  1647 ;; This function calls:
  1648 ;;		_gtrap
  1649 ;;		_printf
  1650 ;; This function is called by:
  1651 ;;		_reset_codes
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text11
  1656  001E8A                     __ptext11:
  1657                           	opt stack 0
  1658  001E8A                     _RESETtask:
  1659                           	opt stack 25
  1660                           
  1661                           ;sumovore.c: 407: printf(" <reset> ");
  1662                           
  1663                           ;incstack = 0
  1664  001E8A  0E55               	movlw	low STR_6
  1665  001E8C  6E0F               	movwf	printf@f,c
  1666  001E8E  0E10               	movlw	high STR_6
  1667  001E90  6E10               	movwf	printf@f+1,c
  1668  001E92  EC7D  F00E         	call	_printf	;wreg free
  1669                           
  1670                           ;sumovore.c: 408: PORTDbits.RD0=!1;
  1671  001E96  9083               	bcf	3971,0,c	;volatile
  1672                           
  1673                           ;sumovore.c: 409: PORTDbits.RD1=!0;
  1674  001E98  8283               	bsf	3971,1,c	;volatile
  1675                           
  1676                           ;sumovore.c: 410: PORTDbits.RD2=!1;
  1677  001E9A  9483               	bcf	3971,2,c	;volatile
  1678                           
  1679                           ;sumovore.c: 411: PORTDbits.RD3=!1;
  1680  001E9C  9683               	bcf	3971,3,c	;volatile
  1681                           
  1682                           ;sumovore.c: 412: PORTDbits.RD4=!1;
  1683  001E9E  9883               	bcf	3971,4,c	;volatile
  1684                           
  1685                           ;sumovore.c: 413: gtrap();
  1686  001EA0  EC52  F00D         	call	_gtrap	;wreg free
  1687  001EA4  0012               	return		;funcret
  1688  001EA6                     __end_of_RESETtask:
  1689                           	opt stack 0
  1690                           stkptr	equ	0xFFC
  1691                           intcon	equ	0xFF2
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _PORtask *****************
  1697 ;; Defined at:
  1698 ;;		line 306 in file "../Robot Files/sumovore.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  count2          4   23[COMRAM] unsigned long 
  1703 ;;  count1          4   19[COMRAM] unsigned long 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        8 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		_StatusReset
  1722 ;;		_printf
  1723 ;; This function is called by:
  1724 ;;		_reset_codes
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text12
  1729  001766                     __ptext12:
  1730                           	opt stack 0
  1731  001766                     _PORtask:
  1732                           	opt stack 25
  1733                           
  1734                           ;sumovore.c: 308: unsigned long count1=0, count2=0;
  1735                           
  1736                           ;incstack = 0
  1737  001766  0E00               	movlw	0
  1738  001768  6E14               	movwf	PORtask@count1,c
  1739  00176A  0E00               	movlw	0
  1740  00176C  6E15               	movwf	PORtask@count1+1,c
  1741  00176E  0E00               	movlw	0
  1742  001770  6E16               	movwf	PORtask@count1+2,c
  1743  001772  0E00               	movlw	0
  1744  001774  6E17               	movwf	PORtask@count1+3,c
  1745  001776  0E00               	movlw	0
  1746  001778  6E18               	movwf	PORtask@count2,c
  1747  00177A  0E00               	movlw	0
  1748  00177C  6E19               	movwf	PORtask@count2+1,c
  1749  00177E  0E00               	movlw	0
  1750  001780  6E1A               	movwf	PORtask@count2+2,c
  1751  001782  0E00               	movlw	0
  1752  001784  6E1B               	movwf	PORtask@count2+3,c
  1753                           
  1754                           ;sumovore.c: 309: StatusReset();
  1755  001786  ECC0  F00F         	call	_StatusReset	;wreg free
  1756                           
  1757                           ;sumovore.c: 311: printf("<POR>");
  1758  00178A  0E7E               	movlw	low STR_2
  1759  00178C  6E0F               	movwf	printf@f,c
  1760  00178E  0E10               	movlw	high STR_2
  1761  001790  6E10               	movwf	printf@f+1,c
  1762  001792  EC7D  F00E         	call	_printf	;wreg free
  1763                           
  1764                           ;sumovore.c: 312: PORTDbits.RD0=!1;
  1765  001796  9083               	bcf	3971,0,c	;volatile
  1766                           
  1767                           ;sumovore.c: 313: PORTDbits.RD1=!0;
  1768  001798  8283               	bsf	3971,1,c	;volatile
  1769                           
  1770                           ;sumovore.c: 314: PORTDbits.RD2=!0;
  1771  00179A  8483               	bsf	3971,2,c	;volatile
  1772                           
  1773                           ;sumovore.c: 315: PORTDbits.RD3=!0;
  1774  00179C  8683               	bsf	3971,3,c	;volatile
  1775                           
  1776                           ;sumovore.c: 316: PORTDbits.RD4=!0;
  1777  00179E  8883               	bsf	3971,4,c	;volatile
  1778                           
  1779                           ;sumovore.c: 317: while(count1<10u)
  1780  0017A0  D02D               	goto	l340
  1781  0017A2                     l341:
  1782  0017A2  0004               	clrwdt		;# 
  1783                           
  1784                           ;sumovore.c: 320: if (count2==30000u)
  1785  0017A4  0E30               	movlw	48
  1786  0017A6  1818               	xorwf	PORtask@count2,w,c
  1787  0017A8  E117               	bnz	l2139
  1788  0017AA  0E75               	movlw	117
  1789  0017AC  1819               	xorwf	PORtask@count2+1,w,c
  1790  0017AE  101A               	iorwf	PORtask@count2+2,w,c
  1791  0017B0  101B               	iorwf	PORtask@count2+3,w,c
  1792  0017B2  A4D8               	btfss	status,2,c
  1793  0017B4  D011               	goto	l2139
  1794                           
  1795                           ;sumovore.c: 321: {
  1796                           ;sumovore.c: 322: count2=0;
  1797  0017B6  0E00               	movlw	0
  1798  0017B8  6E18               	movwf	PORtask@count2,c
  1799  0017BA  0E00               	movlw	0
  1800  0017BC  6E19               	movwf	PORtask@count2+1,c
  1801  0017BE  0E00               	movlw	0
  1802  0017C0  6E1A               	movwf	PORtask@count2+2,c
  1803  0017C2  0E00               	movlw	0
  1804  0017C4  6E1B               	movwf	PORtask@count2+3,c
  1805                           
  1806                           ;sumovore.c: 323: count1++;
  1807  0017C6  0E01               	movlw	1
  1808  0017C8  2614               	addwf	PORtask@count1,f,c
  1809  0017CA  0E00               	movlw	0
  1810  0017CC  2215               	addwfc	PORtask@count1+1,f,c
  1811  0017CE  2216               	addwfc	PORtask@count1+2,f,c
  1812  0017D0  2217               	addwfc	PORtask@count1+3,f,c
  1813                           
  1814                           ;sumovore.c: 324: PORTDbits.RD0=!1;
  1815  0017D2  9083               	bcf	3971,0,c	;volatile
  1816                           
  1817                           ;sumovore.c: 325: PORTDbits.RD1=!0;
  1818  0017D4  8283               	bsf	3971,1,c	;volatile
  1819                           
  1820                           ;sumovore.c: 326: }
  1821  0017D6  D00C               	goto	l2143
  1822  0017D8                     l2139:
  1823                           
  1824                           ;sumovore.c: 327: else if (count2==15000u)
  1825  0017D8  0E98               	movlw	152
  1826  0017DA  1818               	xorwf	PORtask@count2,w,c
  1827  0017DC  E109               	bnz	l2143
  1828  0017DE  0E3A               	movlw	58
  1829  0017E0  1819               	xorwf	PORtask@count2+1,w,c
  1830  0017E2  101A               	iorwf	PORtask@count2+2,w,c
  1831  0017E4  101B               	iorwf	PORtask@count2+3,w,c
  1832  0017E6  A4D8               	btfss	status,2,c
  1833  0017E8  D003               	goto	l2143
  1834                           
  1835                           ;sumovore.c: 328: {
  1836                           ;sumovore.c: 329: PORTDbits.RD0=!0;
  1837  0017EA  8083               	bsf	3971,0,c	;volatile
  1838                           
  1839                           ;sumovore.c: 330: PORTDbits.RD1=!1;
  1840  0017EC  9283               	bcf	3971,1,c	;volatile
  1841  0017EE  D000               	goto	l2143
  1842  0017F0                     l2143:
  1843                           
  1844                           ;sumovore.c: 331: }
  1845                           ;sumovore.c: 332: count2++;
  1846  0017F0  0E01               	movlw	1
  1847  0017F2  2618               	addwf	PORtask@count2,f,c
  1848  0017F4  0E00               	movlw	0
  1849  0017F6  2219               	addwfc	PORtask@count2+1,f,c
  1850  0017F8  221A               	addwfc	PORtask@count2+2,f,c
  1851  0017FA  221B               	addwfc	PORtask@count2+3,f,c
  1852  0017FC                     l340:
  1853  0017FC  5017               	movf	PORtask@count1+3,w,c
  1854  0017FE  1016               	iorwf	PORtask@count1+2,w,c
  1855  001800  1015               	iorwf	PORtask@count1+1,w,c
  1856  001802  E106               	bnz	l346
  1857  001804  0E0A               	movlw	10
  1858  001806  5C14               	subwf	PORtask@count1,w,c
  1859  001808  B0D8               	btfsc	status,0,c
  1860  00180A  D002               	goto	l346
  1861  00180C  D7CA               	goto	l341
  1862  00180E  D000               	goto	l346
  1863  001810                     l346:
  1864  001810  0012               	return		;funcret
  1865  001812                     __end_of_PORtask:
  1866                           	opt stack 0
  1867                           stkptr	equ	0xFFC
  1868                           intcon	equ	0xFF2
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _BORtask *****************
  1874 ;; Defined at:
  1875 ;;		line 348 in file "../Robot Files/sumovore.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;		None               void
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		_StatusReset
  1898 ;;		_gtrap
  1899 ;;		_printf
  1900 ;; This function is called by:
  1901 ;;		_reset_codes
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text13
  1906  001DF0                     __ptext13:
  1907                           	opt stack 0
  1908  001DF0                     _BORtask:
  1909                           	opt stack 25
  1910                           
  1911                           ;sumovore.c: 350: StatusReset();
  1912                           
  1913                           ;incstack = 0
  1914  001DF0  ECC0  F00F         	call	_StatusReset	;wreg free
  1915                           
  1916                           ;sumovore.c: 352: printf("<BOR>");
  1917  001DF4  0E78               	movlw	low STR_3
  1918  001DF6  6E0F               	movwf	printf@f,c
  1919  001DF8  0E10               	movlw	high STR_3
  1920  001DFA  6E10               	movwf	printf@f+1,c
  1921  001DFC  EC7D  F00E         	call	_printf	;wreg free
  1922                           
  1923                           ;sumovore.c: 353: PORTDbits.RD0=!0;
  1924  001E00  8083               	bsf	3971,0,c	;volatile
  1925                           
  1926                           ;sumovore.c: 354: PORTDbits.RD1=!0;
  1927  001E02  8283               	bsf	3971,1,c	;volatile
  1928                           
  1929                           ;sumovore.c: 355: PORTDbits.RD2=!0;
  1930  001E04  8483               	bsf	3971,2,c	;volatile
  1931                           
  1932                           ;sumovore.c: 356: PORTDbits.RD3=!0;
  1933  001E06  8683               	bsf	3971,3,c	;volatile
  1934                           
  1935                           ;sumovore.c: 357: PORTDbits.RD4=!1;
  1936  001E08  9883               	bcf	3971,4,c	;volatile
  1937                           
  1938                           ;sumovore.c: 358: gtrap();
  1939  001E0A  EC52  F00D         	call	_gtrap	;wreg free
  1940  001E0E  0012               	return		;funcret
  1941  001E10                     __end_of_BORtask:
  1942                           	opt stack 0
  1943                           stkptr	equ	0xFFC
  1944                           intcon	equ	0xFF2
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _StatusReset *****************
  1950 ;; Defined at:
  1951 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		None
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_PORtask
  1976 ;;		_BORtask
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text14
  1981  001F80                     __ptext14:
  1982                           	opt stack 0
  1983  001F80                     _StatusReset:
  1984                           	opt stack 26
  1985                           
  1986                           ;incstack = 0
  1987  001F80  82D0               	bsf	4048,1,c	;volatile
  1988  001F82  80D0               	bsf	4048,0,c	;volatile
  1989  001F84  0012               	return		;funcret
  1990  001F86                     __end_of_StatusReset:
  1991                           	opt stack 0
  1992                           stkptr	equ	0xFFC
  1993                           intcon	equ	0xFF2
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function _openPORTE *****************
  1999 ;; Defined at:
  2000 ;;		line 178 in file "../Robot Files/sumovore.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;		None               void
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_initialization
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text15
  2029  001F86                     __ptext15:
  2030                           	opt stack 0
  2031  001F86                     _openPORTE:
  2032                           	opt stack 28
  2033                           
  2034                           ;sumovore.c: 180: TRISE = 0b000;
  2035                           
  2036                           ;incstack = 0
  2037  001F86  0E00               	movlw	0
  2038  001F88  6E96               	movwf	3990,c	;volatile
  2039  001F8A  0012               	return		;funcret
  2040  001F8C                     __end_of_openPORTE:
  2041                           	opt stack 0
  2042                           stkptr	equ	0xFFC
  2043                           intcon	equ	0xFF2
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _openPORTCforUSART *****************
  2049 ;; Defined at:
  2050 ;;		line 124 in file "../Robot Files/sumovore.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;		None               void
  2057 ;; Registers used:
  2058 ;;		None
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_initialization
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text16
  2079  001F8C                     __ptext16:
  2080                           	opt stack 0
  2081  001F8C                     _openPORTCforUSART:
  2082                           	opt stack 28
  2083                           
  2084                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2085                           
  2086                           ;incstack = 0
  2087  001F8C  9C94               	bcf	3988,6,c	;volatile
  2088                           
  2089                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2090  001F8E  8E94               	bsf	3988,7,c	;volatile
  2091  001F90  0012               	return		;funcret
  2092  001F92                     __end_of_openPORTCforUSART:
  2093                           	opt stack 0
  2094                           stkptr	equ	0xFFC
  2095                           intcon	equ	0xFF2
  2096                           postinc0	equ	0xFEE
  2097                           wreg	equ	0xFE8
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function _openPORTCforPWM *****************
  2101 ;; Defined at:
  2102 ;;		line 133 in file "../Robot Files/sumovore.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		None
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_initialization
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text17
  2131  001F5E                     __ptext17:
  2132                           	opt stack 0
  2133  001F5E                     _openPORTCforPWM:
  2134                           	opt stack 28
  2135                           
  2136                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2137                           
  2138                           ;incstack = 0
  2139  001F5E  9094               	bcf	3988,0,c	;volatile
  2140                           
  2141                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2142  001F60  9294               	bcf	3988,1,c	;volatile
  2143                           
  2144                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2145  001F62  9494               	bcf	3988,2,c	;volatile
  2146                           
  2147                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2148  001F64  9694               	bcf	3988,3,c	;volatile
  2149                           
  2150                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2151  001F66  9894               	bcf	3988,4,c	;volatile
  2152                           
  2153                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2154  001F68  9A94               	bcf	3988,5,c	;volatile
  2155  001F6A  0012               	return		;funcret
  2156  001F6C                     __end_of_openPORTCforPWM:
  2157                           	opt stack 0
  2158                           stkptr	equ	0xFFC
  2159                           intcon	equ	0xFF2
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           status	equ	0xFD8
  2163                           
  2164 ;; *************** function _openPORTB *****************
  2165 ;; Defined at:
  2166 ;;		line 158 in file "../Robot Files/sumovore.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;		None               void
  2173 ;; Registers used:
  2174 ;;		wreg, status,2
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_initialization
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text18
  2195  001F92                     __ptext18:
  2196                           	opt stack 0
  2197  001F92                     _openPORTB:
  2198                           	opt stack 28
  2199                           
  2200                           ;sumovore.c: 160: TRISB = 0B11000000;
  2201                           
  2202                           ;incstack = 0
  2203  001F92  0EC0               	movlw	192
  2204  001F94  6E93               	movwf	3987,c	;volatile
  2205  001F96  0012               	return		;funcret
  2206  001F98                     __end_of_openPORTB:
  2207                           	opt stack 0
  2208                           stkptr	equ	0xFFC
  2209                           intcon	equ	0xFF2
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _openPORTA *****************
  2215 ;; Defined at:
  2216 ;;		line 147 in file "../Robot Files/sumovore.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, status,2
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_initialization
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text19
  2245  001F98                     __ptext19:
  2246                           	opt stack 0
  2247  001F98                     _openPORTA:
  2248                           	opt stack 28
  2249                           
  2250                           ;sumovore.c: 149: TRISA = 0B11101111;
  2251                           
  2252                           ;incstack = 0
  2253  001F98  0EEF               	movlw	239
  2254  001F9A  6E92               	movwf	3986,c	;volatile
  2255  001F9C  0012               	return		;funcret
  2256  001F9E                     __end_of_openPORTA:
  2257                           	opt stack 0
  2258                           stkptr	equ	0xFFC
  2259                           intcon	equ	0xFF2
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           status	equ	0xFD8
  2263                           
  2264 ;; *************** function _openLVD *****************
  2265 ;; Defined at:
  2266 ;;		line 427 in file "../Robot Files/sumovore.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;		None               void
  2273 ;; Registers used:
  2274 ;;		None
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;Total ram usage:        0 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_initialization
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text20
  2295  001EC2                     __ptext20:
  2296                           	opt stack 0
  2297  001EC2                     _openLVD:
  2298                           	opt stack 28
  2299                           
  2300                           ;sumovore.c: 429: RCONbits.IPEN = 1;
  2301                           
  2302                           ;incstack = 0
  2303  001EC2  8ED0               	bsf	4048,7,c	;volatile
  2304                           
  2305                           ;sumovore.c: 430: HLVDCONbits.HLVDEN = 1;
  2306  001EC4  88D2               	bsf	4050,4,c	;volatile
  2307                           
  2308                           ;sumovore.c: 432: IPR2bits.HLVDIP = 1;
  2309  001EC6  84A2               	bsf	4002,2,c	;volatile
  2310                           
  2311                           ;sumovore.c: 433: HLVDCONbits.VDIRMAG = 0;
  2312  001EC8  9ED2               	bcf	4050,7,c	;volatile
  2313                           
  2314                           ;sumovore.c: 435: HLVDCONbits.HLVDL3 = 1;
  2315  001ECA  86D2               	bsf	4050,3,c	;volatile
  2316                           
  2317                           ;sumovore.c: 436: HLVDCONbits.HLVDL2 = 1;
  2318  001ECC  84D2               	bsf	4050,2,c	;volatile
  2319                           
  2320                           ;sumovore.c: 437: HLVDCONbits.HLVDL1 = 1;
  2321  001ECE  82D2               	bsf	4050,1,c	;volatile
  2322                           
  2323                           ;sumovore.c: 438: HLVDCONbits.HLVDL0 = 0;
  2324  001ED0  90D2               	bcf	4050,0,c	;volatile
  2325                           
  2326                           ;sumovore.c: 439: PIR2bits.HLVDIF = 0;
  2327  001ED2  94A1               	bcf	4001,2,c	;volatile
  2328                           
  2329                           ;sumovore.c: 440: PIE2bits.HLVDIE = 1;
  2330  001ED4  84A0               	bsf	4000,2,c	;volatile
  2331                           
  2332                           ;sumovore.c: 441: INTCONbits.GIEH = 1;
  2333  001ED6  8EF2               	bsf	intcon,7,c	;volatile
  2334  001ED8  0012               	return		;funcret
  2335  001EDA                     __end_of_openLVD:
  2336                           	opt stack 0
  2337                           stkptr	equ	0xFFC
  2338                           intcon	equ	0xFF2
  2339                           postinc0	equ	0xFEE
  2340                           wreg	equ	0xFE8
  2341                           status	equ	0xFD8
  2342                           
  2343 ;; *************** function _OpenUSART *****************
  2344 ;; Defined at:
  2345 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  config          1    wreg     unsigned char 
  2348 ;;  spbrg           2   14[COMRAM] unsigned int 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  config          1   16[COMRAM] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;		None               void
  2353 ;; Registers used:
  2354 ;;		wreg, status,2
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;Total ram usage:        3 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_initialization
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text21
  2375  001A34                     __ptext21:
  2376                           	opt stack 0
  2377  001A34                     _OpenUSART:
  2378                           	opt stack 28
  2379                           
  2380                           ;incstack = 0
  2381                           ;OpenUSART@config stored from wreg
  2382  001A34  6E11               	movwf	OpenUSART@config,c
  2383  001A36  0E00               	movlw	0
  2384  001A38  6EAC               	movwf	4012,c	;volatile
  2385  001A3A  0E00               	movlw	0
  2386  001A3C  6EAB               	movwf	4011,c	;volatile
  2387  001A3E  A011               	btfss	OpenUSART@config,0,c
  2388  001A40  D002               	goto	l2309
  2389  001A42  88AC               	bsf	4012,4,c	;volatile
  2390  001A44  D000               	goto	l2309
  2391  001A46                     l2309:
  2392  001A46  A211               	btfss	OpenUSART@config,1,c
  2393  001A48  D003               	goto	l2313
  2394  001A4A  8CAC               	bsf	4012,6,c	;volatile
  2395  001A4C  8CAB               	bsf	4011,6,c	;volatile
  2396  001A4E  D000               	goto	l2313
  2397  001A50                     l2313:
  2398  001A50  A411               	btfss	OpenUSART@config,2,c
  2399  001A52  D002               	goto	l2317
  2400  001A54  8EAC               	bsf	4012,7,c	;volatile
  2401  001A56  D000               	goto	l2317
  2402  001A58                     l2317:
  2403  001A58  A611               	btfss	OpenUSART@config,3,c
  2404  001A5A  D002               	goto	l565
  2405  001A5C  88AB               	bsf	4011,4,c	;volatile
  2406  001A5E  D002               	goto	l2321
  2407  001A60                     l565:
  2408  001A60  8AAB               	bsf	4011,5,c	;volatile
  2409  001A62  D000               	goto	l2321
  2410  001A64                     l2321:
  2411  001A64  B811               	btfsc	OpenUSART@config,4,c
  2412  001A66  84AC               	bsf	4012,2,c	;volatile
  2413  001A68  989E               	bcf	3998,4,c	;volatile
  2414  001A6A  AA11               	btfss	OpenUSART@config,5,c
  2415  001A6C  D002               	goto	l2329
  2416  001A6E  86AB               	bsf	4011,3,c	;volatile
  2417  001A70  D000               	goto	l2329
  2418  001A72                     l2329:
  2419  001A72  AC11               	btfss	OpenUSART@config,6,c
  2420  001A74  D002               	goto	l569
  2421  001A76  8A9D               	bsf	3997,5,c	;volatile
  2422  001A78  D001               	goto	l570
  2423  001A7A                     l569:
  2424  001A7A  9A9D               	bcf	3997,5,c	;volatile
  2425  001A7C                     l570:
  2426  001A7C  9A9E               	bcf	3998,5,c	;volatile
  2427  001A7E  AE11               	btfss	OpenUSART@config,7,c
  2428  001A80  D002               	goto	l571
  2429  001A82  889D               	bsf	3997,4,c	;volatile
  2430  001A84  D001               	goto	l572
  2431  001A86                     l571:
  2432  001A86  989D               	bcf	3997,4,c	;volatile
  2433  001A88                     l572:
  2434  001A88  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2435  001A8C  5010               	movf	OpenUSART@spbrg+1,w,c
  2436  001A8E  6EB0               	movwf	4016,c	;volatile
  2437  001A90  8AAC               	bsf	4012,5,c	;volatile
  2438  001A92  8EAB               	bsf	4011,7,c	;volatile
  2439  001A94  9C94               	bcf	3988,6,c	;volatile
  2440  001A96  8E94               	bsf	3988,7,c	;volatile
  2441  001A98  B8AC               	btfsc	4012,4,c	;volatile
  2442  001A9A  BEAC               	btfsc	4012,7,c	;volatile
  2443  001A9C  D002               	goto	l574
  2444  001A9E  8C94               	bsf	3988,6,c	;volatile
  2445  001AA0  D000               	goto	l574
  2446  001AA2                     l574:
  2447  001AA2  0012               	return		;funcret
  2448  001AA4                     __end_of_OpenUSART:
  2449                           	opt stack 0
  2450                           stkptr	equ	0xFFC
  2451                           intcon	equ	0xFF2
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _OpenTimer2 *****************
  2457 ;; Defined at:
  2458 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  config          1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  config          1   14[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_initialization
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text22
  2487  001EA6                     __ptext22:
  2488                           	opt stack 0
  2489  001EA6                     _OpenTimer2:
  2490                           	opt stack 28
  2491                           
  2492                           ;incstack = 0
  2493                           ;OpenTimer2@config stored from wreg
  2494  001EA6  6E0F               	movwf	OpenTimer2@config,c
  2495  001EA8  500F               	movf	OpenTimer2@config,w,c
  2496  001EAA  0BFB               	andlw	251
  2497  001EAC  6ECA               	movwf	4042,c	;volatile
  2498  001EAE  0E00               	movlw	0
  2499  001EB0  6ECC               	movwf	4044,c	;volatile
  2500  001EB2  929E               	bcf	3998,1,c	;volatile
  2501  001EB4  AE0F               	btfss	OpenTimer2@config,7,c
  2502  001EB6  D002               	goto	l539
  2503  001EB8  829D               	bsf	3997,1,c	;volatile
  2504  001EBA  D001               	goto	l540
  2505  001EBC                     l539:
  2506  001EBC  929D               	bcf	3997,1,c	;volatile
  2507  001EBE                     l540:
  2508  001EBE  84CA               	bsf	4042,2,c	;volatile
  2509  001EC0  0012               	return		;funcret
  2510  001EC2                     __end_of_OpenTimer2:
  2511                           	opt stack 0
  2512                           stkptr	equ	0xFFC
  2513                           intcon	equ	0xFF2
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function _OpenPWM2 *****************
  2519 ;; Defined at:
  2520 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  period          1    wreg     unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  period          1   14[COMRAM] unsigned char 
  2525 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2526 ;;  pmmode          1    0        unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;		None               void
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_initialization
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text23
  2551  001CC2                     __ptext23:
  2552                           	opt stack 0
  2553  001CC2                     _OpenPWM2:
  2554                           	opt stack 28
  2555                           
  2556                           ;incstack = 0
  2557                           ;OpenPWM2@period stored from wreg
  2558  001CC2  6E0F               	movwf	OpenPWM2@period,c
  2559  001CC4  0E0C               	movlw	12
  2560  001CC6  6EBA               	movwf	4026,c	;volatile
  2561  001CC8  0E05               	movlw	5
  2562  001CCA  6EF6               	movwf	tblptrl,c
  2563  001CCC                     	if	1	;There is more than 1 active tblptr byte
  2564  001CCC  0E00               	movlw	0
  2565  001CCE  6EF7               	movwf	tblptrh,c
  2566  001CD0                     	endif
  2567  001CD0                     	if	1	;There are 3 active tblptr bytes
  2568  001CD0  0E30               	movlw	48
  2569  001CD2  6EF8               	movwf	tblptru,c
  2570  001CD4                     	endif
  2571  001CD4  0008               	tblrd		*
  2572  001CD6  0100               	movlb	12288	; () banked
  2573  001CD8  A0F5               	btfss	tablat,0,c
  2574  001CDA  D002               	goto	l1641
  2575                           
  2576                           ; BSR set to: 0
  2577  001CDC  6810               	setf	OpenPWM2@ccp2mx,c
  2578  001CDE  D002               	goto	l487
  2579  001CE0                     l1641:
  2580                           
  2581                           ; BSR set to: 0
  2582  001CE0  0E00               	movlw	0
  2583  001CE2  6E10               	movwf	OpenPWM2@ccp2mx,c
  2584  001CE4                     l487:
  2585                           
  2586                           ; BSR set to: 0
  2587  001CE4  5010               	movf	OpenPWM2@ccp2mx,w,c
  2588  001CE6  B4D8               	btfsc	status,2,c
  2589  001CE8  D002               	goto	l488
  2590                           
  2591                           ; BSR set to: 0
  2592  001CEA  9294               	bcf	3988,1,c	;volatile
  2593  001CEC  D001               	goto	l489
  2594  001CEE                     l488:
  2595                           
  2596                           ; BSR set to: 0
  2597  001CEE  9693               	bcf	3987,3,c	;volatile
  2598  001CF0                     l489:
  2599                           
  2600                           ; BSR set to: 0
  2601  001CF0  94CA               	bcf	4042,2,c	;volatile
  2602  001CF2  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2603  001CF6  84CA               	bsf	4042,2,c	;volatile
  2604                           
  2605                           ; BSR set to: 0
  2606  001CF8  0012               	return		;funcret
  2607  001CFA                     __end_of_OpenPWM2:
  2608                           	opt stack 0
  2609                           stkptr	equ	0xFFC
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           intcon	equ	0xFF2
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _OpenPWM1 *****************
  2620 ;; Defined at:
  2621 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  period          1    wreg     unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  period          1   14[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        1 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_initialization
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text24
  2650  001F18                     __ptext24:
  2651                           	opt stack 0
  2652  001F18                     _OpenPWM1:
  2653                           	opt stack 28
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;incstack = 0
  2657                           ;OpenPWM1@period stored from wreg
  2658  001F18  6E0F               	movwf	OpenPWM1@period,c
  2659  001F1A  0E0C               	movlw	12
  2660  001F1C  12BD               	iorwf	4029,f,c	;volatile
  2661  001F1E  9494               	bcf	3988,2,c	;volatile
  2662  001F20  94CA               	bcf	4042,2,c	;volatile
  2663  001F22  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2664  001F26  84CA               	bsf	4042,2,c	;volatile
  2665  001F28  0012               	return		;funcret
  2666  001F2A                     __end_of_OpenPWM1:
  2667                           	opt stack 0
  2668                           stkptr	equ	0xFFC
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           intcon	equ	0xFF2
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _OpenADC *****************
  2679 ;; Defined at:
  2680 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  config          1    wreg     unsigned char 
  2683 ;;  config2         1   14[COMRAM] unsigned char 
  2684 ;;  portconfig      1   15[COMRAM] unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  config          1   18[COMRAM] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;		None               void
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        5 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_initialization
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text25
  2711  001B06                     __ptext25:
  2712                           	opt stack 0
  2713  001B06                     _OpenADC:
  2714                           	opt stack 28
  2715                           
  2716                           ;incstack = 0
  2717                           ;OpenADC@config stored from wreg
  2718  001B06  6E13               	movwf	OpenADC@config,c
  2719  001B08  0E00               	movlw	0
  2720  001B0A  6EC2               	movwf	4034,c	;volatile
  2721  001B0C  0E00               	movlw	0
  2722  001B0E  6EC0               	movwf	4032,c	;volatile
  2723  001B10  90D8               	bcf	status,0,c
  2724  001B12  300F               	rrcf	OpenADC@config2,w,c
  2725  001B14  0B3C               	andlw	60
  2726  001B16  6EC2               	movwf	4034,c	;volatile
  2727  001B18  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2728  001B1C  3A11               	swapf	??_OpenADC,f,c
  2729  001B1E  0EF0               	movlw	240
  2730  001B20  1611               	andwf	??_OpenADC,f,c
  2731  001B22  0E30               	movlw	48
  2732  001B24  1611               	andwf	??_OpenADC,f,c
  2733  001B26  5010               	movf	OpenADC@portconfig,w,c
  2734  001B28  0B0F               	andlw	15
  2735  001B2A  1011               	iorwf	??_OpenADC,w,c
  2736  001B2C  6EC1               	movwf	4033,c	;volatile
  2737  001B2E  C013  F011         	movff	OpenADC@config,??_OpenADC
  2738  001B32  90D8               	bcf	status,0,c
  2739  001B34  3611               	rlcf	??_OpenADC,f,c
  2740  001B36  90D8               	bcf	status,0,c
  2741  001B38  3611               	rlcf	??_OpenADC,f,c
  2742  001B3A  0E38               	movlw	56
  2743  001B3C  1611               	andwf	??_OpenADC,f,c
  2744  001B3E  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2745  001B42  3A12               	swapf	??_OpenADC+1,f,c
  2746  001B44  0E0F               	movlw	15
  2747  001B46  1612               	andwf	??_OpenADC+1,f,c
  2748  001B48  0E07               	movlw	7
  2749  001B4A  1612               	andwf	??_OpenADC+1,f,c
  2750  001B4C  5013               	movf	OpenADC@config,w,c
  2751  001B4E  0B80               	andlw	128
  2752  001B50  1012               	iorwf	??_OpenADC+1,w,c
  2753  001B52  1011               	iorwf	??_OpenADC,w,c
  2754  001B54  6EC0               	movwf	4032,c	;volatile
  2755  001B56  AE0F               	btfss	OpenADC@config2,7,c
  2756  001B58  D003               	goto	l439
  2757  001B5A  9C9E               	bcf	3998,6,c	;volatile
  2758  001B5C  8C9D               	bsf	3997,6,c	;volatile
  2759  001B5E  8CF2               	bsf	intcon,6,c	;volatile
  2760  001B60                     l439:
  2761  001B60  80C2               	bsf	4034,0,c	;volatile
  2762  001B62  0012               	return		;funcret
  2763  001B64                     __end_of_OpenADC:
  2764                           	opt stack 0
  2765                           stkptr	equ	0xFFC
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           intcon	equ	0xFF2
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           status	equ	0xFD8
  2774                           
  2775 ;; *************** function _check_sensors *****************
  2776 ;; Defined at:
  2777 ;;		line 241 in file "../Robot Files/sumovore.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;		None               void
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;Total ram usage:        1 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    3
  2798 ;; This function calls:
  2799 ;;		_adc
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text26
  2806  0016A2                     __ptext26:
  2807                           	opt stack 0
  2808  0016A2                     _check_sensors:
  2809                           	opt stack 27
  2810                           
  2811                           ;sumovore.c: 243: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  2812                           
  2813                           ;incstack = 0
  2814  0016A2  0E87               	movlw	135
  2815  0016A4  ECAA  F00E         	call	_adc
  2816  0016A8  5013               	movf	?_adc,w,c
  2817  0016AA  5C49               	subwf	_threshold,w,c
  2818  0016AC  5014               	movf	?_adc+1,w,c
  2819  0016AE  584A               	subwfb	_threshold+1,w,c
  2820  0016B0  B0D8               	btfsc	status,0,c
  2821  0016B2  D003               	goto	u1950
  2822  0016B4  6A16               	clrf	??_check_sensors& (0+255),c
  2823  0016B6  2A16               	incf	??_check_sensors& (0+255),f,c
  2824  0016B8  D001               	goto	u1968
  2825  0016BA                     u1950:
  2826  0016BA  6A16               	clrf	??_check_sensors& (0+255),c
  2827  0016BC                     u1968:
  2828  0016BC  3A16               	swapf	??_check_sensors,f,c
  2829  0016BE  504B               	movf	_SeeLine,w,c
  2830  0016C0  1816               	xorwf	??_check_sensors,w,c
  2831  0016C2  0BEF               	andlw	-17
  2832  0016C4  1816               	xorwf	??_check_sensors,w,c
  2833  0016C6  6E4B               	movwf	_SeeLine,c
  2834                           
  2835                           ;sumovore.c: 244: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  2836  0016C8  0E8F               	movlw	143
  2837  0016CA  ECAA  F00E         	call	_adc
  2838  0016CE  5013               	movf	?_adc,w,c
  2839  0016D0  5C49               	subwf	_threshold,w,c
  2840  0016D2  5014               	movf	?_adc+1,w,c
  2841  0016D4  584A               	subwfb	_threshold+1,w,c
  2842  0016D6  B0D8               	btfsc	status,0,c
  2843  0016D8  D003               	goto	u1970
  2844  0016DA  6A16               	clrf	??_check_sensors& (0+255),c
  2845  0016DC  2A16               	incf	??_check_sensors& (0+255),f,c
  2846  0016DE  D001               	goto	u1988
  2847  0016E0                     u1970:
  2848  0016E0  6A16               	clrf	??_check_sensors& (0+255),c
  2849  0016E2                     u1988:
  2850  0016E2  4616               	rlncf	??_check_sensors,f,c
  2851  0016E4  4616               	rlncf	??_check_sensors,f,c
  2852  0016E6  4616               	rlncf	??_check_sensors,f,c
  2853  0016E8  504B               	movf	_SeeLine,w,c
  2854  0016EA  1816               	xorwf	??_check_sensors,w,c
  2855  0016EC  0BF7               	andlw	-9
  2856  0016EE  1816               	xorwf	??_check_sensors,w,c
  2857  0016F0  6E4B               	movwf	_SeeLine,c
  2858                           
  2859                           ;sumovore.c: 245: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  2860  0016F2  0E97               	movlw	151
  2861  0016F4  ECAA  F00E         	call	_adc
  2862  0016F8  5013               	movf	?_adc,w,c
  2863  0016FA  5C49               	subwf	_threshold,w,c
  2864  0016FC  5014               	movf	?_adc+1,w,c
  2865  0016FE  584A               	subwfb	_threshold+1,w,c
  2866  001700  B0D8               	btfsc	status,0,c
  2867  001702  D003               	goto	u1990
  2868  001704  6A16               	clrf	??_check_sensors& (0+255),c
  2869  001706  2A16               	incf	??_check_sensors& (0+255),f,c
  2870  001708  D001               	goto	u2008
  2871  00170A                     u1990:
  2872  00170A  6A16               	clrf	??_check_sensors& (0+255),c
  2873  00170C                     u2008:
  2874  00170C  4616               	rlncf	??_check_sensors,f,c
  2875  00170E  4616               	rlncf	??_check_sensors,f,c
  2876  001710  504B               	movf	_SeeLine,w,c
  2877  001712  1816               	xorwf	??_check_sensors,w,c
  2878  001714  0BFB               	andlw	-5
  2879  001716  1816               	xorwf	??_check_sensors,w,c
  2880  001718  6E4B               	movwf	_SeeLine,c
  2881                           
  2882                           ;sumovore.c: 246: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  2883  00171A  0E9F               	movlw	159
  2884  00171C  ECAA  F00E         	call	_adc
  2885  001720  5013               	movf	?_adc,w,c
  2886  001722  5C49               	subwf	_threshold,w,c
  2887  001724  5014               	movf	?_adc+1,w,c
  2888  001726  584A               	subwfb	_threshold+1,w,c
  2889  001728  B0D8               	btfsc	status,0,c
  2890  00172A  D003               	goto	u2010
  2891  00172C  6A16               	clrf	??_check_sensors& (0+255),c
  2892  00172E  2A16               	incf	??_check_sensors& (0+255),f,c
  2893  001730  D001               	goto	u2028
  2894  001732                     u2010:
  2895  001732  6A16               	clrf	??_check_sensors& (0+255),c
  2896  001734                     u2028:
  2897  001734  4616               	rlncf	??_check_sensors,f,c
  2898  001736  504B               	movf	_SeeLine,w,c
  2899  001738  1816               	xorwf	??_check_sensors,w,c
  2900  00173A  0BFD               	andlw	-3
  2901  00173C  1816               	xorwf	??_check_sensors,w,c
  2902  00173E  6E4B               	movwf	_SeeLine,c
  2903                           
  2904                           ;sumovore.c: 247: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  2905  001740  0EA7               	movlw	167
  2906  001742  ECAA  F00E         	call	_adc
  2907  001746  5013               	movf	?_adc,w,c
  2908  001748  5C49               	subwf	_threshold,w,c
  2909  00174A  5014               	movf	?_adc+1,w,c
  2910  00174C  584A               	subwfb	_threshold+1,w,c
  2911  00174E  B0D8               	btfsc	status,0,c
  2912  001750  D003               	goto	u2030
  2913  001752  6A16               	clrf	??_check_sensors& (0+255),c
  2914  001754  2A16               	incf	??_check_sensors& (0+255),f,c
  2915  001756  D001               	goto	u2048
  2916  001758                     u2030:
  2917  001758  6A16               	clrf	??_check_sensors& (0+255),c
  2918  00175A                     u2048:
  2919  00175A  504B               	movf	_SeeLine,w,c
  2920  00175C  1816               	xorwf	??_check_sensors,w,c
  2921  00175E  0BFE               	andlw	-2
  2922  001760  1816               	xorwf	??_check_sensors,w,c
  2923  001762  6E4B               	movwf	_SeeLine,c
  2924  001764  0012               	return		;funcret
  2925  001766                     __end_of_check_sensors:
  2926                           	opt stack 0
  2927                           stkptr	equ	0xFFC
  2928                           tblptru	equ	0xFF8
  2929                           tblptrh	equ	0xFF7
  2930                           tblptrl	equ	0xFF6
  2931                           tablat	equ	0xFF5
  2932                           intcon	equ	0xFF2
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _adc *****************
  2938 ;; Defined at:
  2939 ;;		line 229 in file "../Robot Files/sumovore.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  channel         1    wreg     unsigned char 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  channel         1   20[COMRAM] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2   18[COMRAM] unsigned int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;Total ram usage:        3 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    2
  2960 ;; This function calls:
  2961 ;;		_BusyADC
  2962 ;;		_ConvertADC
  2963 ;;		_ReadADC
  2964 ;;		_SetChanADC
  2965 ;; This function is called by:
  2966 ;;		_check_sensors
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text27
  2971  001D54                     __ptext27:
  2972                           	opt stack 0
  2973  001D54                     _adc:
  2974                           	opt stack 27
  2975                           
  2976                           ;incstack = 0
  2977                           ;adc@channel stored from wreg
  2978  001D54  6E15               	movwf	adc@channel,c
  2979                           
  2980                           ;sumovore.c: 231: SetChanADC( channel );
  2981  001D56  5015               	movf	adc@channel,w,c
  2982  001D58  EC78  F00F         	call	_SetChanADC
  2983                           
  2984                           ;sumovore.c: 232: ConvertADC();
  2985  001D5C  ECD2  F00F         	call	_ConvertADC	;wreg free
  2986                           
  2987                           ;sumovore.c: 233: while( BusyADC() );
  2988  001D60  D000               	goto	l2385
  2989  001D62                     l2385:
  2990  001D62  ECB6  F00F         	call	_BusyADC	;wreg free
  2991  001D66  0900               	iorlw	0
  2992  001D68  A4D8               	btfss	status,2,c
  2993  001D6A  D7FB               	goto	l2385
  2994                           
  2995                           ;sumovore.c: 235: return ReadADC();
  2996  001D6C  ECA7  F00F         	call	_ReadADC	;wreg free
  2997  001D70  C00F  F013         	movff	?_ReadADC,?_adc
  2998  001D74  C010  F014         	movff	?_ReadADC+1,?_adc+1
  2999  001D78  D000               	goto	l320
  3000  001D7A                     l320:
  3001  001D7A  0012               	return		;funcret
  3002  001D7C                     __end_of_adc:
  3003                           	opt stack 0
  3004                           stkptr	equ	0xFFC
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           intcon	equ	0xFF2
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function _SetChanADC *****************
  3015 ;; Defined at:
  3016 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  channel         1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  channel         1   15[COMRAM] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;Total ram usage:        2 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_adc
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text28
  3045  001EF0                     __ptext28:
  3046                           	opt stack 0
  3047  001EF0                     _SetChanADC:
  3048                           	opt stack 27
  3049                           
  3050                           ;incstack = 0
  3051                           ;SetChanADC@channel stored from wreg
  3052  001EF0  6E10               	movwf	SetChanADC@channel,c
  3053  001EF2  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  3054  001EF6  0EC3               	movlw	195
  3055  001EF8  160F               	andwf	??_SetChanADC,f,c
  3056  001EFA  90D8               	bcf	status,0,c
  3057  001EFC  3010               	rrcf	SetChanADC@channel,w,c
  3058  001EFE  0B3C               	andlw	60
  3059  001F00  100F               	iorwf	??_SetChanADC,w,c
  3060  001F02  6EC2               	movwf	4034,c	;volatile
  3061  001F04  0012               	return		;funcret
  3062  001F06                     __end_of_SetChanADC:
  3063                           	opt stack 0
  3064                           stkptr	equ	0xFFC
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           intcon	equ	0xFF2
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           status	equ	0xFD8
  3073                           
  3074 ;; *************** function _ReadADC *****************
  3075 ;; Defined at:
  3076 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2   14[COMRAM] int 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;Total ram usage:        4 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_adc
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text29
  3105  001F4E                     __ptext29:
  3106                           	opt stack 0
  3107  001F4E                     _ReadADC:
  3108                           	opt stack 27
  3109                           
  3110                           ;incstack = 0
  3111  001F4E  50C4               	movf	4036,w,c	;volatile
  3112  001F50  6E11               	movwf	??_ReadADC& (0+255),c
  3113  001F52  50C3               	movf	4035,w,c	;volatile
  3114  001F54  6E0F               	movwf	?_ReadADC,c
  3115  001F56  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  3116  001F5A  D000               	goto	l447
  3117  001F5C                     l447:
  3118  001F5C  0012               	return		;funcret
  3119  001F5E                     __end_of_ReadADC:
  3120                           	opt stack 0
  3121                           stkptr	equ	0xFFC
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           intcon	equ	0xFF2
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function _ConvertADC *****************
  3132 ;; Defined at:
  3133 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;		None               void
  3140 ;; Registers used:
  3141 ;;		None
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_adc
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text30
  3162  001FA4                     __ptext30:
  3163                           	opt stack 0
  3164  001FA4                     _ConvertADC:
  3165                           	opt stack 27
  3166                           
  3167                           ;incstack = 0
  3168  001FA4  82C2               	bsf	4034,1,c	;volatile
  3169  001FA6  0012               	return		;funcret
  3170  001FA8                     __end_of_ConvertADC:
  3171                           	opt stack 0
  3172                           stkptr	equ	0xFFC
  3173                           tblptru	equ	0xFF8
  3174                           tblptrh	equ	0xFF7
  3175                           tblptrl	equ	0xFF6
  3176                           tablat	equ	0xFF5
  3177                           intcon	equ	0xFF2
  3178                           postinc0	equ	0xFEE
  3179                           wreg	equ	0xFE8
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _BusyADC *****************
  3183 ;; Defined at:
  3184 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_adc
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text31
  3213  001F6C                     __ptext31:
  3214                           	opt stack 0
  3215  001F6C                     _BusyADC:
  3216                           	opt stack 27
  3217                           
  3218                           ;incstack = 0
  3219  001F6C  A2C2               	btfss	4034,1,c	;volatile
  3220  001F6E  D002               	goto	u60
  3221  001F70  0E01               	movlw	1
  3222  001F72  D002               	goto	l417
  3223  001F74                     u60:
  3224  001F74  0E00               	movlw	0
  3225  001F76  D000               	goto	l417
  3226  001F78                     l417:
  3227  001F78  0012               	return		;funcret
  3228  001F7A                     __end_of_BusyADC:
  3229                           	opt stack 0
  3230                           stkptr	equ	0xFFC
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           intcon	equ	0xFF2
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function _WriteTimer0 *****************
  3241 ;; Defined at:
  3242 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  timer0          2   14[COMRAM] unsigned int 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  timer           2   16[COMRAM] struct Timers
  3247 ;; Return value:  Size  Location     Type
  3248 ;;		None               void
  3249 ;; Registers used:
  3250 ;;		None
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;Total ram usage:        4 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text32
  3271  001F2A                     __ptext32:
  3272                           	opt stack 0
  3273  001F2A                     _WriteTimer0:
  3274                           	opt stack 29
  3275                           
  3276                           ;incstack = 0
  3277  001F2A  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3278  001F2E  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3279  001F32  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3280  001F36  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3281  001F3A  0012               	return		;funcret
  3282  001F3C                     __end_of_WriteTimer0:
  3283                           	opt stack 0
  3284                           stkptr	equ	0xFFC
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           intcon	equ	0xFF2
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _PID_LineFollowing *****************
  3295 ;; Defined at:
  3296 ;;		line 83 in file "../Robot Files/main.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  error           2   51[COMRAM] PTR char 
  3299 ;;		 -> main@error(3), 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;Total ram usage:        7 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    3
  3318 ;; This function calls:
  3319 ;;		_MotorControl
  3320 ;;		_ReadTimer0
  3321 ;;		___aldiv
  3322 ;;		___lwdiv
  3323 ;;		___lwmod
  3324 ;;		___wmul
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text33
  3331  001086                     __ptext33:
  3332                           	opt stack 0
  3333  001086                     _PID_LineFollowing:
  3334                           	opt stack 27
  3335                           
  3336                           ;main.c: 85: static int delta_velocity = 0;
  3337                           ;main.c: 87: static int D = 0;
  3338                           ;main.c: 90: if (!(ReadTimer0()%I_CONSTANT))
  3339                           
  3340                           ;incstack = 0
  3341  001086  EC9E  F00F         	call	_ReadTimer0	;wreg free
  3342  00108A  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  3343  00108E  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  3344  001092  0E11               	movlw	low _I_CONSTANT
  3345  001094  6EF6               	movwf	tblptrl,c
  3346  001096                     	if	1	;There is more than 1 active tblptr byte
  3347  001096  0E10               	movlw	high _I_CONSTANT
  3348  001098  6EF7               	movwf	tblptrh,c
  3349  00109A                     	endif
  3350  00109A                     	if	1	;There are 3 active tblptr bytes
  3351  00109A  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  3352  00109C  6EF8               	movwf	tblptru,c
  3353  00109E                     	endif
  3354  00109E  0009               	tblrd		*+
  3355  0010A0  CFF5 F015          	movff	tablat,___lwmod@divisor
  3356  0010A4  000A               	tblrd		*-
  3357  0010A6  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  3358  0010AA  ECE0  F00D         	call	___lwmod	;wreg free
  3359  0010AE  5013               	movf	?___lwmod,w,c
  3360  0010B0  1014               	iorwf	?___lwmod+1,w,c
  3361  0010B2  A4D8               	btfss	status,2,c
  3362  0010B4  D077               	goto	l2551
  3363                           
  3364                           ;main.c: 91: {
  3365                           ;main.c: 92: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=1600
      +                           && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  3366  0010B6  BE44               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3367  0010B8  D006               	goto	l2527
  3368  0010BA  0E40               	movlw	64
  3369  0010BC  5C43               	subwf	PID_LineFollowing@delta_velocity,w,c
  3370  0010BE  0E06               	movlw	6
  3371  0010C0  5844               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3372  0010C2  B0D8               	btfsc	status,0,c
  3373  0010C4  D008               	goto	l2529
  3374  0010C6                     l2527:
  3375  0010C6  BE44               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3376  0010C8  D006               	goto	l2529
  3377  0010CA  0E41               	movlw	65
  3378  0010CC  5C43               	subwf	PID_LineFollowing@delta_velocity,w,c
  3379  0010CE  0E06               	movlw	6
  3380  0010D0  5844               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3381  0010D2  B0D8               	btfsc	status,0,c
  3382  0010D4  D024               	goto	l2537
  3383  0010D6                     l2529:
  3384  0010D6  BE44               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3385  0010D8  D00F               	goto	l2533
  3386  0010DA  0E40               	movlw	64
  3387  0010DC  5C43               	subwf	PID_LineFollowing@delta_velocity,w,c
  3388  0010DE  0E06               	movlw	6
  3389  0010E0  5844               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3390  0010E2  A0D8               	btfss	status,0,c
  3391  0010E4  D009               	goto	l2533
  3392  0010E6  EE20 F002          	lfsr	2,2
  3393  0010EA  5034               	movf	PID_LineFollowing@error,w,c
  3394  0010EC  26D9               	addwf	fsr2l,f,c
  3395  0010EE  5035               	movf	PID_LineFollowing@error+1,w,c
  3396  0010F0  22DA               	addwfc	fsr2h,f,c
  3397  0010F2  0E00               	movlw	0
  3398  0010F4  BEDB               	btfsc	plusw2,7,c
  3399  0010F6  D013               	goto	l2537
  3400  0010F8                     l2533:
  3401  0010F8  AE44               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  3402  0010FA  D054               	goto	l2551
  3403  0010FC  0EC1               	movlw	193
  3404  0010FE  5C43               	subwf	PID_LineFollowing@delta_velocity,w,c
  3405  001100  0EF9               	movlw	249
  3406  001102  5844               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3407  001104  B0D8               	btfsc	status,0,c
  3408  001106  D04E               	goto	l2551
  3409  001108  EE20 F002          	lfsr	2,2
  3410  00110C  5034               	movf	PID_LineFollowing@error,w,c
  3411  00110E  26D9               	addwf	fsr2l,f,c
  3412  001110  5035               	movf	PID_LineFollowing@error+1,w,c
  3413  001112  22DA               	addwfc	fsr2h,f,c
  3414  001114  50DF               	movf	indf2,w,c
  3415  001116  0A80               	xorlw	128
  3416  001118  0F7F               	addlw	-129
  3417  00111A  A0D8               	btfss	status,0,c
  3418  00111C  D043               	goto	l2551
  3419  00111E                     l2537:
  3420                           
  3421                           ;main.c: 94: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && error
      +                          [2]>0))
  3422  00111E  BE46               	btfsc	_I+1,7,c
  3423  001120  D006               	goto	l2539
  3424  001122  0EC9               	movlw	201
  3425  001124  5C45               	subwf	_I,w,c
  3426  001126  0E0C               	movlw	12
  3427  001128  5846               	subwfb	_I+1,w,c
  3428  00112A  B0D8               	btfsc	status,0,c
  3429  00112C  D008               	goto	l2541
  3430  00112E                     l2539:
  3431  00112E  AE46               	btfss	_I+1,7,c
  3432  001130  D02A               	goto	l2549
  3433  001132  0E37               	movlw	55
  3434  001134  5C45               	subwf	_I,w,c
  3435  001136  0EF3               	movlw	243
  3436  001138  5846               	subwfb	_I+1,w,c
  3437  00113A  B0D8               	btfsc	status,0,c
  3438  00113C  D024               	goto	l2549
  3439  00113E                     l2541:
  3440  00113E  BE46               	btfsc	_I+1,7,c
  3441  001140  D00F               	goto	l2545
  3442  001142  0EC9               	movlw	201
  3443  001144  5C45               	subwf	_I,w,c
  3444  001146  0E0C               	movlw	12
  3445  001148  5846               	subwfb	_I+1,w,c
  3446  00114A  A0D8               	btfss	status,0,c
  3447  00114C  D009               	goto	l2545
  3448  00114E  EE20 F002          	lfsr	2,2
  3449  001152  5034               	movf	PID_LineFollowing@error,w,c
  3450  001154  26D9               	addwf	fsr2l,f,c
  3451  001156  5035               	movf	PID_LineFollowing@error+1,w,c
  3452  001158  22DA               	addwfc	fsr2h,f,c
  3453  00115A  0E00               	movlw	0
  3454  00115C  BEDB               	btfsc	plusw2,7,c
  3455  00115E  D013               	goto	l2549
  3456  001160                     l2545:
  3457  001160  AE46               	btfss	_I+1,7,c
  3458  001162  D020               	goto	l2551
  3459  001164  0E37               	movlw	55
  3460  001166  5C45               	subwf	_I,w,c
  3461  001168  0EF3               	movlw	243
  3462  00116A  5846               	subwfb	_I+1,w,c
  3463  00116C  B0D8               	btfsc	status,0,c
  3464  00116E  D01A               	goto	l2551
  3465  001170  EE20 F002          	lfsr	2,2
  3466  001174  5034               	movf	PID_LineFollowing@error,w,c
  3467  001176  26D9               	addwf	fsr2l,f,c
  3468  001178  5035               	movf	PID_LineFollowing@error+1,w,c
  3469  00117A  22DA               	addwfc	fsr2h,f,c
  3470  00117C  50DF               	movf	indf2,w,c
  3471  00117E  0A80               	xorlw	128
  3472  001180  0F7F               	addlw	-129
  3473  001182  A0D8               	btfss	status,0,c
  3474  001184  D00F               	goto	l2551
  3475  001186                     l2549:
  3476                           
  3477                           ;main.c: 96: I += error[2];
  3478  001186  EE20 F002          	lfsr	2,2
  3479  00118A  5034               	movf	PID_LineFollowing@error,w,c
  3480  00118C  26D9               	addwf	fsr2l,f,c
  3481  00118E  5035               	movf	PID_LineFollowing@error+1,w,c
  3482  001190  22DA               	addwfc	fsr2h,f,c
  3483  001192  50DF               	movf	indf2,w,c
  3484  001194  6E36               	movwf	??_PID_LineFollowing& (0+255),c
  3485  001196  5036               	movf	??_PID_LineFollowing,w,c
  3486  001198  2645               	addwf	_I,f,c
  3487  00119A  0E00               	movlw	0
  3488  00119C  BE36               	btfsc	??_PID_LineFollowing,7,c
  3489  00119E  0EFF               	movlw	255
  3490  0011A0  2246               	addwfc	_I+1,f,c
  3491  0011A2  D000               	goto	l2551
  3492  0011A4                     l2551:
  3493                           
  3494                           ;main.c: 97: }
  3495                           ;main.c: 100: if(error[1]!=error[2])
  3496  0011A4  EE20 F002          	lfsr	2,2
  3497  0011A8  5034               	movf	PID_LineFollowing@error,w,c
  3498  0011AA  26D9               	addwf	fsr2l,f,c
  3499  0011AC  5035               	movf	PID_LineFollowing@error+1,w,c
  3500  0011AE  22DA               	addwfc	fsr2h,f,c
  3501  0011B0  EE10 F001          	lfsr	1,1
  3502  0011B4  5034               	movf	PID_LineFollowing@error,w,c
  3503  0011B6  26E1               	addwf	fsr1l,f,c
  3504  0011B8  5035               	movf	PID_LineFollowing@error+1,w,c
  3505  0011BA  22E2               	addwfc	fsr1h,f,c
  3506  0011BC  50DE               	movf	postinc2,w,c
  3507  0011BE  18E6               	xorwf	postinc1,w,c
  3508  0011C0  B4D8               	btfsc	status,2,c
  3509  0011C2  D058               	goto	l2559
  3510                           
  3511                           ;main.c: 101: {
  3512                           ;main.c: 102: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  3513  0011C4  EE20 F001          	lfsr	2,1
  3514  0011C8  5034               	movf	PID_LineFollowing@error,w,c
  3515  0011CA  26D9               	addwf	fsr2l,f,c
  3516  0011CC  5035               	movf	PID_LineFollowing@error+1,w,c
  3517  0011CE  22DA               	addwfc	fsr2h,f,c
  3518  0011D0  50DF               	movf	indf2,w,c
  3519  0011D2  6E36               	movwf	??_PID_LineFollowing& (0+255),c
  3520  0011D4  6A37               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3521  0011D6  BE36               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3522  0011D8  0637               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3523  0011DA  1E36               	comf	??_PID_LineFollowing,f,c
  3524  0011DC  1E37               	comf	??_PID_LineFollowing+1,f,c
  3525  0011DE  4A36               	infsnz	??_PID_LineFollowing,f,c
  3526  0011E0  2A37               	incf	??_PID_LineFollowing+1,f,c
  3527  0011E2  EE20 F002          	lfsr	2,2
  3528  0011E6  5034               	movf	PID_LineFollowing@error,w,c
  3529  0011E8  26D9               	addwf	fsr2l,f,c
  3530  0011EA  5035               	movf	PID_LineFollowing@error+1,w,c
  3531  0011EC  22DA               	addwfc	fsr2h,f,c
  3532  0011EE  50DF               	movf	indf2,w,c
  3533  0011F0  6E38               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3534  0011F2  5036               	movf	??_PID_LineFollowing,w,c
  3535  0011F4  2438               	addwf	??_PID_LineFollowing+2,w,c
  3536  0011F6  6E1D               	movwf	___wmul@multiplier,c
  3537  0011F8  0E00               	movlw	0
  3538  0011FA  BE38               	btfsc	??_PID_LineFollowing+2,7,c
  3539  0011FC  0EFF               	movlw	255
  3540  0011FE  2037               	addwfc	??_PID_LineFollowing+1,w,c
  3541  001200  6E1E               	movwf	___wmul@multiplier+1,c
  3542  001202  EC9E  F00F         	call	_ReadTimer0	;wreg free
  3543  001206  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  3544  00120A  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  3545  00120E  0E0F               	movlw	low _D_CONSTANT
  3546  001210  6EF6               	movwf	tblptrl,c
  3547  001212                     	if	1	;There is more than 1 active tblptr byte
  3548  001212  0E10               	movlw	high _D_CONSTANT
  3549  001214  6EF7               	movwf	tblptrh,c
  3550  001216                     	endif
  3551  001216                     	if	1	;There are 3 active tblptr bytes
  3552  001216  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3553  001218  6EF8               	movwf	tblptru,c
  3554  00121A                     	endif
  3555  00121A  0009               	tblrd		*+
  3556  00121C  CFF5 F013          	movff	tablat,___lwdiv@dividend
  3557  001220  000A               	tblrd		*-
  3558  001222  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  3559  001226  ECB2  F00D         	call	___lwdiv	;wreg free
  3560  00122A  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  3561  00122E  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3562  001232  ECBE  F00E         	call	___wmul	;wreg free
  3563  001236  C01D  F041         	movff	?___wmul,PID_LineFollowing@D
  3564  00123A  C01E  F042         	movff	?___wmul+1,PID_LineFollowing@D+1
  3565                           
  3566                           ;main.c: 104: error[0]=error[1];
  3567  00123E  EE20 F001          	lfsr	2,1
  3568  001242  5034               	movf	PID_LineFollowing@error,w,c
  3569  001244  26D9               	addwf	fsr2l,f,c
  3570  001246  5035               	movf	PID_LineFollowing@error+1,w,c
  3571  001248  22DA               	addwfc	fsr2h,f,c
  3572  00124A  C034  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3573  00124E  C035  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3574  001252  CFDF FFE7          	movff	indf2,indf1
  3575                           
  3576                           ;main.c: 105: error[1]=error[2];
  3577  001256  EE20 F002          	lfsr	2,2
  3578  00125A  5034               	movf	PID_LineFollowing@error,w,c
  3579  00125C  26D9               	addwf	fsr2l,f,c
  3580  00125E  5035               	movf	PID_LineFollowing@error+1,w,c
  3581  001260  22DA               	addwfc	fsr2h,f,c
  3582  001262  EE10 F001          	lfsr	1,1
  3583  001266  5034               	movf	PID_LineFollowing@error,w,c
  3584  001268  26E1               	addwf	fsr1l,f,c
  3585  00126A  5035               	movf	PID_LineFollowing@error+1,w,c
  3586  00126C  22E2               	addwfc	fsr1h,f,c
  3587  00126E  CFDF FFE7          	movff	indf2,indf1
  3588  001272  D000               	goto	l2559
  3589  001274                     l2559:
  3590                           
  3591                           ;main.c: 106: }
  3592                           ;main.c: 108: if(TMR0IF)
  3593  001274  A4F2               	btfss	intcon,2,c	;volatile
  3594  001276  D044               	goto	l122
  3595                           
  3596                           ;main.c: 109: {
  3597                           ;main.c: 110: D = D_CONSTANT/65535*(error[1]-error[0]);
  3598  001278  C034  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3599  00127C  C035  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3600  001280  50DF               	movf	indf2,w,c
  3601  001282  6E36               	movwf	??_PID_LineFollowing& (0+255),c
  3602  001284  6A37               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3603  001286  BE36               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3604  001288  0637               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3605  00128A  1E36               	comf	??_PID_LineFollowing,f,c
  3606  00128C  1E37               	comf	??_PID_LineFollowing+1,f,c
  3607  00128E  4A36               	infsnz	??_PID_LineFollowing,f,c
  3608  001290  2A37               	incf	??_PID_LineFollowing+1,f,c
  3609  001292  EE20 F001          	lfsr	2,1
  3610  001296  5034               	movf	PID_LineFollowing@error,w,c
  3611  001298  26D9               	addwf	fsr2l,f,c
  3612  00129A  5035               	movf	PID_LineFollowing@error+1,w,c
  3613  00129C  22DA               	addwfc	fsr2h,f,c
  3614  00129E  50DF               	movf	indf2,w,c
  3615  0012A0  6E38               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3616  0012A2  5036               	movf	??_PID_LineFollowing,w,c
  3617  0012A4  2438               	addwf	??_PID_LineFollowing+2,w,c
  3618  0012A6  6E1D               	movwf	___wmul@multiplier,c
  3619  0012A8  0E00               	movlw	0
  3620  0012AA  BE38               	btfsc	??_PID_LineFollowing+2,7,c
  3621  0012AC  0EFF               	movlw	255
  3622  0012AE  2037               	addwfc	??_PID_LineFollowing+1,w,c
  3623  0012B0  6E1E               	movwf	___wmul@multiplier+1,c
  3624  0012B2  0EFF               	movlw	255
  3625  0012B4  6E13               	movwf	___aldiv@divisor,c
  3626  0012B6  0EFF               	movlw	255
  3627  0012B8  6E14               	movwf	___aldiv@divisor+1,c
  3628  0012BA  0E00               	movlw	0
  3629  0012BC  6E15               	movwf	___aldiv@divisor+2,c
  3630  0012BE  0E00               	movlw	0
  3631  0012C0  6E16               	movwf	___aldiv@divisor+3,c
  3632  0012C2  0E0F               	movlw	low _D_CONSTANT
  3633  0012C4  6EF6               	movwf	tblptrl,c
  3634  0012C6                     	if	1	;There is more than 1 active tblptr byte
  3635  0012C6  0E10               	movlw	high _D_CONSTANT
  3636  0012C8  6EF7               	movwf	tblptrh,c
  3637  0012CA                     	endif
  3638  0012CA                     	if	1	;There are 3 active tblptr bytes
  3639  0012CA  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3640  0012CC  6EF8               	movwf	tblptru,c
  3641  0012CE                     	endif
  3642  0012CE  0009               	tblrd		*+
  3643  0012D0  CFF5 F039          	movff	tablat,??_PID_LineFollowing+3
  3644  0012D4  0009               	tblrd		*+
  3645  0012D6  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+4
  3646  0012DA  C039  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3647  0012DE  C03A  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3648  0012E2  6A11               	clrf	___aldiv@dividend+2,c
  3649  0012E4  6A12               	clrf	___aldiv@dividend+3,c
  3650  0012E6  ECE2  F00A         	call	___aldiv	;wreg free
  3651  0012EA  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3652  0012EE  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3653  0012F2  ECBE  F00E         	call	___wmul	;wreg free
  3654  0012F6  C01D  F041         	movff	?___wmul,PID_LineFollowing@D
  3655  0012FA  C01E  F042         	movff	?___wmul+1,PID_LineFollowing@D+1
  3656                           
  3657                           ;main.c: 111: TMR0IF = 0;
  3658  0012FE  94F2               	bcf	intcon,2,c	;volatile
  3659  001300                     l122:
  3660                           
  3661                           ;main.c: 112: }
  3662                           ;main.c: 116: delta_velocity = P_CONSTANT*error[2] + I + D;
  3663  001300  EE20 F002          	lfsr	2,2
  3664  001304  5034               	movf	PID_LineFollowing@error,w,c
  3665  001306  26D9               	addwf	fsr2l,f,c
  3666  001308  5035               	movf	PID_LineFollowing@error+1,w,c
  3667  00130A  22DA               	addwfc	fsr2h,f,c
  3668  00130C  50DF               	movf	indf2,w,c
  3669  00130E  6E1D               	movwf	___wmul@multiplier,c
  3670  001310  6A1E               	clrf	___wmul@multiplier+1,c
  3671  001312  BE1D               	btfsc	___wmul@multiplier,7,c
  3672  001314  061E               	decf	___wmul@multiplier+1,f,c
  3673  001316  0E13               	movlw	low _P_CONSTANT
  3674  001318  6EF6               	movwf	tblptrl,c
  3675  00131A                     	if	1	;There is more than 1 active tblptr byte
  3676  00131A  0E10               	movlw	high _P_CONSTANT
  3677  00131C  6EF7               	movwf	tblptrh,c
  3678  00131E                     	endif
  3679  00131E                     	if	1	;There are 3 active tblptr bytes
  3680  00131E  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3681  001320  6EF8               	movwf	tblptru,c
  3682  001322                     	endif
  3683  001322  0009               	tblrd		*+
  3684  001324  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3685  001328  000A               	tblrd		*-
  3686  00132A  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3687  00132E  ECBE  F00E         	call	___wmul	;wreg free
  3688  001332  5045               	movf	_I,w,c
  3689  001334  261D               	addwf	?___wmul,f,c
  3690  001336  5046               	movf	_I+1,w,c
  3691  001338  221E               	addwfc	?___wmul+1,f,c
  3692  00133A  5041               	movf	PID_LineFollowing@D,w,c
  3693  00133C  241D               	addwf	?___wmul,w,c
  3694  00133E  6E43               	movwf	PID_LineFollowing@delta_velocity,c
  3695  001340  5042               	movf	PID_LineFollowing@D+1,w,c
  3696  001342  201E               	addwfc	?___wmul+1,w,c
  3697  001344  6E44               	movwf	PID_LineFollowing@delta_velocity+1,c
  3698                           
  3699                           ;main.c: 118: MotorControl(delta_velocity);
  3700  001346  C043  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3701  00134A  C044  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3702  00134E  ECAA  F009         	call	_MotorControl	;wreg free
  3703  001352  0012               	return		;funcret
  3704  001354                     __end_of_PID_LineFollowing:
  3705                           	opt stack 0
  3706                           stkptr	equ	0xFFC
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           intcon	equ	0xFF2
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           indf1	equ	0xFE7
  3715                           postinc1	equ	0xFE6
  3716                           fsr1h	equ	0xFE2
  3717                           fsr1l	equ	0xFE1
  3718                           indf2	equ	0xFDF
  3719                           postinc2	equ	0xFDE
  3720                           plusw2	equ	0xFDB
  3721                           fsr2h	equ	0xFDA
  3722                           fsr2l	equ	0xFD9
  3723                           status	equ	0xFD8
  3724                           
  3725 ;; *************** function ___lwmod *****************
  3726 ;; Defined at:
  3727 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  dividend        2   18[COMRAM] unsigned int 
  3730 ;;  divisor         2   20[COMRAM] unsigned int 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  counter         1   22[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2   18[COMRAM] unsigned int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;Total ram usage:        5 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_PID_LineFollowing
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text34
  3757  001BC0                     __ptext34:
  3758                           	opt stack 0
  3759  001BC0                     ___lwmod:
  3760                           	opt stack 28
  3761                           
  3762                           ;incstack = 0
  3763  001BC0  5015               	movf	___lwmod@divisor,w,c
  3764  001BC2  1016               	iorwf	___lwmod@divisor+1,w,c
  3765  001BC4  B4D8               	btfsc	status,2,c
  3766  001BC6  D01D               	goto	l1135
  3767  001BC8  0E01               	movlw	1
  3768  001BCA  6E17               	movwf	___lwmod@counter,c
  3769  001BCC  D005               	goto	l2463
  3770  001BCE                     l2461:
  3771  001BCE  90D8               	bcf	status,0,c
  3772  001BD0  3615               	rlcf	___lwmod@divisor,f,c
  3773  001BD2  3616               	rlcf	___lwmod@divisor+1,f,c
  3774  001BD4  2A17               	incf	___lwmod@counter,f,c
  3775  001BD6  D000               	goto	l2463
  3776  001BD8                     l2463:
  3777  001BD8  BE16               	btfsc	___lwmod@divisor+1,7,c
  3778  001BDA  D002               	goto	l2465
  3779  001BDC  D7F8               	goto	l2461
  3780  001BDE  D000               	goto	l2465
  3781  001BE0                     l2465:
  3782  001BE0  5015               	movf	___lwmod@divisor,w,c
  3783  001BE2  5C13               	subwf	___lwmod@dividend,w,c
  3784  001BE4  5016               	movf	___lwmod@divisor+1,w,c
  3785  001BE6  5814               	subwfb	___lwmod@dividend+1,w,c
  3786  001BE8  A0D8               	btfss	status,0,c
  3787  001BEA  D005               	goto	l2469
  3788  001BEC  5015               	movf	___lwmod@divisor,w,c
  3789  001BEE  5E13               	subwf	___lwmod@dividend,f,c
  3790  001BF0  5016               	movf	___lwmod@divisor+1,w,c
  3791  001BF2  5A14               	subwfb	___lwmod@dividend+1,f,c
  3792  001BF4  D000               	goto	l2469
  3793  001BF6                     l2469:
  3794  001BF6  90D8               	bcf	status,0,c
  3795  001BF8  3216               	rrcf	___lwmod@divisor+1,f,c
  3796  001BFA  3215               	rrcf	___lwmod@divisor,f,c
  3797  001BFC  2E17               	decfsz	___lwmod@counter,f,c
  3798  001BFE  D7F0               	goto	l2465
  3799  001C00  D000               	goto	l1135
  3800  001C02                     l1135:
  3801  001C02  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3802  001C06  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3803  001C0A  0012               	return		;funcret
  3804  001C0C                     __end_of___lwmod:
  3805                           	opt stack 0
  3806                           stkptr	equ	0xFFC
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           intcon	equ	0xFF2
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           indf1	equ	0xFE7
  3815                           postinc1	equ	0xFE6
  3816                           fsr1h	equ	0xFE2
  3817                           fsr1l	equ	0xFE1
  3818                           indf2	equ	0xFDF
  3819                           postinc2	equ	0xFDE
  3820                           plusw2	equ	0xFDB
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function ___lwdiv *****************
  3826 ;; Defined at:
  3827 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  dividend        2   18[COMRAM] unsigned int 
  3830 ;;  divisor         2   20[COMRAM] unsigned int 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  quotient        2   22[COMRAM] unsigned int 
  3833 ;;  counter         1   24[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2   18[COMRAM] unsigned int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;Total ram usage:        7 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_PID_LineFollowing
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text35
  3858  001B64                     __ptext35:
  3859                           	opt stack 0
  3860  001B64                     ___lwdiv:
  3861                           	opt stack 28
  3862                           
  3863                           ;incstack = 0
  3864  001B64  0E00               	movlw	0
  3865  001B66  6E18               	movwf	___lwdiv@quotient+1,c
  3866  001B68  0E00               	movlw	0
  3867  001B6A  6E17               	movwf	___lwdiv@quotient,c
  3868  001B6C  5015               	movf	___lwdiv@divisor,w,c
  3869  001B6E  1016               	iorwf	___lwdiv@divisor+1,w,c
  3870  001B70  B4D8               	btfsc	status,2,c
  3871  001B72  D021               	goto	l1125
  3872  001B74  0E01               	movlw	1
  3873  001B76  6E19               	movwf	___lwdiv@counter,c
  3874  001B78  D005               	goto	l2443
  3875  001B7A                     l2441:
  3876  001B7A  90D8               	bcf	status,0,c
  3877  001B7C  3615               	rlcf	___lwdiv@divisor,f,c
  3878  001B7E  3616               	rlcf	___lwdiv@divisor+1,f,c
  3879  001B80  2A19               	incf	___lwdiv@counter,f,c
  3880  001B82  D000               	goto	l2443
  3881  001B84                     l2443:
  3882  001B84  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3883  001B86  D002               	goto	l2445
  3884  001B88  D7F8               	goto	l2441
  3885  001B8A  D000               	goto	l2445
  3886  001B8C                     l2445:
  3887  001B8C  90D8               	bcf	status,0,c
  3888  001B8E  3617               	rlcf	___lwdiv@quotient,f,c
  3889  001B90  3618               	rlcf	___lwdiv@quotient+1,f,c
  3890  001B92  5015               	movf	___lwdiv@divisor,w,c
  3891  001B94  5C13               	subwf	___lwdiv@dividend,w,c
  3892  001B96  5016               	movf	___lwdiv@divisor+1,w,c
  3893  001B98  5814               	subwfb	___lwdiv@dividend+1,w,c
  3894  001B9A  A0D8               	btfss	status,0,c
  3895  001B9C  D006               	goto	l2453
  3896  001B9E  5015               	movf	___lwdiv@divisor,w,c
  3897  001BA0  5E13               	subwf	___lwdiv@dividend,f,c
  3898  001BA2  5016               	movf	___lwdiv@divisor+1,w,c
  3899  001BA4  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3900  001BA6  8017               	bsf	___lwdiv@quotient,0,c
  3901  001BA8  D000               	goto	l2453
  3902  001BAA                     l2453:
  3903  001BAA  90D8               	bcf	status,0,c
  3904  001BAC  3216               	rrcf	___lwdiv@divisor+1,f,c
  3905  001BAE  3215               	rrcf	___lwdiv@divisor,f,c
  3906  001BB0  2E19               	decfsz	___lwdiv@counter,f,c
  3907  001BB2  D7EC               	goto	l2445
  3908  001BB4  D000               	goto	l1125
  3909  001BB6                     l1125:
  3910  001BB6  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3911  001BBA  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3912  001BBE  0012               	return		;funcret
  3913  001BC0                     __end_of___lwdiv:
  3914                           	opt stack 0
  3915                           stkptr	equ	0xFFC
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           intcon	equ	0xFF2
  3921                           postinc0	equ	0xFEE
  3922                           wreg	equ	0xFE8
  3923                           indf1	equ	0xFE7
  3924                           postinc1	equ	0xFE6
  3925                           fsr1h	equ	0xFE2
  3926                           fsr1l	equ	0xFE1
  3927                           indf2	equ	0xFDF
  3928                           postinc2	equ	0xFDE
  3929                           plusw2	equ	0xFDB
  3930                           fsr2h	equ	0xFDA
  3931                           fsr2l	equ	0xFD9
  3932                           status	equ	0xFD8
  3933                           
  3934 ;; *************** function ___aldiv *****************
  3935 ;; Defined at:
  3936 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  dividend        4   14[COMRAM] long 
  3939 ;;  divisor         4   18[COMRAM] long 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  quotient        4   24[COMRAM] long 
  3942 ;;  sign            1   23[COMRAM] unsigned char 
  3943 ;;  counter         1   22[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  4   14[COMRAM] long 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:       14 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    1
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_PID_LineFollowing
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text36
  3968  0015C4                     __ptext36:
  3969                           	opt stack 0
  3970  0015C4                     ___aldiv:
  3971                           	opt stack 28
  3972                           
  3973                           ;incstack = 0
  3974  0015C4  0E00               	movlw	0
  3975  0015C6  6E18               	movwf	___aldiv@sign,c
  3976  0015C8  AE16               	btfss	___aldiv@divisor+3,7,c
  3977  0015CA  D00B               	goto	l2399
  3978  0015CC  1E16               	comf	___aldiv@divisor+3,f,c
  3979  0015CE  1E15               	comf	___aldiv@divisor+2,f,c
  3980  0015D0  1E14               	comf	___aldiv@divisor+1,f,c
  3981  0015D2  6C13               	negf	___aldiv@divisor,c
  3982  0015D4  0E00               	movlw	0
  3983  0015D6  2214               	addwfc	___aldiv@divisor+1,f,c
  3984  0015D8  2215               	addwfc	___aldiv@divisor+2,f,c
  3985  0015DA  2216               	addwfc	___aldiv@divisor+3,f,c
  3986  0015DC  0E01               	movlw	1
  3987  0015DE  6E18               	movwf	___aldiv@sign,c
  3988  0015E0  D000               	goto	l2399
  3989  0015E2                     l2399:
  3990  0015E2  AE12               	btfss	___aldiv@dividend+3,7,c
  3991  0015E4  D00B               	goto	l2405
  3992  0015E6  1E12               	comf	___aldiv@dividend+3,f,c
  3993  0015E8  1E11               	comf	___aldiv@dividend+2,f,c
  3994  0015EA  1E10               	comf	___aldiv@dividend+1,f,c
  3995  0015EC  6C0F               	negf	___aldiv@dividend,c
  3996  0015EE  0E00               	movlw	0
  3997  0015F0  2210               	addwfc	___aldiv@dividend+1,f,c
  3998  0015F2  2211               	addwfc	___aldiv@dividend+2,f,c
  3999  0015F4  2212               	addwfc	___aldiv@dividend+3,f,c
  4000  0015F6  0E01               	movlw	1
  4001  0015F8  1A18               	xorwf	___aldiv@sign,f,c
  4002  0015FA  D000               	goto	l2405
  4003  0015FC                     l2405:
  4004  0015FC  0E00               	movlw	0
  4005  0015FE  6E19               	movwf	___aldiv@quotient,c
  4006  001600  0E00               	movlw	0
  4007  001602  6E1A               	movwf	___aldiv@quotient+1,c
  4008  001604  0E00               	movlw	0
  4009  001606  6E1B               	movwf	___aldiv@quotient+2,c
  4010  001608  0E00               	movlw	0
  4011  00160A  6E1C               	movwf	___aldiv@quotient+3,c
  4012  00160C  5013               	movf	___aldiv@divisor,w,c
  4013  00160E  1014               	iorwf	___aldiv@divisor+1,w,c
  4014  001610  1015               	iorwf	___aldiv@divisor+2,w,c
  4015  001612  1016               	iorwf	___aldiv@divisor+3,w,c
  4016  001614  B4D8               	btfsc	status,2,c
  4017  001616  D02F               	goto	l2427
  4018  001618  0E01               	movlw	1
  4019  00161A  6E17               	movwf	___aldiv@counter,c
  4020  00161C  D007               	goto	l2413
  4021  00161E                     l2411:
  4022  00161E  90D8               	bcf	status,0,c
  4023  001620  3613               	rlcf	___aldiv@divisor,f,c
  4024  001622  3614               	rlcf	___aldiv@divisor+1,f,c
  4025  001624  3615               	rlcf	___aldiv@divisor+2,f,c
  4026  001626  3616               	rlcf	___aldiv@divisor+3,f,c
  4027  001628  2A17               	incf	___aldiv@counter,f,c
  4028  00162A  D000               	goto	l2413
  4029  00162C                     l2413:
  4030  00162C  BE16               	btfsc	___aldiv@divisor+3,7,c
  4031  00162E  D002               	goto	l2415
  4032  001630  D7F6               	goto	l2411
  4033  001632  D000               	goto	l2415
  4034  001634                     l2415:
  4035  001634  90D8               	bcf	status,0,c
  4036  001636  3619               	rlcf	___aldiv@quotient,f,c
  4037  001638  361A               	rlcf	___aldiv@quotient+1,f,c
  4038  00163A  361B               	rlcf	___aldiv@quotient+2,f,c
  4039  00163C  361C               	rlcf	___aldiv@quotient+3,f,c
  4040  00163E  5013               	movf	___aldiv@divisor,w,c
  4041  001640  5C0F               	subwf	___aldiv@dividend,w,c
  4042  001642  5014               	movf	___aldiv@divisor+1,w,c
  4043  001644  5810               	subwfb	___aldiv@dividend+1,w,c
  4044  001646  5015               	movf	___aldiv@divisor+2,w,c
  4045  001648  5811               	subwfb	___aldiv@dividend+2,w,c
  4046  00164A  5016               	movf	___aldiv@divisor+3,w,c
  4047  00164C  5812               	subwfb	___aldiv@dividend+3,w,c
  4048  00164E  A0D8               	btfss	status,0,c
  4049  001650  D00A               	goto	l2423
  4050  001652  5013               	movf	___aldiv@divisor,w,c
  4051  001654  5E0F               	subwf	___aldiv@dividend,f,c
  4052  001656  5014               	movf	___aldiv@divisor+1,w,c
  4053  001658  5A10               	subwfb	___aldiv@dividend+1,f,c
  4054  00165A  5015               	movf	___aldiv@divisor+2,w,c
  4055  00165C  5A11               	subwfb	___aldiv@dividend+2,f,c
  4056  00165E  5016               	movf	___aldiv@divisor+3,w,c
  4057  001660  5A12               	subwfb	___aldiv@dividend+3,f,c
  4058  001662  8019               	bsf	___aldiv@quotient,0,c
  4059  001664  D000               	goto	l2423
  4060  001666                     l2423:
  4061  001666  90D8               	bcf	status,0,c
  4062  001668  3216               	rrcf	___aldiv@divisor+3,f,c
  4063  00166A  3215               	rrcf	___aldiv@divisor+2,f,c
  4064  00166C  3214               	rrcf	___aldiv@divisor+1,f,c
  4065  00166E  3213               	rrcf	___aldiv@divisor,f,c
  4066  001670  2E17               	decfsz	___aldiv@counter,f,c
  4067  001672  D7E0               	goto	l2415
  4068  001674  D000               	goto	l2427
  4069  001676                     l2427:
  4070  001676  5018               	movf	___aldiv@sign,w,c
  4071  001678  B4D8               	btfsc	status,2,c
  4072  00167A  D009               	goto	l2431
  4073  00167C  1E1C               	comf	___aldiv@quotient+3,f,c
  4074  00167E  1E1B               	comf	___aldiv@quotient+2,f,c
  4075  001680  1E1A               	comf	___aldiv@quotient+1,f,c
  4076  001682  6C19               	negf	___aldiv@quotient,c
  4077  001684  0E00               	movlw	0
  4078  001686  221A               	addwfc	___aldiv@quotient+1,f,c
  4079  001688  221B               	addwfc	___aldiv@quotient+2,f,c
  4080  00168A  221C               	addwfc	___aldiv@quotient+3,f,c
  4081  00168C  D000               	goto	l2431
  4082  00168E                     l2431:
  4083  00168E  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  4084  001692  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  4085  001696  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  4086  00169A  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  4087  00169E  D000               	goto	l676
  4088  0016A0                     l676:
  4089  0016A0  0012               	return		;funcret
  4090  0016A2                     __end_of___aldiv:
  4091                           	opt stack 0
  4092                           stkptr	equ	0xFFC
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           intcon	equ	0xFF2
  4098                           postinc0	equ	0xFEE
  4099                           wreg	equ	0xFE8
  4100                           indf1	equ	0xFE7
  4101                           postinc1	equ	0xFE6
  4102                           fsr1h	equ	0xFE2
  4103                           fsr1l	equ	0xFE1
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           plusw2	equ	0xFDB
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _ReadTimer0 *****************
  4112 ;; Defined at:
  4113 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  timer           2   16[COMRAM] struct Timers
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2   14[COMRAM] unsigned int 
  4120 ;; Registers used:
  4121 ;;		None
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;Total ram usage:        4 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_PID_LineFollowing
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text37
  4142  001F3C                     __ptext37:
  4143                           	opt stack 0
  4144  001F3C                     _ReadTimer0:
  4145                           	opt stack 28
  4146                           
  4147                           ;incstack = 0
  4148  001F3C  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4149  001F40  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4150  001F44  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4151  001F48  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4152  001F4C  0012               	return		;funcret
  4153  001F4E                     __end_of_ReadTimer0:
  4154                           	opt stack 0
  4155                           stkptr	equ	0xFFC
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           intcon	equ	0xFF2
  4161                           postinc0	equ	0xFEE
  4162                           wreg	equ	0xFE8
  4163                           indf1	equ	0xFE7
  4164                           postinc1	equ	0xFE6
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           postinc2	equ	0xFDE
  4169                           plusw2	equ	0xFDB
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _MotorControl *****************
  4175 ;; Defined at:
  4176 ;;		line 122 in file "../Robot Files/main.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  delta_veloci    2   42[COMRAM] int 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  right_duty_c    2   49[COMRAM] int 
  4181 ;;  left_duty_cy    2   47[COMRAM] int 
  4182 ;;  right_dir_mo    1   46[COMRAM] enum E4193
  4183 ;;  left_dir_mod    1   45[COMRAM] enum E4193
  4184 ;; Return value:  Size  Location     Type
  4185 ;;		None               void
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;Total ram usage:        9 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    2
  4200 ;; This function calls:
  4201 ;;		_SetDCPWM1
  4202 ;;		_SetDCPWM2
  4203 ;;		___awdiv
  4204 ;;		___wmul
  4205 ;; This function is called by:
  4206 ;;		_PID_LineFollowing
  4207 ;;		_SharpTurn
  4208 ;;		_GetBackonTrack
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text38
  4213  001354                     __ptext38:
  4214                           	opt stack 0
  4215  001354                     _MotorControl:
  4216                           	opt stack 27
  4217                           
  4218                           ;main.c: 124: int left_duty_cycle = 700, right_duty_cycle = 700;
  4219                           
  4220                           ;incstack = 0
  4221  001354  0E02               	movlw	2
  4222  001356  6E31               	movwf	MotorControl@left_duty_cycle+1,c
  4223  001358  0EBC               	movlw	188
  4224  00135A  6E30               	movwf	MotorControl@left_duty_cycle,c
  4225  00135C  0E02               	movlw	2
  4226  00135E  6E33               	movwf	MotorControl@right_duty_cycle+1,c
  4227  001360  0EBC               	movlw	188
  4228  001362  6E32               	movwf	MotorControl@right_duty_cycle,c
  4229                           
  4230                           ;main.c: 125: enum e_direction {reverse,forward} left_dir_modifier= forward, right_dir_m
      +                          odifier= forward;
  4231  001364  0E01               	movlw	1
  4232  001366  6E2E               	movwf	MotorControl@left_dir_modifier,c
  4233  001368  0E01               	movlw	1
  4234  00136A  6E2F               	movwf	MotorControl@right_dir_modifier,c
  4235                           
  4236                           ;main.c: 128: if ( delta_velocity < 0 )
  4237  00136C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  4238  00136E  D023               	goto	l2265
  4239                           
  4240                           ;main.c: 129: {
  4241                           ;main.c: 130: left_duty_cycle += delta_velocity*15/16;
  4242  001370  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  4243  001374  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  4244  001378  0E00               	movlw	0
  4245  00137A  6E20               	movwf	___wmul@multiplicand+1,c
  4246  00137C  0E0F               	movlw	15
  4247  00137E  6E1F               	movwf	___wmul@multiplicand,c
  4248  001380  ECBE  F00E         	call	___wmul	;wreg free
  4249  001384  C01D  F023         	movff	?___wmul,___awdiv@dividend
  4250  001388  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  4251  00138C  0E00               	movlw	0
  4252  00138E  6E26               	movwf	___awdiv@divisor+1,c
  4253  001390  0E10               	movlw	16
  4254  001392  6E25               	movwf	___awdiv@divisor,c
  4255  001394  EC09  F00C         	call	___awdiv	;wreg free
  4256  001398  5023               	movf	?___awdiv,w,c
  4257  00139A  2630               	addwf	MotorControl@left_duty_cycle,f,c
  4258  00139C  5024               	movf	?___awdiv+1,w,c
  4259  00139E  2231               	addwfc	MotorControl@left_duty_cycle+1,f,c
  4260                           
  4261                           ;main.c: 131: right_duty_cycle -= delta_velocity/16;
  4262  0013A0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  4263  0013A4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  4264  0013A8  0E00               	movlw	0
  4265  0013AA  6E26               	movwf	___awdiv@divisor+1,c
  4266  0013AC  0E10               	movlw	16
  4267  0013AE  6E25               	movwf	___awdiv@divisor,c
  4268  0013B0  EC09  F00C         	call	___awdiv	;wreg free
  4269  0013B4  D022               	goto	L8
  4270  0013B6                     l2265:
  4271                           
  4272                           ;main.c: 134: else
  4273                           ;main.c: 135: {
  4274                           ;main.c: 136: left_duty_cycle += delta_velocity/16;
  4275  0013B6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  4276  0013BA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  4277  0013BE  0E00               	movlw	0
  4278  0013C0  6E26               	movwf	___awdiv@divisor+1,c
  4279  0013C2  0E10               	movlw	16
  4280  0013C4  6E25               	movwf	___awdiv@divisor,c
  4281  0013C6  EC09  F00C         	call	___awdiv	;wreg free
  4282  0013CA  5023               	movf	?___awdiv,w,c
  4283  0013CC  2630               	addwf	MotorControl@left_duty_cycle,f,c
  4284  0013CE  5024               	movf	?___awdiv+1,w,c
  4285  0013D0  2231               	addwfc	MotorControl@left_duty_cycle+1,f,c
  4286                           
  4287                           ;main.c: 137: right_duty_cycle -= delta_velocity*15/16;
  4288  0013D2  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  4289  0013D6  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  4290  0013DA  0E00               	movlw	0
  4291  0013DC  6E20               	movwf	___wmul@multiplicand+1,c
  4292  0013DE  0E0F               	movlw	15
  4293  0013E0  6E1F               	movwf	___wmul@multiplicand,c
  4294  0013E2  ECBE  F00E         	call	___wmul	;wreg free
  4295  0013E6  C01D  F023         	movff	?___wmul,___awdiv@dividend
  4296  0013EA  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  4297  0013EE  0E00               	movlw	0
  4298  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  4299  0013F2  0E10               	movlw	16
  4300  0013F4  6E25               	movwf	___awdiv@divisor,c
  4301  0013F6  EC09  F00C         	call	___awdiv	;wreg free
  4302  0013FA                     L8:
  4303  0013FA  5023               	movf	?___awdiv,w,c
  4304  0013FC  5E32               	subwf	MotorControl@right_duty_cycle,f,c
  4305  0013FE  5024               	movf	?___awdiv+1,w,c
  4306  001400  5A33               	subwfb	MotorControl@right_duty_cycle+1,f,c
  4307  001402  D000               	goto	l2269
  4308  001404                     l2269:
  4309                           
  4310                           ;main.c: 138: }
  4311                           ;main.c: 144: if ( left_duty_cycle < 0 )
  4312  001404  AE31               	btfss	MotorControl@left_duty_cycle+1,7,c
  4313  001406  D010               	goto	l2275
  4314                           
  4315                           ;main.c: 145: {
  4316                           ;main.c: 146: left_dir_modifier = reverse;
  4317  001408  0E00               	movlw	0
  4318  00140A  6E2E               	movwf	MotorControl@left_dir_modifier,c
  4319                           
  4320                           ;main.c: 147: left_duty_cycle *= -1;
  4321  00140C  C030  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  4322  001410  C031  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  4323  001414  0EFF               	movlw	255
  4324  001416  6E20               	movwf	___wmul@multiplicand+1,c
  4325  001418  681F               	setf	___wmul@multiplicand,c
  4326  00141A  ECBE  F00E         	call	___wmul	;wreg free
  4327  00141E  C01D  F030         	movff	?___wmul,MotorControl@left_duty_cycle
  4328  001422  C01E  F031         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  4329  001426  D000               	goto	l2275
  4330  001428                     l2275:
  4331                           
  4332                           ;main.c: 148: }
  4333                           ;main.c: 149: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  4334  001428  BE31               	btfsc	MotorControl@left_duty_cycle+1,7,c
  4335  00142A  D00B               	goto	l2279
  4336  00142C  0E21               	movlw	33
  4337  00142E  5C30               	subwf	MotorControl@left_duty_cycle,w,c
  4338  001430  0E03               	movlw	3
  4339  001432  5831               	subwfb	MotorControl@left_duty_cycle+1,w,c
  4340  001434  A0D8               	btfss	status,0,c
  4341  001436  D005               	goto	l2279
  4342  001438  0E03               	movlw	3
  4343  00143A  6E31               	movwf	MotorControl@left_duty_cycle+1,c
  4344  00143C  0E20               	movlw	32
  4345  00143E  6E30               	movwf	MotorControl@left_duty_cycle,c
  4346  001440  D000               	goto	l2279
  4347  001442                     l2279:
  4348                           
  4349                           ;main.c: 151: SetDCPWM2((unsigned int) left_duty_cycle );
  4350  001442  C030  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  4351  001446  C031  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  4352  00144A  EC27  F00E         	call	_SetDCPWM2	;wreg free
  4353                           
  4354                           ;main.c: 152: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  4355  00144E  502E               	movf	MotorControl@left_dir_modifier,w,c
  4356  001450  A4D8               	btfss	status,2,c
  4357  001452  D002               	goto	l130
  4358  001454  9082               	bcf	3970,0,c	;volatile
  4359  001456  D002               	goto	l2285
  4360  001458                     l130:
  4361                           
  4362                           ;main.c: 153: else PORTCbits.RC0 = 0b1;
  4363  001458  8082               	bsf	3970,0,c	;volatile
  4364  00145A  D000               	goto	l2285
  4365  00145C                     l2285:
  4366                           
  4367                           ;main.c: 154: PORTEbits.RE1 = !PORTCbits.RC0;
  4368  00145C  B082               	btfsc	3970,0,c	;volatile
  4369  00145E  D003               	goto	u1600
  4370  001460  6A2D               	clrf	??_MotorControl& (0+255),c
  4371  001462  2A2D               	incf	??_MotorControl& (0+255),f,c
  4372  001464  D001               	goto	u1618
  4373  001466                     u1600:
  4374  001466  6A2D               	clrf	??_MotorControl& (0+255),c
  4375  001468                     u1618:
  4376  001468  462D               	rlncf	??_MotorControl,f,c
  4377  00146A  5084               	movf	3972,w,c	;volatile
  4378  00146C  182D               	xorwf	??_MotorControl,w,c
  4379  00146E  0BFD               	andlw	-3
  4380  001470  182D               	xorwf	??_MotorControl,w,c
  4381  001472  6E84               	movwf	3972,c	;volatile
  4382                           
  4383                           ;main.c: 157: if ( right_duty_cycle < 0 )
  4384  001474  AE33               	btfss	MotorControl@right_duty_cycle+1,7,c
  4385  001476  D010               	goto	l2291
  4386                           
  4387                           ;main.c: 158: {
  4388                           ;main.c: 159: right_dir_modifier = reverse;
  4389  001478  0E00               	movlw	0
  4390  00147A  6E2F               	movwf	MotorControl@right_dir_modifier,c
  4391                           
  4392                           ;main.c: 160: right_duty_cycle *= -1;
  4393  00147C  C032  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  4394  001480  C033  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  4395  001484  0EFF               	movlw	255
  4396  001486  6E20               	movwf	___wmul@multiplicand+1,c
  4397  001488  681F               	setf	___wmul@multiplicand,c
  4398  00148A  ECBE  F00E         	call	___wmul	;wreg free
  4399  00148E  C01D  F032         	movff	?___wmul,MotorControl@right_duty_cycle
  4400  001492  C01E  F033         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  4401  001496  D000               	goto	l2291
  4402  001498                     l2291:
  4403                           
  4404                           ;main.c: 161: }
  4405                           ;main.c: 162: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  4406  001498  BE33               	btfsc	MotorControl@right_duty_cycle+1,7,c
  4407  00149A  D00B               	goto	l2295
  4408  00149C  0E21               	movlw	33
  4409  00149E  5C32               	subwf	MotorControl@right_duty_cycle,w,c
  4410  0014A0  0E03               	movlw	3
  4411  0014A2  5833               	subwfb	MotorControl@right_duty_cycle+1,w,c
  4412  0014A4  A0D8               	btfss	status,0,c
  4413  0014A6  D005               	goto	l2295
  4414  0014A8  0E03               	movlw	3
  4415  0014AA  6E33               	movwf	MotorControl@right_duty_cycle+1,c
  4416  0014AC  0E20               	movlw	32
  4417  0014AE  6E32               	movwf	MotorControl@right_duty_cycle,c
  4418  0014B0  D000               	goto	l2295
  4419  0014B2                     l2295:
  4420                           
  4421                           ;main.c: 164: SetDCPWM1((unsigned int) right_duty_cycle );
  4422  0014B2  C032  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  4423  0014B6  C033  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  4424  0014BA  EC44  F00E         	call	_SetDCPWM1	;wreg free
  4425                           
  4426                           ;main.c: 165: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  4427  0014BE  502F               	movf	MotorControl@right_dir_modifier,w,c
  4428  0014C0  A4D8               	btfss	status,2,c
  4429  0014C2  D002               	goto	l134
  4430  0014C4  9A82               	bcf	3970,5,c	;volatile
  4431  0014C6  D002               	goto	l2301
  4432  0014C8                     l134:
  4433                           
  4434                           ;main.c: 166: else PORTCbits.RC5 = 0b1;
  4435  0014C8  8A82               	bsf	3970,5,c	;volatile
  4436  0014CA  D000               	goto	l2301
  4437  0014CC                     l2301:
  4438                           
  4439                           ;main.c: 167: PORTEbits.RE0 = !PORTCbits.RC5;
  4440  0014CC  BA82               	btfsc	3970,5,c	;volatile
  4441  0014CE  D003               	goto	u1650
  4442  0014D0  6A2D               	clrf	??_MotorControl& (0+255),c
  4443  0014D2  2A2D               	incf	??_MotorControl& (0+255),f,c
  4444  0014D4  D001               	goto	u1668
  4445  0014D6                     u1650:
  4446  0014D6  6A2D               	clrf	??_MotorControl& (0+255),c
  4447  0014D8                     u1668:
  4448  0014D8  5084               	movf	3972,w,c	;volatile
  4449  0014DA  182D               	xorwf	??_MotorControl,w,c
  4450  0014DC  0BFE               	andlw	-2
  4451  0014DE  182D               	xorwf	??_MotorControl,w,c
  4452  0014E0  6E84               	movwf	3972,c	;volatile
  4453  0014E2  0012               	return		;funcret
  4454  0014E4                     __end_of_MotorControl:
  4455                           	opt stack 0
  4456                           stkptr	equ	0xFFC
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           intcon	equ	0xFF2
  4462                           postinc0	equ	0xFEE
  4463                           wreg	equ	0xFE8
  4464                           indf1	equ	0xFE7
  4465                           postinc1	equ	0xFE6
  4466                           fsr1h	equ	0xFE2
  4467                           fsr1l	equ	0xFE1
  4468                           indf2	equ	0xFDF
  4469                           postinc2	equ	0xFDE
  4470                           plusw2	equ	0xFDB
  4471                           fsr2h	equ	0xFDA
  4472                           fsr2l	equ	0xFD9
  4473                           status	equ	0xFD8
  4474                           
  4475 ;; *************** function ___wmul *****************
  4476 ;; Defined at:
  4477 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  multiplier      2   28[COMRAM] unsigned int 
  4480 ;;  multiplicand    2   30[COMRAM] unsigned int 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  product         2   32[COMRAM] unsigned int 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  2   28[COMRAM] unsigned int 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, prodl, prodh
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;Total ram usage:        6 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_PID_LineFollowing
  4503 ;;		_MotorControl
  4504 ;;		_SharpTurn
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text39
  4509  001D7C                     __ptext39:
  4510                           	opt stack 0
  4511  001D7C                     ___wmul:
  4512                           	opt stack 28
  4513                           
  4514                           ;incstack = 0
  4515  001D7C  501D               	movf	___wmul@multiplier,w,c
  4516  001D7E  021F               	mulwf	___wmul@multiplicand,c
  4517  001D80  CFF3 F021          	movff	prodl,___wmul@product
  4518  001D84  CFF4 F022          	movff	prodh,___wmul@product+1
  4519  001D88  501D               	movf	___wmul@multiplier,w,c
  4520  001D8A  0220               	mulwf	___wmul@multiplicand+1,c
  4521  001D8C  50F3               	movf	prodl,w,c
  4522  001D8E  2622               	addwf	___wmul@product+1,f,c
  4523  001D90  501E               	movf	___wmul@multiplier+1,w,c
  4524  001D92  021F               	mulwf	___wmul@multiplicand,c
  4525  001D94  50F3               	movf	prodl,w,c
  4526  001D96  2622               	addwf	___wmul@product+1,f,c
  4527  001D98  C021  F01D         	movff	___wmul@product,?___wmul
  4528  001D9C  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  4529  001DA0  D000               	goto	l607
  4530  001DA2                     l607:
  4531  001DA2  0012               	return		;funcret
  4532  001DA4                     __end_of___wmul:
  4533                           	opt stack 0
  4534                           stkptr	equ	0xFFC
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           indf1	equ	0xFE7
  4545                           postinc1	equ	0xFE6
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           plusw2	equ	0xFDB
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function ___awdiv *****************
  4556 ;; Defined at:
  4557 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  dividend        2   34[COMRAM] int 
  4560 ;;  divisor         2   36[COMRAM] int 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  quotient        2   40[COMRAM] int 
  4563 ;;  sign            1   39[COMRAM] unsigned char 
  4564 ;;  counter         1   38[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2   34[COMRAM] int 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        8 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_MotorControl
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text40
  4589  001812                     __ptext40:
  4590                           	opt stack 0
  4591  001812                     ___awdiv:
  4592                           	opt stack 27
  4593                           
  4594                           ;incstack = 0
  4595  001812  0E00               	movlw	0
  4596  001814  6E28               	movwf	___awdiv@sign,c
  4597  001816  AE26               	btfss	___awdiv@divisor+1,7,c
  4598  001818  D007               	goto	l2219
  4599  00181A  6C25               	negf	___awdiv@divisor,c
  4600  00181C  1E26               	comf	___awdiv@divisor+1,f,c
  4601  00181E  B0D8               	btfsc	status,0,c
  4602  001820  2A26               	incf	___awdiv@divisor+1,f,c
  4603  001822  0E01               	movlw	1
  4604  001824  6E28               	movwf	___awdiv@sign,c
  4605  001826  D000               	goto	l2219
  4606  001828                     l2219:
  4607  001828  AE24               	btfss	___awdiv@dividend+1,7,c
  4608  00182A  D007               	goto	l2225
  4609  00182C  6C23               	negf	___awdiv@dividend,c
  4610  00182E  1E24               	comf	___awdiv@dividend+1,f,c
  4611  001830  B0D8               	btfsc	status,0,c
  4612  001832  2A24               	incf	___awdiv@dividend+1,f,c
  4613  001834  0E01               	movlw	1
  4614  001836  1A28               	xorwf	___awdiv@sign,f,c
  4615  001838  D000               	goto	l2225
  4616  00183A                     l2225:
  4617  00183A  0E00               	movlw	0
  4618  00183C  6E2A               	movwf	___awdiv@quotient+1,c
  4619  00183E  0E00               	movlw	0
  4620  001840  6E29               	movwf	___awdiv@quotient,c
  4621  001842  5025               	movf	___awdiv@divisor,w,c
  4622  001844  1026               	iorwf	___awdiv@divisor+1,w,c
  4623  001846  B4D8               	btfsc	status,2,c
  4624  001848  D021               	goto	l2247
  4625  00184A  0E01               	movlw	1
  4626  00184C  6E27               	movwf	___awdiv@counter,c
  4627  00184E  D005               	goto	l2233
  4628  001850                     l2231:
  4629  001850  90D8               	bcf	status,0,c
  4630  001852  3625               	rlcf	___awdiv@divisor,f,c
  4631  001854  3626               	rlcf	___awdiv@divisor+1,f,c
  4632  001856  2A27               	incf	___awdiv@counter,f,c
  4633  001858  D000               	goto	l2233
  4634  00185A                     l2233:
  4635  00185A  BE26               	btfsc	___awdiv@divisor+1,7,c
  4636  00185C  D002               	goto	l2235
  4637  00185E  D7F8               	goto	l2231
  4638  001860  D000               	goto	l2235
  4639  001862                     l2235:
  4640  001862  90D8               	bcf	status,0,c
  4641  001864  3629               	rlcf	___awdiv@quotient,f,c
  4642  001866  362A               	rlcf	___awdiv@quotient+1,f,c
  4643  001868  5025               	movf	___awdiv@divisor,w,c
  4644  00186A  5C23               	subwf	___awdiv@dividend,w,c
  4645  00186C  5026               	movf	___awdiv@divisor+1,w,c
  4646  00186E  5824               	subwfb	___awdiv@dividend+1,w,c
  4647  001870  A0D8               	btfss	status,0,c
  4648  001872  D006               	goto	l2243
  4649  001874  5025               	movf	___awdiv@divisor,w,c
  4650  001876  5E23               	subwf	___awdiv@dividend,f,c
  4651  001878  5026               	movf	___awdiv@divisor+1,w,c
  4652  00187A  5A24               	subwfb	___awdiv@dividend+1,f,c
  4653  00187C  8029               	bsf	___awdiv@quotient,0,c
  4654  00187E  D000               	goto	l2243
  4655  001880                     l2243:
  4656  001880  90D8               	bcf	status,0,c
  4657  001882  3226               	rrcf	___awdiv@divisor+1,f,c
  4658  001884  3225               	rrcf	___awdiv@divisor,f,c
  4659  001886  2E27               	decfsz	___awdiv@counter,f,c
  4660  001888  D7EC               	goto	l2235
  4661  00188A  D000               	goto	l2247
  4662  00188C                     l2247:
  4663  00188C  5028               	movf	___awdiv@sign,w,c
  4664  00188E  B4D8               	btfsc	status,2,c
  4665  001890  D005               	goto	l2251
  4666  001892  6C29               	negf	___awdiv@quotient,c
  4667  001894  1E2A               	comf	___awdiv@quotient+1,f,c
  4668  001896  B0D8               	btfsc	status,0,c
  4669  001898  2A2A               	incf	___awdiv@quotient+1,f,c
  4670  00189A  D000               	goto	l2251
  4671  00189C                     l2251:
  4672  00189C  C029  F023         	movff	___awdiv@quotient,?___awdiv
  4673  0018A0  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  4674  0018A4  D000               	goto	l800
  4675  0018A6                     l800:
  4676  0018A6  0012               	return		;funcret
  4677  0018A8                     __end_of___awdiv:
  4678                           	opt stack 0
  4679                           stkptr	equ	0xFFC
  4680                           tblptru	equ	0xFF8
  4681                           tblptrh	equ	0xFF7
  4682                           tblptrl	equ	0xFF6
  4683                           tablat	equ	0xFF5
  4684                           prodh	equ	0xFF4
  4685                           prodl	equ	0xFF3
  4686                           intcon	equ	0xFF2
  4687                           postinc0	equ	0xFEE
  4688                           wreg	equ	0xFE8
  4689                           indf1	equ	0xFE7
  4690                           postinc1	equ	0xFE6
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           plusw2	equ	0xFDB
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _SetDCPWM2 *****************
  4701 ;; Defined at:
  4702 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;Total ram usage:        6 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_MotorControl
  4727 ;;		_initialization
  4728 ;;		_set_motor_speed
  4729 ;;		_motors_brake_all
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text41
  4734  001C4E                     __ptext41:
  4735                           	opt stack 0
  4736  001C4E                     _SetDCPWM2:
  4737                           	opt stack 28
  4738                           
  4739                           ;incstack = 0
  4740  001C4E  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4741  001C52  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4742  001C56  0E06               	movlw	6
  4743  001C58                     u1455:
  4744  001C58  90D8               	bcf	status,0,c
  4745  001C5A  3611               	rlcf	??_SetDCPWM2,f,c
  4746  001C5C  3612               	rlcf	??_SetDCPWM2+1,f,c
  4747  001C5E  2EE8               	decfsz	wreg,f,c
  4748  001C60  D7FB               	goto	u1455
  4749  001C62  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4750  001C66  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4751  001C6A  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4752  001C6E  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4753  001C72  90D8               	bcf	status,0,c
  4754  001C74  3211               	rrcf	??_SetDCPWM2,f,c
  4755  001C76  90D8               	bcf	status,0,c
  4756  001C78  3211               	rrcf	??_SetDCPWM2,f,c
  4757  001C7A  0E30               	movlw	48
  4758  001C7C  1611               	andwf	??_SetDCPWM2,f,c
  4759  001C7E  50BA               	movf	4026,w,c	;volatile
  4760  001C80  0BCF               	andlw	207
  4761  001C82  1011               	iorwf	??_SetDCPWM2,w,c
  4762  001C84  6EBA               	movwf	4026,c	;volatile
  4763  001C86  0012               	return		;funcret
  4764  001C88                     __end_of_SetDCPWM2:
  4765                           	opt stack 0
  4766                           stkptr	equ	0xFFC
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           intcon	equ	0xFF2
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           indf1	equ	0xFE7
  4777                           postinc1	equ	0xFE6
  4778                           fsr1h	equ	0xFE2
  4779                           fsr1l	equ	0xFE1
  4780                           indf2	equ	0xFDF
  4781                           postinc2	equ	0xFDE
  4782                           plusw2	equ	0xFDB
  4783                           fsr2h	equ	0xFDA
  4784                           fsr2l	equ	0xFD9
  4785                           status	equ	0xFD8
  4786                           
  4787 ;; *************** function _SetDCPWM1 *****************
  4788 ;; Defined at:
  4789 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  dutycycle       2   14[COMRAM] unsigned int 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  DCycle          2   18[COMRAM] struct PWMDC
  4794 ;; Return value:  Size  Location     Type
  4795 ;;		None               void
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;Total ram usage:        6 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_MotorControl
  4814 ;;		_initialization
  4815 ;;		_set_motor_speed
  4816 ;;		_motors_brake_all
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text42
  4821  001C88                     __ptext42:
  4822                           	opt stack 0
  4823  001C88                     _SetDCPWM1:
  4824                           	opt stack 28
  4825                           
  4826                           ;incstack = 0
  4827  001C88  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  4828  001C8C  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  4829  001C90  0E06               	movlw	6
  4830  001C92                     u1465:
  4831  001C92  90D8               	bcf	status,0,c
  4832  001C94  3611               	rlcf	??_SetDCPWM1,f,c
  4833  001C96  3612               	rlcf	??_SetDCPWM1+1,f,c
  4834  001C98  2EE8               	decfsz	wreg,f,c
  4835  001C9A  D7FB               	goto	u1465
  4836  001C9C  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  4837  001CA0  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  4838  001CA4  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  4839  001CA8  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  4840  001CAC  90D8               	bcf	status,0,c
  4841  001CAE  3211               	rrcf	??_SetDCPWM1,f,c
  4842  001CB0  90D8               	bcf	status,0,c
  4843  001CB2  3211               	rrcf	??_SetDCPWM1,f,c
  4844  001CB4  0E30               	movlw	48
  4845  001CB6  1611               	andwf	??_SetDCPWM1,f,c
  4846  001CB8  50BD               	movf	4029,w,c	;volatile
  4847  001CBA  0BCF               	andlw	207
  4848  001CBC  1011               	iorwf	??_SetDCPWM1,w,c
  4849  001CBE  6EBD               	movwf	4029,c	;volatile
  4850  001CC0  0012               	return		;funcret
  4851  001CC2                     __end_of_SetDCPWM1:
  4852                           	opt stack 0
  4853                           stkptr	equ	0xFFC
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           indf1	equ	0xFE7
  4864                           postinc1	equ	0xFE6
  4865                           fsr1h	equ	0xFE2
  4866                           fsr1l	equ	0xFE1
  4867                           indf2	equ	0xFDF
  4868                           postinc2	equ	0xFDE
  4869                           plusw2	equ	0xFDB
  4870                           fsr2h	equ	0xFDA
  4871                           fsr2l	equ	0xFD9
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function _OpenTimer0 *****************
  4875 ;; Defined at:
  4876 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  config          1    wreg     unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  config          1   14[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;		None               void
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_main
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text43
  4905  001E10                     __ptext43:
  4906                           	opt stack 0
  4907  001E10                     _OpenTimer0:
  4908                           	opt stack 29
  4909                           
  4910                           ;incstack = 0
  4911                           ;OpenTimer0@config stored from wreg
  4912  001E10  6E0F               	movwf	OpenTimer0@config,c
  4913  001E12  500F               	movf	OpenTimer0@config,w,c
  4914  001E14  0B7F               	andlw	127
  4915  001E16  6ED5               	movwf	4053,c	;volatile
  4916  001E18  0E00               	movlw	0
  4917  001E1A  6ED7               	movwf	4055,c	;volatile
  4918  001E1C  0E00               	movlw	0
  4919  001E1E  6ED6               	movwf	4054,c	;volatile
  4920  001E20  94F2               	bcf	intcon,2,c	;volatile
  4921  001E22  AE0F               	btfss	OpenTimer0@config,7,c
  4922  001E24  D002               	goto	l510
  4923  001E26  8AF2               	bsf	intcon,5,c	;volatile
  4924  001E28  D001               	goto	l511
  4925  001E2A                     l510:
  4926  001E2A  9AF2               	bcf	intcon,5,c	;volatile
  4927  001E2C                     l511:
  4928  001E2C  8ED5               	bsf	4053,7,c	;volatile
  4929  001E2E  0012               	return		;funcret
  4930  001E30                     __end_of_OpenTimer0:
  4931                           	opt stack 0
  4932                           stkptr	equ	0xFFC
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           prodh	equ	0xFF4
  4938                           prodl	equ	0xFF3
  4939                           intcon	equ	0xFF2
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           indf1	equ	0xFE7
  4943                           postinc1	equ	0xFE6
  4944                           fsr1h	equ	0xFE2
  4945                           fsr1l	equ	0xFE1
  4946                           indf2	equ	0xFDF
  4947                           postinc2	equ	0xFDE
  4948                           plusw2	equ	0xFDB
  4949                           fsr2h	equ	0xFDA
  4950                           fsr2l	equ	0xFD9
  4951                           status	equ	0xFD8
  4952                           
  4953 ;; *************** function _LVtrap *****************
  4954 ;; Defined at:
  4955 ;;		line 448 in file "../Robot Files/sumovore.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;		None               void
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    3
  4976 ;; This function calls:
  4977 ;;		_gtrap
  4978 ;;		_openPORTD
  4979 ;;		_printf
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text44
  4986  001E30                     __ptext44:
  4987                           	opt stack 0
  4988  001E30                     _LVtrap:
  4989                           	opt stack 27
  4990                           
  4991                           ;sumovore.c: 450: printf("\\<LVD>");
  4992                           
  4993                           ;incstack = 0
  4994  001E30  0E71               	movlw	low STR_7
  4995  001E32  6E0F               	movwf	printf@f,c
  4996  001E34  0E10               	movlw	high STR_7
  4997  001E36  6E10               	movwf	printf@f+1,c
  4998  001E38  EC7D  F00E         	call	_printf	;wreg free
  4999                           
  5000                           ;sumovore.c: 451: openPORTD();
  5001  001E3C  ECCF  F00F         	call	_openPORTD	;wreg free
  5002                           
  5003                           ;sumovore.c: 452: PORTDbits.RD0=!1;
  5004  001E40  9083               	bcf	3971,0,c	;volatile
  5005                           
  5006                           ;sumovore.c: 453: PORTDbits.RD1=!0;
  5007  001E42  8283               	bsf	3971,1,c	;volatile
  5008                           
  5009                           ;sumovore.c: 454: PORTDbits.RD2=!0;
  5010  001E44  8483               	bsf	3971,2,c	;volatile
  5011                           
  5012                           ;sumovore.c: 455: PORTDbits.RD3=!1;
  5013  001E46  9683               	bcf	3971,3,c	;volatile
  5014                           
  5015                           ;sumovore.c: 456: PORTDbits.RD4=!0;
  5016  001E48  8883               	bsf	3971,4,c	;volatile
  5017                           
  5018                           ;sumovore.c: 457: gtrap();
  5019  001E4A  EC52  F00D         	call	_gtrap	;wreg free
  5020  001E4E  0012               	return		;funcret
  5021  001E50                     __end_of_LVtrap:
  5022                           	opt stack 0
  5023                           stkptr	equ	0xFFC
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           intcon	equ	0xFF2
  5031                           postinc0	equ	0xFEE
  5032                           wreg	equ	0xFE8
  5033                           indf1	equ	0xFE7
  5034                           postinc1	equ	0xFE6
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           plusw2	equ	0xFDB
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8
  5043                           
  5044 ;; *************** function _printf *****************
  5045 ;; Defined at:
  5046 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  f               2   14[COMRAM] PTR const unsigned char 
  5049 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  5050 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  tmpval          4    0        struct .
  5053 ;;  cp              3    0        PTR const unsigned char 
  5054 ;;  ap              2   16[COMRAM] PTR void [1]
  5055 ;;		 -> ?_printf(2), 
  5056 ;;  len             2    0        unsigned int 
  5057 ;;  val             2    0        unsigned int 
  5058 ;;  c               1   18[COMRAM] char 
  5059 ;;  flag            1    0        unsigned char 
  5060 ;;  prec            1    0        char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2   14[COMRAM] int 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;Total ram usage:        5 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    2
  5077 ;; This function calls:
  5078 ;;		_putch
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;;		_PORtask
  5082 ;;		_BORtask
  5083 ;;		_WDTtask
  5084 ;;		_STKFULtask
  5085 ;;		_RESETtask
  5086 ;;		_LVtrap
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text45
  5091  001CFA                     __ptext45:
  5092                           	opt stack 0
  5093  001CFA                     _printf:
  5094                           	opt stack 28
  5095                           
  5096                           ;doprnt.c: 466: va_list ap;
  5097                           ;doprnt.c: 499: signed char c;
  5098                           ;doprnt.c: 506: signed char prec;
  5099                           ;doprnt.c: 508: unsigned char flag;
  5100                           ;doprnt.c: 523: union {
  5101                           ;doprnt.c: 524: unsigned long vd;
  5102                           ;doprnt.c: 525: double integ;
  5103                           ;doprnt.c: 526: } tmpval;
  5104                           ;doprnt.c: 528: unsigned int val;
  5105                           ;doprnt.c: 529: unsigned len;
  5106                           ;doprnt.c: 530: const char * cp;
  5107                           ;doprnt.c: 533: *ap = __va_start();
  5108                           
  5109                           ;incstack = 0
  5110  001CFA  0E11               	movlw	low (?_printf+2)
  5111  001CFC  6E11               	movwf	printf@ap,c
  5112  001CFE  0E00               	movlw	high (?_printf+2)
  5113  001D00  6E12               	movwf	printf@ap+1,c
  5114                           
  5115                           ;doprnt.c: 536: while(c = *f++) {
  5116  001D02  D004               	goto	l2099
  5117  001D04                     l2097:
  5118                           
  5119                           ;doprnt.c: 540: {
  5120                           ;doprnt.c: 541: (putch(c) );
  5121  001D04  5013               	movf	printf@c,w,c
  5122  001D06  ECD4  F00F         	call	_putch
  5123                           
  5124                           ;doprnt.c: 542: continue;
  5125  001D0A  D000               	goto	l2099
  5126  001D0C                     l2099:
  5127  001D0C  C00F  FFF6         	movff	printf@f,tblptrl
  5128  001D10  C010  FFF7         	movff	printf@f+1,tblptrh
  5129  001D14  4A0F               	infsnz	printf@f,f,c
  5130  001D16  2A10               	incf	printf@f+1,f,c
  5131  001D18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5132  001D18  6AF8               	clrf	tblptru,c
  5133  001D1A                     	endif
  5134  001D1A                     	if	0	;tblptru may be non-zero
  5135  001D1A                     	endif
  5136  001D1A  0008               	tblrd		*
  5137  001D1C  CFF5 F013          	movff	tablat,printf@c
  5138  001D20  5013               	movf	printf@c,w,c
  5139  001D22  A4D8               	btfss	status,2,c
  5140  001D24  D7EF               	goto	l2097
  5141                           
  5142                           ;doprnt.c: 1469: }
  5143                           ;doprnt.c: 1533: }
  5144                           ;doprnt.c: 1540: return 0;
  5145                           ;	Return value of _printf is never used
  5146  001D26  0012               	return		;funcret
  5147  001D28                     __end_of_printf:
  5148                           	opt stack 0
  5149                           stkptr	equ	0xFFC
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           indf1	equ	0xFE7
  5160                           postinc1	equ	0xFE6
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           plusw2	equ	0xFDB
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8
  5169                           
  5170 ;; *************** function _putch *****************
  5171 ;; Defined at:
  5172 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  c               1    wreg     unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  c               1    0[COMRAM] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;		None               void
  5179 ;; Registers used:
  5180 ;;		wreg
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    1
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_printf
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text46
  5201  001FA8                     __ptext46:
  5202                           	opt stack 0
  5203  001FA8                     _putch:
  5204                           	opt stack 28
  5205                           
  5206                           ;incstack = 0
  5207  001FA8  0012               	return		;funcret
  5208  001FAA                     __end_of_putch:
  5209                           	opt stack 0
  5210                           stkptr	equ	0xFFC
  5211                           tblptru	equ	0xFF8
  5212                           tblptrh	equ	0xFF7
  5213                           tblptrl	equ	0xFF6
  5214                           tablat	equ	0xFF5
  5215                           prodh	equ	0xFF4
  5216                           prodl	equ	0xFF3
  5217                           intcon	equ	0xFF2
  5218                           postinc0	equ	0xFEE
  5219                           wreg	equ	0xFE8
  5220                           indf1	equ	0xFE7
  5221                           postinc1	equ	0xFE6
  5222                           fsr1h	equ	0xFE2
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           plusw2	equ	0xFDB
  5227                           fsr2h	equ	0xFDA
  5228                           fsr2l	equ	0xFD9
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function _openPORTD *****************
  5232 ;; Defined at:
  5233 ;;		line 168 in file "../Robot Files/sumovore.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;		None               void
  5240 ;; Registers used:
  5241 ;;		wreg, status,2
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    1
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_initialization
  5258 ;;		_LVtrap
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text47
  5263  001F9E                     __ptext47:
  5264                           	opt stack 0
  5265  001F9E                     _openPORTD:
  5266                           	opt stack 28
  5267                           
  5268                           ;sumovore.c: 170: TRISD = 0b01100000;
  5269                           
  5270                           ;incstack = 0
  5271  001F9E  0E60               	movlw	96
  5272  001FA0  6E95               	movwf	3989,c	;volatile
  5273  001FA2  0012               	return		;funcret
  5274  001FA4                     __end_of_openPORTD:
  5275                           	opt stack 0
  5276                           stkptr	equ	0xFFC
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           prodh	equ	0xFF4
  5282                           prodl	equ	0xFF3
  5283                           intcon	equ	0xFF2
  5284                           postinc0	equ	0xFEE
  5285                           wreg	equ	0xFE8
  5286                           indf1	equ	0xFE7
  5287                           postinc1	equ	0xFE6
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           indf2	equ	0xFDF
  5291                           postinc2	equ	0xFDE
  5292                           plusw2	equ	0xFDB
  5293                           fsr2h	equ	0xFDA
  5294                           fsr2l	equ	0xFD9
  5295                           status	equ	0xFD8
  5296                           
  5297 ;; *************** function _gtrap *****************
  5298 ;; Defined at:
  5299 ;;		line 463 in file "../Robot Files/sumovore.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  count           4   14[COMRAM] unsigned long 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;		None               void
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        4 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    1
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_BORtask
  5324 ;;		_WDTtask
  5325 ;;		_STKFULtask
  5326 ;;		_RESETtask
  5327 ;;		_LVtrap
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text48
  5332  001AA4                     __ptext48:
  5333                           	opt stack 0
  5334  001AA4                     _gtrap:
  5335                           	opt stack 26
  5336                           
  5337                           ;sumovore.c: 465: unsigned long count=0;
  5338                           
  5339                           ;incstack = 0
  5340  001AA4  0E00               	movlw	0
  5341  001AA6  6E0F               	movwf	gtrap@count,c
  5342  001AA8  0E00               	movlw	0
  5343  001AAA  6E10               	movwf	gtrap@count+1,c
  5344  001AAC  0E00               	movlw	0
  5345  001AAE  6E11               	movwf	gtrap@count+2,c
  5346  001AB0  0E00               	movlw	0
  5347  001AB2  6E12               	movwf	gtrap@count+3,c
  5348  001AB4                     l367:
  5349  001AB4  0004               	clrwdt		;# 
  5350                           
  5351                           ;sumovore.c: 470: if (count==30000u)
  5352  001AB6  0E30               	movlw	48
  5353  001AB8  180F               	xorwf	gtrap@count,w,c
  5354  001ABA  E111               	bnz	l1223
  5355  001ABC  0E75               	movlw	117
  5356  001ABE  1810               	xorwf	gtrap@count+1,w,c
  5357  001AC0  1011               	iorwf	gtrap@count+2,w,c
  5358  001AC2  1012               	iorwf	gtrap@count+3,w,c
  5359  001AC4  A4D8               	btfss	status,2,c
  5360  001AC6  D00B               	goto	l1223
  5361                           
  5362                           ;sumovore.c: 471: {
  5363                           ;sumovore.c: 472: count=0;
  5364  001AC8  0E00               	movlw	0
  5365  001ACA  6E0F               	movwf	gtrap@count,c
  5366  001ACC  0E00               	movlw	0
  5367  001ACE  6E10               	movwf	gtrap@count+1,c
  5368  001AD0  0E00               	movlw	0
  5369  001AD2  6E11               	movwf	gtrap@count+2,c
  5370  001AD4  0E00               	movlw	0
  5371  001AD6  6E12               	movwf	gtrap@count+3,c
  5372                           
  5373                           ;sumovore.c: 473: PORTDbits.RD0=!1;
  5374  001AD8  9083               	bcf	3971,0,c	;volatile
  5375                           
  5376                           ;sumovore.c: 474: PORTDbits.RD1=!0;
  5377  001ADA  8283               	bsf	3971,1,c	;volatile
  5378                           
  5379                           ;sumovore.c: 475: }
  5380  001ADC  D00C               	goto	l1227
  5381  001ADE                     l1223:
  5382                           
  5383                           ;sumovore.c: 476: else if (count==15000u)
  5384  001ADE  0E98               	movlw	152
  5385  001AE0  180F               	xorwf	gtrap@count,w,c
  5386  001AE2  E109               	bnz	l1227
  5387  001AE4  0E3A               	movlw	58
  5388  001AE6  1810               	xorwf	gtrap@count+1,w,c
  5389  001AE8  1011               	iorwf	gtrap@count+2,w,c
  5390  001AEA  1012               	iorwf	gtrap@count+3,w,c
  5391  001AEC  A4D8               	btfss	status,2,c
  5392  001AEE  D003               	goto	l1227
  5393                           
  5394                           ;sumovore.c: 477: {
  5395                           ;sumovore.c: 478: PORTDbits.RD0=!0;
  5396  001AF0  8083               	bsf	3971,0,c	;volatile
  5397                           
  5398                           ;sumovore.c: 479: PORTDbits.RD1=!1;
  5399  001AF2  9283               	bcf	3971,1,c	;volatile
  5400  001AF4  D000               	goto	l1227
  5401  001AF6                     l1227:
  5402                           
  5403                           ;sumovore.c: 480: }
  5404                           ;sumovore.c: 481: count++;
  5405  001AF6  0E01               	movlw	1
  5406  001AF8  260F               	addwf	gtrap@count,f,c
  5407  001AFA  0E00               	movlw	0
  5408  001AFC  2210               	addwfc	gtrap@count+1,f,c
  5409  001AFE  2211               	addwfc	gtrap@count+2,f,c
  5410  001B00  2212               	addwfc	gtrap@count+3,f,c
  5411  001B02  D7D8               	goto	l367
  5412  001B04  0012               	return		;funcret
  5413  001B06                     __end_of_gtrap:
  5414                           	opt stack 0
  5415                           stkptr	equ	0xFFC
  5416                           tblptru	equ	0xFF8
  5417                           tblptrh	equ	0xFF7
  5418                           tblptrl	equ	0xFF6
  5419                           tablat	equ	0xFF5
  5420                           prodh	equ	0xFF4
  5421                           prodl	equ	0xFF3
  5422                           intcon	equ	0xFF2
  5423                           postinc0	equ	0xFEE
  5424                           wreg	equ	0xFE8
  5425                           indf1	equ	0xFE7
  5426                           postinc1	equ	0xFE6
  5427                           fsr1h	equ	0xFE2
  5428                           fsr1l	equ	0xFE1
  5429                           indf2	equ	0xFDF
  5430                           postinc2	equ	0xFDE
  5431                           plusw2	equ	0xFDB
  5432                           fsr2h	equ	0xFDA
  5433                           fsr2l	equ	0xFD9
  5434                           status	equ	0xFD8
  5435                           
  5436 ;; *************** function _high_isr *****************
  5437 ;; Defined at:
  5438 ;;		line 24 in file "../Robot Files/interrupts.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;		None               void
  5445 ;; Registers used:
  5446 ;;		wreg, status,2
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;Total ram usage:       14 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		Interrupt level 2
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	intcode
  5466  000008                     __pintcode:
  5467                           	opt stack 0
  5468  000008                     _high_isr:
  5469                           	opt stack 25
  5470                           
  5471                           ;incstack = 0
  5472  000008  CFFA F001          	movff	pclath,??_high_isr
  5473  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5474  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5475  000014  EDDB  F00C         	call	int_func,f	;refresh shadow registers
  5476                           stkptr	equ	0xFFC
  5477                           pclatu	equ	0xFFB
  5478                           pclath	equ	0xFFA
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           fsr0l	equ	0xFE9
  5488                           wreg	equ	0xFE8
  5489                           indf1	equ	0xFE7
  5490                           postinc1	equ	0xFE6
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           indf2	equ	0xFDF
  5494                           postinc2	equ	0xFDE
  5495                           plusw2	equ	0xFDB
  5496                           fsr2h	equ	0xFDA
  5497                           fsr2l	equ	0xFD9
  5498                           status	equ	0xFD8
  5499                           
  5500                           	psect	intcode_body
  5501  0019B6                     __pintcode_body:
  5502                           	opt stack 25
  5503  0019B6                     int_func:
  5504                           	opt stack 25
  5505  0019B6  0006               	pop		; remove dummy address from shadow register refresh
  5506  0019B8  CFEA F004          	movff	fsr0h,??_high_isr+3
  5507  0019BC  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5508  0019C0  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5509  0019C4  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5510  0019C8  CFDA F008          	movff	fsr2h,??_high_isr+7
  5511  0019CC  CFF3 F009          	movff	prodl,??_high_isr+8
  5512  0019D0  CFF4 F00A          	movff	prodh,??_high_isr+9
  5513  0019D4  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5514  0019D8  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  5515  0019DC  CFF8 F00D          	movff	tblptru,??_high_isr+12
  5516  0019E0  CFF5 F00E          	movff	tablat,??_high_isr+13
  5517                           
  5518                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  5519  0019E4  94A1               	bcf	4001,2,c	;volatile
  5520                           
  5521                           ;interrupts.c: 27: TRISA = 0xff;
  5522  0019E6  6892               	setf	3986,c	;volatile
  5523                           
  5524                           ;interrupts.c: 28: TRISB = 0xff;
  5525  0019E8  6893               	setf	3987,c	;volatile
  5526                           
  5527                           ;interrupts.c: 29: TRISC = 0xff;
  5528  0019EA  6894               	setf	3988,c	;volatile
  5529                           
  5530                           ;interrupts.c: 30: TRISD = 0xff;
  5531  0019EC  6895               	setf	3989,c	;volatile
  5532                           
  5533                           ;interrupts.c: 31: TRISE = 0x03;
  5534  0019EE  0E03               	movlw	3
  5535  0019F0  6E96               	movwf	3990,c	;volatile
  5536                           
  5537                           ;interrupts.c: 32: lvd_flag =1;
  5538  0019F2  0E01               	movlw	1
  5539  0019F4  6E4C               	movwf	_lvd_flag,c
  5540                           
  5541                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  5542  0019F6  94A0               	bcf	4000,2,c	;volatile
  5543                           
  5544                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  5545  0019F8  98D2               	bcf	4050,4,c	;volatile
  5546  0019FA  C00E  FFF5         	movff	??_high_isr+13,tablat
  5547  0019FE  C00D  FFF8         	movff	??_high_isr+12,tblptru
  5548  001A02  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  5549  001A06  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  5550  001A0A  C00A  FFF4         	movff	??_high_isr+9,prodh
  5551  001A0E  C009  FFF3         	movff	??_high_isr+8,prodl
  5552  001A12  C008  FFDA         	movff	??_high_isr+7,fsr2h
  5553  001A16  C007  FFD9         	movff	??_high_isr+6,fsr2l
  5554  001A1A  C006  FFE2         	movff	??_high_isr+5,fsr1h
  5555  001A1E  C005  FFE1         	movff	??_high_isr+4,fsr1l
  5556  001A22  C004  FFEA         	movff	??_high_isr+3,fsr0h
  5557  001A26  C003  FFE9         	movff	??_high_isr+2,fsr0l
  5558  001A2A  C002  FFFB         	movff	??_high_isr+1,pclatu
  5559  001A2E  C001  FFFA         	movff	??_high_isr,pclath
  5560  001A32  0011               	retfie		f
  5561  001A34                     __end_of_high_isr:
  5562                           	opt stack 0
  5563                           stkptr	equ	0xFFC
  5564                           pclatu	equ	0xFFB
  5565                           pclath	equ	0xFFA
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           postinc0	equ	0xFEE
  5574                           fsr0h	equ	0xFEA
  5575                           fsr0l	equ	0xFE9
  5576                           wreg	equ	0xFE8
  5577                           indf1	equ	0xFE7
  5578                           postinc1	equ	0xFE6
  5579                           fsr1h	equ	0xFE2
  5580                           fsr1l	equ	0xFE1
  5581                           indf2	equ	0xFDF
  5582                           postinc2	equ	0xFDE
  5583                           plusw2	equ	0xFDB
  5584                           fsr2h	equ	0xFDA
  5585                           fsr2l	equ	0xFD9
  5586                           status	equ	0xFD8
  5587                           stkptr	equ	0xFFC
  5588                           pclatu	equ	0xFFB
  5589                           pclath	equ	0xFFA
  5590                           tblptru	equ	0xFF8
  5591                           tblptrh	equ	0xFF7
  5592                           tblptrl	equ	0xFF6
  5593                           tablat	equ	0xFF5
  5594                           prodh	equ	0xFF4
  5595                           prodl	equ	0xFF3
  5596                           intcon	equ	0xFF2
  5597                           postinc0	equ	0xFEE
  5598                           fsr0h	equ	0xFEA
  5599                           fsr0l	equ	0xFE9
  5600                           wreg	equ	0xFE8
  5601                           indf1	equ	0xFE7
  5602                           postinc1	equ	0xFE6
  5603                           fsr1h	equ	0xFE2
  5604                           fsr1l	equ	0xFE1
  5605                           indf2	equ	0xFDF
  5606                           postinc2	equ	0xFDE
  5607                           plusw2	equ	0xFDB
  5608                           fsr2h	equ	0xFDA
  5609                           fsr2l	equ	0xFD9
  5610                           status	equ	0xFD8
  5611                           
  5612                           	psect	rparam
  5613  0000                     stkptr	equ	0xFFC
  5614                           pclatu	equ	0xFFB
  5615                           pclath	equ	0xFFA
  5616                           tblptru	equ	0xFF8
  5617                           tblptrh	equ	0xFF7
  5618                           tblptrl	equ	0xFF6
  5619                           tablat	equ	0xFF5
  5620                           prodh	equ	0xFF4
  5621                           prodl	equ	0xFF3
  5622                           intcon	equ	0xFF2
  5623                           postinc0	equ	0xFEE
  5624                           fsr0h	equ	0xFEA
  5625                           fsr0l	equ	0xFE9
  5626                           wreg	equ	0xFE8
  5627                           indf1	equ	0xFE7
  5628                           postinc1	equ	0xFE6
  5629                           fsr1h	equ	0xFE2
  5630                           fsr1l	equ	0xFE1
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           plusw2	equ	0xFDB
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    20
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     61      76
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_PID_LineFollowing
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _check_sensors->_adc
    _adc->_ReadADC
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul
    _LVtrap->_printf

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11540
                                             58 COMRAM     3     3      0
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3980
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      37
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      37
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     132
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    6086
                                             51 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                         9     7      2    3435
                                             42 COMRAM     9     7      2
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1183
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     812
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     324
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     324
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3D      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      34        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 02 20:43:47 2020

                         _STKPTRbits 000FFC                                    _I 0045  
                                 l24 1F7E                                   l86 1536  
                                 u60 1F74                         ___awdiv@sign 0028  
                ___wmul@multiplicand 001F                          __CFG_BORV$0 000000  
                                l130 1458                                  l122 1300  
                                l134 14C8                                  l320 1D7A  
                                l340 17FC                                  l341 17A2  
                                l333 1C3C                                  l510 1E2A  
                                l511 1E2C                                  l417 1F78  
                                l337 1C4C                                  l346 1810  
                                l540 1EBE                                  l382 1D52  
                                l367 1AB4                                  l607 1DA2  
                                l447 1F5C                                  l439 1B60  
                                l800 18A6                                  l570 1A7C  
                                l539 1EBC                                  l571 1A86  
                                l572 1A88                                  l565 1A60  
                                l581 1EEE                                  l574 1AA2  
                                l590 1DEE                                  l487 1CE4  
                                l488 1CEE                                  l489 1CF0  
                                l569 1A7A                                  l676 16A0  
                                l599 1DC8                                  _PR2 000FCB  
                                u810 1942                                  u830 1958  
                                u850 1970                                  u908 19A8  
                                u828 1944                                  u870 198A  
                                u848 195A                                  u890 19A6  
                                u868 1972                                  u888 198C  
               __size_of_WriteTimer0 0012                                  _adc 1D54  
                                wreg 000FE8                      ReadTimer0@timer 0011  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               ?_adc 0013                                 l1125 1BB6  
                               l1223 1ADE                                 l1135 1C02  
                               l1321 1EEA                                 l1227 1AF6  
                               l2301 14CC                                 l1317 1EE6  
                               l1261 1DDE                                 l2231 1850  
                               l2143 17F0                                 l2233 185A  
                               l2225 183A                                 l2321 1A64  
                               l2313 1A50                                 l1265 1DE2  
                               l1273 1DEA                                 l1353 1DB8  
                               l1361 1DC0                                 l2251 189C  
                               l2243 1880                                 l2235 1862  
                               l2219 1828                                 l2411 161E  
                               l2139 17D8                                 l1515 1D38  
                               l2413 162C                                 l2405 15FC  
                               l2317 1A58                                 l2309 1A46  
                               l1269 1DE6                                 l1357 1DBC  
                               l1365 1DC4                                 l2247 188C  
                               l2431 168E                                 l2423 1666  
                               l2415 1634                                 l1519 1D4C  
                               l2097 1D04                                 l2265 13B6  
                               l2441 1B7A                                 l1641 1CE0  
                               l2329 1A72                                 l2361 1C2C  
                               l2099 1D0C                                 l2291 1498  
                               l2275 1428                                 l2427 1676  
                               l2443 1B84                                 l2285 145C  
                               l2269 1404                                 l2453 1BAA  
                               l2445 1B8C                                 l2461 1BCE  
                               l2541 113E                                 l2533 10F8  
                               l2357 1C1C                                 l2295 14B2  
                               l2279 1442                                 l2463 1BD8  
                               l2527 10C6                                 l2551 11A4  
                               l2367 1C46                                 l2465 1BE0  
                               l2545 1160                                 l2537 111E  
                               l2529 10D6                                 l2385 1D62  
                               l2539 112E                                 l2651 1532  
                               l2643 1520                                 l2469 1BF6  
                               l2549 1186                                 l2653 153A  
                               l2645 1526                                 l2399 15E2  
                               l2559 1274                                 l2655 153E  
                               l2647 152A                                 l2663 154E  
                               l2657 1542                                 l2649 152E  
                               l2665 159E                                 l2659 1548  
                    __end_of_BORtask 1E10                                 STR_1 1015  
                               STR_2 107E                                 STR_3 1078  
                               STR_4 1068                                 STR_5 105F  
                               STR_6 1055                                 STR_7 1071  
                               u2010 1732                                 u2030 1758  
                               u2008 170C                                 u2028 1734  
                               u1600 1466                                 u2048 175A  
                               u1455 1C58                                 u1465 1C92  
                               u1650 14D6                                 u1618 1468  
                               u1668 14D8                                 u1950 16BA  
                               u1970 16E0                                 u1990 170A  
                               u1968 16BC                                 u1988 16E2  
                               _TMR2 000FCC                         __CFG_WDTPS$8 000000  
                   ??_initialization 001C                                 _main 14E4  
              __end_of_check_sensors 1766                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 pclat 000FFA  
                      __CFG_BOREN$ON 000000                      __end_of_PORtask 1812  
                               prodh 000FF4                                 prodl 000FF3  
         MotorControl@delta_velocity 002B                                 start 0018  
                    __end_of_WDTtask 1E8A                         ___param_bank 000010  
                    __end_of_BusyADC 1F7A                      __end_of_ReadADC 1F5E  
                    __end_of_OpenADC 1B64                                ??_adc 0015  
             PID_LineFollowing@error 0034                      __end_of___aldiv 16A2  
                              ?_main 0001                      __end_of___awdiv 18A8  
                              _T0CON 000FD5                      ___awdiv@divisor 0025  
                              _T2CON 000FCA                      __end_of___lwdiv 1BC0  
                    __end_of___lwmod 1C0C                      ___awdiv@counter 0027  
                 __size_of_RESETtask 001C                                _RCSTA 000FAB  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _SPBRG 000FAF                                _PORTD 000F83  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TXSTA 000FAC  
                    __end_of_isWDTTO 1DCA              __end_of_openPORTCforPWM 1F6C  
                              _isBOR 1EDA                                _isPOR 1DCA  
                              _gtrap 1AA4                                _putch 1FA8  
                    __end_of_openLVD 1EDA                           _ConvertADC 1FA4  
                              tablat 000FF5           __size_of_openPORTCforUSART 0006  
                              plusw2 000FDB                                status 000FD8  
                        ?_STKFULtask 0001                       __CFG_MCLRE$OFF 000000  
                    __initialization 1F06                         __end_of_main 15C4  
                         _ReadTimer0 1F3C                     __end_of_OpenPWM1 1F2A  
                   __end_of_OpenPWM2 1CFA                               ??_main 003B  
                      __activetblptr 000003                           _SetChanADC 1EF0  
                          ??_BORtask 0014                               ?_isBOR 0001  
                             ?_isPOR 0001                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_gtrap 0001                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                     ___awdiv@dividend 0023  
                             ?_putch 0001                            ??_PORtask 0014  
                          ??_WDTtask 0014                           _OpenTimer0 1E10  
                         _OpenTimer2 1EA6                               _TMR0IF 007F92  
                             _SPBRGH 000FB0                   __size_of_SetDCPWM1 003A  
                 __size_of_SetDCPWM2 003A                            ??_BusyADC 000F  
                          ??_ReadADC 0011                               _LVtrap 1E30  
                  __end_of_RESETtask 1EA6                            ??_OpenADC 0011  
                       ?_reset_codes 0001                     __end_of_high_isr 1A34  
                 __size_of_OpenUSART 0070                            ??___aldiv 0017  
                             ___wmul 1D7C                            ??___awdiv 0027  
                     __CFG_STVREN$ON 000000                     OpenTimer0@config 000F  
                          ??___lwdiv 0017                            ??___lwmod 0017  
                   OpenTimer2@config 000F                               clear_0 1F0C  
                   ___awdiv@quotient 0029                            ??_isWDTTO 000F  
                             _printf 1CFA                     __end_of_set_leds 19B6  
                          ??_openLVD 000F                  __size_of_STKFULtask 001E  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   ?_openPORTCforPWM 0001                               putch@c 0001  
                        ?_ConvertADC 0001                           __accesstop 0080  
            __end_of__initialization 1F12                           adc@channel 0015  
                      ___rparam_used 000001                __end_of_set_osc_32MHz 1D54  
                     __pcstackCOMRAM 0001                          ?_ReadTimer0 000F  
                      __end_of_isBOR 1EF0                        __end_of_isPOR 1DF0  
                      __end_of_gtrap 1B06                        __end_of_putch 1FAA  
                  __end_of_SetDCPWM1 1CC2                    __end_of_SetDCPWM2 1C88  
                      ??_StatusReset 000F                          ?_SetChanADC 0001  
                      ?_lvd_flag_set 0001                              ??_isBOR 000F  
                            ??_isPOR 000F                    __end_of_OpenUSART 1AA4  
                            ??_gtrap 000F                              ??_putch 000F  
                        ?_OpenTimer0 0001                          ?_OpenTimer2 0001  
                          ?_OpenPWM1 0001                            ?_OpenPWM2 0001  
                            ?_LVtrap 0001                        ?_MotorControl 002B  
                 __end_of_D_CONSTANT 1011                   __size_of_openPORTA 0006  
                 __size_of_openPORTB 0006                   __size_of_openPORTD 0006  
                 __size_of_openPORTE 0006                              ?___wmul 001D  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                   WriteTimer0@timer 0011                        ??_WriteTimer0 0011  
                __size_of_ConvertADC 0004                           _flag_count 0047  
                            ?_printf 000F                              _BORtask 1DF0  
                     ??_lvd_flag_set 000F                            ?_high_isr 0001  
                __end_of_StatusReset 1F86                  __size_of_ReadTimer0 0012  
                            _PORtask 1766                   __end_of_I_CONSTANT 1013  
                            _WDTtask 1E6E                              _BusyADC 1F6C  
                            _ReadADC 1F4E                           ??_OpenPWM1 000F  
                         ??_OpenPWM2 000F                         ??_STKFULtask 0014  
                            _SeeLine 004B                       ??_MotorControl 002D  
                            _OpenADC 1B06                      __size_of_LVtrap 0020  
                            __Hparam 0000                  __size_of_SetChanADC 0016  
                            __Lparam 0000                            ?_set_leds 0001  
               __size_of_reset_codes 0042                              ___aldiv 15C4  
                            ___awdiv 1812                      __size_of___wmul 0028  
                            ___lwdiv 1B64                              ___lwmod 1BC0  
                       __psmallconst 1000                              __pcinit 1F06  
                            _isWDTTO 1DA4                              __ramtop 1000  
                __size_of_OpenTimer0 0020                  __size_of_OpenTimer2 001C  
                            __ptext0 14E4                              __ptext1 1938  
                            __ptext2 1F7A                              __ptext3 18A8  
                            __ptext4 1D28                              __ptext5 1C0C  
                            __ptext6 1DA4                              __ptext7 1DCA  
                            __ptext8 1EDA                              __ptext9 1E6E  
                    __size_of_printf 002E                            _T0CONbits 000FD5  
                       __size_of_adc 0028                            _T2CONbits 000FCA  
             __size_of_check_sensors 00C4                              _openLVD 1EC2  
                   ___aldiv@dividend 000F                  __end_of_WriteTimer0 1F3C  
                 __end_of_STKFULtask 1E6E                   __end_of_P_CONSTANT 1015  
                  __end_of_openPORTA 1F9E                    __end_of_openPORTB 1F98  
                  __end_of_openPORTD 1FA4                    __end_of_openPORTE 1F8C  
                     OpenADC@config2 000F                           ??_high_isr 0001  
                     __pintcode_body 19B6                 end_of_initialization 1F12  
                            int_func 19B6                           ??_set_leds 000F  
                          _RCSTAbits 000FAB                              printf@c 0013  
                            printf@f 000F                     ___aldiv@quotient 0019  
                          _RESETtask 1E8A                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
            __size_of_initialization 0090                            _PORTCbits 000F82  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                     set_osc_32MHz@i 000F                          _StatusReset 1F80  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                       ??_ConvertADC 000F          MotorControl@left_duty_cycle 0030  
                  _PID_LineFollowing 1086        MotorControl@left_dir_modifier 002E  
                 ?_PID_LineFollowing 0034                            _TXSTAbits 000FAC  
                      _check_sensors 16A2                       __end_of_LVtrap 1E50  
               __end_of_lvd_flag_set 1F80       MotorControl@right_dir_modifier 002F  
                ??_PID_LineFollowing 0036                         ??_ReadTimer0 0011  
                         ?_RESETtask 0001                       __end_of___wmul 1DA4  
                        _WriteTimer0 1F2A                   __end_of_ConvertADC 1FA8  
                       ??_SetChanADC 000F                       __end_of_printf 1D28  
                start_initialization 1F06                 __end_of_MotorControl 14E4  
                          _SetDCPWM1 1C88                            _SetDCPWM2 1C4E  
                    SetDCPWM1@DCycle 0013                          __end_of_adc 1D7C  
                    SetDCPWM2@DCycle 0013            __end_of_PID_LineFollowing 1354  
                       ??_OpenTimer0 000F                         ??_OpenTimer2 000F  
                 __end_of_ReadTimer0 1F4E                            _OpenUSART 1A34  
           __size_of_openPORTCforPWM 000E                       ?_check_sensors 0001  
                   __CFG_OSC$INTIO67 000000                             ??_LVtrap 0014  
                 __end_of_SetChanADC 1F06                    __size_of_OpenPWM1 0012  
                  __size_of_OpenPWM2 0038                             ??___wmul 0021  
                           ??_printf 0011                           gtrap@count 000F  
                 __end_of_OpenTimer0 1E30                   __end_of_OpenTimer2 1EC2  
                        __pbssCOMRAM 003E                             ?_BORtask 0001  
                         ?_SetDCPWM1 000F                           ?_SetDCPWM2 000F  
                      PORtask@count1 0014                        PORtask@count2 0018  
             __size_of_set_osc_32MHz 002C                             ?_PORtask 0001  
                           ?_WDTtask 0001                           ?_OpenUSART 000F  
                  __size_of_high_isr 1A2C                             ?_BusyADC 0001  
                           ?_ReadADC 000F                    OpenADC@portconfig 0010  
                           ?_OpenADC 000F                     ___lwdiv@dividend 0013  
                          __pintcode 0008                          ??_RESETtask 0014  
                           ?___aldiv 000F                             ?___awdiv 0023  
                     _initialization 18A8                    __size_of_set_leds 007E  
                           ?___lwdiv 0013                             ?___lwmod 0013  
                           ?_isWDTTO 0001                          __smallconst 1000  
                  WriteTimer0@timer0 000F                   PID_LineFollowing@D 0041  
                           ?_openLVD 0001           __size_of_PID_LineFollowing 02CE  
                     __size_of_isBOR 0016                     ___lwdiv@quotient 0017  
                     __size_of_isPOR 0026                       __size_of_gtrap 0062  
                     __size_of_putch 0002                      ??_check_sensors 0016  
                    ___aldiv@divisor 0013                            _openPORTA 1F98  
                          _openPORTB 1F92                            _openPORTD 1F9E  
                          _openPORTE 1F86                      ___aldiv@counter 0017  
                     ___wmul@product 0021                        OpenADC@config 0013  
              __size_of_lvd_flag_set 0006                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
                      ??_reset_codes 001C                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1               __end_of_initialization 1938  
                           _RCONbits 000FD0                    ??_openPORTCforPWM 000F  
                      _set_osc_32MHz 1D28                            main@F4186 003E  
__end_ofset_motor_speed@motor_speeds 100F          set_motor_speed@motor_speeds 1001  
                        _HLVDCONbits 000FD2                            _threshold 0049  
              __size_of_MotorControl 0190                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 001D                         ?_StatusReset 0001  
                          main@error 003B         MotorControl@right_duty_cycle 0032  
                        ??_SetDCPWM1 0011                          ??_SetDCPWM2 0011  
                   __size_of_BORtask 0020                         _lvd_flag_set 1F7A  
                   __size_of_PORtask 00AC                          ??_OpenUSART 0011  
                 SetDCPWM1@dutycycle 000F                           ?_openPORTA 0001  
                         ?_openPORTB 0001                           ?_openPORTD 0001  
                         ?_openPORTE 0001                     __size_of_WDTtask 001C  
                    OpenUSART@config 0011                             _OpenPWM1 1F18  
                           _OpenPWM2 1CC2      PID_LineFollowing@delta_velocity 0043  
                   __size_of_BusyADC 000E                     __size_of_ReadADC 0010  
                           __Hrparam 0000                     __size_of_OpenADC 005E  
                       _MotorControl 1354                      ?_initialization 0001  
                           __Lrparam 0000                   SetDCPWM2@dutycycle 000F  
                     ?_set_osc_32MHz 0001                     __size_of___aldiv 00DE  
                __end_of_reset_codes 1C4E                     __size_of___awdiv 0096  
                   __size_of___lwdiv 005C                     __size_of___lwmod 004C  
                       ?_WriteTimer0 000F                       OpenPWM2@ccp2mx 0010  
                   __size_of_isWDTTO 0026                       OpenPWM1@period 000F  
                     OpenPWM2@period 000F                      ___lwdiv@divisor 0015  
                   __size_of_openLVD 0018                      ___lwdiv@counter 0019  
                           __ptext10 1E50                             __ptext11 1E8A  
                           __ptext20 1EC2                             __ptext12 1766  
                           __ptext21 1A34                             __ptext13 1DF0  
                           __ptext30 1FA4                             __ptext22 1EA6  
                           __ptext14 1F80                             __ptext31 1F6C  
                           __ptext23 1CC2                             __ptext15 1F86  
                           __ptext40 1812                             __ptext32 1F2A  
                           __ptext24 1F18                             __ptext16 1F8C  
                           __ptext41 1C4E                             __ptext33 1086  
                           __ptext25 1B06                             __ptext17 1F5E  
                           __ptext42 1C88                             __ptext34 1BC0  
                           __ptext26 16A2                             __ptext18 1F92  
                           __ptext43 1E10                             __ptext35 1B64  
                           __ptext27 1D54                             __ptext19 1F98  
                           __ptext44 1E30                             __ptext36 15C4  
                           __ptext28 1EF0                             __ptext45 1CFA  
                           __ptext37 1F3C                             __ptext29 1F4E  
                           __ptext46 1FA8                             __ptext38 1354  
                           __ptext47 1F9E                             __ptext39 1D7C  
                           __ptext48 1AA4                             _high_isr 0008  
                      __size_of_main 00E0                             _lvd_flag 004C  
                           _set_leds 1938                          _OSCTUNEbits 000F9B  
                         _INTCONbits 000FF2                           _D_CONSTANT 100F  
                     OpenUSART@spbrg 000F                             intlevel2 0000  
                        ??_openPORTA 000F                          ??_openPORTB 000F  
                        ??_openPORTD 000F                          ??_openPORTE 000F  
                   ___lwmod@dividend 0013                    _openPORTCforUSART 1F8C  
                  SetChanADC@channel 0010                      ??_set_osc_32MHz 000F  
                        _reset_codes 1C0C                           _OSCCONbits 000FD3  
                 ?_openPORTCforUSART 0001                           _I_CONSTANT 1011  
                           printf@ap 0011                  ??_openPORTCforUSART 000F  
                    ___lwmod@divisor 0015                      ___lwmod@counter 0017  
                       ___aldiv@sign 0018                 __size_of_StatusReset 0006  
                    _openPORTCforPWM 1F5E            __end_of_openPORTCforUSART 1F92  
                         _STKFULtask 1E50                           _P_CONSTANT 1013  
