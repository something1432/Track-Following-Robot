

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 02 23:26:50 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	opt stack 0
    69  001000  00                 	db	0
    70  001001                     set_motor_speed@motor_speeds:
    71                           	opt stack 0
    72  001001  FCE0               	dw	64736
    73  001003  FD2B               	dw	64811
    74  001005  FD76               	dw	64886
    75  001007  0000               	dw	0
    76  001009  028A               	dw	650
    77  00100B  02D5               	dw	725
    78  00100D  0320               	dw	800
    79  00100F                     __end_ofset_motor_speed@motor_speeds:
    80                           	opt stack 0
    81  00100F                     _D_CONSTANT:
    82                           	opt stack 0
    83  00100F  FFFF               	dw	65535
    84  001011                     __end_of_D_CONSTANT:
    85                           	opt stack 0
    86  001011                     _I_CONSTANT:
    87                           	opt stack 0
    88  001011  04E2               	dw	1250
    89  001013                     __end_of_I_CONSTANT:
    90                           	opt stack 0
    91  001013                     _P_CONSTANT:
    92                           	opt stack 0
    93  001013  0096               	dw	150
    94  001015                     __end_of_P_CONSTANT:
    95                           	opt stack 0
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _CCP1CON	set	4029
   103  0000                     _CCP2CON	set	4026
   104  0000                     _CCPR1L	set	4030
   105  0000                     _CCPR2L	set	4027
   106  0000                     _HLVDCONbits	set	4050
   107  0000                     _INTCONbits	set	4082
   108  0000                     _IPR2bits	set	4002
   109  0000                     _OSCCONbits	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIE2bits	set	4000
   113  0000                     _PIR1bits	set	3998
   114  0000                     _PIR2bits	set	4001
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTD	set	3971
   117  0000                     _PORTDbits	set	3971
   118  0000                     _PORTEbits	set	3972
   119  0000                     _PR2	set	4043
   120  0000                     _RCONbits	set	4048
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _STKPTRbits	set	4092
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _T2CON	set	4042
   129  0000                     _T2CONbits	set	4042
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR2	set	4044
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISE	set	3990
   140  0000                     _TXSTA	set	4012
   141  0000                     _TXSTAbits	set	4012
   142  0000                     _TMR0IF	set	32658
   143  001015                     STR_1:
   144  001015  0A                 	db	10
   145  001016  0D                 	db	13
   146  001017  4B                 	db	75	;'K'
   147  001018  77                 	db	119	;'w'
   148  001019  61                 	db	97	;'a'
   149  00101A  6E                 	db	110	;'n'
   150  00101B  74                 	db	116	;'t'
   151  00101C  6C                 	db	108	;'l'
   152  00101D  65                 	db	101	;'e'
   153  00101E  6E                 	db	110	;'n'
   154  00101F  20                 	db	32
   155  001020  41                 	db	65	;'A'
   156  001021  50                 	db	80	;'P'
   157  001022  53                 	db	83	;'S'
   158  001023  43                 	db	67	;'C'
   159  001024  31                 	db	49	;'1'
   160  001025  32                 	db	50	;'2'
   161  001026  39                 	db	57	;'9'
   162  001027  39                 	db	57	;'9'
   163  001028  20                 	db	32
   164  001029  73                 	db	115	;'s'
   165  00102A  69                 	db	105	;'i'
   166  00102B  6D                 	db	109	;'m'
   167  00102C  70                 	db	112	;'p'
   168  00102D  6C                 	db	108	;'l'
   169  00102E  65                 	db	101	;'e'
   170  00102F  20                 	db	32
   171  001030  63                 	db	99	;'c'
   172  001031  75                 	db	117	;'u'
   173  001032  72                 	db	114	;'r'
   174  001033  76                 	db	118	;'v'
   175  001034  65                 	db	101	;'e'
   176  001035  20                 	db	32
   177  001036  66                 	db	102	;'f'
   178  001037  6F                 	db	111	;'o'
   179  001038  6C                 	db	108	;'l'
   180  001039  6C                 	db	108	;'l'
   181  00103A  6F                 	db	111	;'o'
   182  00103B  77                 	db	119	;'w'
   183  00103C  65                 	db	101	;'e'
   184  00103D  72                 	db	114	;'r'
   185  00103E  20                 	db	32
   186  00103F  2D                 	db	45
   187  001040  2D                 	db	45
   188  001041  20                 	db	32
   189  001042  77                 	db	119	;'w'
   190  001043  69                 	db	105	;'i'
   191  001044  74                 	db	116	;'t'
   192  001045  68                 	db	104	;'h'
   193  001046  20                 	db	32
   194  001047  65                 	db	101	;'e'
   195  001048  72                 	db	114	;'r'
   196  001049  72                 	db	114	;'r'
   197  00104A  6F                 	db	111	;'o'
   198  00104B  72                 	db	114	;'r'
   199  00104C  20                 	db	32
   200  00104D  63                 	db	99	;'c'
   201  00104E  6F                 	db	111	;'o'
   202  00104F  64                 	db	100	;'d'
   203  001050  65                 	db	101	;'e'
   204  001051  73                 	db	115	;'s'
   205  001052  0A                 	db	10
   206  001053  0D                 	db	13
   207  001054  00                 	db	0
   208  001055                     STR_6:
   209  001055  20                 	db	32
   210  001056  3C                 	db	60	;'<'
   211  001057  72                 	db	114	;'r'
   212  001058  65                 	db	101	;'e'
   213  001059  73                 	db	115	;'s'
   214  00105A  65                 	db	101	;'e'
   215  00105B  74                 	db	116	;'t'
   216  00105C  3E                 	db	62	;'>'
   217  00105D  20                 	db	32
   218  00105E  00                 	db	0
   219  00105F                     STR_5:
   220  00105F  3C                 	db	60	;'<'
   221  001060  53                 	db	83	;'S'
   222  001061  54                 	db	84	;'T'
   223  001062  4B                 	db	75	;'K'
   224  001063  46                 	db	70	;'F'
   225  001064  55                 	db	85	;'U'
   226  001065  4C                 	db	76	;'L'
   227  001066  3E                 	db	62	;'>'
   228  001067  00                 	db	0
   229  001068                     STR_4:
   230  001068  3C                 	db	60	;'<'
   231  001069  57                 	db	87	;'W'
   232  00106A  44                 	db	68	;'D'
   233  00106B  54                 	db	84	;'T'
   234  00106C  20                 	db	32
   235  00106D  54                 	db	84	;'T'
   236  00106E  4F                 	db	79	;'O'
   237  00106F  3E                 	db	62	;'>'
   238  001070  00                 	db	0
   239  001071                     STR_7:
   240  001071  5C                 	db	92	;'\'
   241  001072  3C                 	db	60	;'<'
   242  001073  4C                 	db	76	;'L'
   243  001074  56                 	db	86	;'V'
   244  001075  44                 	db	68	;'D'
   245  001076  3E                 	db	62	;'>'
   246  001077  00                 	db	0
   247  001078                     STR_3:
   248  001078  3C                 	db	60	;'<'
   249  001079  42                 	db	66	;'B'
   250  00107A  4F                 	db	79	;'O'
   251  00107B  52                 	db	82	;'R'
   252  00107C  3E                 	db	62	;'>'
   253  00107D  00                 	db	0
   254  00107E                     STR_2:
   255  00107E  3C                 	db	60	;'<'
   256  00107F  50                 	db	80	;'P'
   257  001080  4F                 	db	79	;'O'
   258  001081  52                 	db	82	;'R'
   259  001082  3E                 	db	62	;'>'
   260  001083  00                 	db	0
   261                           
   262                           ; #config settings
   263  001084  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  00207E                     __pcinit:
   267                           	opt stack 0
   268  00207E                     start_initialization:
   269                           	opt stack 0
   270  00207E                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (13 bytes)
   274  00207E  EE00  F040         	lfsr	0,__pbssCOMRAM
   275  002082  0E0D               	movlw	13
   276  002084                     clear_0:
   277  002084  6AEE               	clrf	postinc0,c
   278  002086  06E8               	decf	wreg,f,c
   279  002088  E1FD               	bnz	clear_0
   280  00208A                     end_of_initialization:
   281                           	opt stack 0
   282  00208A                     __end_of__initialization:
   283                           	opt stack 0
   284  00208A  0100               	movlb	0
   285  00208C  EFE1  F00A         	goto	_main	;jump to C main() function
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssCOMRAM
   290  000040                     __pbssCOMRAM:
   291                           	opt stack 0
   292  000040                     main@F4183:
   293                           	opt stack 0
   294  000040                     	ds	3
   295  000043                     PID_LineFollowing@D:
   296                           	opt stack 0
   297  000043                     	ds	2
   298  000045                     PID_LineFollowing@delta_velocity:
   299                           	opt stack 0
   300  000045                     	ds	2
   301  000047                     _I:
   302                           	opt stack 0
   303  000047                     	ds	2
   304  000049                     _threshold:
   305                           	opt stack 0
   306  000049                     	ds	2
   307  00004B                     _SeeLine:
   308                           	opt stack 0
   309  00004B                     	ds	1
   310  00004C                     _lvd_flag:
   311                           	opt stack 0
   312  00004C                     	ds	1
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	cstackCOMRAM
   317  000001                     __pcstackCOMRAM:
   318                           	opt stack 0
   319  000001                     ??_high_isr:
   320  000001                     
   321                           ; 1 bytes @ 0x0
   322  000001                     	ds	14
   323  00000F                     ??_set_leds:
   324  00000F                     ??_SetChanADC:
   325  00000F                     ?_printf:
   326                           	opt stack 0
   327  00000F                     ?_ReadTimer0:
   328                           	opt stack 0
   329  00000F                     ?_ReadADC:
   330                           	opt stack 0
   331  00000F                     ?___aldiv:
   332                           	opt stack 0
   333  00000F                     OpenADC@config2:
   334                           	opt stack 0
   335  00000F                     OpenPWM1@period:
   336                           	opt stack 0
   337  00000F                     OpenPWM2@period:
   338                           	opt stack 0
   339  00000F                     OpenTimer0@config:
   340                           	opt stack 0
   341  00000F                     OpenTimer2@config:
   342                           	opt stack 0
   343  00000F                     set_osc_32MHz@i:
   344                           	opt stack 0
   345  00000F                     printf@f:
   346                           	opt stack 0
   347  00000F                     SetDCPWM1@dutycycle:
   348                           	opt stack 0
   349  00000F                     SetDCPWM2@dutycycle:
   350                           	opt stack 0
   351  00000F                     WriteTimer0@timer0:
   352                           	opt stack 0
   353  00000F                     OpenUSART@spbrg:
   354                           	opt stack 0
   355  00000F                     gtrap@count:
   356                           	opt stack 0
   357  00000F                     ___aldiv@dividend:
   358                           	opt stack 0
   359                           
   360                           ; 4 bytes @ 0xE
   361  00000F                     	ds	1
   362  000010                     OpenADC@portconfig:
   363                           	opt stack 0
   364  000010                     SetChanADC@channel:
   365                           	opt stack 0
   366  000010                     OpenPWM2@ccp2mx:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0xF
   370  000010                     	ds	1
   371  000011                     ??_SetDCPWM2:
   372  000011                     ??_SetDCPWM1:
   373  000011                     ??_OpenADC:
   374  000011                     ??_ReadADC:
   375  000011                     OpenUSART@config:
   376                           	opt stack 0
   377  000011                     printf@ap:
   378                           	opt stack 0
   379  000011                     ReadTimer0@timer:
   380                           	opt stack 0
   381  000011                     WriteTimer0@timer:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385  000011                     	ds	2
   386  000013                     ?_adc:
   387                           	opt stack 0
   388  000013                     ?___lwdiv:
   389                           	opt stack 0
   390  000013                     ?___lwmod:
   391                           	opt stack 0
   392  000013                     printf@c:
   393                           	opt stack 0
   394  000013                     OpenADC@config:
   395                           	opt stack 0
   396  000013                     SetDCPWM1@DCycle:
   397                           	opt stack 0
   398  000013                     SetDCPWM2@DCycle:
   399                           	opt stack 0
   400  000013                     ___lwdiv@dividend:
   401                           	opt stack 0
   402  000013                     ___lwmod@dividend:
   403                           	opt stack 0
   404  000013                     ___aldiv@divisor:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x12
   408  000013                     	ds	1
   409  000014                     PORtask@count1:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x13
   413  000014                     	ds	1
   414  000015                     adc@channel:
   415                           	opt stack 0
   416  000015                     ___lwdiv@divisor:
   417                           	opt stack 0
   418  000015                     ___lwmod@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x14
   422  000015                     	ds	1
   423  000016                     ??_check_sensors:
   424                           
   425                           ; 0 bytes @ 0x15
   426  000016                     	ds	1
   427  000017                     ___aldiv@counter:
   428                           	opt stack 0
   429  000017                     ___lwmod@counter:
   430                           	opt stack 0
   431  000017                     ___lwdiv@quotient:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x16
   435  000017                     	ds	1
   436  000018                     ___aldiv@sign:
   437                           	opt stack 0
   438  000018                     PORtask@count2:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x17
   442  000018                     	ds	1
   443  000019                     ___lwdiv@counter:
   444                           	opt stack 0
   445  000019                     ___aldiv@quotient:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x18
   449  000019                     	ds	3
   450  00001C                     
   451                           ; 0 bytes @ 0x1B
   452  00001C                     	ds	1
   453  00001D                     ?___wmul:
   454                           	opt stack 0
   455  00001D                     ___wmul@multiplier:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1C
   459  00001D                     	ds	2
   460  00001F                     ___wmul@multiplicand:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1E
   464  00001F                     	ds	2
   465  000021                     ___wmul@product:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x20
   469  000021                     	ds	2
   470  000023                     ?___awdiv:
   471                           	opt stack 0
   472  000023                     ___awdiv@dividend:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x22
   476  000023                     	ds	2
   477  000025                     ___awdiv@divisor:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x24
   481  000025                     	ds	2
   482  000027                     ___awdiv@counter:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x26
   486  000027                     	ds	1
   487  000028                     ___awdiv@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x27
   491  000028                     	ds	1
   492  000029                     ___awdiv@quotient:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x28
   496  000029                     	ds	2
   497  00002B                     MotorControl@delta_velocity:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x2A
   501  00002B                     	ds	2
   502  00002D                     ??_MotorControl:
   503                           
   504                           ; 0 bytes @ 0x2C
   505  00002D                     	ds	1
   506  00002E                     MotorControl@left_dir_modifier:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x2D
   510  00002E                     	ds	1
   511  00002F                     MotorControl@right_dir_modifier:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x2E
   515  00002F                     	ds	1
   516  000030                     MotorControl@left_duty_cycle:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x2F
   520  000030                     	ds	2
   521  000032                     MotorControl@right_duty_cycle:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x31
   525  000032                     	ds	2
   526  000034                     ??_SharpTurn:
   527  000034                     PID_LineFollowing@error:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x33
   531  000034                     	ds	1
   532  000035                     SharpTurn@direction:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x34
   536  000035                     	ds	1
   537  000036                     ??_PID_LineFollowing:
   538  000036                     SharpTurn@delta_velocity:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x35
   542  000036                     	ds	2
   543  000038                     GetBackonTrack@error:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x37
   547  000038                     	ds	2
   548  00003A                     ??_GetBackonTrack:
   549                           
   550                           ; 0 bytes @ 0x39
   551  00003A                     	ds	1
   552  00003B                     _GetBackonTrack$454:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x3A
   556  00003B                     	ds	1
   557  00003C                     GetBackonTrack@i:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x3B
   561  00003C                     	ds	1
   562  00003D                     main@error:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x3C
   566  00003D                     	ds	3
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 20 in file "../Robot Files/main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  error           3   60[COMRAM] char [3]
   580 ;; Return value:  Size  Location     Type
   581 ;;		None               void
   582 ;; Registers used:
   583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        3 bytes
   594 ;; Hardware stack levels required when called:    6
   595 ;; This function calls:
   596 ;;		_GetBackonTrack
   597 ;;		_LVtrap
   598 ;;		_OpenTimer0
   599 ;;		_PID_LineFollowing
   600 ;;		_WriteTimer0
   601 ;;		_check_sensors
   602 ;;		_initialization
   603 ;;		_lvd_flag_set
   604 ;;		_printf
   605 ;;		_set_leds
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text0
   612  0015C2                     __ptext0:
   613                           	opt stack 0
   614  0015C2                     _main:
   615                           	opt stack 25
   616                           
   617                           ;main.c: 22: signed char error[3]={0};
   618                           
   619                           ;incstack = 0
   620  0015C2  C040  F03D         	movff	main@F4183,main@error
   621  0015C6  C041  F03E         	movff	main@F4183+1,main@error+1
   622  0015CA  C042  F03F         	movff	main@F4183+2,main@error+2
   623                           
   624                           ;main.c: 23: initialization();
   625  0015CE  ECBB  F00C         	call	_initialization	;wreg free
   626                           
   627                           ;main.c: 28: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   628  0015D2  0E15               	movlw	low STR_1
   629  0015D4  6E0F               	movwf	printf@f,c
   630  0015D6  0E10               	movlw	high STR_1
   631  0015D8  6E10               	movwf	printf@f+1,c
   632  0015DA  EC28  F00F         	call	_printf	;wreg free
   633  0015DE  0004               	clrwdt		;# 
   634                           
   635                           ;main.c: 31: threshold = 620u;
   636  0015E0  0E02               	movlw	2
   637  0015E2  6E4A               	movwf	_threshold+1,c
   638  0015E4  0E6C               	movlw	108
   639  0015E6  6E49               	movwf	_threshold,c
   640                           
   641                           ;main.c: 35: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   642  0015E8  0E16               	movlw	22
   643  0015EA  ECC4  F00F         	call	_OpenTimer0
   644                           
   645                           ;main.c: 36: WriteTimer0(0);
   646  0015EE  0E00               	movlw	0
   647  0015F0  6E10               	movwf	WriteTimer0@timer0+1,c
   648  0015F2  0E00               	movlw	0
   649  0015F4  6E0F               	movwf	WriteTimer0@timer0,c
   650  0015F6  EC5A  F010         	call	_WriteTimer0	;wreg free
   651                           
   652                           ;main.c: 37: TMR0IF = 0;
   653  0015FA  94F2               	bcf	intcon,2,c	;volatile
   654  0015FC  D000               	goto	l2659
   655  0015FE                     l2659:
   656                           
   657                           ;main.c: 40: {
   658                           ;main.c: 41: check_sensors();
   659  0015FE  ECB8  F00B         	call	_check_sensors	;wreg free
   660                           
   661                           ;main.c: 44: switch(SeeLine.B)
   662  001602  D01A               	goto	l2681
   663  001604                     l2661:
   664                           
   665                           ;main.c: 47: error[2]=1; break;
   666  001604  0E01               	movlw	1
   667  001606  D016               	goto	L7
   668  001608                     l2663:
   669                           
   670                           ;main.c: 49: error[2]=2; break;
   671  001608  0E02               	movlw	2
   672  00160A  D014               	goto	L7
   673  00160C                     l2665:
   674                           
   675                           ;main.c: 51: error[2]=3; break;
   676  00160C  0E03               	movlw	3
   677  00160E  D012               	goto	L7
   678  001610                     l2667:
   679                           
   680                           ;main.c: 53: error[2]=4; break;
   681  001610  0E04               	movlw	4
   682  001612  D010               	goto	L7
   683  001614                     l62:
   684                           
   685                           ;main.c: 55: error[2]=-1; break;
   686  001614  683F               	setf	main@error+2,c
   687  001616  D02E               	goto	l2683
   688  001618                     l2669:
   689                           
   690                           ;main.c: 57: error[2]=-2; break;
   691  001618  0EFE               	movlw	254
   692  00161A  D00C               	goto	L7
   693  00161C                     l2671:
   694                           
   695                           ;main.c: 59: error[2]=-3; break;
   696  00161C  0EFD               	movlw	253
   697  00161E  D00A               	goto	L7
   698  001620                     l2673:
   699                           
   700                           ;main.c: 61: error[2]=-4; break;
   701  001620  0EFC               	movlw	252
   702  001622  D008               	goto	L7
   703  001624                     l2675:
   704                           
   705                           ;main.c: 69: GetBackonTrack(error);
   706  001624  0E3D               	movlw	low main@error
   707  001626  6E38               	movwf	GetBackonTrack@error,c
   708  001628  0E00               	movlw	high main@error
   709  00162A  6E39               	movwf	GetBackonTrack@error+1,c
   710  00162C  EC4D  F00B         	call	_GetBackonTrack	;wreg free
   711  001630  D000               	goto	l2677
   712  001632                     l2677:
   713                           
   714                           ;main.c: 71: error[2]=0; break;
   715  001632  0E00               	movlw	0
   716  001634                     L7:
   717  001634  6E3F               	movwf	main@error+2,c
   718                           
   719                           ;main.c: 72: }
   720  001636  D01E               	goto	l2683
   721  001638                     l2681:
   722  001638  504B               	movf	_SeeLine,w,c
   723  00163A  0B1F               	andlw	31
   724                           
   725                           ; Switch size 1, requested type "space"
   726                           ; Number of cases is 9, Range of values is 0 to 24
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; simple_byte           28    15 (average)
   730                           ;	Chosen strategy is simple_byte
   731  00163C  0A00               	xorlw	0	; case 0
   732  00163E  B4D8               	btfsc	status,2,c
   733  001640  D7F1               	goto	l2675
   734  001642  0A01               	xorlw	1	; case 1
   735  001644  B4D8               	btfsc	status,2,c
   736  001646  D7E4               	goto	l2667
   737  001648  0A03               	xorlw	3	; case 2
   738  00164A  B4D8               	btfsc	status,2,c
   739  00164C  D7DD               	goto	l2663
   740  00164E  0A01               	xorlw	1	; case 3
   741  001650  B4D8               	btfsc	status,2,c
   742  001652  D7DC               	goto	l2665
   743  001654  0A05               	xorlw	5	; case 6
   744  001656  B4D8               	btfsc	status,2,c
   745  001658  D7D5               	goto	l2661
   746  00165A  0A0E               	xorlw	14	; case 8
   747  00165C  B4D8               	btfsc	status,2,c
   748  00165E  D7DC               	goto	l2669
   749  001660  0A04               	xorlw	4	; case 12
   750  001662  B4D8               	btfsc	status,2,c
   751  001664  D7D7               	goto	l62
   752  001666  0A1C               	xorlw	28	; case 16
   753  001668  B4D8               	btfsc	status,2,c
   754  00166A  D7DA               	goto	l2673
   755  00166C  0A08               	xorlw	8	; case 24
   756  00166E  B4D8               	btfsc	status,2,c
   757  001670  D7D5               	goto	l2671
   758  001672  D7DF               	goto	l2677
   759  001674                     l2683:
   760                           
   761                           ;main.c: 73: set_leds();
   762  001674  EC47  F00D         	call	_set_leds	;wreg free
   763                           
   764                           ;main.c: 74: PID_LineFollowing(error);
   765  001678  0E3D               	movlw	low main@error
   766  00167A  6E34               	movwf	PID_LineFollowing@error,c
   767  00167C  0E00               	movlw	high main@error
   768  00167E  6E35               	movwf	PID_LineFollowing@error+1,c
   769  001680  EC43  F008         	call	_PID_LineFollowing	;wreg free
   770  001684  0004               	clrwdt		;# 
   771                           
   772                           ;main.c: 77: if(lvd_flag_set()) LVtrap();
   773  001686  EC79  F010         	call	_lvd_flag_set	;wreg free
   774  00168A  0900               	iorlw	0
   775  00168C  B4D8               	btfsc	status,2,c
   776  00168E  D7B7               	goto	l2659
   777  001690  ECD4  F00F         	call	_LVtrap	;wreg free
   778  001694  D7B4               	goto	l2659
   779  001696  EF0C  F000         	goto	start
   780  00169A                     __end_of_main:
   781                           	opt stack 0
   782                           intcon	equ	0xFF2
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _set_leds *****************
   788 ;; Defined at:
   789 ;;		line 255 in file "../Robot Files/sumovore.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;		None               void
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:        1 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text1
   818  001A8E                     __ptext1:
   819                           	opt stack 0
   820  001A8E                     _set_leds:
   821                           	opt stack 29
   822                           
   823                           ;sumovore.c: 257: PORTDbits.RD0=!SeeLine.b.Left;
   824                           
   825                           ;incstack = 0
   826  001A8E  B84B               	btfsc	_SeeLine,4,c
   827  001A90  D003               	goto	u960
   828  001A92  6A0F               	clrf	??_set_leds& (0+255),c
   829  001A94  2A0F               	incf	??_set_leds& (0+255),f,c
   830  001A96  D001               	goto	u978
   831  001A98                     u960:
   832  001A98  6A0F               	clrf	??_set_leds& (0+255),c
   833  001A9A                     u978:
   834  001A9A  5083               	movf	3971,w,c	;volatile
   835  001A9C  180F               	xorwf	??_set_leds,w,c
   836  001A9E  0BFE               	andlw	-2
   837  001AA0  180F               	xorwf	??_set_leds,w,c
   838  001AA2  6E83               	movwf	3971,c	;volatile
   839                           
   840                           ;sumovore.c: 258: PORTDbits.RD1=!SeeLine.b.CntLeft;
   841  001AA4  B64B               	btfsc	_SeeLine,3,c
   842  001AA6  D003               	goto	u980
   843  001AA8  6A0F               	clrf	??_set_leds& (0+255),c
   844  001AAA  2A0F               	incf	??_set_leds& (0+255),f,c
   845  001AAC  D001               	goto	u998
   846  001AAE                     u980:
   847  001AAE  6A0F               	clrf	??_set_leds& (0+255),c
   848  001AB0                     u998:
   849  001AB0  460F               	rlncf	??_set_leds,f,c
   850  001AB2  5083               	movf	3971,w,c	;volatile
   851  001AB4  180F               	xorwf	??_set_leds,w,c
   852  001AB6  0BFD               	andlw	-3
   853  001AB8  180F               	xorwf	??_set_leds,w,c
   854  001ABA  6E83               	movwf	3971,c	;volatile
   855                           
   856                           ;sumovore.c: 259: PORTDbits.RD2=!SeeLine.b.Center;
   857  001ABC  B44B               	btfsc	_SeeLine,2,c
   858  001ABE  D003               	goto	u1000
   859  001AC0  6A0F               	clrf	??_set_leds& (0+255),c
   860  001AC2  2A0F               	incf	??_set_leds& (0+255),f,c
   861  001AC4  D001               	goto	u1018
   862  001AC6                     u1000:
   863  001AC6  6A0F               	clrf	??_set_leds& (0+255),c
   864  001AC8                     u1018:
   865  001AC8  460F               	rlncf	??_set_leds,f,c
   866  001ACA  460F               	rlncf	??_set_leds,f,c
   867  001ACC  5083               	movf	3971,w,c	;volatile
   868  001ACE  180F               	xorwf	??_set_leds,w,c
   869  001AD0  0BFB               	andlw	-5
   870  001AD2  180F               	xorwf	??_set_leds,w,c
   871  001AD4  6E83               	movwf	3971,c	;volatile
   872                           
   873                           ;sumovore.c: 260: PORTDbits.RD3=!SeeLine.b.CntRight;
   874  001AD6  B24B               	btfsc	_SeeLine,1,c
   875  001AD8  D003               	goto	u1020
   876  001ADA  6A0F               	clrf	??_set_leds& (0+255),c
   877  001ADC  2A0F               	incf	??_set_leds& (0+255),f,c
   878  001ADE  D001               	goto	u1038
   879  001AE0                     u1020:
   880  001AE0  6A0F               	clrf	??_set_leds& (0+255),c
   881  001AE2                     u1038:
   882  001AE2  460F               	rlncf	??_set_leds,f,c
   883  001AE4  460F               	rlncf	??_set_leds,f,c
   884  001AE6  460F               	rlncf	??_set_leds,f,c
   885  001AE8  5083               	movf	3971,w,c	;volatile
   886  001AEA  180F               	xorwf	??_set_leds,w,c
   887  001AEC  0BF7               	andlw	-9
   888  001AEE  180F               	xorwf	??_set_leds,w,c
   889  001AF0  6E83               	movwf	3971,c	;volatile
   890                           
   891                           ;sumovore.c: 261: PORTDbits.RD4=!SeeLine.b.Right;
   892  001AF2  B04B               	btfsc	_SeeLine,0,c
   893  001AF4  D003               	goto	u1040
   894  001AF6  6A0F               	clrf	??_set_leds& (0+255),c
   895  001AF8  2A0F               	incf	??_set_leds& (0+255),f,c
   896  001AFA  D001               	goto	u1058
   897  001AFC                     u1040:
   898  001AFC  6A0F               	clrf	??_set_leds& (0+255),c
   899  001AFE                     u1058:
   900  001AFE  3A0F               	swapf	??_set_leds,f,c
   901  001B00  5083               	movf	3971,w,c	;volatile
   902  001B02  180F               	xorwf	??_set_leds,w,c
   903  001B04  0BEF               	andlw	-17
   904  001B06  180F               	xorwf	??_set_leds,w,c
   905  001B08  6E83               	movwf	3971,c	;volatile
   906  001B0A  0012               	return		;funcret
   907  001B0C                     __end_of_set_leds:
   908                           	opt stack 0
   909                           intcon	equ	0xFF2
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _lvd_flag_set *****************
   915 ;; Defined at:
   916 ;;		line 47 in file "../Robot Files/interrupts.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      unsigned char 
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text2
   945  0020F2                     __ptext2:
   946                           	opt stack 0
   947  0020F2                     _lvd_flag_set:
   948                           	opt stack 29
   949                           
   950                           ;interrupts.c: 49: return lvd_flag;
   951                           
   952                           ;incstack = 0
   953  0020F2  504C               	movf	_lvd_flag,w,c
   954  0020F4  D000               	goto	l363
   955  0020F6                     l363:
   956  0020F6  0012               	return		;funcret
   957  0020F8                     __end_of_lvd_flag_set:
   958                           	opt stack 0
   959                           intcon	equ	0xFF2
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _initialization *****************
   965 ;; Defined at:
   966 ;;		line 65 in file "../Robot Files/sumovore.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    5
   987 ;; This function calls:
   988 ;;		_OpenADC
   989 ;;		_OpenPWM1
   990 ;;		_OpenPWM2
   991 ;;		_OpenTimer2
   992 ;;		_OpenUSART
   993 ;;		_SetDCPWM1
   994 ;;		_SetDCPWM2
   995 ;;		_openLVD
   996 ;;		_openPORTA
   997 ;;		_openPORTB
   998 ;;		_openPORTCforPWM
   999 ;;		_openPORTCforUSART
  1000 ;;		_openPORTD
  1001 ;;		_openPORTE
  1002 ;;		_reset_codes
  1003 ;;		_set_osc_32MHz
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text3
  1010  001976                     __ptext3:
  1011                           	opt stack 0
  1012  001976                     _initialization:
  1013                           	opt stack 25
  1014                           
  1015                           ;sumovore.c: 67: SeeLine.B = 0;
  1016                           
  1017                           ;incstack = 0
  1018  001976  904B               	bcf	_SeeLine,0,c
  1019  001978  924B               	bcf	_SeeLine,1,c
  1020  00197A  944B               	bcf	_SeeLine,2,c
  1021  00197C  964B               	bcf	_SeeLine,3,c
  1022  00197E  984B               	bcf	_SeeLine,4,c
  1023                           
  1024                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  1025  001980  8ED0               	bsf	4048,7,c	;volatile
  1026                           
  1027                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  1028  001982  9EF2               	bcf	intcon,7,c	;volatile
  1029                           
  1030                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  1031  001984  9CF2               	bcf	intcon,6,c	;volatile
  1032                           
  1033                           ;sumovore.c: 72: set_osc_32MHz();
  1034  001986  EC3F  F00F         	call	_set_osc_32MHz	;wreg free
  1035                           
  1036                           ;sumovore.c: 73: openPORTCforUSART();
  1037  00198A  EC82  F010         	call	_openPORTCforUSART	;wreg free
  1038                           
  1039                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1040                           ;sumovore.c: 76: 16 );
  1041  00198E  0E00               	movlw	0
  1042  001990  6E10               	movwf	OpenUSART@spbrg+1,c
  1043  001992  0E10               	movlw	16
  1044  001994  6E0F               	movwf	OpenUSART@spbrg,c
  1045  001996  0E3C               	movlw	60
  1046  001998  ECC5  F00D         	call	_OpenUSART
  1047                           
  1048                           ;sumovore.c: 82: openPORTD();
  1049  00199C  EC8B  F010         	call	_openPORTD	;wreg free
  1050                           
  1051                           ;sumovore.c: 83: PORTD = 0;
  1052  0019A0  0E00               	movlw	0
  1053  0019A2  6E83               	movwf	3971,c	;volatile
  1054                           
  1055                           ;sumovore.c: 85: reset_codes();
  1056  0019A4  ECB1  F00E         	call	_reset_codes	;wreg free
  1057                           
  1058                           ;sumovore.c: 87: openPORTCforPWM();
  1059  0019A8  EC6B  F010         	call	_openPORTCforPWM	;wreg free
  1060                           
  1061                           ;sumovore.c: 89: openPORTA();
  1062  0019AC  EC88  F010         	call	_openPORTA	;wreg free
  1063                           
  1064                           ;sumovore.c: 90: openPORTB();
  1065  0019B0  EC85  F010         	call	_openPORTB	;wreg free
  1066                           
  1067                           ;sumovore.c: 91: openPORTE();
  1068  0019B4  EC7F  F010         	call	_openPORTE	;wreg free
  1069                           
  1070                           ;sumovore.c: 94: openLVD();
  1071  0019B8  EC1D  F010         	call	_openLVD	;wreg free
  1072                           
  1073                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1074  0019BC  0E0C               	movlw	12
  1075  0019BE  6E0F               	movwf	OpenADC@config2,c
  1076  0019C0  0E0A               	movlw	10
  1077  0019C2  6E10               	movwf	OpenADC@portconfig,c
  1078  0019C4  0EA7               	movlw	167
  1079  0019C6  EC2E  F00E         	call	_OpenADC
  1080                           
  1081                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1082  0019CA  9A82               	bcf	3970,5,c	;volatile
  1083                           
  1084                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1085  0019CC  9084               	bcf	3972,0,c	;volatile
  1086                           
  1087                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1088  0019CE  9082               	bcf	3970,0,c	;volatile
  1089                           
  1090                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1091  0019D0  9284               	bcf	3972,1,c	;volatile
  1092                           
  1093                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1094  0019D2  0E06               	movlw	6
  1095  0019D4  EC0F  F010         	call	_OpenTimer2
  1096                           
  1097                           ;sumovore.c: 110: OpenPWM1(199);
  1098  0019D8  0EC7               	movlw	199
  1099  0019DA  EC48  F010         	call	_OpenPWM1
  1100                           
  1101                           ;sumovore.c: 112: OpenPWM2(199);
  1102  0019DE  0EC7               	movlw	199
  1103  0019E0  EC0C  F00F         	call	_OpenPWM2
  1104                           
  1105                           ;sumovore.c: 113: SetDCPWM1(0);
  1106  0019E4  0E00               	movlw	0
  1107  0019E6  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1108  0019E8  0E00               	movlw	0
  1109  0019EA  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1110  0019EC  ECEF  F00E         	call	_SetDCPWM1	;wreg free
  1111                           
  1112                           ;sumovore.c: 116: SetDCPWM2(0);
  1113  0019F0  0E00               	movlw	0
  1114  0019F2  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1115  0019F4  0E00               	movlw	0
  1116  0019F6  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1117  0019F8  ECD2  F00E         	call	_SetDCPWM2	;wreg free
  1118                           
  1119                           ;sumovore.c: 117: threshold = 512u;
  1120  0019FC  0E02               	movlw	2
  1121  0019FE  6E4A               	movwf	_threshold+1,c
  1122  001A00  0E00               	movlw	0
  1123  001A02  6E49               	movwf	_threshold,c
  1124  001A04  0012               	return		;funcret
  1125  001A06                     __end_of_initialization:
  1126                           	opt stack 0
  1127                           intcon	equ	0xFF2
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _set_osc_32MHz *****************
  1133 ;; Defined at:
  1134 ;;		line 18 in file "../Robot Files/osc.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  i               2   14[COMRAM] int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;Total ram usage:        2 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_initialization
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163  001E7E                     __ptext4:
  1164                           	opt stack 0
  1165  001E7E                     _set_osc_32MHz:
  1166                           	opt stack 28
  1167                           
  1168                           ;osc.c: 20: int i;
  1169                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1170                           
  1171                           ;incstack = 0
  1172  001E7E  8CD3               	bsf	4051,6,c	;volatile
  1173                           
  1174                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1175  001E80  8AD3               	bsf	4051,5,c	;volatile
  1176                           
  1177                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1178  001E82  88D3               	bsf	4051,4,c	;volatile
  1179                           
  1180                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1181  001E84  8C9B               	bsf	3995,6,c	;volatile
  1182                           
  1183                           ;osc.c: 28: for(i=0;i<500;i++);
  1184  001E86  0E00               	movlw	0
  1185  001E88  6E10               	movwf	set_osc_32MHz@i+1,c
  1186  001E8A  0E00               	movlw	0
  1187  001E8C  6E0F               	movwf	set_osc_32MHz@i,c
  1188  001E8E                     l1549:
  1189  001E8E  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1190  001E90  D008               	goto	l1553
  1191  001E92  0EF4               	movlw	244
  1192  001E94  5C0F               	subwf	set_osc_32MHz@i,w,c
  1193  001E96  0E01               	movlw	1
  1194  001E98  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1195  001E9A  B0D8               	btfsc	status,0,c
  1196  001E9C  D005               	goto	l372
  1197  001E9E  D001               	goto	l1553
  1198  001EA0  D003               	goto	l372
  1199  001EA2                     l1553:
  1200  001EA2  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1201  001EA4  2A10               	incf	set_osc_32MHz@i+1,f,c
  1202  001EA6  D7F3               	goto	l1549
  1203  001EA8                     l372:
  1204  001EA8  0012               	return		;funcret
  1205  001EAA                     __end_of_set_osc_32MHz:
  1206                           	opt stack 0
  1207                           intcon	equ	0xFF2
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _reset_codes *****************
  1213 ;; Defined at:
  1214 ;;		line 281 in file "../Robot Files/sumovore.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;		None               void
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    4
  1235 ;; This function calls:
  1236 ;;		_BORtask
  1237 ;;		_PORtask
  1238 ;;		_RESETtask
  1239 ;;		_STKFULtask
  1240 ;;		_WDTtask
  1241 ;;		_isBOR
  1242 ;;		_isPOR
  1243 ;;		_isWDTTO
  1244 ;; This function is called by:
  1245 ;;		_initialization
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text5
  1250  001D62                     __ptext5:
  1251                           	opt stack 0
  1252  001D62                     _reset_codes:
  1253                           	opt stack 25
  1254                           
  1255                           ;sumovore.c: 283: if( isPOR() ) PORtask();
  1256                           
  1257                           ;incstack = 0
  1258  001D62  EC90  F00F         	call	_isPOR	;wreg free
  1259  001D66  0900               	iorlw	0
  1260  001D68  B4D8               	btfsc	status,2,c
  1261  001D6A  D003               	goto	l2377
  1262  001D6C  EC1A  F00C         	call	_PORtask	;wreg free
  1263  001D70  D018               	goto	l303
  1264  001D72                     l2377:
  1265                           
  1266                           ;sumovore.c: 286: else if (isBOR() ) BORtask();
  1267  001D72  EC29  F010         	call	_isBOR	;wreg free
  1268  001D76  0900               	iorlw	0
  1269  001D78  B4D8               	btfsc	status,2,c
  1270  001D7A  D003               	goto	l2381
  1271  001D7C  ECB4  F00F         	call	_BORtask	;wreg free
  1272  001D80  D010               	goto	l303
  1273  001D82                     l2381:
  1274                           
  1275                           ;sumovore.c: 288: else if(isWDTTO() ) WDTtask();
  1276  001D82  EC7D  F00F         	call	_isWDTTO	;wreg free
  1277  001D86  0900               	iorlw	0
  1278  001D88  B4D8               	btfsc	status,2,c
  1279  001D8A  D003               	goto	l299
  1280  001D8C  ECF3  F00F         	call	_WDTtask	;wreg free
  1281  001D90  D008               	goto	l303
  1282  001D92                     l299:
  1283                           
  1284                           ;sumovore.c: 292: else if(STKPTRbits.STKFUL) STKFULtask();
  1285  001D92  AEFC               	btfss	stkptr,7,c	;volatile
  1286  001D94  D003               	goto	l2387
  1287  001D96  ECE4  F00F         	call	_STKFULtask	;wreg free
  1288  001D9A  D003               	goto	l303
  1289  001D9C                     l2387:
  1290                           
  1291                           ;sumovore.c: 296: else RESETtask();
  1292  001D9C  EC01  F010         	call	_RESETtask	;wreg free
  1293  001DA0  D000               	goto	l303
  1294  001DA2                     l303:
  1295  001DA2  0012               	return		;funcret
  1296  001DA4                     __end_of_reset_codes:
  1297                           	opt stack 0
  1298                           stkptr	equ	0xFFC
  1299                           intcon	equ	0xFF2
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           status	equ	0xFD8
  1303                           
  1304 ;; *************** function _isWDTTO *****************
  1305 ;; Defined at:
  1306 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      unsigned char 
  1313 ;; Registers used:
  1314 ;;		wreg
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_reset_codes
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text6
  1335  001EFA                     __ptext6:
  1336                           	opt stack 0
  1337  001EFA                     _isWDTTO:
  1338                           	opt stack 27
  1339                           
  1340                           ;incstack = 0
  1341  001EFA  A2D0               	btfss	4048,1,c	;volatile
  1342  001EFC  D00E               	goto	l1461
  1343  001EFE  A4D0               	btfss	4048,2,c	;volatile
  1344  001F00  D00A               	goto	l1457
  1345  001F02  A0D0               	btfss	4048,0,c	;volatile
  1346  001F04  D006               	goto	l1453
  1347  001F06  A6D0               	btfss	4048,3,c	;volatile
  1348  001F08  D002               	goto	l1449
  1349  001F0A  D003               	goto	l1453
  1350  001F0C  D008               	goto	l589
  1351  001F0E                     l1449:
  1352  001F0E  0E01               	movlw	1
  1353  001F10  D006               	goto	l589
  1354  001F12                     l1453:
  1355  001F12  0E00               	movlw	0
  1356  001F14  D004               	goto	l589
  1357  001F16                     l1457:
  1358  001F16  0E00               	movlw	0
  1359  001F18  D002               	goto	l589
  1360  001F1A                     l1461:
  1361  001F1A  0E00               	movlw	0
  1362  001F1C  D000               	goto	l589
  1363  001F1E                     l589:
  1364  001F1E  0012               	return		;funcret
  1365  001F20                     __end_of_isWDTTO:
  1366                           	opt stack 0
  1367                           stkptr	equ	0xFFC
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _isPOR *****************
  1374 ;; Defined at:
  1375 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      unsigned char 
  1382 ;; Registers used:
  1383 ;;		wreg
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_reset_codes
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text7
  1404  001F20                     __ptext7:
  1405                           	opt stack 0
  1406  001F20                     _isPOR:
  1407                           	opt stack 27
  1408                           
  1409                           ;incstack = 0
  1410  001F20  B2D0               	btfsc	4048,1,c	;volatile
  1411  001F22  D00E               	goto	l1369
  1412  001F24  A4D0               	btfss	4048,2,c	;volatile
  1413  001F26  D00A               	goto	l1365
  1414  001F28  B0D0               	btfsc	4048,0,c	;volatile
  1415  001F2A  D006               	goto	l1361
  1416  001F2C  B6D0               	btfsc	4048,3,c	;volatile
  1417  001F2E  D002               	goto	l1357
  1418  001F30  D003               	goto	l1361
  1419  001F32  D008               	goto	l580
  1420  001F34                     l1357:
  1421  001F34  0E01               	movlw	1
  1422  001F36  D006               	goto	l580
  1423  001F38                     l1361:
  1424  001F38  0E00               	movlw	0
  1425  001F3A  D004               	goto	l580
  1426  001F3C                     l1365:
  1427  001F3C  0E00               	movlw	0
  1428  001F3E  D002               	goto	l580
  1429  001F40                     l1369:
  1430  001F40  0E00               	movlw	0
  1431  001F42  D000               	goto	l580
  1432  001F44                     l580:
  1433  001F44  0012               	return		;funcret
  1434  001F46                     __end_of_isPOR:
  1435                           	opt stack 0
  1436                           stkptr	equ	0xFFC
  1437                           intcon	equ	0xFF2
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           status	equ	0xFD8
  1441                           
  1442 ;; *************** function _isBOR *****************
  1443 ;; Defined at:
  1444 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      unsigned char 
  1451 ;; Registers used:
  1452 ;;		wreg
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_reset_codes
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text8
  1473  002052                     __ptext8:
  1474                           	opt stack 0
  1475  002052                     _isBOR:
  1476                           	opt stack 27
  1477                           
  1478                           ;incstack = 0
  1479  002052  B0D0               	btfsc	4048,0,c	;volatile
  1480  002054  D006               	goto	l1417
  1481  002056  B2D0               	btfsc	4048,1,c	;volatile
  1482  002058  D002               	goto	l1413
  1483  00205A  D003               	goto	l1417
  1484  00205C  D004               	goto	l571
  1485  00205E                     l1413:
  1486  00205E  0E01               	movlw	1
  1487  002060  D002               	goto	l571
  1488  002062                     l1417:
  1489  002062  0E00               	movlw	0
  1490  002064  D000               	goto	l571
  1491  002066                     l571:
  1492  002066  0012               	return		;funcret
  1493  002068                     __end_of_isBOR:
  1494                           	opt stack 0
  1495                           stkptr	equ	0xFFC
  1496                           intcon	equ	0xFF2
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _WDTtask *****************
  1502 ;; Defined at:
  1503 ;;		line 369 in file "../Robot Files/sumovore.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    3
  1524 ;; This function calls:
  1525 ;;		_gtrap
  1526 ;;		_printf
  1527 ;; This function is called by:
  1528 ;;		_reset_codes
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text9
  1533  001FE6                     __ptext9:
  1534                           	opt stack 0
  1535  001FE6                     _WDTtask:
  1536                           	opt stack 25
  1537                           
  1538                           ;sumovore.c: 371: printf("<WDT TO>");
  1539                           
  1540                           ;incstack = 0
  1541  001FE6  0E68               	movlw	low STR_4
  1542  001FE8  6E0F               	movwf	printf@f,c
  1543  001FEA  0E10               	movlw	high STR_4
  1544  001FEC  6E10               	movwf	printf@f+1,c
  1545  001FEE  EC28  F00F         	call	_printf	;wreg free
  1546                           
  1547                           ;sumovore.c: 372: PORTDbits.RD0=!1;
  1548  001FF2  9083               	bcf	3971,0,c	;volatile
  1549                           
  1550                           ;sumovore.c: 373: PORTDbits.RD1=!0;
  1551  001FF4  8283               	bsf	3971,1,c	;volatile
  1552                           
  1553                           ;sumovore.c: 374: PORTDbits.RD2=!1;
  1554  001FF6  9483               	bcf	3971,2,c	;volatile
  1555                           
  1556                           ;sumovore.c: 375: PORTDbits.RD3=!0;
  1557  001FF8  8683               	bsf	3971,3,c	;volatile
  1558                           
  1559                           ;sumovore.c: 376: PORTDbits.RD4=!0;
  1560  001FFA  8883               	bsf	3971,4,c	;volatile
  1561                           
  1562                           ;sumovore.c: 377: gtrap();
  1563  001FFC  ECFD  F00D         	call	_gtrap	;wreg free
  1564  002000  0012               	return		;funcret
  1565  002002                     __end_of_WDTtask:
  1566                           	opt stack 0
  1567                           stkptr	equ	0xFFC
  1568                           intcon	equ	0xFF2
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _STKFULtask *****************
  1574 ;; Defined at:
  1575 ;;		line 388 in file "../Robot Files/sumovore.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		_gtrap
  1598 ;;		_printf
  1599 ;; This function is called by:
  1600 ;;		_reset_codes
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text10
  1605  001FC8                     __ptext10:
  1606                           	opt stack 0
  1607  001FC8                     _STKFULtask:
  1608                           	opt stack 25
  1609                           
  1610                           ;sumovore.c: 391: STKPTRbits.STKFUL = 0;
  1611                           
  1612                           ;incstack = 0
  1613  001FC8  9EFC               	bcf	stkptr,7,c	;volatile
  1614                           
  1615                           ;sumovore.c: 392: printf("<STKFUL>");
  1616  001FCA  0E5F               	movlw	low STR_5
  1617  001FCC  6E0F               	movwf	printf@f,c
  1618  001FCE  0E10               	movlw	high STR_5
  1619  001FD0  6E10               	movwf	printf@f+1,c
  1620  001FD2  EC28  F00F         	call	_printf	;wreg free
  1621                           
  1622                           ;sumovore.c: 393: PORTDbits.RD0=!1;
  1623  001FD6  9083               	bcf	3971,0,c	;volatile
  1624                           
  1625                           ;sumovore.c: 394: PORTDbits.RD1=!0;
  1626  001FD8  8283               	bsf	3971,1,c	;volatile
  1627                           
  1628                           ;sumovore.c: 395: PORTDbits.RD2=!1;
  1629  001FDA  9483               	bcf	3971,2,c	;volatile
  1630                           
  1631                           ;sumovore.c: 396: PORTDbits.RD3=!0;
  1632  001FDC  8683               	bsf	3971,3,c	;volatile
  1633                           
  1634                           ;sumovore.c: 397: PORTDbits.RD4=!1;
  1635  001FDE  9883               	bcf	3971,4,c	;volatile
  1636                           
  1637                           ;sumovore.c: 398: gtrap();
  1638  001FE0  ECFD  F00D         	call	_gtrap	;wreg free
  1639  001FE4  0012               	return		;funcret
  1640  001FE6                     __end_of_STKFULtask:
  1641                           	opt stack 0
  1642                           stkptr	equ	0xFFC
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _RESETtask *****************
  1649 ;; Defined at:
  1650 ;;		line 404 in file "../Robot Files/sumovore.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		_gtrap
  1673 ;;		_printf
  1674 ;; This function is called by:
  1675 ;;		_reset_codes
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text11
  1680  002002                     __ptext11:
  1681                           	opt stack 0
  1682  002002                     _RESETtask:
  1683                           	opt stack 25
  1684                           
  1685                           ;sumovore.c: 407: printf(" <reset> ");
  1686                           
  1687                           ;incstack = 0
  1688  002002  0E55               	movlw	low STR_6
  1689  002004  6E0F               	movwf	printf@f,c
  1690  002006  0E10               	movlw	high STR_6
  1691  002008  6E10               	movwf	printf@f+1,c
  1692  00200A  EC28  F00F         	call	_printf	;wreg free
  1693                           
  1694                           ;sumovore.c: 408: PORTDbits.RD0=!1;
  1695  00200E  9083               	bcf	3971,0,c	;volatile
  1696                           
  1697                           ;sumovore.c: 409: PORTDbits.RD1=!0;
  1698  002010  8283               	bsf	3971,1,c	;volatile
  1699                           
  1700                           ;sumovore.c: 410: PORTDbits.RD2=!1;
  1701  002012  9483               	bcf	3971,2,c	;volatile
  1702                           
  1703                           ;sumovore.c: 411: PORTDbits.RD3=!1;
  1704  002014  9683               	bcf	3971,3,c	;volatile
  1705                           
  1706                           ;sumovore.c: 412: PORTDbits.RD4=!1;
  1707  002016  9883               	bcf	3971,4,c	;volatile
  1708                           
  1709                           ;sumovore.c: 413: gtrap();
  1710  002018  ECFD  F00D         	call	_gtrap	;wreg free
  1711  00201C  0012               	return		;funcret
  1712  00201E                     __end_of_RESETtask:
  1713                           	opt stack 0
  1714                           stkptr	equ	0xFFC
  1715                           intcon	equ	0xFF2
  1716                           postinc0	equ	0xFEE
  1717                           wreg	equ	0xFE8
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _PORtask *****************
  1721 ;; Defined at:
  1722 ;;		line 306 in file "../Robot Files/sumovore.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  count2          4   23[COMRAM] unsigned long 
  1727 ;;  count1          4   19[COMRAM] unsigned long 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    3
  1744 ;; This function calls:
  1745 ;;		_StatusReset
  1746 ;;		_printf
  1747 ;; This function is called by:
  1748 ;;		_reset_codes
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text12
  1753  001834                     __ptext12:
  1754                           	opt stack 0
  1755  001834                     _PORtask:
  1756                           	opt stack 25
  1757                           
  1758                           ;sumovore.c: 308: unsigned long count1=0, count2=0;
  1759                           
  1760                           ;incstack = 0
  1761  001834  0E00               	movlw	0
  1762  001836  6E14               	movwf	PORtask@count1,c
  1763  001838  0E00               	movlw	0
  1764  00183A  6E15               	movwf	PORtask@count1+1,c
  1765  00183C  0E00               	movlw	0
  1766  00183E  6E16               	movwf	PORtask@count1+2,c
  1767  001840  0E00               	movlw	0
  1768  001842  6E17               	movwf	PORtask@count1+3,c
  1769  001844  0E00               	movlw	0
  1770  001846  6E18               	movwf	PORtask@count2,c
  1771  001848  0E00               	movlw	0
  1772  00184A  6E19               	movwf	PORtask@count2+1,c
  1773  00184C  0E00               	movlw	0
  1774  00184E  6E1A               	movwf	PORtask@count2+2,c
  1775  001850  0E00               	movlw	0
  1776  001852  6E1B               	movwf	PORtask@count2+3,c
  1777                           
  1778                           ;sumovore.c: 309: StatusReset();
  1779  001854  EC7C  F010         	call	_StatusReset	;wreg free
  1780                           
  1781                           ;sumovore.c: 311: printf("<POR>");
  1782  001858  0E7E               	movlw	low STR_2
  1783  00185A  6E0F               	movwf	printf@f,c
  1784  00185C  0E10               	movlw	high STR_2
  1785  00185E  6E10               	movwf	printf@f+1,c
  1786  001860  EC28  F00F         	call	_printf	;wreg free
  1787                           
  1788                           ;sumovore.c: 312: PORTDbits.RD0=!1;
  1789  001864  9083               	bcf	3971,0,c	;volatile
  1790                           
  1791                           ;sumovore.c: 313: PORTDbits.RD1=!0;
  1792  001866  8283               	bsf	3971,1,c	;volatile
  1793                           
  1794                           ;sumovore.c: 314: PORTDbits.RD2=!0;
  1795  001868  8483               	bsf	3971,2,c	;volatile
  1796                           
  1797                           ;sumovore.c: 315: PORTDbits.RD3=!0;
  1798  00186A  8683               	bsf	3971,3,c	;volatile
  1799                           
  1800                           ;sumovore.c: 316: PORTDbits.RD4=!0;
  1801  00186C  8883               	bsf	3971,4,c	;volatile
  1802                           
  1803                           ;sumovore.c: 317: while(count1<10u)
  1804  00186E  D02D               	goto	l306
  1805  001870                     l307:
  1806  001870  0004               	clrwdt		;# 
  1807                           
  1808                           ;sumovore.c: 320: if (count2==30000u)
  1809  001872  0E30               	movlw	48
  1810  001874  1818               	xorwf	PORtask@count2,w,c
  1811  001876  E117               	bnz	l2221
  1812  001878  0E75               	movlw	117
  1813  00187A  1819               	xorwf	PORtask@count2+1,w,c
  1814  00187C  101A               	iorwf	PORtask@count2+2,w,c
  1815  00187E  101B               	iorwf	PORtask@count2+3,w,c
  1816  001880  A4D8               	btfss	status,2,c
  1817  001882  D011               	goto	l2221
  1818                           
  1819                           ;sumovore.c: 321: {
  1820                           ;sumovore.c: 322: count2=0;
  1821  001884  0E00               	movlw	0
  1822  001886  6E18               	movwf	PORtask@count2,c
  1823  001888  0E00               	movlw	0
  1824  00188A  6E19               	movwf	PORtask@count2+1,c
  1825  00188C  0E00               	movlw	0
  1826  00188E  6E1A               	movwf	PORtask@count2+2,c
  1827  001890  0E00               	movlw	0
  1828  001892  6E1B               	movwf	PORtask@count2+3,c
  1829                           
  1830                           ;sumovore.c: 323: count1++;
  1831  001894  0E01               	movlw	1
  1832  001896  2614               	addwf	PORtask@count1,f,c
  1833  001898  0E00               	movlw	0
  1834  00189A  2215               	addwfc	PORtask@count1+1,f,c
  1835  00189C  2216               	addwfc	PORtask@count1+2,f,c
  1836  00189E  2217               	addwfc	PORtask@count1+3,f,c
  1837                           
  1838                           ;sumovore.c: 324: PORTDbits.RD0=!1;
  1839  0018A0  9083               	bcf	3971,0,c	;volatile
  1840                           
  1841                           ;sumovore.c: 325: PORTDbits.RD1=!0;
  1842  0018A2  8283               	bsf	3971,1,c	;volatile
  1843                           
  1844                           ;sumovore.c: 326: }
  1845  0018A4  D00C               	goto	l2225
  1846  0018A6                     l2221:
  1847                           
  1848                           ;sumovore.c: 327: else if (count2==15000u)
  1849  0018A6  0E98               	movlw	152
  1850  0018A8  1818               	xorwf	PORtask@count2,w,c
  1851  0018AA  E109               	bnz	l2225
  1852  0018AC  0E3A               	movlw	58
  1853  0018AE  1819               	xorwf	PORtask@count2+1,w,c
  1854  0018B0  101A               	iorwf	PORtask@count2+2,w,c
  1855  0018B2  101B               	iorwf	PORtask@count2+3,w,c
  1856  0018B4  A4D8               	btfss	status,2,c
  1857  0018B6  D003               	goto	l2225
  1858                           
  1859                           ;sumovore.c: 328: {
  1860                           ;sumovore.c: 329: PORTDbits.RD0=!0;
  1861  0018B8  8083               	bsf	3971,0,c	;volatile
  1862                           
  1863                           ;sumovore.c: 330: PORTDbits.RD1=!1;
  1864  0018BA  9283               	bcf	3971,1,c	;volatile
  1865  0018BC  D000               	goto	l2225
  1866  0018BE                     l2225:
  1867                           
  1868                           ;sumovore.c: 331: }
  1869                           ;sumovore.c: 332: count2++;
  1870  0018BE  0E01               	movlw	1
  1871  0018C0  2618               	addwf	PORtask@count2,f,c
  1872  0018C2  0E00               	movlw	0
  1873  0018C4  2219               	addwfc	PORtask@count2+1,f,c
  1874  0018C6  221A               	addwfc	PORtask@count2+2,f,c
  1875  0018C8  221B               	addwfc	PORtask@count2+3,f,c
  1876  0018CA                     l306:
  1877  0018CA  5017               	movf	PORtask@count1+3,w,c
  1878  0018CC  1016               	iorwf	PORtask@count1+2,w,c
  1879  0018CE  1015               	iorwf	PORtask@count1+1,w,c
  1880  0018D0  E106               	bnz	l312
  1881  0018D2  0E0A               	movlw	10
  1882  0018D4  5C14               	subwf	PORtask@count1,w,c
  1883  0018D6  B0D8               	btfsc	status,0,c
  1884  0018D8  D002               	goto	l312
  1885  0018DA  D7CA               	goto	l307
  1886  0018DC  D000               	goto	l312
  1887  0018DE                     l312:
  1888  0018DE  0012               	return		;funcret
  1889  0018E0                     __end_of_PORtask:
  1890                           	opt stack 0
  1891                           stkptr	equ	0xFFC
  1892                           intcon	equ	0xFF2
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _BORtask *****************
  1898 ;; Defined at:
  1899 ;;		line 348 in file "../Robot Files/sumovore.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		_StatusReset
  1922 ;;		_gtrap
  1923 ;;		_printf
  1924 ;; This function is called by:
  1925 ;;		_reset_codes
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text13
  1930  001F68                     __ptext13:
  1931                           	opt stack 0
  1932  001F68                     _BORtask:
  1933                           	opt stack 25
  1934                           
  1935                           ;sumovore.c: 350: StatusReset();
  1936                           
  1937                           ;incstack = 0
  1938  001F68  EC7C  F010         	call	_StatusReset	;wreg free
  1939                           
  1940                           ;sumovore.c: 352: printf("<BOR>");
  1941  001F6C  0E78               	movlw	low STR_3
  1942  001F6E  6E0F               	movwf	printf@f,c
  1943  001F70  0E10               	movlw	high STR_3
  1944  001F72  6E10               	movwf	printf@f+1,c
  1945  001F74  EC28  F00F         	call	_printf	;wreg free
  1946                           
  1947                           ;sumovore.c: 353: PORTDbits.RD0=!0;
  1948  001F78  8083               	bsf	3971,0,c	;volatile
  1949                           
  1950                           ;sumovore.c: 354: PORTDbits.RD1=!0;
  1951  001F7A  8283               	bsf	3971,1,c	;volatile
  1952                           
  1953                           ;sumovore.c: 355: PORTDbits.RD2=!0;
  1954  001F7C  8483               	bsf	3971,2,c	;volatile
  1955                           
  1956                           ;sumovore.c: 356: PORTDbits.RD3=!0;
  1957  001F7E  8683               	bsf	3971,3,c	;volatile
  1958                           
  1959                           ;sumovore.c: 357: PORTDbits.RD4=!1;
  1960  001F80  9883               	bcf	3971,4,c	;volatile
  1961                           
  1962                           ;sumovore.c: 358: gtrap();
  1963  001F82  ECFD  F00D         	call	_gtrap	;wreg free
  1964  001F86  0012               	return		;funcret
  1965  001F88                     __end_of_BORtask:
  1966                           	opt stack 0
  1967                           stkptr	equ	0xFFC
  1968                           intcon	equ	0xFF2
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _StatusReset *****************
  1974 ;; Defined at:
  1975 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_PORtask
  2000 ;;		_BORtask
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text14
  2005  0020F8                     __ptext14:
  2006                           	opt stack 0
  2007  0020F8                     _StatusReset:
  2008                           	opt stack 26
  2009                           
  2010                           ;incstack = 0
  2011  0020F8  82D0               	bsf	4048,1,c	;volatile
  2012  0020FA  80D0               	bsf	4048,0,c	;volatile
  2013  0020FC  0012               	return		;funcret
  2014  0020FE                     __end_of_StatusReset:
  2015                           	opt stack 0
  2016                           stkptr	equ	0xFFC
  2017                           intcon	equ	0xFF2
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _openPORTE *****************
  2023 ;; Defined at:
  2024 ;;		line 178 in file "../Robot Files/sumovore.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;		None               void
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_initialization
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text15
  2053  0020FE                     __ptext15:
  2054                           	opt stack 0
  2055  0020FE                     _openPORTE:
  2056                           	opt stack 28
  2057                           
  2058                           ;sumovore.c: 180: TRISE = 0b000;
  2059                           
  2060                           ;incstack = 0
  2061  0020FE  0E00               	movlw	0
  2062  002100  6E96               	movwf	3990,c	;volatile
  2063  002102  0012               	return		;funcret
  2064  002104                     __end_of_openPORTE:
  2065                           	opt stack 0
  2066                           stkptr	equ	0xFFC
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _openPORTCforUSART *****************
  2073 ;; Defined at:
  2074 ;;		line 124 in file "../Robot Files/sumovore.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;		None               void
  2081 ;; Registers used:
  2082 ;;		None
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_initialization
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text16
  2103  002104                     __ptext16:
  2104                           	opt stack 0
  2105  002104                     _openPORTCforUSART:
  2106                           	opt stack 28
  2107                           
  2108                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2109                           
  2110                           ;incstack = 0
  2111  002104  9C94               	bcf	3988,6,c	;volatile
  2112                           
  2113                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2114  002106  8E94               	bsf	3988,7,c	;volatile
  2115  002108  0012               	return		;funcret
  2116  00210A                     __end_of_openPORTCforUSART:
  2117                           	opt stack 0
  2118                           stkptr	equ	0xFFC
  2119                           intcon	equ	0xFF2
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _openPORTCforPWM *****************
  2125 ;; Defined at:
  2126 ;;		line 133 in file "../Robot Files/sumovore.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		None
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_initialization
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text17
  2155  0020D6                     __ptext17:
  2156                           	opt stack 0
  2157  0020D6                     _openPORTCforPWM:
  2158                           	opt stack 28
  2159                           
  2160                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2161                           
  2162                           ;incstack = 0
  2163  0020D6  9094               	bcf	3988,0,c	;volatile
  2164                           
  2165                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2166  0020D8  9294               	bcf	3988,1,c	;volatile
  2167                           
  2168                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2169  0020DA  9494               	bcf	3988,2,c	;volatile
  2170                           
  2171                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2172  0020DC  9694               	bcf	3988,3,c	;volatile
  2173                           
  2174                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2175  0020DE  9894               	bcf	3988,4,c	;volatile
  2176                           
  2177                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2178  0020E0  9A94               	bcf	3988,5,c	;volatile
  2179  0020E2  0012               	return		;funcret
  2180  0020E4                     __end_of_openPORTCforPWM:
  2181                           	opt stack 0
  2182                           stkptr	equ	0xFFC
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _openPORTB *****************
  2189 ;; Defined at:
  2190 ;;		line 158 in file "../Robot Files/sumovore.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;		None               void
  2197 ;; Registers used:
  2198 ;;		wreg, status,2
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_initialization
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text18
  2219  00210A                     __ptext18:
  2220                           	opt stack 0
  2221  00210A                     _openPORTB:
  2222                           	opt stack 28
  2223                           
  2224                           ;sumovore.c: 160: TRISB = 0B11000000;
  2225                           
  2226                           ;incstack = 0
  2227  00210A  0EC0               	movlw	192
  2228  00210C  6E93               	movwf	3987,c	;volatile
  2229  00210E  0012               	return		;funcret
  2230  002110                     __end_of_openPORTB:
  2231                           	opt stack 0
  2232                           stkptr	equ	0xFFC
  2233                           intcon	equ	0xFF2
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           status	equ	0xFD8
  2237                           
  2238 ;; *************** function _openPORTA *****************
  2239 ;; Defined at:
  2240 ;;		line 147 in file "../Robot Files/sumovore.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, status,2
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_initialization
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text19
  2269  002110                     __ptext19:
  2270                           	opt stack 0
  2271  002110                     _openPORTA:
  2272                           	opt stack 28
  2273                           
  2274                           ;sumovore.c: 149: TRISA = 0B11101111;
  2275                           
  2276                           ;incstack = 0
  2277  002110  0EEF               	movlw	239
  2278  002112  6E92               	movwf	3986,c	;volatile
  2279  002114  0012               	return		;funcret
  2280  002116                     __end_of_openPORTA:
  2281                           	opt stack 0
  2282                           stkptr	equ	0xFFC
  2283                           intcon	equ	0xFF2
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _openLVD *****************
  2289 ;; Defined at:
  2290 ;;		line 427 in file "../Robot Files/sumovore.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		None
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_initialization
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text20
  2319  00203A                     __ptext20:
  2320                           	opt stack 0
  2321  00203A                     _openLVD:
  2322                           	opt stack 28
  2323                           
  2324                           ;sumovore.c: 429: RCONbits.IPEN = 1;
  2325                           
  2326                           ;incstack = 0
  2327  00203A  8ED0               	bsf	4048,7,c	;volatile
  2328                           
  2329                           ;sumovore.c: 430: HLVDCONbits.HLVDEN = 1;
  2330  00203C  88D2               	bsf	4050,4,c	;volatile
  2331                           
  2332                           ;sumovore.c: 432: IPR2bits.HLVDIP = 1;
  2333  00203E  84A2               	bsf	4002,2,c	;volatile
  2334                           
  2335                           ;sumovore.c: 433: HLVDCONbits.VDIRMAG = 0;
  2336  002040  9ED2               	bcf	4050,7,c	;volatile
  2337                           
  2338                           ;sumovore.c: 435: HLVDCONbits.HLVDL3 = 1;
  2339  002042  86D2               	bsf	4050,3,c	;volatile
  2340                           
  2341                           ;sumovore.c: 436: HLVDCONbits.HLVDL2 = 1;
  2342  002044  84D2               	bsf	4050,2,c	;volatile
  2343                           
  2344                           ;sumovore.c: 437: HLVDCONbits.HLVDL1 = 1;
  2345  002046  82D2               	bsf	4050,1,c	;volatile
  2346                           
  2347                           ;sumovore.c: 438: HLVDCONbits.HLVDL0 = 0;
  2348  002048  90D2               	bcf	4050,0,c	;volatile
  2349                           
  2350                           ;sumovore.c: 439: PIR2bits.HLVDIF = 0;
  2351  00204A  94A1               	bcf	4001,2,c	;volatile
  2352                           
  2353                           ;sumovore.c: 440: PIE2bits.HLVDIE = 1;
  2354  00204C  84A0               	bsf	4000,2,c	;volatile
  2355                           
  2356                           ;sumovore.c: 441: INTCONbits.GIEH = 1;
  2357  00204E  8EF2               	bsf	intcon,7,c	;volatile
  2358  002050  0012               	return		;funcret
  2359  002052                     __end_of_openLVD:
  2360                           	opt stack 0
  2361                           stkptr	equ	0xFFC
  2362                           intcon	equ	0xFF2
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _OpenUSART *****************
  2368 ;; Defined at:
  2369 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  config          1    wreg     unsigned char 
  2372 ;;  spbrg           2   14[COMRAM] unsigned int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  config          1   16[COMRAM] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg, status,2
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;Total ram usage:        3 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_initialization
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text21
  2399  001B8A                     __ptext21:
  2400                           	opt stack 0
  2401  001B8A                     _OpenUSART:
  2402                           	opt stack 28
  2403                           
  2404                           ;incstack = 0
  2405                           ;OpenUSART@config stored from wreg
  2406  001B8A  6E11               	movwf	OpenUSART@config,c
  2407  001B8C  0E00               	movlw	0
  2408  001B8E  6EAC               	movwf	4012,c	;volatile
  2409  001B90  0E00               	movlw	0
  2410  001B92  6EAB               	movwf	4011,c	;volatile
  2411  001B94  A011               	btfss	OpenUSART@config,0,c
  2412  001B96  D002               	goto	l2329
  2413  001B98  88AC               	bsf	4012,4,c	;volatile
  2414  001B9A  D000               	goto	l2329
  2415  001B9C                     l2329:
  2416  001B9C  A211               	btfss	OpenUSART@config,1,c
  2417  001B9E  D003               	goto	l2333
  2418  001BA0  8CAC               	bsf	4012,6,c	;volatile
  2419  001BA2  8CAB               	bsf	4011,6,c	;volatile
  2420  001BA4  D000               	goto	l2333
  2421  001BA6                     l2333:
  2422  001BA6  A411               	btfss	OpenUSART@config,2,c
  2423  001BA8  D002               	goto	l2337
  2424  001BAA  8EAC               	bsf	4012,7,c	;volatile
  2425  001BAC  D000               	goto	l2337
  2426  001BAE                     l2337:
  2427  001BAE  A611               	btfss	OpenUSART@config,3,c
  2428  001BB0  D002               	goto	l555
  2429  001BB2  88AB               	bsf	4011,4,c	;volatile
  2430  001BB4  D002               	goto	l2341
  2431  001BB6                     l555:
  2432  001BB6  8AAB               	bsf	4011,5,c	;volatile
  2433  001BB8  D000               	goto	l2341
  2434  001BBA                     l2341:
  2435  001BBA  B811               	btfsc	OpenUSART@config,4,c
  2436  001BBC  84AC               	bsf	4012,2,c	;volatile
  2437  001BBE  989E               	bcf	3998,4,c	;volatile
  2438  001BC0  AA11               	btfss	OpenUSART@config,5,c
  2439  001BC2  D002               	goto	l2349
  2440  001BC4  86AB               	bsf	4011,3,c	;volatile
  2441  001BC6  D000               	goto	l2349
  2442  001BC8                     l2349:
  2443  001BC8  AC11               	btfss	OpenUSART@config,6,c
  2444  001BCA  D002               	goto	l559
  2445  001BCC  8A9D               	bsf	3997,5,c	;volatile
  2446  001BCE  D001               	goto	l560
  2447  001BD0                     l559:
  2448  001BD0  9A9D               	bcf	3997,5,c	;volatile
  2449  001BD2                     l560:
  2450  001BD2  9A9E               	bcf	3998,5,c	;volatile
  2451  001BD4  AE11               	btfss	OpenUSART@config,7,c
  2452  001BD6  D002               	goto	l561
  2453  001BD8  889D               	bsf	3997,4,c	;volatile
  2454  001BDA  D001               	goto	l562
  2455  001BDC                     l561:
  2456  001BDC  989D               	bcf	3997,4,c	;volatile
  2457  001BDE                     l562:
  2458  001BDE  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2459  001BE2  5010               	movf	OpenUSART@spbrg+1,w,c
  2460  001BE4  6EB0               	movwf	4016,c	;volatile
  2461  001BE6  8AAC               	bsf	4012,5,c	;volatile
  2462  001BE8  8EAB               	bsf	4011,7,c	;volatile
  2463  001BEA  9C94               	bcf	3988,6,c	;volatile
  2464  001BEC  8E94               	bsf	3988,7,c	;volatile
  2465  001BEE  B8AC               	btfsc	4012,4,c	;volatile
  2466  001BF0  BEAC               	btfsc	4012,7,c	;volatile
  2467  001BF2  D002               	goto	l564
  2468  001BF4  8C94               	bsf	3988,6,c	;volatile
  2469  001BF6  D000               	goto	l564
  2470  001BF8                     l564:
  2471  001BF8  0012               	return		;funcret
  2472  001BFA                     __end_of_OpenUSART:
  2473                           	opt stack 0
  2474                           stkptr	equ	0xFFC
  2475                           intcon	equ	0xFF2
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _OpenTimer2 *****************
  2481 ;; Defined at:
  2482 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  config          1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  config          1   14[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_initialization
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text22
  2511  00201E                     __ptext22:
  2512                           	opt stack 0
  2513  00201E                     _OpenTimer2:
  2514                           	opt stack 28
  2515                           
  2516                           ;incstack = 0
  2517                           ;OpenTimer2@config stored from wreg
  2518  00201E  6E0F               	movwf	OpenTimer2@config,c
  2519  002020  500F               	movf	OpenTimer2@config,w,c
  2520  002022  0BFB               	andlw	251
  2521  002024  6ECA               	movwf	4042,c	;volatile
  2522  002026  0E00               	movlw	0
  2523  002028  6ECC               	movwf	4044,c	;volatile
  2524  00202A  929E               	bcf	3998,1,c	;volatile
  2525  00202C  AE0F               	btfss	OpenTimer2@config,7,c
  2526  00202E  D002               	goto	l529
  2527  002030  829D               	bsf	3997,1,c	;volatile
  2528  002032  D001               	goto	l530
  2529  002034                     l529:
  2530  002034  929D               	bcf	3997,1,c	;volatile
  2531  002036                     l530:
  2532  002036  84CA               	bsf	4042,2,c	;volatile
  2533  002038  0012               	return		;funcret
  2534  00203A                     __end_of_OpenTimer2:
  2535                           	opt stack 0
  2536                           stkptr	equ	0xFFC
  2537                           intcon	equ	0xFF2
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _OpenPWM2 *****************
  2543 ;; Defined at:
  2544 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  period          1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  period          1   14[COMRAM] unsigned char 
  2549 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2550 ;;  pmmode          1    0        unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_initialization
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text23
  2575  001E18                     __ptext23:
  2576                           	opt stack 0
  2577  001E18                     _OpenPWM2:
  2578                           	opt stack 28
  2579                           
  2580                           ;incstack = 0
  2581                           ;OpenPWM2@period stored from wreg
  2582  001E18  6E0F               	movwf	OpenPWM2@period,c
  2583  001E1A  0E0C               	movlw	12
  2584  001E1C  6EBA               	movwf	4026,c	;volatile
  2585  001E1E  0E05               	movlw	5
  2586  001E20  6EF6               	movwf	tblptrl,c
  2587  001E22                     	if	1	;There is more than 1 active tblptr byte
  2588  001E22  0E00               	movlw	0
  2589  001E24  6EF7               	movwf	tblptrh,c
  2590  001E26                     	endif
  2591  001E26                     	if	1	;There are 3 active tblptr bytes
  2592  001E26  0E30               	movlw	48
  2593  001E28  6EF8               	movwf	tblptru,c
  2594  001E2A                     	endif
  2595  001E2A  0008               	tblrd		*
  2596  001E2C  0100               	movlb	12288	; () banked
  2597  001E2E  A0F5               	btfss	tablat,0,c
  2598  001E30  D002               	goto	l1675
  2599                           
  2600                           ; BSR set to: 0
  2601  001E32  6810               	setf	OpenPWM2@ccp2mx,c
  2602  001E34  D002               	goto	l477
  2603  001E36                     l1675:
  2604                           
  2605                           ; BSR set to: 0
  2606  001E36  0E00               	movlw	0
  2607  001E38  6E10               	movwf	OpenPWM2@ccp2mx,c
  2608  001E3A                     l477:
  2609                           
  2610                           ; BSR set to: 0
  2611  001E3A  5010               	movf	OpenPWM2@ccp2mx,w,c
  2612  001E3C  B4D8               	btfsc	status,2,c
  2613  001E3E  D002               	goto	l478
  2614                           
  2615                           ; BSR set to: 0
  2616  001E40  9294               	bcf	3988,1,c	;volatile
  2617  001E42  D001               	goto	l479
  2618  001E44                     l478:
  2619                           
  2620                           ; BSR set to: 0
  2621  001E44  9693               	bcf	3987,3,c	;volatile
  2622  001E46                     l479:
  2623                           
  2624                           ; BSR set to: 0
  2625  001E46  94CA               	bcf	4042,2,c	;volatile
  2626  001E48  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2627  001E4C  84CA               	bsf	4042,2,c	;volatile
  2628                           
  2629                           ; BSR set to: 0
  2630  001E4E  0012               	return		;funcret
  2631  001E50                     __end_of_OpenPWM2:
  2632                           	opt stack 0
  2633                           stkptr	equ	0xFFC
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           intcon	equ	0xFF2
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _OpenPWM1 *****************
  2644 ;; Defined at:
  2645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  period          1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  period          1   14[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_initialization
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text24
  2674  002090                     __ptext24:
  2675                           	opt stack 0
  2676  002090                     _OpenPWM1:
  2677                           	opt stack 28
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;incstack = 0
  2681                           ;OpenPWM1@period stored from wreg
  2682  002090  6E0F               	movwf	OpenPWM1@period,c
  2683  002092  0E0C               	movlw	12
  2684  002094  12BD               	iorwf	4029,f,c	;volatile
  2685  002096  9494               	bcf	3988,2,c	;volatile
  2686  002098  94CA               	bcf	4042,2,c	;volatile
  2687  00209A  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2688  00209E  84CA               	bsf	4042,2,c	;volatile
  2689  0020A0  0012               	return		;funcret
  2690  0020A2                     __end_of_OpenPWM1:
  2691                           	opt stack 0
  2692                           stkptr	equ	0xFFC
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           intcon	equ	0xFF2
  2698                           postinc0	equ	0xFEE
  2699                           wreg	equ	0xFE8
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _OpenADC *****************
  2703 ;; Defined at:
  2704 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  config          1    wreg     unsigned char 
  2707 ;;  config2         1   14[COMRAM] unsigned char 
  2708 ;;  portconfig      1   15[COMRAM] unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  config          1   18[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;Total ram usage:        5 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_initialization
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text25
  2735  001C5C                     __ptext25:
  2736                           	opt stack 0
  2737  001C5C                     _OpenADC:
  2738                           	opt stack 28
  2739                           
  2740                           ;incstack = 0
  2741                           ;OpenADC@config stored from wreg
  2742  001C5C  6E13               	movwf	OpenADC@config,c
  2743  001C5E  0E00               	movlw	0
  2744  001C60  6EC2               	movwf	4034,c	;volatile
  2745  001C62  0E00               	movlw	0
  2746  001C64  6EC0               	movwf	4032,c	;volatile
  2747  001C66  90D8               	bcf	status,0,c
  2748  001C68  300F               	rrcf	OpenADC@config2,w,c
  2749  001C6A  0B3C               	andlw	60
  2750  001C6C  6EC2               	movwf	4034,c	;volatile
  2751  001C6E  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2752  001C72  3A11               	swapf	??_OpenADC,f,c
  2753  001C74  0EF0               	movlw	240
  2754  001C76  1611               	andwf	??_OpenADC,f,c
  2755  001C78  0E30               	movlw	48
  2756  001C7A  1611               	andwf	??_OpenADC,f,c
  2757  001C7C  5010               	movf	OpenADC@portconfig,w,c
  2758  001C7E  0B0F               	andlw	15
  2759  001C80  1011               	iorwf	??_OpenADC,w,c
  2760  001C82  6EC1               	movwf	4033,c	;volatile
  2761  001C84  C013  F011         	movff	OpenADC@config,??_OpenADC
  2762  001C88  90D8               	bcf	status,0,c
  2763  001C8A  3611               	rlcf	??_OpenADC,f,c
  2764  001C8C  90D8               	bcf	status,0,c
  2765  001C8E  3611               	rlcf	??_OpenADC,f,c
  2766  001C90  0E38               	movlw	56
  2767  001C92  1611               	andwf	??_OpenADC,f,c
  2768  001C94  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2769  001C98  3A12               	swapf	??_OpenADC+1,f,c
  2770  001C9A  0E0F               	movlw	15
  2771  001C9C  1612               	andwf	??_OpenADC+1,f,c
  2772  001C9E  0E07               	movlw	7
  2773  001CA0  1612               	andwf	??_OpenADC+1,f,c
  2774  001CA2  5013               	movf	OpenADC@config,w,c
  2775  001CA4  0B80               	andlw	128
  2776  001CA6  1012               	iorwf	??_OpenADC+1,w,c
  2777  001CA8  1011               	iorwf	??_OpenADC,w,c
  2778  001CAA  6EC0               	movwf	4032,c	;volatile
  2779  001CAC  AE0F               	btfss	OpenADC@config2,7,c
  2780  001CAE  D003               	goto	l429
  2781  001CB0  9C9E               	bcf	3998,6,c	;volatile
  2782  001CB2  8C9D               	bsf	3997,6,c	;volatile
  2783  001CB4  8CF2               	bsf	intcon,6,c	;volatile
  2784  001CB6                     l429:
  2785  001CB6  80C2               	bsf	4034,0,c	;volatile
  2786  001CB8  0012               	return		;funcret
  2787  001CBA                     __end_of_OpenADC:
  2788                           	opt stack 0
  2789                           stkptr	equ	0xFFC
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           intcon	equ	0xFF2
  2795                           postinc0	equ	0xFEE
  2796                           wreg	equ	0xFE8
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _check_sensors *****************
  2800 ;; Defined at:
  2801 ;;		line 241 in file "../Robot Files/sumovore.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;		None               void
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        1 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    3
  2822 ;; This function calls:
  2823 ;;		_adc
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text26
  2830  001770                     __ptext26:
  2831                           	opt stack 0
  2832  001770                     _check_sensors:
  2833                           	opt stack 27
  2834                           
  2835                           ;sumovore.c: 243: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  2836                           
  2837                           ;incstack = 0
  2838  001770  0E87               	movlw	135
  2839  001772  EC55  F00F         	call	_adc
  2840  001776  5013               	movf	?_adc,w,c
  2841  001778  5C49               	subwf	_threshold,w,c
  2842  00177A  5014               	movf	?_adc+1,w,c
  2843  00177C  584A               	subwfb	_threshold+1,w,c
  2844  00177E  B0D8               	btfsc	status,0,c
  2845  001780  D003               	goto	u1970
  2846  001782  6A16               	clrf	??_check_sensors& (0+255),c
  2847  001784  2A16               	incf	??_check_sensors& (0+255),f,c
  2848  001786  D001               	goto	u1988
  2849  001788                     u1970:
  2850  001788  6A16               	clrf	??_check_sensors& (0+255),c
  2851  00178A                     u1988:
  2852  00178A  3A16               	swapf	??_check_sensors,f,c
  2853  00178C  504B               	movf	_SeeLine,w,c
  2854  00178E  1816               	xorwf	??_check_sensors,w,c
  2855  001790  0BEF               	andlw	-17
  2856  001792  1816               	xorwf	??_check_sensors,w,c
  2857  001794  6E4B               	movwf	_SeeLine,c
  2858                           
  2859                           ;sumovore.c: 244: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  2860  001796  0E8F               	movlw	143
  2861  001798  EC55  F00F         	call	_adc
  2862  00179C  5013               	movf	?_adc,w,c
  2863  00179E  5C49               	subwf	_threshold,w,c
  2864  0017A0  5014               	movf	?_adc+1,w,c
  2865  0017A2  584A               	subwfb	_threshold+1,w,c
  2866  0017A4  B0D8               	btfsc	status,0,c
  2867  0017A6  D003               	goto	u1990
  2868  0017A8  6A16               	clrf	??_check_sensors& (0+255),c
  2869  0017AA  2A16               	incf	??_check_sensors& (0+255),f,c
  2870  0017AC  D001               	goto	u2008
  2871  0017AE                     u1990:
  2872  0017AE  6A16               	clrf	??_check_sensors& (0+255),c
  2873  0017B0                     u2008:
  2874  0017B0  4616               	rlncf	??_check_sensors,f,c
  2875  0017B2  4616               	rlncf	??_check_sensors,f,c
  2876  0017B4  4616               	rlncf	??_check_sensors,f,c
  2877  0017B6  504B               	movf	_SeeLine,w,c
  2878  0017B8  1816               	xorwf	??_check_sensors,w,c
  2879  0017BA  0BF7               	andlw	-9
  2880  0017BC  1816               	xorwf	??_check_sensors,w,c
  2881  0017BE  6E4B               	movwf	_SeeLine,c
  2882                           
  2883                           ;sumovore.c: 245: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  2884  0017C0  0E97               	movlw	151
  2885  0017C2  EC55  F00F         	call	_adc
  2886  0017C6  5013               	movf	?_adc,w,c
  2887  0017C8  5C49               	subwf	_threshold,w,c
  2888  0017CA  5014               	movf	?_adc+1,w,c
  2889  0017CC  584A               	subwfb	_threshold+1,w,c
  2890  0017CE  B0D8               	btfsc	status,0,c
  2891  0017D0  D003               	goto	u2010
  2892  0017D2  6A16               	clrf	??_check_sensors& (0+255),c
  2893  0017D4  2A16               	incf	??_check_sensors& (0+255),f,c
  2894  0017D6  D001               	goto	u2028
  2895  0017D8                     u2010:
  2896  0017D8  6A16               	clrf	??_check_sensors& (0+255),c
  2897  0017DA                     u2028:
  2898  0017DA  4616               	rlncf	??_check_sensors,f,c
  2899  0017DC  4616               	rlncf	??_check_sensors,f,c
  2900  0017DE  504B               	movf	_SeeLine,w,c
  2901  0017E0  1816               	xorwf	??_check_sensors,w,c
  2902  0017E2  0BFB               	andlw	-5
  2903  0017E4  1816               	xorwf	??_check_sensors,w,c
  2904  0017E6  6E4B               	movwf	_SeeLine,c
  2905                           
  2906                           ;sumovore.c: 246: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  2907  0017E8  0E9F               	movlw	159
  2908  0017EA  EC55  F00F         	call	_adc
  2909  0017EE  5013               	movf	?_adc,w,c
  2910  0017F0  5C49               	subwf	_threshold,w,c
  2911  0017F2  5014               	movf	?_adc+1,w,c
  2912  0017F4  584A               	subwfb	_threshold+1,w,c
  2913  0017F6  B0D8               	btfsc	status,0,c
  2914  0017F8  D003               	goto	u2030
  2915  0017FA  6A16               	clrf	??_check_sensors& (0+255),c
  2916  0017FC  2A16               	incf	??_check_sensors& (0+255),f,c
  2917  0017FE  D001               	goto	u2048
  2918  001800                     u2030:
  2919  001800  6A16               	clrf	??_check_sensors& (0+255),c
  2920  001802                     u2048:
  2921  001802  4616               	rlncf	??_check_sensors,f,c
  2922  001804  504B               	movf	_SeeLine,w,c
  2923  001806  1816               	xorwf	??_check_sensors,w,c
  2924  001808  0BFD               	andlw	-3
  2925  00180A  1816               	xorwf	??_check_sensors,w,c
  2926  00180C  6E4B               	movwf	_SeeLine,c
  2927                           
  2928                           ;sumovore.c: 247: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  2929  00180E  0EA7               	movlw	167
  2930  001810  EC55  F00F         	call	_adc
  2931  001814  5013               	movf	?_adc,w,c
  2932  001816  5C49               	subwf	_threshold,w,c
  2933  001818  5014               	movf	?_adc+1,w,c
  2934  00181A  584A               	subwfb	_threshold+1,w,c
  2935  00181C  B0D8               	btfsc	status,0,c
  2936  00181E  D003               	goto	u2050
  2937  001820  6A16               	clrf	??_check_sensors& (0+255),c
  2938  001822  2A16               	incf	??_check_sensors& (0+255),f,c
  2939  001824  D001               	goto	u2068
  2940  001826                     u2050:
  2941  001826  6A16               	clrf	??_check_sensors& (0+255),c
  2942  001828                     u2068:
  2943  001828  504B               	movf	_SeeLine,w,c
  2944  00182A  1816               	xorwf	??_check_sensors,w,c
  2945  00182C  0BFE               	andlw	-2
  2946  00182E  1816               	xorwf	??_check_sensors,w,c
  2947  001830  6E4B               	movwf	_SeeLine,c
  2948  001832  0012               	return		;funcret
  2949  001834                     __end_of_check_sensors:
  2950                           	opt stack 0
  2951                           stkptr	equ	0xFFC
  2952                           tblptru	equ	0xFF8
  2953                           tblptrh	equ	0xFF7
  2954                           tblptrl	equ	0xFF6
  2955                           tablat	equ	0xFF5
  2956                           intcon	equ	0xFF2
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _adc *****************
  2962 ;; Defined at:
  2963 ;;		line 229 in file "../Robot Files/sumovore.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  channel         1    wreg     unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  channel         1   20[COMRAM] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2   18[COMRAM] unsigned int 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;Total ram usage:        3 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		_BusyADC
  2986 ;;		_ConvertADC
  2987 ;;		_ReadADC
  2988 ;;		_SetChanADC
  2989 ;; This function is called by:
  2990 ;;		_check_sensors
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text27
  2995  001EAA                     __ptext27:
  2996                           	opt stack 0
  2997  001EAA                     _adc:
  2998                           	opt stack 27
  2999                           
  3000                           ;incstack = 0
  3001                           ;adc@channel stored from wreg
  3002  001EAA  6E15               	movwf	adc@channel,c
  3003                           
  3004                           ;sumovore.c: 231: SetChanADC( channel );
  3005  001EAC  5015               	movf	adc@channel,w,c
  3006  001EAE  EC34  F010         	call	_SetChanADC
  3007                           
  3008                           ;sumovore.c: 232: ConvertADC();
  3009  001EB2  EC8E  F010         	call	_ConvertADC	;wreg free
  3010                           
  3011                           ;sumovore.c: 233: while( BusyADC() );
  3012  001EB6  D000               	goto	l2405
  3013  001EB8                     l2405:
  3014  001EB8  EC72  F010         	call	_BusyADC	;wreg free
  3015  001EBC  0900               	iorlw	0
  3016  001EBE  A4D8               	btfss	status,2,c
  3017  001EC0  D7FB               	goto	l2405
  3018                           
  3019                           ;sumovore.c: 235: return ReadADC();
  3020  001EC2  EC63  F010         	call	_ReadADC	;wreg free
  3021  001EC6  C00F  F013         	movff	?_ReadADC,?_adc
  3022  001ECA  C010  F014         	movff	?_ReadADC+1,?_adc+1
  3023  001ECE  D000               	goto	l286
  3024  001ED0                     l286:
  3025  001ED0  0012               	return		;funcret
  3026  001ED2                     __end_of_adc:
  3027                           	opt stack 0
  3028                           stkptr	equ	0xFFC
  3029                           tblptru	equ	0xFF8
  3030                           tblptrh	equ	0xFF7
  3031                           tblptrl	equ	0xFF6
  3032                           tablat	equ	0xFF5
  3033                           intcon	equ	0xFF2
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _SetChanADC *****************
  3039 ;; Defined at:
  3040 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  channel         1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  channel         1   15[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;		None               void
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        2 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_adc
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text28
  3069  002068                     __ptext28:
  3070                           	opt stack 0
  3071  002068                     _SetChanADC:
  3072                           	opt stack 27
  3073                           
  3074                           ;incstack = 0
  3075                           ;SetChanADC@channel stored from wreg
  3076  002068  6E10               	movwf	SetChanADC@channel,c
  3077  00206A  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  3078  00206E  0EC3               	movlw	195
  3079  002070  160F               	andwf	??_SetChanADC,f,c
  3080  002072  90D8               	bcf	status,0,c
  3081  002074  3010               	rrcf	SetChanADC@channel,w,c
  3082  002076  0B3C               	andlw	60
  3083  002078  100F               	iorwf	??_SetChanADC,w,c
  3084  00207A  6EC2               	movwf	4034,c	;volatile
  3085  00207C  0012               	return		;funcret
  3086  00207E                     __end_of_SetChanADC:
  3087                           	opt stack 0
  3088                           stkptr	equ	0xFFC
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           intcon	equ	0xFF2
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _ReadADC *****************
  3099 ;; Defined at:
  3100 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  2   14[COMRAM] int 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:        4 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    1
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_adc
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text29
  3129  0020C6                     __ptext29:
  3130                           	opt stack 0
  3131  0020C6                     _ReadADC:
  3132                           	opt stack 27
  3133                           
  3134                           ;incstack = 0
  3135  0020C6  50C4               	movf	4036,w,c	;volatile
  3136  0020C8  6E11               	movwf	??_ReadADC& (0+255),c
  3137  0020CA  50C3               	movf	4035,w,c	;volatile
  3138  0020CC  6E0F               	movwf	?_ReadADC,c
  3139  0020CE  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  3140  0020D2  D000               	goto	l437
  3141  0020D4                     l437:
  3142  0020D4  0012               	return		;funcret
  3143  0020D6                     __end_of_ReadADC:
  3144                           	opt stack 0
  3145                           stkptr	equ	0xFFC
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           intcon	equ	0xFF2
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           status	equ	0xFD8
  3154                           
  3155 ;; *************** function _ConvertADC *****************
  3156 ;; Defined at:
  3157 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;		None               void
  3164 ;; Registers used:
  3165 ;;		None
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_adc
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text30
  3186  00211C                     __ptext30:
  3187                           	opt stack 0
  3188  00211C                     _ConvertADC:
  3189                           	opt stack 27
  3190                           
  3191                           ;incstack = 0
  3192  00211C  82C2               	bsf	4034,1,c	;volatile
  3193  00211E  0012               	return		;funcret
  3194  002120                     __end_of_ConvertADC:
  3195                           	opt stack 0
  3196                           stkptr	equ	0xFFC
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _BusyADC *****************
  3207 ;; Defined at:
  3208 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      unsigned char 
  3215 ;; Registers used:
  3216 ;;		wreg
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_adc
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text31
  3237  0020E4                     __ptext31:
  3238                           	opt stack 0
  3239  0020E4                     _BusyADC:
  3240                           	opt stack 27
  3241                           
  3242                           ;incstack = 0
  3243  0020E4  A2C2               	btfss	4034,1,c	;volatile
  3244  0020E6  D002               	goto	u230
  3245  0020E8  0E01               	movlw	1
  3246  0020EA  D002               	goto	l407
  3247  0020EC                     u230:
  3248  0020EC  0E00               	movlw	0
  3249  0020EE  D000               	goto	l407
  3250  0020F0                     l407:
  3251  0020F0  0012               	return		;funcret
  3252  0020F2                     __end_of_BusyADC:
  3253                           	opt stack 0
  3254                           stkptr	equ	0xFFC
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           intcon	equ	0xFF2
  3260                           postinc0	equ	0xFEE
  3261                           wreg	equ	0xFE8
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _PID_LineFollowing *****************
  3265 ;; Defined at:
  3266 ;;		line 82 in file "../Robot Files/main.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  error           2   51[COMRAM] PTR char 
  3269 ;;		 -> main@error(3), 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        7 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    3
  3288 ;; This function calls:
  3289 ;;		_MotorControl
  3290 ;;		_ReadTimer0
  3291 ;;		___aldiv
  3292 ;;		___lwdiv
  3293 ;;		___lwmod
  3294 ;;		___wmul
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text32
  3301  001086                     __ptext32:
  3302                           	opt stack 0
  3303  001086                     _PID_LineFollowing:
  3304                           	opt stack 27
  3305                           
  3306                           ;main.c: 84: static int delta_velocity = 0;
  3307                           ;main.c: 86: static int D = 0;
  3308                           ;main.c: 89: if (!(ReadTimer0()%I_CONSTANT))
  3309                           
  3310                           ;incstack = 0
  3311  001086  EC51  F010         	call	_ReadTimer0	;wreg free
  3312  00108A  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  3313  00108E  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  3314  001092  0E11               	movlw	low _I_CONSTANT
  3315  001094  6EF6               	movwf	tblptrl,c
  3316  001096                     	if	1	;There is more than 1 active tblptr byte
  3317  001096  0E10               	movlw	high _I_CONSTANT
  3318  001098  6EF7               	movwf	tblptrh,c
  3319  00109A                     	endif
  3320  00109A                     	if	1	;There are 3 active tblptr bytes
  3321  00109A  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  3322  00109C  6EF8               	movwf	tblptru,c
  3323  00109E                     	endif
  3324  00109E  0009               	tblrd		*+
  3325  0010A0  CFF5 F015          	movff	tablat,___lwmod@divisor
  3326  0010A4  000A               	tblrd		*-
  3327  0010A6  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  3328  0010AA  EC8B  F00E         	call	___lwmod	;wreg free
  3329  0010AE  5013               	movf	?___lwmod,w,c
  3330  0010B0  1014               	iorwf	?___lwmod+1,w,c
  3331  0010B2  A4D8               	btfss	status,2,c
  3332  0010B4  D077               	goto	l2615
  3333                           
  3334                           ;main.c: 90: {
  3335                           ;main.c: 91: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=1600
      +                           && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  3336  0010B6  BE46               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3337  0010B8  D006               	goto	l2591
  3338  0010BA  0E40               	movlw	64
  3339  0010BC  5C45               	subwf	PID_LineFollowing@delta_velocity,w,c
  3340  0010BE  0E06               	movlw	6
  3341  0010C0  5846               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3342  0010C2  B0D8               	btfsc	status,0,c
  3343  0010C4  D008               	goto	l2593
  3344  0010C6                     l2591:
  3345  0010C6  BE46               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3346  0010C8  D006               	goto	l2593
  3347  0010CA  0E41               	movlw	65
  3348  0010CC  5C45               	subwf	PID_LineFollowing@delta_velocity,w,c
  3349  0010CE  0E06               	movlw	6
  3350  0010D0  5846               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3351  0010D2  B0D8               	btfsc	status,0,c
  3352  0010D4  D024               	goto	l2601
  3353  0010D6                     l2593:
  3354  0010D6  BE46               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3355  0010D8  D00F               	goto	l2597
  3356  0010DA  0E40               	movlw	64
  3357  0010DC  5C45               	subwf	PID_LineFollowing@delta_velocity,w,c
  3358  0010DE  0E06               	movlw	6
  3359  0010E0  5846               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3360  0010E2  A0D8               	btfss	status,0,c
  3361  0010E4  D009               	goto	l2597
  3362  0010E6  EE20 F002          	lfsr	2,2
  3363  0010EA  5034               	movf	PID_LineFollowing@error,w,c
  3364  0010EC  26D9               	addwf	fsr2l,f,c
  3365  0010EE  5035               	movf	PID_LineFollowing@error+1,w,c
  3366  0010F0  22DA               	addwfc	fsr2h,f,c
  3367  0010F2  0E00               	movlw	0
  3368  0010F4  BEDB               	btfsc	plusw2,7,c
  3369  0010F6  D013               	goto	l2601
  3370  0010F8                     l2597:
  3371  0010F8  AE46               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  3372  0010FA  D054               	goto	l2615
  3373  0010FC  0EC1               	movlw	193
  3374  0010FE  5C45               	subwf	PID_LineFollowing@delta_velocity,w,c
  3375  001100  0EF9               	movlw	249
  3376  001102  5846               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3377  001104  B0D8               	btfsc	status,0,c
  3378  001106  D04E               	goto	l2615
  3379  001108  EE20 F002          	lfsr	2,2
  3380  00110C  5034               	movf	PID_LineFollowing@error,w,c
  3381  00110E  26D9               	addwf	fsr2l,f,c
  3382  001110  5035               	movf	PID_LineFollowing@error+1,w,c
  3383  001112  22DA               	addwfc	fsr2h,f,c
  3384  001114  50DF               	movf	indf2,w,c
  3385  001116  0A80               	xorlw	128
  3386  001118  0F7F               	addlw	-129
  3387  00111A  A0D8               	btfss	status,0,c
  3388  00111C  D043               	goto	l2615
  3389  00111E                     l2601:
  3390                           
  3391                           ;main.c: 93: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && error
      +                          [2]>0))
  3392  00111E  BE48               	btfsc	_I+1,7,c
  3393  001120  D006               	goto	l2603
  3394  001122  0EC9               	movlw	201
  3395  001124  5C47               	subwf	_I,w,c
  3396  001126  0E0C               	movlw	12
  3397  001128  5848               	subwfb	_I+1,w,c
  3398  00112A  B0D8               	btfsc	status,0,c
  3399  00112C  D008               	goto	l2605
  3400  00112E                     l2603:
  3401  00112E  AE48               	btfss	_I+1,7,c
  3402  001130  D02A               	goto	l2613
  3403  001132  0E37               	movlw	55
  3404  001134  5C47               	subwf	_I,w,c
  3405  001136  0EF3               	movlw	243
  3406  001138  5848               	subwfb	_I+1,w,c
  3407  00113A  B0D8               	btfsc	status,0,c
  3408  00113C  D024               	goto	l2613
  3409  00113E                     l2605:
  3410  00113E  BE48               	btfsc	_I+1,7,c
  3411  001140  D00F               	goto	l2609
  3412  001142  0EC9               	movlw	201
  3413  001144  5C47               	subwf	_I,w,c
  3414  001146  0E0C               	movlw	12
  3415  001148  5848               	subwfb	_I+1,w,c
  3416  00114A  A0D8               	btfss	status,0,c
  3417  00114C  D009               	goto	l2609
  3418  00114E  EE20 F002          	lfsr	2,2
  3419  001152  5034               	movf	PID_LineFollowing@error,w,c
  3420  001154  26D9               	addwf	fsr2l,f,c
  3421  001156  5035               	movf	PID_LineFollowing@error+1,w,c
  3422  001158  22DA               	addwfc	fsr2h,f,c
  3423  00115A  0E00               	movlw	0
  3424  00115C  BEDB               	btfsc	plusw2,7,c
  3425  00115E  D013               	goto	l2613
  3426  001160                     l2609:
  3427  001160  AE48               	btfss	_I+1,7,c
  3428  001162  D020               	goto	l2615
  3429  001164  0E37               	movlw	55
  3430  001166  5C47               	subwf	_I,w,c
  3431  001168  0EF3               	movlw	243
  3432  00116A  5848               	subwfb	_I+1,w,c
  3433  00116C  B0D8               	btfsc	status,0,c
  3434  00116E  D01A               	goto	l2615
  3435  001170  EE20 F002          	lfsr	2,2
  3436  001174  5034               	movf	PID_LineFollowing@error,w,c
  3437  001176  26D9               	addwf	fsr2l,f,c
  3438  001178  5035               	movf	PID_LineFollowing@error+1,w,c
  3439  00117A  22DA               	addwfc	fsr2h,f,c
  3440  00117C  50DF               	movf	indf2,w,c
  3441  00117E  0A80               	xorlw	128
  3442  001180  0F7F               	addlw	-129
  3443  001182  A0D8               	btfss	status,0,c
  3444  001184  D00F               	goto	l2615
  3445  001186                     l2613:
  3446                           
  3447                           ;main.c: 95: I += error[2];
  3448  001186  EE20 F002          	lfsr	2,2
  3449  00118A  5034               	movf	PID_LineFollowing@error,w,c
  3450  00118C  26D9               	addwf	fsr2l,f,c
  3451  00118E  5035               	movf	PID_LineFollowing@error+1,w,c
  3452  001190  22DA               	addwfc	fsr2h,f,c
  3453  001192  50DF               	movf	indf2,w,c
  3454  001194  6E36               	movwf	??_PID_LineFollowing& (0+255),c
  3455  001196  5036               	movf	??_PID_LineFollowing,w,c
  3456  001198  2647               	addwf	_I,f,c
  3457  00119A  0E00               	movlw	0
  3458  00119C  BE36               	btfsc	??_PID_LineFollowing,7,c
  3459  00119E  0EFF               	movlw	255
  3460  0011A0  2248               	addwfc	_I+1,f,c
  3461  0011A2  D000               	goto	l2615
  3462  0011A4                     l2615:
  3463                           
  3464                           ;main.c: 96: }
  3465                           ;main.c: 99: if(error[1]!=error[2])
  3466  0011A4  EE20 F002          	lfsr	2,2
  3467  0011A8  5034               	movf	PID_LineFollowing@error,w,c
  3468  0011AA  26D9               	addwf	fsr2l,f,c
  3469  0011AC  5035               	movf	PID_LineFollowing@error+1,w,c
  3470  0011AE  22DA               	addwfc	fsr2h,f,c
  3471  0011B0  EE10 F001          	lfsr	1,1
  3472  0011B4  5034               	movf	PID_LineFollowing@error,w,c
  3473  0011B6  26E1               	addwf	fsr1l,f,c
  3474  0011B8  5035               	movf	PID_LineFollowing@error+1,w,c
  3475  0011BA  22E2               	addwfc	fsr1h,f,c
  3476  0011BC  50DE               	movf	postinc2,w,c
  3477  0011BE  18E6               	xorwf	postinc1,w,c
  3478  0011C0  B4D8               	btfsc	status,2,c
  3479  0011C2  D058               	goto	l2623
  3480                           
  3481                           ;main.c: 100: {
  3482                           ;main.c: 101: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  3483  0011C4  EE20 F001          	lfsr	2,1
  3484  0011C8  5034               	movf	PID_LineFollowing@error,w,c
  3485  0011CA  26D9               	addwf	fsr2l,f,c
  3486  0011CC  5035               	movf	PID_LineFollowing@error+1,w,c
  3487  0011CE  22DA               	addwfc	fsr2h,f,c
  3488  0011D0  50DF               	movf	indf2,w,c
  3489  0011D2  6E36               	movwf	??_PID_LineFollowing& (0+255),c
  3490  0011D4  6A37               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3491  0011D6  BE36               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3492  0011D8  0637               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3493  0011DA  1E36               	comf	??_PID_LineFollowing,f,c
  3494  0011DC  1E37               	comf	??_PID_LineFollowing+1,f,c
  3495  0011DE  4A36               	infsnz	??_PID_LineFollowing,f,c
  3496  0011E0  2A37               	incf	??_PID_LineFollowing+1,f,c
  3497  0011E2  EE20 F002          	lfsr	2,2
  3498  0011E6  5034               	movf	PID_LineFollowing@error,w,c
  3499  0011E8  26D9               	addwf	fsr2l,f,c
  3500  0011EA  5035               	movf	PID_LineFollowing@error+1,w,c
  3501  0011EC  22DA               	addwfc	fsr2h,f,c
  3502  0011EE  50DF               	movf	indf2,w,c
  3503  0011F0  6E38               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3504  0011F2  5036               	movf	??_PID_LineFollowing,w,c
  3505  0011F4  2438               	addwf	??_PID_LineFollowing+2,w,c
  3506  0011F6  6E1D               	movwf	___wmul@multiplier,c
  3507  0011F8  0E00               	movlw	0
  3508  0011FA  BE38               	btfsc	??_PID_LineFollowing+2,7,c
  3509  0011FC  0EFF               	movlw	255
  3510  0011FE  2037               	addwfc	??_PID_LineFollowing+1,w,c
  3511  001200  6E1E               	movwf	___wmul@multiplier+1,c
  3512  001202  EC51  F010         	call	_ReadTimer0	;wreg free
  3513  001206  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  3514  00120A  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  3515  00120E  0E0F               	movlw	low _D_CONSTANT
  3516  001210  6EF6               	movwf	tblptrl,c
  3517  001212                     	if	1	;There is more than 1 active tblptr byte
  3518  001212  0E10               	movlw	high _D_CONSTANT
  3519  001214  6EF7               	movwf	tblptrh,c
  3520  001216                     	endif
  3521  001216                     	if	1	;There are 3 active tblptr bytes
  3522  001216  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3523  001218  6EF8               	movwf	tblptru,c
  3524  00121A                     	endif
  3525  00121A  0009               	tblrd		*+
  3526  00121C  CFF5 F013          	movff	tablat,___lwdiv@dividend
  3527  001220  000A               	tblrd		*-
  3528  001222  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  3529  001226  EC5D  F00E         	call	___lwdiv	;wreg free
  3530  00122A  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  3531  00122E  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3532  001232  EC69  F00F         	call	___wmul	;wreg free
  3533  001236  C01D  F043         	movff	?___wmul,PID_LineFollowing@D
  3534  00123A  C01E  F044         	movff	?___wmul+1,PID_LineFollowing@D+1
  3535                           
  3536                           ;main.c: 103: error[0]=error[1];
  3537  00123E  EE20 F001          	lfsr	2,1
  3538  001242  5034               	movf	PID_LineFollowing@error,w,c
  3539  001244  26D9               	addwf	fsr2l,f,c
  3540  001246  5035               	movf	PID_LineFollowing@error+1,w,c
  3541  001248  22DA               	addwfc	fsr2h,f,c
  3542  00124A  C034  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3543  00124E  C035  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3544  001252  CFDF FFE7          	movff	indf2,indf1
  3545                           
  3546                           ;main.c: 104: error[1]=error[2];
  3547  001256  EE20 F002          	lfsr	2,2
  3548  00125A  5034               	movf	PID_LineFollowing@error,w,c
  3549  00125C  26D9               	addwf	fsr2l,f,c
  3550  00125E  5035               	movf	PID_LineFollowing@error+1,w,c
  3551  001260  22DA               	addwfc	fsr2h,f,c
  3552  001262  EE10 F001          	lfsr	1,1
  3553  001266  5034               	movf	PID_LineFollowing@error,w,c
  3554  001268  26E1               	addwf	fsr1l,f,c
  3555  00126A  5035               	movf	PID_LineFollowing@error+1,w,c
  3556  00126C  22E2               	addwfc	fsr1h,f,c
  3557  00126E  CFDF FFE7          	movff	indf2,indf1
  3558  001272  D000               	goto	l2623
  3559  001274                     l2623:
  3560                           
  3561                           ;main.c: 105: }
  3562                           ;main.c: 107: if(TMR0IF)
  3563  001274  A4F2               	btfss	intcon,2,c	;volatile
  3564  001276  D044               	goto	l94
  3565                           
  3566                           ;main.c: 108: {
  3567                           ;main.c: 109: D = D_CONSTANT/65535*(error[1]-error[0]);
  3568  001278  C034  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3569  00127C  C035  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3570  001280  50DF               	movf	indf2,w,c
  3571  001282  6E36               	movwf	??_PID_LineFollowing& (0+255),c
  3572  001284  6A37               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3573  001286  BE36               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3574  001288  0637               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3575  00128A  1E36               	comf	??_PID_LineFollowing,f,c
  3576  00128C  1E37               	comf	??_PID_LineFollowing+1,f,c
  3577  00128E  4A36               	infsnz	??_PID_LineFollowing,f,c
  3578  001290  2A37               	incf	??_PID_LineFollowing+1,f,c
  3579  001292  EE20 F001          	lfsr	2,1
  3580  001296  5034               	movf	PID_LineFollowing@error,w,c
  3581  001298  26D9               	addwf	fsr2l,f,c
  3582  00129A  5035               	movf	PID_LineFollowing@error+1,w,c
  3583  00129C  22DA               	addwfc	fsr2h,f,c
  3584  00129E  50DF               	movf	indf2,w,c
  3585  0012A0  6E38               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3586  0012A2  5036               	movf	??_PID_LineFollowing,w,c
  3587  0012A4  2438               	addwf	??_PID_LineFollowing+2,w,c
  3588  0012A6  6E1D               	movwf	___wmul@multiplier,c
  3589  0012A8  0E00               	movlw	0
  3590  0012AA  BE38               	btfsc	??_PID_LineFollowing+2,7,c
  3591  0012AC  0EFF               	movlw	255
  3592  0012AE  2037               	addwfc	??_PID_LineFollowing+1,w,c
  3593  0012B0  6E1E               	movwf	___wmul@multiplier+1,c
  3594  0012B2  0EFF               	movlw	255
  3595  0012B4  6E13               	movwf	___aldiv@divisor,c
  3596  0012B6  0EFF               	movlw	255
  3597  0012B8  6E14               	movwf	___aldiv@divisor+1,c
  3598  0012BA  0E00               	movlw	0
  3599  0012BC  6E15               	movwf	___aldiv@divisor+2,c
  3600  0012BE  0E00               	movlw	0
  3601  0012C0  6E16               	movwf	___aldiv@divisor+3,c
  3602  0012C2  0E0F               	movlw	low _D_CONSTANT
  3603  0012C4  6EF6               	movwf	tblptrl,c
  3604  0012C6                     	if	1	;There is more than 1 active tblptr byte
  3605  0012C6  0E10               	movlw	high _D_CONSTANT
  3606  0012C8  6EF7               	movwf	tblptrh,c
  3607  0012CA                     	endif
  3608  0012CA                     	if	1	;There are 3 active tblptr bytes
  3609  0012CA  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3610  0012CC  6EF8               	movwf	tblptru,c
  3611  0012CE                     	endif
  3612  0012CE  0009               	tblrd		*+
  3613  0012D0  CFF5 F039          	movff	tablat,??_PID_LineFollowing+3
  3614  0012D4  0009               	tblrd		*+
  3615  0012D6  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+4
  3616  0012DA  C039  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3617  0012DE  C03A  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3618  0012E2  6A11               	clrf	___aldiv@dividend+2,c
  3619  0012E4  6A12               	clrf	___aldiv@dividend+3,c
  3620  0012E6  EC72  F00A         	call	___aldiv	;wreg free
  3621  0012EA  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3622  0012EE  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3623  0012F2  EC69  F00F         	call	___wmul	;wreg free
  3624  0012F6  C01D  F043         	movff	?___wmul,PID_LineFollowing@D
  3625  0012FA  C01E  F044         	movff	?___wmul+1,PID_LineFollowing@D+1
  3626                           
  3627                           ;main.c: 110: TMR0IF = 0;
  3628  0012FE  94F2               	bcf	intcon,2,c	;volatile
  3629  001300                     l94:
  3630                           
  3631                           ;main.c: 111: }
  3632                           ;main.c: 115: delta_velocity = P_CONSTANT*error[2] + I + D;
  3633  001300  EE20 F002          	lfsr	2,2
  3634  001304  5034               	movf	PID_LineFollowing@error,w,c
  3635  001306  26D9               	addwf	fsr2l,f,c
  3636  001308  5035               	movf	PID_LineFollowing@error+1,w,c
  3637  00130A  22DA               	addwfc	fsr2h,f,c
  3638  00130C  50DF               	movf	indf2,w,c
  3639  00130E  6E1D               	movwf	___wmul@multiplier,c
  3640  001310  6A1E               	clrf	___wmul@multiplier+1,c
  3641  001312  BE1D               	btfsc	___wmul@multiplier,7,c
  3642  001314  061E               	decf	___wmul@multiplier+1,f,c
  3643  001316  0E13               	movlw	low _P_CONSTANT
  3644  001318  6EF6               	movwf	tblptrl,c
  3645  00131A                     	if	1	;There is more than 1 active tblptr byte
  3646  00131A  0E10               	movlw	high _P_CONSTANT
  3647  00131C  6EF7               	movwf	tblptrh,c
  3648  00131E                     	endif
  3649  00131E                     	if	1	;There are 3 active tblptr bytes
  3650  00131E  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3651  001320  6EF8               	movwf	tblptru,c
  3652  001322                     	endif
  3653  001322  0009               	tblrd		*+
  3654  001324  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3655  001328  000A               	tblrd		*-
  3656  00132A  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3657  00132E  EC69  F00F         	call	___wmul	;wreg free
  3658  001332  5047               	movf	_I,w,c
  3659  001334  261D               	addwf	?___wmul,f,c
  3660  001336  5048               	movf	_I+1,w,c
  3661  001338  221E               	addwfc	?___wmul+1,f,c
  3662  00133A  5043               	movf	PID_LineFollowing@D,w,c
  3663  00133C  241D               	addwf	?___wmul,w,c
  3664  00133E  6E45               	movwf	PID_LineFollowing@delta_velocity,c
  3665  001340  5044               	movf	PID_LineFollowing@D+1,w,c
  3666  001342  201E               	addwfc	?___wmul+1,w,c
  3667  001344  6E46               	movwf	PID_LineFollowing@delta_velocity+1,c
  3668                           
  3669                           ;main.c: 117: MotorControl(delta_velocity);
  3670  001346  C045  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3671  00134A  C046  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3672  00134E  ECAA  F009         	call	_MotorControl	;wreg free
  3673  001352  0012               	return		;funcret
  3674  001354                     __end_of_PID_LineFollowing:
  3675                           	opt stack 0
  3676                           stkptr	equ	0xFFC
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           indf1	equ	0xFE7
  3685                           postinc1	equ	0xFE6
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           indf2	equ	0xFDF
  3689                           postinc2	equ	0xFDE
  3690                           plusw2	equ	0xFDB
  3691                           fsr2h	equ	0xFDA
  3692                           fsr2l	equ	0xFD9
  3693                           status	equ	0xFD8
  3694                           
  3695 ;; *************** function ___lwmod *****************
  3696 ;; Defined at:
  3697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  dividend        2   18[COMRAM] unsigned int 
  3700 ;;  divisor         2   20[COMRAM] unsigned int 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  counter         1   22[COMRAM] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2   18[COMRAM] unsigned int 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:        5 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_PID_LineFollowing
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text33
  3727  001D16                     __ptext33:
  3728                           	opt stack 0
  3729  001D16                     ___lwmod:
  3730                           	opt stack 28
  3731                           
  3732                           ;incstack = 0
  3733  001D16  5015               	movf	___lwmod@divisor,w,c
  3734  001D18  1016               	iorwf	___lwmod@divisor+1,w,c
  3735  001D1A  B4D8               	btfsc	status,2,c
  3736  001D1C  D01D               	goto	l1125
  3737  001D1E  0E01               	movlw	1
  3738  001D20  6E17               	movwf	___lwmod@counter,c
  3739  001D22  D005               	goto	l2483
  3740  001D24                     l2481:
  3741  001D24  90D8               	bcf	status,0,c
  3742  001D26  3615               	rlcf	___lwmod@divisor,f,c
  3743  001D28  3616               	rlcf	___lwmod@divisor+1,f,c
  3744  001D2A  2A17               	incf	___lwmod@counter,f,c
  3745  001D2C  D000               	goto	l2483
  3746  001D2E                     l2483:
  3747  001D2E  BE16               	btfsc	___lwmod@divisor+1,7,c
  3748  001D30  D002               	goto	l2485
  3749  001D32  D7F8               	goto	l2481
  3750  001D34  D000               	goto	l2485
  3751  001D36                     l2485:
  3752  001D36  5015               	movf	___lwmod@divisor,w,c
  3753  001D38  5C13               	subwf	___lwmod@dividend,w,c
  3754  001D3A  5016               	movf	___lwmod@divisor+1,w,c
  3755  001D3C  5814               	subwfb	___lwmod@dividend+1,w,c
  3756  001D3E  A0D8               	btfss	status,0,c
  3757  001D40  D005               	goto	l2489
  3758  001D42  5015               	movf	___lwmod@divisor,w,c
  3759  001D44  5E13               	subwf	___lwmod@dividend,f,c
  3760  001D46  5016               	movf	___lwmod@divisor+1,w,c
  3761  001D48  5A14               	subwfb	___lwmod@dividend+1,f,c
  3762  001D4A  D000               	goto	l2489
  3763  001D4C                     l2489:
  3764  001D4C  90D8               	bcf	status,0,c
  3765  001D4E  3216               	rrcf	___lwmod@divisor+1,f,c
  3766  001D50  3215               	rrcf	___lwmod@divisor,f,c
  3767  001D52  2E17               	decfsz	___lwmod@counter,f,c
  3768  001D54  D7F0               	goto	l2485
  3769  001D56  D000               	goto	l1125
  3770  001D58                     l1125:
  3771  001D58  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3772  001D5C  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3773  001D60  0012               	return		;funcret
  3774  001D62                     __end_of___lwmod:
  3775                           	opt stack 0
  3776                           stkptr	equ	0xFFC
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           intcon	equ	0xFF2
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           indf1	equ	0xFE7
  3785                           postinc1	equ	0xFE6
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           plusw2	equ	0xFDB
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function ___lwdiv *****************
  3796 ;; Defined at:
  3797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  dividend        2   18[COMRAM] unsigned int 
  3800 ;;  divisor         2   20[COMRAM] unsigned int 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  quotient        2   22[COMRAM] unsigned int 
  3803 ;;  counter         1   24[COMRAM] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2   18[COMRAM] unsigned int 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;Total ram usage:        7 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_PID_LineFollowing
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text34
  3828  001CBA                     __ptext34:
  3829                           	opt stack 0
  3830  001CBA                     ___lwdiv:
  3831                           	opt stack 28
  3832                           
  3833                           ;incstack = 0
  3834  001CBA  0E00               	movlw	0
  3835  001CBC  6E18               	movwf	___lwdiv@quotient+1,c
  3836  001CBE  0E00               	movlw	0
  3837  001CC0  6E17               	movwf	___lwdiv@quotient,c
  3838  001CC2  5015               	movf	___lwdiv@divisor,w,c
  3839  001CC4  1016               	iorwf	___lwdiv@divisor+1,w,c
  3840  001CC6  B4D8               	btfsc	status,2,c
  3841  001CC8  D021               	goto	l1115
  3842  001CCA  0E01               	movlw	1
  3843  001CCC  6E19               	movwf	___lwdiv@counter,c
  3844  001CCE  D005               	goto	l2463
  3845  001CD0                     l2461:
  3846  001CD0  90D8               	bcf	status,0,c
  3847  001CD2  3615               	rlcf	___lwdiv@divisor,f,c
  3848  001CD4  3616               	rlcf	___lwdiv@divisor+1,f,c
  3849  001CD6  2A19               	incf	___lwdiv@counter,f,c
  3850  001CD8  D000               	goto	l2463
  3851  001CDA                     l2463:
  3852  001CDA  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3853  001CDC  D002               	goto	l2465
  3854  001CDE  D7F8               	goto	l2461
  3855  001CE0  D000               	goto	l2465
  3856  001CE2                     l2465:
  3857  001CE2  90D8               	bcf	status,0,c
  3858  001CE4  3617               	rlcf	___lwdiv@quotient,f,c
  3859  001CE6  3618               	rlcf	___lwdiv@quotient+1,f,c
  3860  001CE8  5015               	movf	___lwdiv@divisor,w,c
  3861  001CEA  5C13               	subwf	___lwdiv@dividend,w,c
  3862  001CEC  5016               	movf	___lwdiv@divisor+1,w,c
  3863  001CEE  5814               	subwfb	___lwdiv@dividend+1,w,c
  3864  001CF0  A0D8               	btfss	status,0,c
  3865  001CF2  D006               	goto	l2473
  3866  001CF4  5015               	movf	___lwdiv@divisor,w,c
  3867  001CF6  5E13               	subwf	___lwdiv@dividend,f,c
  3868  001CF8  5016               	movf	___lwdiv@divisor+1,w,c
  3869  001CFA  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3870  001CFC  8017               	bsf	___lwdiv@quotient,0,c
  3871  001CFE  D000               	goto	l2473
  3872  001D00                     l2473:
  3873  001D00  90D8               	bcf	status,0,c
  3874  001D02  3216               	rrcf	___lwdiv@divisor+1,f,c
  3875  001D04  3215               	rrcf	___lwdiv@divisor,f,c
  3876  001D06  2E19               	decfsz	___lwdiv@counter,f,c
  3877  001D08  D7EC               	goto	l2465
  3878  001D0A  D000               	goto	l1115
  3879  001D0C                     l1115:
  3880  001D0C  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3881  001D10  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3882  001D14  0012               	return		;funcret
  3883  001D16                     __end_of___lwdiv:
  3884                           	opt stack 0
  3885                           stkptr	equ	0xFFC
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           intcon	equ	0xFF2
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           indf1	equ	0xFE7
  3894                           postinc1	equ	0xFE6
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           plusw2	equ	0xFDB
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function ___aldiv *****************
  3905 ;; Defined at:
  3906 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  dividend        4   14[COMRAM] long 
  3909 ;;  divisor         4   18[COMRAM] long 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  quotient        4   24[COMRAM] long 
  3912 ;;  sign            1   23[COMRAM] unsigned char 
  3913 ;;  counter         1   22[COMRAM] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  4   14[COMRAM] long 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;Total ram usage:       14 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_PID_LineFollowing
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text35
  3938  0014E4                     __ptext35:
  3939                           	opt stack 0
  3940  0014E4                     ___aldiv:
  3941                           	opt stack 28
  3942                           
  3943                           ;incstack = 0
  3944  0014E4  0E00               	movlw	0
  3945  0014E6  6E18               	movwf	___aldiv@sign,c
  3946  0014E8  AE16               	btfss	___aldiv@divisor+3,7,c
  3947  0014EA  D00B               	goto	l2419
  3948  0014EC  1E16               	comf	___aldiv@divisor+3,f,c
  3949  0014EE  1E15               	comf	___aldiv@divisor+2,f,c
  3950  0014F0  1E14               	comf	___aldiv@divisor+1,f,c
  3951  0014F2  6C13               	negf	___aldiv@divisor,c
  3952  0014F4  0E00               	movlw	0
  3953  0014F6  2214               	addwfc	___aldiv@divisor+1,f,c
  3954  0014F8  2215               	addwfc	___aldiv@divisor+2,f,c
  3955  0014FA  2216               	addwfc	___aldiv@divisor+3,f,c
  3956  0014FC  0E01               	movlw	1
  3957  0014FE  6E18               	movwf	___aldiv@sign,c
  3958  001500  D000               	goto	l2419
  3959  001502                     l2419:
  3960  001502  AE12               	btfss	___aldiv@dividend+3,7,c
  3961  001504  D00B               	goto	l2425
  3962  001506  1E12               	comf	___aldiv@dividend+3,f,c
  3963  001508  1E11               	comf	___aldiv@dividend+2,f,c
  3964  00150A  1E10               	comf	___aldiv@dividend+1,f,c
  3965  00150C  6C0F               	negf	___aldiv@dividend,c
  3966  00150E  0E00               	movlw	0
  3967  001510  2210               	addwfc	___aldiv@dividend+1,f,c
  3968  001512  2211               	addwfc	___aldiv@dividend+2,f,c
  3969  001514  2212               	addwfc	___aldiv@dividend+3,f,c
  3970  001516  0E01               	movlw	1
  3971  001518  1A18               	xorwf	___aldiv@sign,f,c
  3972  00151A  D000               	goto	l2425
  3973  00151C                     l2425:
  3974  00151C  0E00               	movlw	0
  3975  00151E  6E19               	movwf	___aldiv@quotient,c
  3976  001520  0E00               	movlw	0
  3977  001522  6E1A               	movwf	___aldiv@quotient+1,c
  3978  001524  0E00               	movlw	0
  3979  001526  6E1B               	movwf	___aldiv@quotient+2,c
  3980  001528  0E00               	movlw	0
  3981  00152A  6E1C               	movwf	___aldiv@quotient+3,c
  3982  00152C  5013               	movf	___aldiv@divisor,w,c
  3983  00152E  1014               	iorwf	___aldiv@divisor+1,w,c
  3984  001530  1015               	iorwf	___aldiv@divisor+2,w,c
  3985  001532  1016               	iorwf	___aldiv@divisor+3,w,c
  3986  001534  B4D8               	btfsc	status,2,c
  3987  001536  D02F               	goto	l2447
  3988  001538  0E01               	movlw	1
  3989  00153A  6E17               	movwf	___aldiv@counter,c
  3990  00153C  D007               	goto	l2433
  3991  00153E                     l2431:
  3992  00153E  90D8               	bcf	status,0,c
  3993  001540  3613               	rlcf	___aldiv@divisor,f,c
  3994  001542  3614               	rlcf	___aldiv@divisor+1,f,c
  3995  001544  3615               	rlcf	___aldiv@divisor+2,f,c
  3996  001546  3616               	rlcf	___aldiv@divisor+3,f,c
  3997  001548  2A17               	incf	___aldiv@counter,f,c
  3998  00154A  D000               	goto	l2433
  3999  00154C                     l2433:
  4000  00154C  BE16               	btfsc	___aldiv@divisor+3,7,c
  4001  00154E  D002               	goto	l2435
  4002  001550  D7F6               	goto	l2431
  4003  001552  D000               	goto	l2435
  4004  001554                     l2435:
  4005  001554  90D8               	bcf	status,0,c
  4006  001556  3619               	rlcf	___aldiv@quotient,f,c
  4007  001558  361A               	rlcf	___aldiv@quotient+1,f,c
  4008  00155A  361B               	rlcf	___aldiv@quotient+2,f,c
  4009  00155C  361C               	rlcf	___aldiv@quotient+3,f,c
  4010  00155E  5013               	movf	___aldiv@divisor,w,c
  4011  001560  5C0F               	subwf	___aldiv@dividend,w,c
  4012  001562  5014               	movf	___aldiv@divisor+1,w,c
  4013  001564  5810               	subwfb	___aldiv@dividend+1,w,c
  4014  001566  5015               	movf	___aldiv@divisor+2,w,c
  4015  001568  5811               	subwfb	___aldiv@dividend+2,w,c
  4016  00156A  5016               	movf	___aldiv@divisor+3,w,c
  4017  00156C  5812               	subwfb	___aldiv@dividend+3,w,c
  4018  00156E  A0D8               	btfss	status,0,c
  4019  001570  D00A               	goto	l2443
  4020  001572  5013               	movf	___aldiv@divisor,w,c
  4021  001574  5E0F               	subwf	___aldiv@dividend,f,c
  4022  001576  5014               	movf	___aldiv@divisor+1,w,c
  4023  001578  5A10               	subwfb	___aldiv@dividend+1,f,c
  4024  00157A  5015               	movf	___aldiv@divisor+2,w,c
  4025  00157C  5A11               	subwfb	___aldiv@dividend+2,f,c
  4026  00157E  5016               	movf	___aldiv@divisor+3,w,c
  4027  001580  5A12               	subwfb	___aldiv@dividend+3,f,c
  4028  001582  8019               	bsf	___aldiv@quotient,0,c
  4029  001584  D000               	goto	l2443
  4030  001586                     l2443:
  4031  001586  90D8               	bcf	status,0,c
  4032  001588  3216               	rrcf	___aldiv@divisor+3,f,c
  4033  00158A  3215               	rrcf	___aldiv@divisor+2,f,c
  4034  00158C  3214               	rrcf	___aldiv@divisor+1,f,c
  4035  00158E  3213               	rrcf	___aldiv@divisor,f,c
  4036  001590  2E17               	decfsz	___aldiv@counter,f,c
  4037  001592  D7E0               	goto	l2435
  4038  001594  D000               	goto	l2447
  4039  001596                     l2447:
  4040  001596  5018               	movf	___aldiv@sign,w,c
  4041  001598  B4D8               	btfsc	status,2,c
  4042  00159A  D009               	goto	l2451
  4043  00159C  1E1C               	comf	___aldiv@quotient+3,f,c
  4044  00159E  1E1B               	comf	___aldiv@quotient+2,f,c
  4045  0015A0  1E1A               	comf	___aldiv@quotient+1,f,c
  4046  0015A2  6C19               	negf	___aldiv@quotient,c
  4047  0015A4  0E00               	movlw	0
  4048  0015A6  221A               	addwfc	___aldiv@quotient+1,f,c
  4049  0015A8  221B               	addwfc	___aldiv@quotient+2,f,c
  4050  0015AA  221C               	addwfc	___aldiv@quotient+3,f,c
  4051  0015AC  D000               	goto	l2451
  4052  0015AE                     l2451:
  4053  0015AE  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  4054  0015B2  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  4055  0015B6  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  4056  0015BA  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  4057  0015BE  D000               	goto	l666
  4058  0015C0                     l666:
  4059  0015C0  0012               	return		;funcret
  4060  0015C2                     __end_of___aldiv:
  4061                           	opt stack 0
  4062                           stkptr	equ	0xFFC
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           intcon	equ	0xFF2
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           indf1	equ	0xFE7
  4071                           postinc1	equ	0xFE6
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           indf2	equ	0xFDF
  4075                           postinc2	equ	0xFDE
  4076                           plusw2	equ	0xFDB
  4077                           fsr2h	equ	0xFDA
  4078                           fsr2l	equ	0xFD9
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function _ReadTimer0 *****************
  4082 ;; Defined at:
  4083 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  timer           2   16[COMRAM] struct Timers
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  2   14[COMRAM] unsigned int 
  4090 ;; Registers used:
  4091 ;;		None
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:        4 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_PID_LineFollowing
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text36
  4112  0020A2                     __ptext36:
  4113                           	opt stack 0
  4114  0020A2                     _ReadTimer0:
  4115                           	opt stack 28
  4116                           
  4117                           ;incstack = 0
  4118  0020A2  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4119  0020A6  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4120  0020AA  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4121  0020AE  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4122  0020B2  0012               	return		;funcret
  4123  0020B4                     __end_of_ReadTimer0:
  4124                           	opt stack 0
  4125                           stkptr	equ	0xFFC
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           intcon	equ	0xFF2
  4131                           postinc0	equ	0xFEE
  4132                           wreg	equ	0xFE8
  4133                           indf1	equ	0xFE7
  4134                           postinc1	equ	0xFE6
  4135                           fsr1h	equ	0xFE2
  4136                           fsr1l	equ	0xFE1
  4137                           indf2	equ	0xFDF
  4138                           postinc2	equ	0xFDE
  4139                           plusw2	equ	0xFDB
  4140                           fsr2h	equ	0xFDA
  4141                           fsr2l	equ	0xFD9
  4142                           status	equ	0xFD8
  4143                           
  4144 ;; *************** function _OpenTimer0 *****************
  4145 ;; Defined at:
  4146 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  config          1    wreg     unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  config          1   14[COMRAM] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;		None               void
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;Total ram usage:        1 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_main
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text37
  4175  001F88                     __ptext37:
  4176                           	opt stack 0
  4177  001F88                     _OpenTimer0:
  4178                           	opt stack 29
  4179                           
  4180                           ;incstack = 0
  4181                           ;OpenTimer0@config stored from wreg
  4182  001F88  6E0F               	movwf	OpenTimer0@config,c
  4183  001F8A  500F               	movf	OpenTimer0@config,w,c
  4184  001F8C  0B7F               	andlw	127
  4185  001F8E  6ED5               	movwf	4053,c	;volatile
  4186  001F90  0E00               	movlw	0
  4187  001F92  6ED7               	movwf	4055,c	;volatile
  4188  001F94  0E00               	movlw	0
  4189  001F96  6ED6               	movwf	4054,c	;volatile
  4190  001F98  94F2               	bcf	intcon,2,c	;volatile
  4191  001F9A  AE0F               	btfss	OpenTimer0@config,7,c
  4192  001F9C  D002               	goto	l500
  4193  001F9E  8AF2               	bsf	intcon,5,c	;volatile
  4194  001FA0  D001               	goto	l501
  4195  001FA2                     l500:
  4196  001FA2  9AF2               	bcf	intcon,5,c	;volatile
  4197  001FA4                     l501:
  4198  001FA4  8ED5               	bsf	4053,7,c	;volatile
  4199  001FA6  0012               	return		;funcret
  4200  001FA8                     __end_of_OpenTimer0:
  4201                           	opt stack 0
  4202                           stkptr	equ	0xFFC
  4203                           tblptru	equ	0xFF8
  4204                           tblptrh	equ	0xFF7
  4205                           tblptrl	equ	0xFF6
  4206                           tablat	equ	0xFF5
  4207                           intcon	equ	0xFF2
  4208                           postinc0	equ	0xFEE
  4209                           wreg	equ	0xFE8
  4210                           indf1	equ	0xFE7
  4211                           postinc1	equ	0xFE6
  4212                           fsr1h	equ	0xFE2
  4213                           fsr1l	equ	0xFE1
  4214                           indf2	equ	0xFDF
  4215                           postinc2	equ	0xFDE
  4216                           plusw2	equ	0xFDB
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _LVtrap *****************
  4222 ;; Defined at:
  4223 ;;		line 448 in file "../Robot Files/sumovore.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;		None               void
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    3
  4244 ;; This function calls:
  4245 ;;		_gtrap
  4246 ;;		_openPORTD
  4247 ;;		_printf
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text38
  4254  001FA8                     __ptext38:
  4255                           	opt stack 0
  4256  001FA8                     _LVtrap:
  4257                           	opt stack 27
  4258                           
  4259                           ;sumovore.c: 450: printf("\\<LVD>");
  4260                           
  4261                           ;incstack = 0
  4262  001FA8  0E71               	movlw	low STR_7
  4263  001FAA  6E0F               	movwf	printf@f,c
  4264  001FAC  0E10               	movlw	high STR_7
  4265  001FAE  6E10               	movwf	printf@f+1,c
  4266  001FB0  EC28  F00F         	call	_printf	;wreg free
  4267                           
  4268                           ;sumovore.c: 451: openPORTD();
  4269  001FB4  EC8B  F010         	call	_openPORTD	;wreg free
  4270                           
  4271                           ;sumovore.c: 452: PORTDbits.RD0=!1;
  4272  001FB8  9083               	bcf	3971,0,c	;volatile
  4273                           
  4274                           ;sumovore.c: 453: PORTDbits.RD1=!0;
  4275  001FBA  8283               	bsf	3971,1,c	;volatile
  4276                           
  4277                           ;sumovore.c: 454: PORTDbits.RD2=!0;
  4278  001FBC  8483               	bsf	3971,2,c	;volatile
  4279                           
  4280                           ;sumovore.c: 455: PORTDbits.RD3=!1;
  4281  001FBE  9683               	bcf	3971,3,c	;volatile
  4282                           
  4283                           ;sumovore.c: 456: PORTDbits.RD4=!0;
  4284  001FC0  8883               	bsf	3971,4,c	;volatile
  4285                           
  4286                           ;sumovore.c: 457: gtrap();
  4287  001FC2  ECFD  F00D         	call	_gtrap	;wreg free
  4288  001FC6  0012               	return		;funcret
  4289  001FC8                     __end_of_LVtrap:
  4290                           	opt stack 0
  4291                           stkptr	equ	0xFFC
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           intcon	equ	0xFF2
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           indf1	equ	0xFE7
  4300                           postinc1	equ	0xFE6
  4301                           fsr1h	equ	0xFE2
  4302                           fsr1l	equ	0xFE1
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           plusw2	equ	0xFDB
  4306                           fsr2h	equ	0xFDA
  4307                           fsr2l	equ	0xFD9
  4308                           status	equ	0xFD8
  4309                           
  4310 ;; *************** function _printf *****************
  4311 ;; Defined at:
  4312 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  f               2   14[COMRAM] PTR const unsigned char 
  4315 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  4316 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  tmpval          4    0        struct .
  4319 ;;  cp              3    0        PTR const unsigned char 
  4320 ;;  ap              2   16[COMRAM] PTR void [1]
  4321 ;;		 -> ?_printf(2), 
  4322 ;;  len             2    0        unsigned int 
  4323 ;;  val             2    0        unsigned int 
  4324 ;;  c               1   18[COMRAM] char 
  4325 ;;  flag            1    0        unsigned char 
  4326 ;;  prec            1    0        char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  2   14[COMRAM] int 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;Total ram usage:        5 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    2
  4343 ;; This function calls:
  4344 ;;		_putch
  4345 ;; This function is called by:
  4346 ;;		_main
  4347 ;;		_PORtask
  4348 ;;		_BORtask
  4349 ;;		_WDTtask
  4350 ;;		_STKFULtask
  4351 ;;		_RESETtask
  4352 ;;		_LVtrap
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text39
  4357  001E50                     __ptext39:
  4358                           	opt stack 0
  4359  001E50                     _printf:
  4360                           	opt stack 28
  4361                           
  4362                           ;doprnt.c: 466: va_list ap;
  4363                           ;doprnt.c: 499: signed char c;
  4364                           ;doprnt.c: 506: signed char prec;
  4365                           ;doprnt.c: 508: unsigned char flag;
  4366                           ;doprnt.c: 523: union {
  4367                           ;doprnt.c: 524: unsigned long vd;
  4368                           ;doprnt.c: 525: double integ;
  4369                           ;doprnt.c: 526: } tmpval;
  4370                           ;doprnt.c: 528: unsigned int val;
  4371                           ;doprnt.c: 529: unsigned len;
  4372                           ;doprnt.c: 530: const char * cp;
  4373                           ;doprnt.c: 533: *ap = __va_start();
  4374                           
  4375                           ;incstack = 0
  4376  001E50  0E11               	movlw	low (?_printf+2)
  4377  001E52  6E11               	movwf	printf@ap,c
  4378  001E54  0E00               	movlw	high (?_printf+2)
  4379  001E56  6E12               	movwf	printf@ap+1,c
  4380                           
  4381                           ;doprnt.c: 536: while(c = *f++) {
  4382  001E58  D004               	goto	l2075
  4383  001E5A                     l2073:
  4384                           
  4385                           ;doprnt.c: 540: {
  4386                           ;doprnt.c: 541: (putch(c) );
  4387  001E5A  5013               	movf	printf@c,w,c
  4388  001E5C  EC90  F010         	call	_putch
  4389                           
  4390                           ;doprnt.c: 542: continue;
  4391  001E60  D000               	goto	l2075
  4392  001E62                     l2075:
  4393  001E62  C00F  FFF6         	movff	printf@f,tblptrl
  4394  001E66  C010  FFF7         	movff	printf@f+1,tblptrh
  4395  001E6A  4A0F               	infsnz	printf@f,f,c
  4396  001E6C  2A10               	incf	printf@f+1,f,c
  4397  001E6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4398  001E6E  6AF8               	clrf	tblptru,c
  4399  001E70                     	endif
  4400  001E70                     	if	0	;tblptru may be non-zero
  4401  001E70                     	endif
  4402  001E70  0008               	tblrd		*
  4403  001E72  CFF5 F013          	movff	tablat,printf@c
  4404  001E76  5013               	movf	printf@c,w,c
  4405  001E78  A4D8               	btfss	status,2,c
  4406  001E7A  D7EF               	goto	l2073
  4407                           
  4408                           ;doprnt.c: 1469: }
  4409                           ;doprnt.c: 1533: }
  4410                           ;doprnt.c: 1540: return 0;
  4411                           ;	Return value of _printf is never used
  4412  001E7C  0012               	return		;funcret
  4413  001E7E                     __end_of_printf:
  4414                           	opt stack 0
  4415                           stkptr	equ	0xFFC
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           intcon	equ	0xFF2
  4421                           postinc0	equ	0xFEE
  4422                           wreg	equ	0xFE8
  4423                           indf1	equ	0xFE7
  4424                           postinc1	equ	0xFE6
  4425                           fsr1h	equ	0xFE2
  4426                           fsr1l	equ	0xFE1
  4427                           indf2	equ	0xFDF
  4428                           postinc2	equ	0xFDE
  4429                           plusw2	equ	0xFDB
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _putch *****************
  4435 ;; Defined at:
  4436 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  c               1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  c               1    0[COMRAM] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;		None               void
  4443 ;; Registers used:
  4444 ;;		wreg
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_printf
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text40
  4465  002120                     __ptext40:
  4466                           	opt stack 0
  4467  002120                     _putch:
  4468                           	opt stack 28
  4469                           
  4470                           ;incstack = 0
  4471  002120  0012               	return		;funcret
  4472  002122                     __end_of_putch:
  4473                           	opt stack 0
  4474                           stkptr	equ	0xFFC
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           intcon	equ	0xFF2
  4480                           postinc0	equ	0xFEE
  4481                           wreg	equ	0xFE8
  4482                           indf1	equ	0xFE7
  4483                           postinc1	equ	0xFE6
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           plusw2	equ	0xFDB
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function _openPORTD *****************
  4494 ;; Defined at:
  4495 ;;		line 168 in file "../Robot Files/sumovore.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;		None               void
  4502 ;; Registers used:
  4503 ;;		wreg, status,2
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_initialization
  4520 ;;		_LVtrap
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text41
  4525  002116                     __ptext41:
  4526                           	opt stack 0
  4527  002116                     _openPORTD:
  4528                           	opt stack 28
  4529                           
  4530                           ;sumovore.c: 170: TRISD = 0b01100000;
  4531                           
  4532                           ;incstack = 0
  4533  002116  0E60               	movlw	96
  4534  002118  6E95               	movwf	3989,c	;volatile
  4535  00211A  0012               	return		;funcret
  4536  00211C                     __end_of_openPORTD:
  4537                           	opt stack 0
  4538                           stkptr	equ	0xFFC
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           intcon	equ	0xFF2
  4544                           postinc0	equ	0xFEE
  4545                           wreg	equ	0xFE8
  4546                           indf1	equ	0xFE7
  4547                           postinc1	equ	0xFE6
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           indf2	equ	0xFDF
  4551                           postinc2	equ	0xFDE
  4552                           plusw2	equ	0xFDB
  4553                           fsr2h	equ	0xFDA
  4554                           fsr2l	equ	0xFD9
  4555                           status	equ	0xFD8
  4556                           
  4557 ;; *************** function _gtrap *****************
  4558 ;; Defined at:
  4559 ;;		line 463 in file "../Robot Files/sumovore.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  count           4   14[COMRAM] unsigned long 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;		None               void
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;Total ram usage:        4 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_BORtask
  4584 ;;		_WDTtask
  4585 ;;		_STKFULtask
  4586 ;;		_RESETtask
  4587 ;;		_LVtrap
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text42
  4592  001BFA                     __ptext42:
  4593                           	opt stack 0
  4594  001BFA                     _gtrap:
  4595                           	opt stack 26
  4596                           
  4597                           ;sumovore.c: 465: unsigned long count=0;
  4598                           
  4599                           ;incstack = 0
  4600  001BFA  0E00               	movlw	0
  4601  001BFC  6E0F               	movwf	gtrap@count,c
  4602  001BFE  0E00               	movlw	0
  4603  001C00  6E10               	movwf	gtrap@count+1,c
  4604  001C02  0E00               	movlw	0
  4605  001C04  6E11               	movwf	gtrap@count+2,c
  4606  001C06  0E00               	movlw	0
  4607  001C08  6E12               	movwf	gtrap@count+3,c
  4608  001C0A                     l333:
  4609  001C0A  0004               	clrwdt		;# 
  4610                           
  4611                           ;sumovore.c: 470: if (count==30000u)
  4612  001C0C  0E30               	movlw	48
  4613  001C0E  180F               	xorwf	gtrap@count,w,c
  4614  001C10  E111               	bnz	l1221
  4615  001C12  0E75               	movlw	117
  4616  001C14  1810               	xorwf	gtrap@count+1,w,c
  4617  001C16  1011               	iorwf	gtrap@count+2,w,c
  4618  001C18  1012               	iorwf	gtrap@count+3,w,c
  4619  001C1A  A4D8               	btfss	status,2,c
  4620  001C1C  D00B               	goto	l1221
  4621                           
  4622                           ;sumovore.c: 471: {
  4623                           ;sumovore.c: 472: count=0;
  4624  001C1E  0E00               	movlw	0
  4625  001C20  6E0F               	movwf	gtrap@count,c
  4626  001C22  0E00               	movlw	0
  4627  001C24  6E10               	movwf	gtrap@count+1,c
  4628  001C26  0E00               	movlw	0
  4629  001C28  6E11               	movwf	gtrap@count+2,c
  4630  001C2A  0E00               	movlw	0
  4631  001C2C  6E12               	movwf	gtrap@count+3,c
  4632                           
  4633                           ;sumovore.c: 473: PORTDbits.RD0=!1;
  4634  001C2E  9083               	bcf	3971,0,c	;volatile
  4635                           
  4636                           ;sumovore.c: 474: PORTDbits.RD1=!0;
  4637  001C30  8283               	bsf	3971,1,c	;volatile
  4638                           
  4639                           ;sumovore.c: 475: }
  4640  001C32  D00C               	goto	l1225
  4641  001C34                     l1221:
  4642                           
  4643                           ;sumovore.c: 476: else if (count==15000u)
  4644  001C34  0E98               	movlw	152
  4645  001C36  180F               	xorwf	gtrap@count,w,c
  4646  001C38  E109               	bnz	l1225
  4647  001C3A  0E3A               	movlw	58
  4648  001C3C  1810               	xorwf	gtrap@count+1,w,c
  4649  001C3E  1011               	iorwf	gtrap@count+2,w,c
  4650  001C40  1012               	iorwf	gtrap@count+3,w,c
  4651  001C42  A4D8               	btfss	status,2,c
  4652  001C44  D003               	goto	l1225
  4653                           
  4654                           ;sumovore.c: 477: {
  4655                           ;sumovore.c: 478: PORTDbits.RD0=!0;
  4656  001C46  8083               	bsf	3971,0,c	;volatile
  4657                           
  4658                           ;sumovore.c: 479: PORTDbits.RD1=!1;
  4659  001C48  9283               	bcf	3971,1,c	;volatile
  4660  001C4A  D000               	goto	l1225
  4661  001C4C                     l1225:
  4662                           
  4663                           ;sumovore.c: 480: }
  4664                           ;sumovore.c: 481: count++;
  4665  001C4C  0E01               	movlw	1
  4666  001C4E  260F               	addwf	gtrap@count,f,c
  4667  001C50  0E00               	movlw	0
  4668  001C52  2210               	addwfc	gtrap@count+1,f,c
  4669  001C54  2211               	addwfc	gtrap@count+2,f,c
  4670  001C56  2212               	addwfc	gtrap@count+3,f,c
  4671  001C58  D7D8               	goto	l333
  4672  001C5A  0012               	return		;funcret
  4673  001C5C                     __end_of_gtrap:
  4674                           	opt stack 0
  4675                           stkptr	equ	0xFFC
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           intcon	equ	0xFF2
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           indf1	equ	0xFE7
  4684                           postinc1	equ	0xFE6
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           plusw2	equ	0xFDB
  4690                           fsr2h	equ	0xFDA
  4691                           fsr2l	equ	0xFD9
  4692                           status	equ	0xFD8
  4693                           
  4694 ;; *************** function _GetBackonTrack *****************
  4695 ;; Defined at:
  4696 ;;		line 216 in file "../Robot Files/main.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  error           2   55[COMRAM] PTR char 
  4699 ;;		 -> main@error(3), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  i               1   59[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;		None               void
  4704 ;; Registers used:
  4705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:        5 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    4
  4718 ;; This function calls:
  4719 ;;		_MotorControl
  4720 ;;		_SharpTurn
  4721 ;;		_WriteTimer0
  4722 ;;		_motors_brake_all
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text43
  4729  00169A                     __ptext43:
  4730                           	opt stack 0
  4731  00169A                     _GetBackonTrack:
  4732                           	opt stack 26
  4733                           
  4734                           ;main.c: 218: if((error[2]||error[1]) > 1)
  4735                           
  4736                           ;incstack = 0
  4737  00169A  D004               	goto	l2545
  4738                           
  4739                           ;main.c: 219: SharpTurn(1);
  4740  00169C  0E01               	movlw	1
  4741  00169E  EC03  F00D         	call	_SharpTurn
  4742  0016A2  D065               	goto	l145
  4743  0016A4                     l2545:
  4744                           
  4745                           ;main.c: 220: else if((error[2]||error[1]) < -1)
  4746  0016A4  0E01               	movlw	1
  4747  0016A6  6E3B               	movwf	_GetBackonTrack$454,c
  4748  0016A8  EE20 F002          	lfsr	2,2
  4749  0016AC  5038               	movf	GetBackonTrack@error,w,c
  4750  0016AE  26D9               	addwf	fsr2l,f,c
  4751  0016B0  5039               	movf	GetBackonTrack@error+1,w,c
  4752  0016B2  22DA               	addwfc	fsr2h,f,c
  4753  0016B4  50DF               	movf	indf2,w,c
  4754  0016B6  A4D8               	btfss	status,2,c
  4755  0016B8  D00C               	goto	l2553
  4756  0016BA  EE20 F001          	lfsr	2,1
  4757  0016BE  5038               	movf	GetBackonTrack@error,w,c
  4758  0016C0  26D9               	addwf	fsr2l,f,c
  4759  0016C2  5039               	movf	GetBackonTrack@error+1,w,c
  4760  0016C4  22DA               	addwfc	fsr2h,f,c
  4761  0016C6  50DF               	movf	indf2,w,c
  4762  0016C8  A4D8               	btfss	status,2,c
  4763  0016CA  D003               	goto	l2553
  4764  0016CC  0E00               	movlw	0
  4765  0016CE  6E3B               	movwf	_GetBackonTrack$454,c
  4766  0016D0  D000               	goto	l2553
  4767  0016D2                     l2553:
  4768                           
  4769                           ;main.c: 221: SharpTurn(0);
  4770  0016D2  0E00               	movlw	0
  4771  0016D4  EC03  F00D         	call	_SharpTurn
  4772  0016D8  D04A               	goto	l145
  4773                           
  4774                           ;main.c: 222: else
  4775                           ;main.c: 223: {
  4776                           ;main.c: 224: WriteTimer0(0);
  4777  0016DA  0E00               	movlw	0
  4778  0016DC  6E10               	movwf	WriteTimer0@timer0+1,c
  4779  0016DE  0E00               	movlw	0
  4780  0016E0  6E0F               	movwf	WriteTimer0@timer0,c
  4781  0016E2  EC5A  F010         	call	_WriteTimer0	;wreg free
  4782                           
  4783                           ;main.c: 225: TMR0IF = 0;
  4784  0016E6  94F2               	bcf	intcon,2,c	;volatile
  4785                           
  4786                           ;main.c: 226: while (!SeeLine.B && !TMR0IF)
  4787  0016E8  D007               	goto	l2561
  4788  0016EA                     l2559:
  4789                           
  4790                           ;main.c: 227: {
  4791                           ;main.c: 228: MotorControl(0);
  4792  0016EA  0E00               	movlw	0
  4793  0016EC  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4794  0016EE  0E00               	movlw	0
  4795  0016F0  6E2B               	movwf	MotorControl@delta_velocity,c
  4796  0016F2  ECAA  F009         	call	_MotorControl	;wreg free
  4797  0016F6  D000               	goto	l2561
  4798  0016F8                     l2561:
  4799  0016F8  504B               	movf	_SeeLine,w,c
  4800  0016FA  0B1F               	andlw	31
  4801  0016FC  0900               	iorlw	0
  4802  0016FE  B4D8               	btfsc	status,2,c
  4803  001700  B4F2               	btfsc	intcon,2,c	;volatile
  4804  001702  D002               	goto	l2565
  4805  001704  D7F2               	goto	l2559
  4806  001706  D000               	goto	l2565
  4807  001708                     l2565:
  4808                           
  4809                           ;main.c: 229: }
  4810                           ;main.c: 231: if(!SeeLine.B)
  4811  001708  504B               	movf	_SeeLine,w,c
  4812  00170A  0B1F               	andlw	31
  4813  00170C  0900               	iorlw	0
  4814  00170E  A4D8               	btfss	status,2,c
  4815  001710  D02E               	goto	l145
  4816                           
  4817                           ;main.c: 232: {
  4818                           ;main.c: 233: motors_brake_all();
  4819  001712  ECA3  F00F         	call	_motors_brake_all	;wreg free
  4820                           
  4821                           ;main.c: 234: _delay(50000);
  4822  001716  0E41               	movlw	65
  4823  001718  6E3A               	movwf	??_GetBackonTrack& (0+255),c
  4824  00171A  0EEE               	movlw	238
  4825  00171C                     u2407:
  4826  00171C  2EE8               	decfsz	wreg,f,c
  4827  00171E  D7FE               	goto	u2407
  4828  001720  2E3A               	decfsz	??_GetBackonTrack& (0+255),f,c
  4829  001722  D7FC               	goto	u2407
  4830  001724  D000               	nop2	
  4831                           
  4832                           ;main.c: 235: MotorControl(1600);
  4833  001726  0E06               	movlw	6
  4834  001728  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4835  00172A  0E40               	movlw	64
  4836  00172C  6E2B               	movwf	MotorControl@delta_velocity,c
  4837  00172E  ECAA  F009         	call	_MotorControl	;wreg free
  4838                           
  4839                           ;main.c: 236: for(char i=0; i < 80; i++)
  4840  001732  0E00               	movlw	0
  4841  001734  6E3C               	movwf	GetBackonTrack@i,c
  4842  001736                     l2575:
  4843  001736  0E4F               	movlw	79
  4844  001738  643C               	cpfsgt	GetBackonTrack@i,c
  4845  00173A  D001               	goto	l2579
  4846  00173C  D011               	goto	l2585
  4847  00173E                     l2579:
  4848                           
  4849                           ;main.c: 237: _delay(100000);
  4850  00173E  0E82               	movlw	130
  4851  001740  6E3A               	movwf	??_GetBackonTrack& (0+255),c
  4852  001742  0EDE               	movlw	222
  4853  001744                     u2417:
  4854  001744  2EE8               	decfsz	wreg,f,c
  4855  001746  D7FE               	goto	u2417
  4856  001748  2E3A               	decfsz	??_GetBackonTrack& (0+255),f,c
  4857  00174A  D7FC               	goto	u2417
  4858  00174C  2A3C               	incf	GetBackonTrack@i,f,c
  4859  00174E  D7F3               	goto	l2575
  4860                           
  4861                           ;main.c: 239: while (!SeeLine.B)
  4862  001750  D007               	goto	l2585
  4863  001752                     l2583:
  4864                           
  4865                           ;main.c: 240: MotorControl(0);
  4866  001752  0E00               	movlw	0
  4867  001754  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4868  001756  0E00               	movlw	0
  4869  001758  6E2B               	movwf	MotorControl@delta_velocity,c
  4870  00175A  ECAA  F009         	call	_MotorControl	;wreg free
  4871  00175E  D000               	goto	l2585
  4872  001760                     l2585:
  4873  001760  504B               	movf	_SeeLine,w,c
  4874  001762  0B1F               	andlw	31
  4875  001764  0900               	iorlw	0
  4876  001766  A4D8               	btfss	status,2,c
  4877  001768  D002               	goto	l145
  4878  00176A  D7F3               	goto	l2583
  4879  00176C  D000               	goto	l145
  4880  00176E                     l145:
  4881  00176E  0012               	return		;funcret
  4882  001770                     __end_of_GetBackonTrack:
  4883                           	opt stack 0
  4884                           stkptr	equ	0xFFC
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           intcon	equ	0xFF2
  4890                           postinc0	equ	0xFEE
  4891                           wreg	equ	0xFE8
  4892                           indf1	equ	0xFE7
  4893                           postinc1	equ	0xFE6
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           indf2	equ	0xFDF
  4897                           postinc2	equ	0xFDE
  4898                           plusw2	equ	0xFDB
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function _WriteTimer0 *****************
  4904 ;; Defined at:
  4905 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  timer0          2   14[COMRAM] unsigned int 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  timer           2   16[COMRAM] struct Timers
  4910 ;; Return value:  Size  Location     Type
  4911 ;;		None               void
  4912 ;; Registers used:
  4913 ;;		None
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;Total ram usage:        4 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;;		_GetBackonTrack
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text44
  4935  0020B4                     __ptext44:
  4936                           	opt stack 0
  4937  0020B4                     _WriteTimer0:
  4938                           	opt stack 29
  4939                           
  4940                           ;incstack = 0
  4941  0020B4  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4942  0020B8  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4943  0020BC  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4944  0020C0  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4945  0020C4  0012               	return		;funcret
  4946  0020C6                     __end_of_WriteTimer0:
  4947                           	opt stack 0
  4948                           stkptr	equ	0xFFC
  4949                           tblptru	equ	0xFF8
  4950                           tblptrh	equ	0xFF7
  4951                           tblptrl	equ	0xFF6
  4952                           tablat	equ	0xFF5
  4953                           intcon	equ	0xFF2
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           indf1	equ	0xFE7
  4957                           postinc1	equ	0xFE6
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           indf2	equ	0xFDF
  4961                           postinc2	equ	0xFDE
  4962                           plusw2	equ	0xFDB
  4963                           fsr2h	equ	0xFDA
  4964                           fsr2l	equ	0xFD9
  4965                           status	equ	0xFD8
  4966                           
  4967 ;; *************** function _SharpTurn *****************
  4968 ;; Defined at:
  4969 ;;		line 170 in file "../Robot Files/main.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  direction       1    wreg     unsigned char 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  direction       1   52[COMRAM] unsigned char 
  4974 ;;  delta_veloci    2   53[COMRAM] int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;Total ram usage:        4 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    3
  4991 ;; This function calls:
  4992 ;;		_MotorControl
  4993 ;;		_motors_brake_all
  4994 ;; This function is called by:
  4995 ;;		_GetBackonTrack
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text45
  5000  001A06                     __ptext45:
  5001                           	opt stack 0
  5002  001A06                     _SharpTurn:
  5003                           	opt stack 26
  5004                           
  5005                           ;incstack = 0
  5006                           ;SharpTurn@direction stored from wreg
  5007  001A06  6E35               	movwf	SharpTurn@direction,c
  5008                           
  5009                           ;main.c: 172: int delta_velocity;
  5010                           ;main.c: 188: motors_brake_all();
  5011  001A08  ECA3  F00F         	call	_motors_brake_all	;wreg free
  5012                           
  5013                           ;main.c: 189: _delay(50000);
  5014  001A0C  0E41               	movlw	65
  5015  001A0E  6E34               	movwf	??_SharpTurn& (0+255),c
  5016  001A10  0EEE               	movlw	238
  5017  001A12                     u2427:
  5018  001A12  2EE8               	decfsz	wreg,f,c
  5019  001A14  D7FE               	goto	u2427
  5020  001A16  2E34               	decfsz	??_SharpTurn& (0+255),f,c
  5021  001A18  D7FC               	goto	u2427
  5022  001A1A  D000               	nop2	
  5023                           
  5024                           ;main.c: 190: if(direction)
  5025  001A1C  5035               	movf	SharpTurn@direction,w,c
  5026  001A1E  B4D8               	btfsc	status,2,c
  5027  001A20  D019               	goto	l2309
  5028                           
  5029                           ;main.c: 191: {
  5030                           ;main.c: 192: delta_velocity = 1600;
  5031  001A22  0E06               	movlw	6
  5032  001A24  6E37               	movwf	SharpTurn@delta_velocity+1,c
  5033  001A26  0E40               	movlw	64
  5034  001A28  6E36               	movwf	SharpTurn@delta_velocity,c
  5035                           
  5036                           ;main.c: 193: while (!SeeLine.b.CntLeft && delta_velocity)
  5037  001A2A  D00C               	goto	l2305
  5038  001A2C                     l2299:
  5039                           
  5040                           ;main.c: 194: {
  5041                           ;main.c: 195: MotorControl(delta_velocity);
  5042  001A2C  C036  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  5043  001A30  C037  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  5044  001A34  ECAA  F009         	call	_MotorControl	;wreg free
  5045                           
  5046                           ;main.c: 196: if (SeeLine.b.Center)
  5047  001A38  A44B               	btfss	_SeeLine,2,c
  5048  001A3A  D004               	goto	l2305
  5049                           
  5050                           ;main.c: 197: delta_velocity--;
  5051  001A3C  0636               	decf	SharpTurn@delta_velocity,f,c
  5052  001A3E  A0D8               	btfss	status,0,c
  5053  001A40  0637               	decf	SharpTurn@delta_velocity+1,f,c
  5054  001A42  D000               	goto	l2305
  5055  001A44                     l2305:
  5056  001A44  B64B               	btfsc	_SeeLine,3,c
  5057  001A46  D01E               	goto	l2321
  5058  001A48  5036               	movf	SharpTurn@delta_velocity,w,c
  5059  001A4A  1037               	iorwf	SharpTurn@delta_velocity+1,w,c
  5060  001A4C  B4D8               	btfsc	status,2,c
  5061  001A4E  D01A               	goto	l2321
  5062  001A50  D7ED               	goto	l2299
  5063                           
  5064                           ;main.c: 198: }
  5065                           ;main.c: 199: }
  5066  001A52  D018               	goto	l2321
  5067  001A54                     l2309:
  5068                           
  5069                           ;main.c: 200: else
  5070                           ;main.c: 201: {
  5071                           ;main.c: 202: delta_velocity = -1600;
  5072  001A54  0EF9               	movlw	249
  5073  001A56  6E37               	movwf	SharpTurn@delta_velocity+1,c
  5074  001A58  0EC0               	movlw	192
  5075  001A5A  6E36               	movwf	SharpTurn@delta_velocity,c
  5076                           
  5077                           ;main.c: 203: while (!SeeLine.b.CntRight && delta_velocity)
  5078  001A5C  D00B               	goto	l2317
  5079  001A5E                     l2311:
  5080                           
  5081                           ;main.c: 204: {
  5082                           ;main.c: 205: MotorControl(delta_velocity);
  5083  001A5E  C036  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  5084  001A62  C037  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  5085  001A66  ECAA  F009         	call	_MotorControl	;wreg free
  5086                           
  5087                           ;main.c: 206: if (SeeLine.b.Center)
  5088  001A6A  A44B               	btfss	_SeeLine,2,c
  5089  001A6C  D003               	goto	l2317
  5090                           
  5091                           ;main.c: 207: delta_velocity++;
  5092  001A6E  4A36               	infsnz	SharpTurn@delta_velocity,f,c
  5093  001A70  2A37               	incf	SharpTurn@delta_velocity+1,f,c
  5094  001A72  D000               	goto	l2317
  5095  001A74                     l2317:
  5096  001A74  B24B               	btfsc	_SeeLine,1,c
  5097  001A76  D006               	goto	l2321
  5098  001A78  5036               	movf	SharpTurn@delta_velocity,w,c
  5099  001A7A  1037               	iorwf	SharpTurn@delta_velocity+1,w,c
  5100  001A7C  B4D8               	btfsc	status,2,c
  5101  001A7E  D002               	goto	l2321
  5102  001A80  D7EE               	goto	l2311
  5103  001A82  D000               	goto	l2321
  5104  001A84                     l2321:
  5105                           
  5106                           ;main.c: 208: }
  5107                           ;main.c: 209: }
  5108                           ;main.c: 210: I = 0;
  5109  001A84  0E00               	movlw	0
  5110  001A86  6E48               	movwf	_I+1,c
  5111  001A88  0E00               	movlw	0
  5112  001A8A  6E47               	movwf	_I,c
  5113  001A8C  0012               	return		;funcret
  5114  001A8E                     __end_of_SharpTurn:
  5115                           	opt stack 0
  5116                           stkptr	equ	0xFFC
  5117                           tblptru	equ	0xFF8
  5118                           tblptrh	equ	0xFF7
  5119                           tblptrl	equ	0xFF6
  5120                           tablat	equ	0xFF5
  5121                           intcon	equ	0xFF2
  5122                           postinc0	equ	0xFEE
  5123                           wreg	equ	0xFE8
  5124                           indf1	equ	0xFE7
  5125                           postinc1	equ	0xFE6
  5126                           fsr1h	equ	0xFE2
  5127                           fsr1l	equ	0xFE1
  5128                           indf2	equ	0xFDF
  5129                           postinc2	equ	0xFDE
  5130                           plusw2	equ	0xFDB
  5131                           fsr2h	equ	0xFDA
  5132                           fsr2l	equ	0xFD9
  5133                           status	equ	0xFD8
  5134                           
  5135 ;; *************** function _motors_brake_all *****************
  5136 ;; Defined at:
  5137 ;;		line 218 in file "../Robot Files/sumovore.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;		None               void
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    2
  5158 ;; This function calls:
  5159 ;;		_SetDCPWM1
  5160 ;;		_SetDCPWM2
  5161 ;; This function is called by:
  5162 ;;		_SharpTurn
  5163 ;;		_GetBackonTrack
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text46
  5168  001F46                     __ptext46:
  5169                           	opt stack 0
  5170  001F46                     _motors_brake_all:
  5171                           	opt stack 27
  5172                           
  5173                           ;sumovore.c: 220: SetDCPWM1(800u );
  5174                           
  5175                           ;incstack = 0
  5176  001F46  0E03               	movlw	3
  5177  001F48  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  5178  001F4A  0E20               	movlw	32
  5179  001F4C  6E0F               	movwf	SetDCPWM1@dutycycle,c
  5180  001F4E  ECEF  F00E         	call	_SetDCPWM1	;wreg free
  5181                           
  5182                           ;sumovore.c: 221: SetDCPWM2(800u );
  5183  001F52  0E03               	movlw	3
  5184  001F54  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  5185  001F56  0E20               	movlw	32
  5186  001F58  6E0F               	movwf	SetDCPWM2@dutycycle,c
  5187  001F5A  ECD2  F00E         	call	_SetDCPWM2	;wreg free
  5188                           
  5189                           ;sumovore.c: 222: PORTEbits.RE1 = 0b0;
  5190  001F5E  9284               	bcf	3972,1,c	;volatile
  5191                           
  5192                           ;sumovore.c: 223: PORTCbits.RC0 = 0b0;
  5193  001F60  9082               	bcf	3970,0,c	;volatile
  5194                           
  5195                           ;sumovore.c: 224: PORTEbits.RE0 = 0b0;
  5196  001F62  9084               	bcf	3972,0,c	;volatile
  5197                           
  5198                           ;sumovore.c: 225: PORTCbits.RC5 = 0b0;
  5199  001F64  9A82               	bcf	3970,5,c	;volatile
  5200  001F66  0012               	return		;funcret
  5201  001F68                     __end_of_motors_brake_all:
  5202                           	opt stack 0
  5203                           stkptr	equ	0xFFC
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           intcon	equ	0xFF2
  5209                           postinc0	equ	0xFEE
  5210                           wreg	equ	0xFE8
  5211                           indf1	equ	0xFE7
  5212                           postinc1	equ	0xFE6
  5213                           fsr1h	equ	0xFE2
  5214                           fsr1l	equ	0xFE1
  5215                           indf2	equ	0xFDF
  5216                           postinc2	equ	0xFDE
  5217                           plusw2	equ	0xFDB
  5218                           fsr2h	equ	0xFDA
  5219                           fsr2l	equ	0xFD9
  5220                           status	equ	0xFD8
  5221                           
  5222 ;; *************** function _MotorControl *****************
  5223 ;; Defined at:
  5224 ;;		line 121 in file "../Robot Files/main.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  delta_veloci    2   42[COMRAM] int 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  right_duty_c    2   49[COMRAM] int 
  5229 ;;  left_duty_cy    2   47[COMRAM] int 
  5230 ;;  right_dir_mo    1   46[COMRAM] enum E4190
  5231 ;;  left_dir_mod    1   45[COMRAM] enum E4190
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;Total ram usage:        9 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    2
  5248 ;; This function calls:
  5249 ;;		_SetDCPWM1
  5250 ;;		_SetDCPWM2
  5251 ;;		___awdiv
  5252 ;;		___wmul
  5253 ;; This function is called by:
  5254 ;;		_PID_LineFollowing
  5255 ;;		_SharpTurn
  5256 ;;		_GetBackonTrack
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text47
  5261  001354                     __ptext47:
  5262                           	opt stack 0
  5263  001354                     _MotorControl:
  5264                           	opt stack 27
  5265                           
  5266                           ;main.c: 123: int left_duty_cycle = 700, right_duty_cycle = 700;
  5267                           
  5268                           ;incstack = 0
  5269  001354  0E02               	movlw	2
  5270  001356  6E31               	movwf	MotorControl@left_duty_cycle+1,c
  5271  001358  0EBC               	movlw	188
  5272  00135A  6E30               	movwf	MotorControl@left_duty_cycle,c
  5273  00135C  0E02               	movlw	2
  5274  00135E  6E33               	movwf	MotorControl@right_duty_cycle+1,c
  5275  001360  0EBC               	movlw	188
  5276  001362  6E32               	movwf	MotorControl@right_duty_cycle,c
  5277                           
  5278                           ;main.c: 124: enum e_direction {reverse,forward} left_dir_modifier= forward, right_dir_m
      +                          odifier= forward;
  5279  001364  0E01               	movlw	1
  5280  001366  6E2E               	movwf	MotorControl@left_dir_modifier,c
  5281  001368  0E01               	movlw	1
  5282  00136A  6E2F               	movwf	MotorControl@right_dir_modifier,c
  5283                           
  5284                           ;main.c: 127: if ( delta_velocity < 0 )
  5285  00136C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5286  00136E  D023               	goto	l2143
  5287                           
  5288                           ;main.c: 128: {
  5289                           ;main.c: 129: left_duty_cycle += delta_velocity*15/16;
  5290  001370  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5291  001374  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5292  001378  0E00               	movlw	0
  5293  00137A  6E20               	movwf	___wmul@multiplicand+1,c
  5294  00137C  0E0F               	movlw	15
  5295  00137E  6E1F               	movwf	___wmul@multiplicand,c
  5296  001380  EC69  F00F         	call	___wmul	;wreg free
  5297  001384  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5298  001388  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5299  00138C  0E00               	movlw	0
  5300  00138E  6E26               	movwf	___awdiv@divisor+1,c
  5301  001390  0E10               	movlw	16
  5302  001392  6E25               	movwf	___awdiv@divisor,c
  5303  001394  EC70  F00C         	call	___awdiv	;wreg free
  5304  001398  5023               	movf	?___awdiv,w,c
  5305  00139A  2630               	addwf	MotorControl@left_duty_cycle,f,c
  5306  00139C  5024               	movf	?___awdiv+1,w,c
  5307  00139E  2231               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5308                           
  5309                           ;main.c: 130: right_duty_cycle -= delta_velocity/16;
  5310  0013A0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5311  0013A4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5312  0013A8  0E00               	movlw	0
  5313  0013AA  6E26               	movwf	___awdiv@divisor+1,c
  5314  0013AC  0E10               	movlw	16
  5315  0013AE  6E25               	movwf	___awdiv@divisor,c
  5316  0013B0  EC70  F00C         	call	___awdiv	;wreg free
  5317  0013B4  D022               	goto	L8
  5318  0013B6                     l2143:
  5319                           
  5320                           ;main.c: 133: else
  5321                           ;main.c: 134: {
  5322                           ;main.c: 135: left_duty_cycle += delta_velocity/16;
  5323  0013B6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5324  0013BA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5325  0013BE  0E00               	movlw	0
  5326  0013C0  6E26               	movwf	___awdiv@divisor+1,c
  5327  0013C2  0E10               	movlw	16
  5328  0013C4  6E25               	movwf	___awdiv@divisor,c
  5329  0013C6  EC70  F00C         	call	___awdiv	;wreg free
  5330  0013CA  5023               	movf	?___awdiv,w,c
  5331  0013CC  2630               	addwf	MotorControl@left_duty_cycle,f,c
  5332  0013CE  5024               	movf	?___awdiv+1,w,c
  5333  0013D0  2231               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5334                           
  5335                           ;main.c: 136: right_duty_cycle -= delta_velocity*15/16;
  5336  0013D2  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5337  0013D6  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5338  0013DA  0E00               	movlw	0
  5339  0013DC  6E20               	movwf	___wmul@multiplicand+1,c
  5340  0013DE  0E0F               	movlw	15
  5341  0013E0  6E1F               	movwf	___wmul@multiplicand,c
  5342  0013E2  EC69  F00F         	call	___wmul	;wreg free
  5343  0013E6  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5344  0013EA  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5345  0013EE  0E00               	movlw	0
  5346  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  5347  0013F2  0E10               	movlw	16
  5348  0013F4  6E25               	movwf	___awdiv@divisor,c
  5349  0013F6  EC70  F00C         	call	___awdiv	;wreg free
  5350  0013FA                     L8:
  5351  0013FA  5023               	movf	?___awdiv,w,c
  5352  0013FC  5E32               	subwf	MotorControl@right_duty_cycle,f,c
  5353  0013FE  5024               	movf	?___awdiv+1,w,c
  5354  001400  5A33               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5355  001402  D000               	goto	l2147
  5356  001404                     l2147:
  5357                           
  5358                           ;main.c: 137: }
  5359                           ;main.c: 143: if ( left_duty_cycle < 0 )
  5360  001404  AE31               	btfss	MotorControl@left_duty_cycle+1,7,c
  5361  001406  D010               	goto	l2153
  5362                           
  5363                           ;main.c: 144: {
  5364                           ;main.c: 145: left_dir_modifier = reverse;
  5365  001408  0E00               	movlw	0
  5366  00140A  6E2E               	movwf	MotorControl@left_dir_modifier,c
  5367                           
  5368                           ;main.c: 146: left_duty_cycle *= -1;
  5369  00140C  C030  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5370  001410  C031  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5371  001414  0EFF               	movlw	255
  5372  001416  6E20               	movwf	___wmul@multiplicand+1,c
  5373  001418  681F               	setf	___wmul@multiplicand,c
  5374  00141A  EC69  F00F         	call	___wmul	;wreg free
  5375  00141E  C01D  F030         	movff	?___wmul,MotorControl@left_duty_cycle
  5376  001422  C01E  F031         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5377  001426  D000               	goto	l2153
  5378  001428                     l2153:
  5379                           
  5380                           ;main.c: 147: }
  5381                           ;main.c: 148: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5382  001428  BE31               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5383  00142A  D00B               	goto	l2157
  5384  00142C  0E21               	movlw	33
  5385  00142E  5C30               	subwf	MotorControl@left_duty_cycle,w,c
  5386  001430  0E03               	movlw	3
  5387  001432  5831               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5388  001434  A0D8               	btfss	status,0,c
  5389  001436  D005               	goto	l2157
  5390  001438  0E03               	movlw	3
  5391  00143A  6E31               	movwf	MotorControl@left_duty_cycle+1,c
  5392  00143C  0E20               	movlw	32
  5393  00143E  6E30               	movwf	MotorControl@left_duty_cycle,c
  5394  001440  D000               	goto	l2157
  5395  001442                     l2157:
  5396                           
  5397                           ;main.c: 150: SetDCPWM2((unsigned int) left_duty_cycle );
  5398  001442  C030  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5399  001446  C031  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5400  00144A  ECD2  F00E         	call	_SetDCPWM2	;wreg free
  5401                           
  5402                           ;main.c: 151: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5403  00144E  502E               	movf	MotorControl@left_dir_modifier,w,c
  5404  001450  A4D8               	btfss	status,2,c
  5405  001452  D002               	goto	l102
  5406  001454  9082               	bcf	3970,0,c	;volatile
  5407  001456  D002               	goto	l2163
  5408  001458                     l102:
  5409                           
  5410                           ;main.c: 152: else PORTCbits.RC0 = 0b1;
  5411  001458  8082               	bsf	3970,0,c	;volatile
  5412  00145A  D000               	goto	l2163
  5413  00145C                     l2163:
  5414                           
  5415                           ;main.c: 153: PORTEbits.RE1 = !PORTCbits.RC0;
  5416  00145C  B082               	btfsc	3970,0,c	;volatile
  5417  00145E  D003               	goto	u1520
  5418  001460  6A2D               	clrf	??_MotorControl& (0+255),c
  5419  001462  2A2D               	incf	??_MotorControl& (0+255),f,c
  5420  001464  D001               	goto	u1538
  5421  001466                     u1520:
  5422  001466  6A2D               	clrf	??_MotorControl& (0+255),c
  5423  001468                     u1538:
  5424  001468  462D               	rlncf	??_MotorControl,f,c
  5425  00146A  5084               	movf	3972,w,c	;volatile
  5426  00146C  182D               	xorwf	??_MotorControl,w,c
  5427  00146E  0BFD               	andlw	-3
  5428  001470  182D               	xorwf	??_MotorControl,w,c
  5429  001472  6E84               	movwf	3972,c	;volatile
  5430                           
  5431                           ;main.c: 156: if ( right_duty_cycle < 0 )
  5432  001474  AE33               	btfss	MotorControl@right_duty_cycle+1,7,c
  5433  001476  D010               	goto	l2169
  5434                           
  5435                           ;main.c: 157: {
  5436                           ;main.c: 158: right_dir_modifier = reverse;
  5437  001478  0E00               	movlw	0
  5438  00147A  6E2F               	movwf	MotorControl@right_dir_modifier,c
  5439                           
  5440                           ;main.c: 159: right_duty_cycle *= -1;
  5441  00147C  C032  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5442  001480  C033  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5443  001484  0EFF               	movlw	255
  5444  001486  6E20               	movwf	___wmul@multiplicand+1,c
  5445  001488  681F               	setf	___wmul@multiplicand,c
  5446  00148A  EC69  F00F         	call	___wmul	;wreg free
  5447  00148E  C01D  F032         	movff	?___wmul,MotorControl@right_duty_cycle
  5448  001492  C01E  F033         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5449  001496  D000               	goto	l2169
  5450  001498                     l2169:
  5451                           
  5452                           ;main.c: 160: }
  5453                           ;main.c: 161: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5454  001498  BE33               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5455  00149A  D00B               	goto	l2173
  5456  00149C  0E21               	movlw	33
  5457  00149E  5C32               	subwf	MotorControl@right_duty_cycle,w,c
  5458  0014A0  0E03               	movlw	3
  5459  0014A2  5833               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5460  0014A4  A0D8               	btfss	status,0,c
  5461  0014A6  D005               	goto	l2173
  5462  0014A8  0E03               	movlw	3
  5463  0014AA  6E33               	movwf	MotorControl@right_duty_cycle+1,c
  5464  0014AC  0E20               	movlw	32
  5465  0014AE  6E32               	movwf	MotorControl@right_duty_cycle,c
  5466  0014B0  D000               	goto	l2173
  5467  0014B2                     l2173:
  5468                           
  5469                           ;main.c: 163: SetDCPWM1((unsigned int) right_duty_cycle );
  5470  0014B2  C032  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5471  0014B6  C033  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5472  0014BA  ECEF  F00E         	call	_SetDCPWM1	;wreg free
  5473                           
  5474                           ;main.c: 164: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5475  0014BE  502F               	movf	MotorControl@right_dir_modifier,w,c
  5476  0014C0  A4D8               	btfss	status,2,c
  5477  0014C2  D002               	goto	l106
  5478  0014C4  9A82               	bcf	3970,5,c	;volatile
  5479  0014C6  D002               	goto	l2179
  5480  0014C8                     l106:
  5481                           
  5482                           ;main.c: 165: else PORTCbits.RC5 = 0b1;
  5483  0014C8  8A82               	bsf	3970,5,c	;volatile
  5484  0014CA  D000               	goto	l2179
  5485  0014CC                     l2179:
  5486                           
  5487                           ;main.c: 166: PORTEbits.RE0 = !PORTCbits.RC5;
  5488  0014CC  BA82               	btfsc	3970,5,c	;volatile
  5489  0014CE  D003               	goto	u1570
  5490  0014D0  6A2D               	clrf	??_MotorControl& (0+255),c
  5491  0014D2  2A2D               	incf	??_MotorControl& (0+255),f,c
  5492  0014D4  D001               	goto	u1588
  5493  0014D6                     u1570:
  5494  0014D6  6A2D               	clrf	??_MotorControl& (0+255),c
  5495  0014D8                     u1588:
  5496  0014D8  5084               	movf	3972,w,c	;volatile
  5497  0014DA  182D               	xorwf	??_MotorControl,w,c
  5498  0014DC  0BFE               	andlw	-2
  5499  0014DE  182D               	xorwf	??_MotorControl,w,c
  5500  0014E0  6E84               	movwf	3972,c	;volatile
  5501  0014E2  0012               	return		;funcret
  5502  0014E4                     __end_of_MotorControl:
  5503                           	opt stack 0
  5504                           stkptr	equ	0xFFC
  5505                           tblptru	equ	0xFF8
  5506                           tblptrh	equ	0xFF7
  5507                           tblptrl	equ	0xFF6
  5508                           tablat	equ	0xFF5
  5509                           intcon	equ	0xFF2
  5510                           postinc0	equ	0xFEE
  5511                           wreg	equ	0xFE8
  5512                           indf1	equ	0xFE7
  5513                           postinc1	equ	0xFE6
  5514                           fsr1h	equ	0xFE2
  5515                           fsr1l	equ	0xFE1
  5516                           indf2	equ	0xFDF
  5517                           postinc2	equ	0xFDE
  5518                           plusw2	equ	0xFDB
  5519                           fsr2h	equ	0xFDA
  5520                           fsr2l	equ	0xFD9
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function ___wmul *****************
  5524 ;; Defined at:
  5525 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  multiplier      2   28[COMRAM] unsigned int 
  5528 ;;  multiplicand    2   30[COMRAM] unsigned int 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  product         2   32[COMRAM] unsigned int 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  2   28[COMRAM] unsigned int 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0, prodl, prodh
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;Total ram usage:        6 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_PID_LineFollowing
  5551 ;;		_MotorControl
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text48
  5556  001ED2                     __ptext48:
  5557                           	opt stack 0
  5558  001ED2                     ___wmul:
  5559                           	opt stack 28
  5560                           
  5561                           ;incstack = 0
  5562  001ED2  501D               	movf	___wmul@multiplier,w,c
  5563  001ED4  021F               	mulwf	___wmul@multiplicand,c
  5564  001ED6  CFF3 F021          	movff	prodl,___wmul@product
  5565  001EDA  CFF4 F022          	movff	prodh,___wmul@product+1
  5566  001EDE  501D               	movf	___wmul@multiplier,w,c
  5567  001EE0  0220               	mulwf	___wmul@multiplicand+1,c
  5568  001EE2  50F3               	movf	prodl,w,c
  5569  001EE4  2622               	addwf	___wmul@product+1,f,c
  5570  001EE6  501E               	movf	___wmul@multiplier+1,w,c
  5571  001EE8  021F               	mulwf	___wmul@multiplicand,c
  5572  001EEA  50F3               	movf	prodl,w,c
  5573  001EEC  2622               	addwf	___wmul@product+1,f,c
  5574  001EEE  C021  F01D         	movff	___wmul@product,?___wmul
  5575  001EF2  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  5576  001EF6  D000               	goto	l597
  5577  001EF8                     l597:
  5578  001EF8  0012               	return		;funcret
  5579  001EFA                     __end_of___wmul:
  5580                           	opt stack 0
  5581                           stkptr	equ	0xFFC
  5582                           tblptru	equ	0xFF8
  5583                           tblptrh	equ	0xFF7
  5584                           tblptrl	equ	0xFF6
  5585                           tablat	equ	0xFF5
  5586                           prodh	equ	0xFF4
  5587                           prodl	equ	0xFF3
  5588                           intcon	equ	0xFF2
  5589                           postinc0	equ	0xFEE
  5590                           wreg	equ	0xFE8
  5591                           indf1	equ	0xFE7
  5592                           postinc1	equ	0xFE6
  5593                           fsr1h	equ	0xFE2
  5594                           fsr1l	equ	0xFE1
  5595                           indf2	equ	0xFDF
  5596                           postinc2	equ	0xFDE
  5597                           plusw2	equ	0xFDB
  5598                           fsr2h	equ	0xFDA
  5599                           fsr2l	equ	0xFD9
  5600                           status	equ	0xFD8
  5601                           
  5602 ;; *************** function ___awdiv *****************
  5603 ;; Defined at:
  5604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  dividend        2   34[COMRAM] int 
  5607 ;;  divisor         2   36[COMRAM] int 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  quotient        2   40[COMRAM] int 
  5610 ;;  sign            1   39[COMRAM] unsigned char 
  5611 ;;  counter         1   38[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  2   34[COMRAM] int 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;Total ram usage:        8 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    1
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_MotorControl
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text49
  5636  0018E0                     __ptext49:
  5637                           	opt stack 0
  5638  0018E0                     ___awdiv:
  5639                           	opt stack 27
  5640                           
  5641                           ;incstack = 0
  5642  0018E0  0E00               	movlw	0
  5643  0018E2  6E28               	movwf	___awdiv@sign,c
  5644  0018E4  AE26               	btfss	___awdiv@divisor+1,7,c
  5645  0018E6  D007               	goto	l2099
  5646  0018E8  6C25               	negf	___awdiv@divisor,c
  5647  0018EA  1E26               	comf	___awdiv@divisor+1,f,c
  5648  0018EC  B0D8               	btfsc	status,0,c
  5649  0018EE  2A26               	incf	___awdiv@divisor+1,f,c
  5650  0018F0  0E01               	movlw	1
  5651  0018F2  6E28               	movwf	___awdiv@sign,c
  5652  0018F4  D000               	goto	l2099
  5653  0018F6                     l2099:
  5654  0018F6  AE24               	btfss	___awdiv@dividend+1,7,c
  5655  0018F8  D007               	goto	l2105
  5656  0018FA  6C23               	negf	___awdiv@dividend,c
  5657  0018FC  1E24               	comf	___awdiv@dividend+1,f,c
  5658  0018FE  B0D8               	btfsc	status,0,c
  5659  001900  2A24               	incf	___awdiv@dividend+1,f,c
  5660  001902  0E01               	movlw	1
  5661  001904  1A28               	xorwf	___awdiv@sign,f,c
  5662  001906  D000               	goto	l2105
  5663  001908                     l2105:
  5664  001908  0E00               	movlw	0
  5665  00190A  6E2A               	movwf	___awdiv@quotient+1,c
  5666  00190C  0E00               	movlw	0
  5667  00190E  6E29               	movwf	___awdiv@quotient,c
  5668  001910  5025               	movf	___awdiv@divisor,w,c
  5669  001912  1026               	iorwf	___awdiv@divisor+1,w,c
  5670  001914  B4D8               	btfsc	status,2,c
  5671  001916  D021               	goto	l2127
  5672  001918  0E01               	movlw	1
  5673  00191A  6E27               	movwf	___awdiv@counter,c
  5674  00191C  D005               	goto	l2113
  5675  00191E                     l2111:
  5676  00191E  90D8               	bcf	status,0,c
  5677  001920  3625               	rlcf	___awdiv@divisor,f,c
  5678  001922  3626               	rlcf	___awdiv@divisor+1,f,c
  5679  001924  2A27               	incf	___awdiv@counter,f,c
  5680  001926  D000               	goto	l2113
  5681  001928                     l2113:
  5682  001928  BE26               	btfsc	___awdiv@divisor+1,7,c
  5683  00192A  D002               	goto	l2115
  5684  00192C  D7F8               	goto	l2111
  5685  00192E  D000               	goto	l2115
  5686  001930                     l2115:
  5687  001930  90D8               	bcf	status,0,c
  5688  001932  3629               	rlcf	___awdiv@quotient,f,c
  5689  001934  362A               	rlcf	___awdiv@quotient+1,f,c
  5690  001936  5025               	movf	___awdiv@divisor,w,c
  5691  001938  5C23               	subwf	___awdiv@dividend,w,c
  5692  00193A  5026               	movf	___awdiv@divisor+1,w,c
  5693  00193C  5824               	subwfb	___awdiv@dividend+1,w,c
  5694  00193E  A0D8               	btfss	status,0,c
  5695  001940  D006               	goto	l2123
  5696  001942  5025               	movf	___awdiv@divisor,w,c
  5697  001944  5E23               	subwf	___awdiv@dividend,f,c
  5698  001946  5026               	movf	___awdiv@divisor+1,w,c
  5699  001948  5A24               	subwfb	___awdiv@dividend+1,f,c
  5700  00194A  8029               	bsf	___awdiv@quotient,0,c
  5701  00194C  D000               	goto	l2123
  5702  00194E                     l2123:
  5703  00194E  90D8               	bcf	status,0,c
  5704  001950  3226               	rrcf	___awdiv@divisor+1,f,c
  5705  001952  3225               	rrcf	___awdiv@divisor,f,c
  5706  001954  2E27               	decfsz	___awdiv@counter,f,c
  5707  001956  D7EC               	goto	l2115
  5708  001958  D000               	goto	l2127
  5709  00195A                     l2127:
  5710  00195A  5028               	movf	___awdiv@sign,w,c
  5711  00195C  B4D8               	btfsc	status,2,c
  5712  00195E  D005               	goto	l2131
  5713  001960  6C29               	negf	___awdiv@quotient,c
  5714  001962  1E2A               	comf	___awdiv@quotient+1,f,c
  5715  001964  B0D8               	btfsc	status,0,c
  5716  001966  2A2A               	incf	___awdiv@quotient+1,f,c
  5717  001968  D000               	goto	l2131
  5718  00196A                     l2131:
  5719  00196A  C029  F023         	movff	___awdiv@quotient,?___awdiv
  5720  00196E  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  5721  001972  D000               	goto	l790
  5722  001974                     l790:
  5723  001974  0012               	return		;funcret
  5724  001976                     __end_of___awdiv:
  5725                           	opt stack 0
  5726                           stkptr	equ	0xFFC
  5727                           tblptru	equ	0xFF8
  5728                           tblptrh	equ	0xFF7
  5729                           tblptrl	equ	0xFF6
  5730                           tablat	equ	0xFF5
  5731                           prodh	equ	0xFF4
  5732                           prodl	equ	0xFF3
  5733                           intcon	equ	0xFF2
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           indf1	equ	0xFE7
  5737                           postinc1	equ	0xFE6
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           plusw2	equ	0xFDB
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _SetDCPWM2 *****************
  5748 ;; Defined at:
  5749 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  dutycycle       2   14[COMRAM] unsigned int 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  DCycle          2   18[COMRAM] struct PWMDC
  5754 ;; Return value:  Size  Location     Type
  5755 ;;		None               void
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;Total ram usage:        6 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_MotorControl
  5774 ;;		_initialization
  5775 ;;		_motors_brake_all
  5776 ;;		_set_motor_speed
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text50
  5781  001DA4                     __ptext50:
  5782                           	opt stack 0
  5783  001DA4                     _SetDCPWM2:
  5784                           	opt stack 28
  5785                           
  5786                           ;incstack = 0
  5787  001DA4  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  5788  001DA8  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  5789  001DAC  0E06               	movlw	6
  5790  001DAE                     u1405:
  5791  001DAE  90D8               	bcf	status,0,c
  5792  001DB0  3611               	rlcf	??_SetDCPWM2,f,c
  5793  001DB2  3612               	rlcf	??_SetDCPWM2+1,f,c
  5794  001DB4  2EE8               	decfsz	wreg,f,c
  5795  001DB6  D7FB               	goto	u1405
  5796  001DB8  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  5797  001DBC  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  5798  001DC0  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  5799  001DC4  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  5800  001DC8  90D8               	bcf	status,0,c
  5801  001DCA  3211               	rrcf	??_SetDCPWM2,f,c
  5802  001DCC  90D8               	bcf	status,0,c
  5803  001DCE  3211               	rrcf	??_SetDCPWM2,f,c
  5804  001DD0  0E30               	movlw	48
  5805  001DD2  1611               	andwf	??_SetDCPWM2,f,c
  5806  001DD4  50BA               	movf	4026,w,c	;volatile
  5807  001DD6  0BCF               	andlw	207
  5808  001DD8  1011               	iorwf	??_SetDCPWM2,w,c
  5809  001DDA  6EBA               	movwf	4026,c	;volatile
  5810  001DDC  0012               	return		;funcret
  5811  001DDE                     __end_of_SetDCPWM2:
  5812                           	opt stack 0
  5813                           stkptr	equ	0xFFC
  5814                           tblptru	equ	0xFF8
  5815                           tblptrh	equ	0xFF7
  5816                           tblptrl	equ	0xFF6
  5817                           tablat	equ	0xFF5
  5818                           prodh	equ	0xFF4
  5819                           prodl	equ	0xFF3
  5820                           intcon	equ	0xFF2
  5821                           postinc0	equ	0xFEE
  5822                           wreg	equ	0xFE8
  5823                           indf1	equ	0xFE7
  5824                           postinc1	equ	0xFE6
  5825                           fsr1h	equ	0xFE2
  5826                           fsr1l	equ	0xFE1
  5827                           indf2	equ	0xFDF
  5828                           postinc2	equ	0xFDE
  5829                           plusw2	equ	0xFDB
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _SetDCPWM1 *****************
  5835 ;; Defined at:
  5836 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  dutycycle       2   14[COMRAM] unsigned int 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  DCycle          2   18[COMRAM] struct PWMDC
  5841 ;; Return value:  Size  Location     Type
  5842 ;;		None               void
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;Total ram usage:        6 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_MotorControl
  5861 ;;		_initialization
  5862 ;;		_motors_brake_all
  5863 ;;		_set_motor_speed
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text51
  5868  001DDE                     __ptext51:
  5869                           	opt stack 0
  5870  001DDE                     _SetDCPWM1:
  5871                           	opt stack 28
  5872                           
  5873                           ;incstack = 0
  5874  001DDE  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5875  001DE2  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5876  001DE6  0E06               	movlw	6
  5877  001DE8                     u1415:
  5878  001DE8  90D8               	bcf	status,0,c
  5879  001DEA  3611               	rlcf	??_SetDCPWM1,f,c
  5880  001DEC  3612               	rlcf	??_SetDCPWM1+1,f,c
  5881  001DEE  2EE8               	decfsz	wreg,f,c
  5882  001DF0  D7FB               	goto	u1415
  5883  001DF2  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5884  001DF6  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5885  001DFA  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5886  001DFE  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5887  001E02  90D8               	bcf	status,0,c
  5888  001E04  3211               	rrcf	??_SetDCPWM1,f,c
  5889  001E06  90D8               	bcf	status,0,c
  5890  001E08  3211               	rrcf	??_SetDCPWM1,f,c
  5891  001E0A  0E30               	movlw	48
  5892  001E0C  1611               	andwf	??_SetDCPWM1,f,c
  5893  001E0E  50BD               	movf	4029,w,c	;volatile
  5894  001E10  0BCF               	andlw	207
  5895  001E12  1011               	iorwf	??_SetDCPWM1,w,c
  5896  001E14  6EBD               	movwf	4029,c	;volatile
  5897  001E16  0012               	return		;funcret
  5898  001E18                     __end_of_SetDCPWM1:
  5899                           	opt stack 0
  5900                           stkptr	equ	0xFFC
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           intcon	equ	0xFF2
  5908                           postinc0	equ	0xFEE
  5909                           wreg	equ	0xFE8
  5910                           indf1	equ	0xFE7
  5911                           postinc1	equ	0xFE6
  5912                           fsr1h	equ	0xFE2
  5913                           fsr1l	equ	0xFE1
  5914                           indf2	equ	0xFDF
  5915                           postinc2	equ	0xFDE
  5916                           plusw2	equ	0xFDB
  5917                           fsr2h	equ	0xFDA
  5918                           fsr2l	equ	0xFD9
  5919                           status	equ	0xFD8
  5920                           
  5921 ;; *************** function _high_isr *****************
  5922 ;; Defined at:
  5923 ;;		line 24 in file "../Robot Files/interrupts.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;		None               void
  5930 ;; Registers used:
  5931 ;;		wreg, status,2
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;Total ram usage:       14 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		Interrupt level 2
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	intcode
  5951  000008                     __pintcode:
  5952                           	opt stack 0
  5953  000008                     _high_isr:
  5954                           	opt stack 25
  5955                           
  5956                           ;incstack = 0
  5957  000008  CFFA F001          	movff	pclath,??_high_isr
  5958  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5959  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5960  000014  ED86  F00D         	call	int_func,f	;refresh shadow registers
  5961                           stkptr	equ	0xFFC
  5962                           pclatu	equ	0xFFB
  5963                           pclath	equ	0xFFA
  5964                           tblptru	equ	0xFF8
  5965                           tblptrh	equ	0xFF7
  5966                           tblptrl	equ	0xFF6
  5967                           tablat	equ	0xFF5
  5968                           prodh	equ	0xFF4
  5969                           prodl	equ	0xFF3
  5970                           intcon	equ	0xFF2
  5971                           postinc0	equ	0xFEE
  5972                           fsr0l	equ	0xFE9
  5973                           wreg	equ	0xFE8
  5974                           indf1	equ	0xFE7
  5975                           postinc1	equ	0xFE6
  5976                           fsr1h	equ	0xFE2
  5977                           fsr1l	equ	0xFE1
  5978                           indf2	equ	0xFDF
  5979                           postinc2	equ	0xFDE
  5980                           plusw2	equ	0xFDB
  5981                           fsr2h	equ	0xFDA
  5982                           fsr2l	equ	0xFD9
  5983                           status	equ	0xFD8
  5984                           
  5985                           	psect	intcode_body
  5986  001B0C                     __pintcode_body:
  5987                           	opt stack 25
  5988  001B0C                     int_func:
  5989                           	opt stack 25
  5990  001B0C  0006               	pop		; remove dummy address from shadow register refresh
  5991  001B0E  CFEA F004          	movff	fsr0h,??_high_isr+3
  5992  001B12  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5993  001B16  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5994  001B1A  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5995  001B1E  CFDA F008          	movff	fsr2h,??_high_isr+7
  5996  001B22  CFF3 F009          	movff	prodl,??_high_isr+8
  5997  001B26  CFF4 F00A          	movff	prodh,??_high_isr+9
  5998  001B2A  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5999  001B2E  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6000  001B32  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6001  001B36  CFF5 F00E          	movff	tablat,??_high_isr+13
  6002                           
  6003                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6004  001B3A  94A1               	bcf	4001,2,c	;volatile
  6005                           
  6006                           ;interrupts.c: 27: TRISA = 0xff;
  6007  001B3C  6892               	setf	3986,c	;volatile
  6008                           
  6009                           ;interrupts.c: 28: TRISB = 0xff;
  6010  001B3E  6893               	setf	3987,c	;volatile
  6011                           
  6012                           ;interrupts.c: 29: TRISC = 0xff;
  6013  001B40  6894               	setf	3988,c	;volatile
  6014                           
  6015                           ;interrupts.c: 30: TRISD = 0xff;
  6016  001B42  6895               	setf	3989,c	;volatile
  6017                           
  6018                           ;interrupts.c: 31: TRISE = 0x03;
  6019  001B44  0E03               	movlw	3
  6020  001B46  6E96               	movwf	3990,c	;volatile
  6021                           
  6022                           ;interrupts.c: 32: lvd_flag =1;
  6023  001B48  0E01               	movlw	1
  6024  001B4A  6E4C               	movwf	_lvd_flag,c
  6025                           
  6026                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6027  001B4C  94A0               	bcf	4000,2,c	;volatile
  6028                           
  6029                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6030  001B4E  98D2               	bcf	4050,4,c	;volatile
  6031  001B50  C00E  FFF5         	movff	??_high_isr+13,tablat
  6032  001B54  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6033  001B58  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6034  001B5C  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6035  001B60  C00A  FFF4         	movff	??_high_isr+9,prodh
  6036  001B64  C009  FFF3         	movff	??_high_isr+8,prodl
  6037  001B68  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6038  001B6C  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6039  001B70  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6040  001B74  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6041  001B78  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6042  001B7C  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6043  001B80  C002  FFFB         	movff	??_high_isr+1,pclatu
  6044  001B84  C001  FFFA         	movff	??_high_isr,pclath
  6045  001B88  0011               	retfie		f
  6046  001B8A                     __end_of_high_isr:
  6047                           	opt stack 0
  6048                           stkptr	equ	0xFFC
  6049                           pclatu	equ	0xFFB
  6050                           pclath	equ	0xFFA
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           postinc0	equ	0xFEE
  6059                           fsr0h	equ	0xFEA
  6060                           fsr0l	equ	0xFE9
  6061                           wreg	equ	0xFE8
  6062                           indf1	equ	0xFE7
  6063                           postinc1	equ	0xFE6
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           plusw2	equ	0xFDB
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           stkptr	equ	0xFFC
  6073                           pclatu	equ	0xFFB
  6074                           pclath	equ	0xFFA
  6075                           tblptru	equ	0xFF8
  6076                           tblptrh	equ	0xFF7
  6077                           tblptrl	equ	0xFF6
  6078                           tablat	equ	0xFF5
  6079                           prodh	equ	0xFF4
  6080                           prodl	equ	0xFF3
  6081                           intcon	equ	0xFF2
  6082                           postinc0	equ	0xFEE
  6083                           fsr0h	equ	0xFEA
  6084                           fsr0l	equ	0xFE9
  6085                           wreg	equ	0xFE8
  6086                           indf1	equ	0xFE7
  6087                           postinc1	equ	0xFE6
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           plusw2	equ	0xFDB
  6093                           fsr2h	equ	0xFDA
  6094                           fsr2l	equ	0xFD9
  6095                           status	equ	0xFD8
  6096                           
  6097                           	psect	rparam
  6098  0000                     stkptr	equ	0xFFC
  6099                           pclatu	equ	0xFFB
  6100                           pclath	equ	0xFFA
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           prodh	equ	0xFF4
  6106                           prodl	equ	0xFF3
  6107                           intcon	equ	0xFF2
  6108                           postinc0	equ	0xFEE
  6109                           fsr0h	equ	0xFEA
  6110                           fsr0l	equ	0xFE9
  6111                           wreg	equ	0xFE8
  6112                           indf1	equ	0xFE7
  6113                           postinc1	equ	0xFE6
  6114                           fsr1h	equ	0xFE2
  6115                           fsr1l	equ	0xFE1
  6116                           indf2	equ	0xFDF
  6117                           postinc2	equ	0xFDE
  6118                           plusw2	equ	0xFDB
  6119                           fsr2h	equ	0xFDA
  6120                           fsr2l	equ	0xFD9
  6121                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    20
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      76
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _check_sensors->_adc
    _adc->_ReadADC
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   19556
                                             60 COMRAM     3     3      0
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3980
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      37
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      37
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    5766
                                             51 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    8248
                                             55 COMRAM     5     3      2
                       _MotorControl
                          _SharpTurn
                        _WriteTimer0
                   _motors_brake_all
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     196
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4005
                                             51 COMRAM     4     4      0
                       _MotorControl
                   _motors_brake_all
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     648
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                         9     7      2    3243
                                             42 COMRAM     9     7      2
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     812
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     324
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     324
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
     _WriteTimer0
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      34        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 02 23:26:50 2020

                         _STKPTRbits 000FFC                                    _I 0047  
                                 l62 1614                                   l94 1300  
                       ___awdiv@sign 0028                  ___wmul@multiplicand 001F  
                        __CFG_BORV$0 000000                                  l102 1458  
                                l106 14C8                                  l303 1DA2  
                                l312 18DE                                  l145 176E  
                                l306 18CA                                  l307 1870  
                                l500 1FA2                                  l333 1C0A  
                                l501 1FA4                                  l407 20F0  
                                l530 2036                                  l363 20F6  
                                l372 1EA8                                  l437 20D4  
                                l429 1CB6                                  l286 1ED0  
                                l560 1BD2                                  l529 2034  
                                l561 1BDC                                  l562 1BDE  
                                l555 1BB6                                  l571 2066  
                                l299 1D92                                  l564 1BF8  
                                l580 1F44                                  l477 1E3A  
                                l478 1E44                                  l479 1E46  
                                l559 1BD0                                  l666 15C0  
                                l597 1EF8                                  l589 1F1E  
                                l790 1974                                  u230 20EC  
                                _PR2 000FCB                                  u960 1A98  
                                u980 1AAE                                  u978 1A9A  
                                u998 1AB0                 __size_of_WriteTimer0 0012  
                                _adc 1EAA                                  wreg 000FE8  
                    ReadTimer0@timer 0011                         __CFG_LVP$OFF 000000  
                       __CFG_WDT$OFF 000000                                 ?_adc 0013  
                               l1115 1D0C                                 l1221 1C34  
                               l1125 1D58                                 l2111 191E  
                               l2113 1928                                 l2105 1908  
                               l1225 1C4C                                 l2131 196A  
                               l2123 194E                                 l2115 1930  
                               l2221 18A6                                 l1413 205E  
                               l2127 195A                                 l2143 13B6  
                               l2311 1A5E                                 l2153 1428  
                               l2321 1A84                                 l2305 1A44  
                               l2073 1E5A                                 l2225 18BE  
                               l1417 2062                                 l1361 1F38  
                               l2163 145C                                 l2147 1404  
                               l2075 1E62                                 l2173 14B2  
                               l2157 1442                                 l2317 1A74  
                               l2309 1A54                                 l2405 1EB8  
                               l2341 1BBA                                 l2333 1BA6  
                               l1357 1F34                                 l1365 1F3C  
                               l1453 1F12                                 l1461 1F1A  
                               l2431 153E                                 l2169 1498  
                               l2433 154C                                 l2425 151C  
                               l2601 111E                                 l2337 1BAE  
                               l2329 1B9C                                 l1369 1F40  
                               l1449 1F0E                                 l1457 1F16  
                               l1553 1EA2                                 l2099 18F6  
                               l2179 14CC                                 l2451 15AE  
                               l2443 1586                                 l2435 1554  
                               l2419 1502                                 l2603 112E  
                               l2461 1CD0                                 l2613 1186  
                               l2605 113E                                 l2349 1BC8  
                               l2381 1D82                                 l1549 1E8E  
                               l2447 1596                                 l2463 1CDA  
                               l2623 1274                                 l2615 11A4  
                               l2561 16F8                                 l2553 16D2  
                               l2545 16A4                                 l2473 1D00  
                               l2465 1CE2                                 l2481 1D24  
                               l2609 1160                                 l2377 1D72  
                               l2299 1A2C                                 l2483 1D2E  
                               l1675 1E36                                 l2387 1D9C  
                               l2565 1708                                 l2485 1D36  
                               l2661 1604                                 l2583 1752  
                               l2575 1736                                 l2559 16EA  
                               l2591 10C6                                 l2671 161C  
                               l2663 1608                                 l2585 1760  
                               l2489 1D4C                                 l2593 10D6  
                               l2673 1620                                 l2665 160C  
                               l2681 1638                                 l2579 173E  
                               l2675 1624                                 l2667 1610  
                               l2683 1674                                 l2659 15FE  
                               l2597 10F8                                 l2677 1632  
                               l2669 1618                      __end_of_BORtask 1F88  
                               STR_1 1015                                 STR_2 107E  
                               STR_3 1078                                 STR_4 1068  
                               STR_5 105F                                 STR_6 1055  
                               STR_7 1071                                 u1000 1AC6  
                               u1020 1AE0                                 u1040 1AFC  
                               u2010 17D8                                 u1018 1AC8  
                               u2030 1800                                 u1038 1AE2  
                               u2008 17B0                                 u2050 1826  
                               u1058 1AFE                                 u2028 17DA  
                               u1405 1DAE                                 u1415 1DE8  
                               u1520 1466                                 u2048 1802  
                               u2068 1828                                 u2407 171C  
                               u2417 1744                                 u1570 14D6  
                               u1538 1468                                 u2427 1A12  
                               u1588 14D8                                 u1970 1788  
                               u1990 17AE                                 u1988 178A  
                    ?_GetBackonTrack 0038                                 _TMR2 000FCC  
                       __CFG_WDTPS$8 000000                     ??_initialization 001C  
                               _main 15C2                __end_of_check_sensors 1834  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               pclat 000FFA                        __CFG_BOREN$ON 000000  
                    __end_of_PORtask 18E0                                 prodh 000FF4  
                               prodl 000FF3           MotorControl@delta_velocity 002B  
                               start 0018                      __end_of_WDTtask 2002  
                       ___param_bank 000010                      __end_of_BusyADC 20F2  
                    __end_of_ReadADC 20D6                      __end_of_OpenADC 1CBA  
                              ??_adc 0015               PID_LineFollowing@error 0034  
                    __end_of___aldiv 15C2                                ?_main 0001  
                    __end_of___awdiv 1976                                _T0CON 000FD5  
                    ___awdiv@divisor 0025                                _T2CON 000FCA  
                    __end_of___lwdiv 1D16                      __end_of___lwmod 1D62  
                    ___awdiv@counter 0027                   __size_of_RESETtask 001C  
                              _RCSTA 000FAB                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _SPBRG 000FAF  
                              _PORTD 000F83                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _TXSTA 000FAC                      __end_of_isWDTTO 1F20  
            __end_of_openPORTCforPWM 20E4                                _isBOR 2052  
                              _isPOR 1F20                                _gtrap 1BFA  
                              _putch 2120                      __end_of_openLVD 2052  
                         _ConvertADC 211C                                tablat 000FF5  
         __size_of_openPORTCforUSART 0006                                plusw2 000FDB  
                              status 000FD8                          ?_STKFULtask 0001  
                     __CFG_MCLRE$OFF 000000                      __initialization 207E  
                       __end_of_main 169A                           _ReadTimer0 20A2  
                   __end_of_OpenPWM1 20A2                     __end_of_OpenPWM2 1E50  
                             ??_main 003D                        __activetblptr 000003  
                         _SetChanADC 2068                            ??_BORtask 0014  
                             ?_isBOR 0001                  GetBackonTrack@error 0038  
                             ?_isPOR 0001                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_gtrap 0001                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                     ___awdiv@dividend 0023  
                             ?_putch 0001                            ??_PORtask 0014  
                          ??_WDTtask 0014                           _OpenTimer0 1F88  
                         _OpenTimer2 201E                               _TMR0IF 007F92  
                             _SPBRGH 000FB0                   __size_of_SetDCPWM1 003A  
                 __size_of_SetDCPWM2 003A                            ??_BusyADC 000F  
                          ??_ReadADC 0011                               _LVtrap 1FA8  
                  __end_of_RESETtask 201E                            ??_OpenADC 0011  
                       ?_reset_codes 0001                     __end_of_high_isr 1B8A  
                 __size_of_OpenUSART 0070                            ??___aldiv 0017  
                             ___wmul 1ED2                            ??___awdiv 0027  
                     __CFG_STVREN$ON 000000                     OpenTimer0@config 000F  
                          ??___lwdiv 0017                            ??___lwmod 0017  
                 __size_of_SharpTurn 0088                     OpenTimer2@config 000F  
                             clear_0 2084                     ___awdiv@quotient 0029  
                          ??_isWDTTO 000F                               _printf 1E50  
                   __end_of_set_leds 1B0C                            ??_openLVD 000F  
                __size_of_STKFULtask 001E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     ?_openPORTCforPWM 0001  
                  ?_motors_brake_all 0001                               putch@c 0001  
                 ??_motors_brake_all 0015                          ?_ConvertADC 0001  
                         __accesstop 0080              __end_of__initialization 208A  
                         adc@channel 0015                        ___rparam_used 000001  
              __end_of_set_osc_32MHz 1EAA                       __pcstackCOMRAM 0001  
                        ?_ReadTimer0 000F                        __end_of_isBOR 2068  
                      __end_of_isPOR 1F46                        __end_of_gtrap 1C5C  
                      __end_of_putch 2122                    __end_of_SetDCPWM1 1E18  
                  __end_of_SetDCPWM2 1DDE                        ??_StatusReset 000F  
                        ?_SetChanADC 0001                     ??_GetBackonTrack 003A  
                      ?_lvd_flag_set 0001                              ??_isBOR 000F  
                            ??_isPOR 000F                    __end_of_OpenUSART 1BFA  
                            ??_gtrap 000F                              ??_putch 000F  
                        ?_OpenTimer0 0001                          ?_OpenTimer2 0001  
                  __end_of_SharpTurn 1A8E                            ?_OpenPWM1 0001  
                          ?_OpenPWM2 0001                              ?_LVtrap 0001  
                      ?_MotorControl 002B                   __end_of_D_CONSTANT 1011  
                 __size_of_openPORTA 0006                   __size_of_openPORTB 0006  
                 __size_of_openPORTD 0006                   __size_of_openPORTE 0006  
                            ?___wmul 001D                              _CCP1CON 000FBD  
                            _CCP2CON 000FBA                     WriteTimer0@timer 0011  
                      ??_WriteTimer0 0011                  __size_of_ConvertADC 0004  
                            ?_printf 000F                              _BORtask 1F68  
                     ??_lvd_flag_set 000F                            ?_high_isr 0001  
                __end_of_StatusReset 20FE                  __size_of_ReadTimer0 0012  
                            _PORtask 1834                   __end_of_I_CONSTANT 1013  
                            _WDTtask 1FE6                              _BusyADC 20E4  
                            _ReadADC 20C6                           ??_OpenPWM1 000F  
                         ??_OpenPWM2 000F                         ??_STKFULtask 0014  
                            _SeeLine 004B                       ??_MotorControl 002D  
                            _OpenADC 1C5C                      __size_of_LVtrap 0020  
                            __Hparam 0000                  __size_of_SetChanADC 0016  
                            __Lparam 0000                            ?_set_leds 0001  
               __size_of_reset_codes 0042                              ___aldiv 14E4  
                            ___awdiv 18E0                      __size_of___wmul 0028  
                            ___lwdiv 1CBA                              ___lwmod 1D16  
                       __psmallconst 1000                              __pcinit 207E  
                            _isWDTTO 1EFA                              __ramtop 1000  
                __size_of_OpenTimer0 0020                  __size_of_OpenTimer2 001C  
                            __ptext0 15C2                              __ptext1 1A8E  
                            __ptext2 20F2                              __ptext3 1976  
                            __ptext4 1E7E                              __ptext5 1D62  
                            __ptext6 1EFA                              __ptext7 1F20  
                            __ptext8 2052                              __ptext9 1FE6  
                    __size_of_printf 002E                            _T0CONbits 000FD5  
                       __size_of_adc 0028                            _T2CONbits 000FCA  
             __size_of_check_sensors 00C4                              _openLVD 203A  
                   ___aldiv@dividend 000F                  __end_of_WriteTimer0 20C6  
                 __end_of_STKFULtask 1FE6                   __end_of_P_CONSTANT 1015  
                  __end_of_openPORTA 2116                    __end_of_openPORTB 2110  
                  __end_of_openPORTD 211C                    __end_of_openPORTE 2104  
                     OpenADC@config2 000F                           ??_high_isr 0001  
                     __pintcode_body 1B0C                 end_of_initialization 208A  
                            int_func 1B0C                           ??_set_leds 000F  
                          _RCSTAbits 000FAB                              printf@c 0013  
                            printf@f 000F                     ___aldiv@quotient 0019  
                          _RESETtask 2002                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
            __size_of_initialization 0090                            _PORTCbits 000F82  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                     set_osc_32MHz@i 000F                          _StatusReset 20F8  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                       ??_ConvertADC 000F          MotorControl@left_duty_cycle 0030  
                  _PID_LineFollowing 1086        MotorControl@left_dir_modifier 002E  
                 ?_PID_LineFollowing 0034                            _TXSTAbits 000FAC  
                      _check_sensors 1770            __size_of_motors_brake_all 0022  
                     __end_of_LVtrap 1FC8                 __end_of_lvd_flag_set 20F8  
     MotorControl@right_dir_modifier 002F                  ??_PID_LineFollowing 0036  
                       ??_ReadTimer0 0011                           ?_RESETtask 0001  
                     __end_of___wmul 1EFA                          _WriteTimer0 20B4  
                 __end_of_ConvertADC 2120                         ??_SetChanADC 000F  
                     __end_of_printf 1E7E                  start_initialization 207E  
               __end_of_MotorControl 14E4                            _SetDCPWM1 1DDE  
                          _SetDCPWM2 1DA4                      SetDCPWM1@DCycle 0013  
                        __end_of_adc 1ED2                      SetDCPWM2@DCycle 0013  
          __end_of_PID_LineFollowing 1354                         ??_OpenTimer0 000F  
                       ??_OpenTimer2 000F                   __end_of_ReadTimer0 20B4  
                          _OpenUSART 1B8A             __size_of_openPORTCforPWM 000E  
                     ?_check_sensors 0001                     __CFG_OSC$INTIO67 000000  
                           ??_LVtrap 0014                            _SharpTurn 1A06  
                 __end_of_SetChanADC 207E                    __size_of_OpenPWM1 0012  
                  __size_of_OpenPWM2 0038                             ??___wmul 0021  
                           ??_printf 0011                           gtrap@count 000F  
                 __end_of_OpenTimer0 1FA8                   __end_of_OpenTimer2 203A  
                 SharpTurn@direction 0035                          __pbssCOMRAM 0040  
                           ?_BORtask 0001                           ?_SetDCPWM1 000F  
                         ?_SetDCPWM2 000F                        PORtask@count1 0014  
                      PORtask@count2 0018               __size_of_set_osc_32MHz 002C  
                           ?_PORtask 0001                             ?_WDTtask 0001  
                         ?_OpenUSART 000F                    __size_of_high_isr 1B82  
                           ?_BusyADC 0001                             ?_ReadADC 000F  
                         ?_SharpTurn 0001                    OpenADC@portconfig 0010  
                           ?_OpenADC 000F                     ___lwdiv@dividend 0013  
                          __pintcode 0008                          ??_RESETtask 0014  
                           ?___aldiv 000F                             ?___awdiv 0023  
                     _initialization 1976                    __size_of_set_leds 007E  
                           ?___lwdiv 0013                             ?___lwmod 0013  
                           ?_isWDTTO 0001                          __smallconst 1000  
                  WriteTimer0@timer0 000F                   PID_LineFollowing@D 0043  
                           ?_openLVD 0001              SharpTurn@delta_velocity 0036  
         __size_of_PID_LineFollowing 02CE                       __size_of_isBOR 0016  
                   ___lwdiv@quotient 0017                       __size_of_isPOR 0026  
                     __size_of_gtrap 0062                       __size_of_putch 0002  
                 _GetBackonTrack$454 003B                      ??_check_sensors 0016  
                    ___aldiv@divisor 0013                            _openPORTA 2110  
                          _openPORTB 210A                            _openPORTD 2116  
                          _openPORTE 20FE                      ___aldiv@counter 0017  
                     ___wmul@product 0021                        OpenADC@config 0013  
              __size_of_lvd_flag_set 0006              __size_of_GetBackonTrack 00D6  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                        ??_reset_codes 001C  
                   _motors_brake_all 1F46                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1               __end_of_initialization 1A06  
                           _RCONbits 000FD0                    ??_openPORTCforPWM 000F  
                      _set_osc_32MHz 1E7E                            main@F4183 0040  
__end_ofset_motor_speed@motor_speeds 100F          set_motor_speed@motor_speeds 1001  
                        _HLVDCONbits 000FD2                            _threshold 0049  
              __size_of_MotorControl 0190                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 001D                         ?_StatusReset 0001  
                    GetBackonTrack@i 003C                            main@error 003D  
       MotorControl@right_duty_cycle 0032                          ??_SetDCPWM1 0011  
                        ??_SetDCPWM2 0011                     __size_of_BORtask 0020  
                       _lvd_flag_set 20F2                     __size_of_PORtask 00AC  
                        ??_OpenUSART 0011                   SetDCPWM1@dutycycle 000F  
                         ?_openPORTA 0001                           ?_openPORTB 0001  
                         ?_openPORTD 0001                           ?_openPORTE 0001  
                   __size_of_WDTtask 001C                      OpenUSART@config 0011  
                           _OpenPWM1 2090                             _OpenPWM2 1E18  
    PID_LineFollowing@delta_velocity 0045                     __size_of_BusyADC 000E  
                        ??_SharpTurn 0034                     __size_of_ReadADC 0010  
                           __Hrparam 0000                     __size_of_OpenADC 005E  
                       _MotorControl 1354                      ?_initialization 0001  
                           __Lrparam 0000                   SetDCPWM2@dutycycle 000F  
                     ?_set_osc_32MHz 0001                     __size_of___aldiv 00DE  
                __end_of_reset_codes 1DA4                     __size_of___awdiv 0096  
                   __size_of___lwdiv 005C                     __size_of___lwmod 004C  
                       ?_WriteTimer0 000F                       OpenPWM2@ccp2mx 0010  
                   __size_of_isWDTTO 0026                       OpenPWM1@period 000F  
                     OpenPWM2@period 000F                      ___lwdiv@divisor 0015  
                   __size_of_openLVD 0018                      ___lwdiv@counter 0019  
                           __ptext10 1FC8                             __ptext11 2002  
                           __ptext20 203A                             __ptext12 1834  
                           __ptext21 1B8A                             __ptext13 1F68  
                           __ptext30 211C                             __ptext22 201E  
                           __ptext14 20F8                             __ptext31 20E4  
                           __ptext23 1E18                             __ptext15 20FE  
                           __ptext40 2120                             __ptext32 1086  
                           __ptext24 2090                             __ptext16 2104  
                           __ptext41 2116                             __ptext33 1D16  
                           __ptext25 1C5C                             __ptext17 20D6  
                           __ptext50 1DA4                             __ptext42 1BFA  
                           __ptext34 1CBA                             __ptext26 1770  
                           __ptext18 210A                             __ptext51 1DDE  
                           __ptext43 169A                             __ptext35 14E4  
                           __ptext27 1EAA                             __ptext19 2110  
                           __ptext44 20B4                             __ptext36 20A2  
                           __ptext28 2068                             __ptext45 1A06  
                           __ptext37 1F88                             __ptext29 20C6  
                           __ptext46 1F46                             __ptext38 1FA8  
                           __ptext47 1354                             __ptext39 1E50  
                           __ptext48 1ED2                             __ptext49 18E0  
                           _high_isr 0008                        __size_of_main 00D8  
                           _lvd_flag 004C                             _set_leds 1A8E  
                        _OSCTUNEbits 000F9B                           _INTCONbits 000FF2  
                         _D_CONSTANT 100F                       OpenUSART@spbrg 000F  
                           intlevel2 0000                          ??_openPORTA 000F  
                        ??_openPORTB 000F                          ??_openPORTD 000F  
                        ??_openPORTE 000F                     ___lwmod@dividend 0013  
                     _GetBackonTrack 169A                    _openPORTCforUSART 2104  
                  SetChanADC@channel 0010                      ??_set_osc_32MHz 000F  
                        _reset_codes 1D62                           _OSCCONbits 000FD3  
                 ?_openPORTCforUSART 0001                           _I_CONSTANT 1011  
                           printf@ap 0011                  ??_openPORTCforUSART 000F  
                    ___lwmod@divisor 0015                      ___lwmod@counter 0017  
           __end_of_motors_brake_all 1F68                         ___aldiv@sign 0018  
               __size_of_StatusReset 0006               __end_of_GetBackonTrack 1770  
                    _openPORTCforPWM 20D6            __end_of_openPORTCforUSART 210A  
                         _STKFULtask 1FC8                           _P_CONSTANT 1013  
