

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 17:06:02 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	smallconst
    66  001000                     __psmallconst:
    67                           	opt stack 0
    68  001000  00                 	db	0
    69  001001                     _D_CONSTANT:
    70                           	opt stack 0
    71  001001  1F40               	dw	8000
    72  001003                     __end_of_D_CONSTANT:
    73                           	opt stack 0
    74  001003                     _I_CONSTANT:
    75                           	opt stack 0
    76  001003  0032               	dw	50
    77  001005                     __end_of_I_CONSTANT:
    78                           	opt stack 0
    79  001005                     _P_CONSTANT:
    80                           	opt stack 0
    81  001005  0096               	dw	150
    82  001007                     __end_of_P_CONSTANT:
    83                           	opt stack 0
    84  001007                     _TIME_OFF_TRACK_ms:
    85                           	opt stack 0
    86  001007  07D0               	dw	2000
    87  001009                     __end_of_TIME_OFF_TRACK_ms:
    88                           	opt stack 0
    89  001009                     _TIME_ON_BLACK_ms:
    90                           	opt stack 0
    91  001009  03E8               	dw	1000
    92  00100B                     __end_of_TIME_ON_BLACK_ms:
    93                           	opt stack 0
    94  00100B                     _TIME_SHARP_TURN_ms:
    95                           	opt stack 0
    96  00100B  01F4               	dw	500
    97  00100D                     __end_of_TIME_SHARP_TURN_ms:
    98                           	opt stack 0
    99  00100D                     _TIME_TURN_ms:
   100                           	opt stack 0
   101  00100D  0320               	dw	800
   102  00100F                     __end_of_TIME_TURN_ms:
   103                           	opt stack 0
   104  00100F                     _TIME_UPDATE_D_ms:
   105                           	opt stack 0
   106  00100F  01F4               	dw	500
   107  001011                     __end_of_TIME_UPDATE_D_ms:
   108                           	opt stack 0
   109  0000                     _ADCON0	set	4034
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _ADCON1	set	4033
   112  0000                     _ADCON2	set	4032
   113  0000                     _ADRESH	set	4036
   114  0000                     _ADRESL	set	4035
   115  0000                     _CCP1CON	set	4029
   116  0000                     _CCP2CON	set	4026
   117  0000                     _CCPR1L	set	4030
   118  0000                     _CCPR2L	set	4027
   119  0000                     _HLVDCONbits	set	4050
   120  0000                     _INTCONbits	set	4082
   121  0000                     _IPR2bits	set	4002
   122  0000                     _OSCCONbits	set	4051
   123  0000                     _OSCTUNEbits	set	3995
   124  0000                     _PIE1bits	set	3997
   125  0000                     _PIE2bits	set	4000
   126  0000                     _PIR1bits	set	3998
   127  0000                     _PIR2bits	set	4001
   128  0000                     _PORTCbits	set	3970
   129  0000                     _PORTD	set	3971
   130  0000                     _PORTDbits	set	3971
   131  0000                     _PORTEbits	set	3972
   132  0000                     _PR2	set	4043
   133  0000                     _RCONbits	set	4048
   134  0000                     _RCSTA	set	4011
   135  0000                     _RCSTAbits	set	4011
   136  0000                     _SPBRG	set	4015
   137  0000                     _SPBRGH	set	4016
   138  0000                     _STKPTRbits	set	4092
   139  0000                     _T0CON	set	4053
   140  0000                     _T0CONbits	set	4053
   141  0000                     _T2CON	set	4042
   142  0000                     _T2CONbits	set	4042
   143  0000                     _TMR0H	set	4055
   144  0000                     _TMR0L	set	4054
   145  0000                     _TMR2	set	4044
   146  0000                     _TRISA	set	3986
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISBbits	set	3987
   149  0000                     _TRISC	set	3988
   150  0000                     _TRISCbits	set	3988
   151  0000                     _TRISD	set	3989
   152  0000                     _TRISE	set	3990
   153  0000                     _TXSTA	set	4012
   154  0000                     _TXSTAbits	set	4012
   155  0000                     _TMR0IF	set	32658
   156  001011                     STR_7:
   157  001011  0A                 	db	10
   158  001012  0D                 	db	13
   159  001013  4B                 	db	75	;'K'
   160  001014  77                 	db	119	;'w'
   161  001015  61                 	db	97	;'a'
   162  001016  6E                 	db	110	;'n'
   163  001017  74                 	db	116	;'t'
   164  001018  6C                 	db	108	;'l'
   165  001019  65                 	db	101	;'e'
   166  00101A  6E                 	db	110	;'n'
   167  00101B  20                 	db	32
   168  00101C  41                 	db	65	;'A'
   169  00101D  50                 	db	80	;'P'
   170  00101E  53                 	db	83	;'S'
   171  00101F  43                 	db	67	;'C'
   172  001020  31                 	db	49	;'1'
   173  001021  32                 	db	50	;'2'
   174  001022  39                 	db	57	;'9'
   175  001023  39                 	db	57	;'9'
   176  001024  20                 	db	32
   177  001025  73                 	db	115	;'s'
   178  001026  69                 	db	105	;'i'
   179  001027  6D                 	db	109	;'m'
   180  001028  70                 	db	112	;'p'
   181  001029  6C                 	db	108	;'l'
   182  00102A  65                 	db	101	;'e'
   183  00102B  20                 	db	32
   184  00102C  63                 	db	99	;'c'
   185  00102D  75                 	db	117	;'u'
   186  00102E  72                 	db	114	;'r'
   187  00102F  76                 	db	118	;'v'
   188  001030  65                 	db	101	;'e'
   189  001031  20                 	db	32
   190  001032  66                 	db	102	;'f'
   191  001033  6F                 	db	111	;'o'
   192  001034  6C                 	db	108	;'l'
   193  001035  6C                 	db	108	;'l'
   194  001036  6F                 	db	111	;'o'
   195  001037  77                 	db	119	;'w'
   196  001038  65                 	db	101	;'e'
   197  001039  72                 	db	114	;'r'
   198  00103A  20                 	db	32
   199  00103B  2D                 	db	45
   200  00103C  2D                 	db	45
   201  00103D  20                 	db	32
   202  00103E  77                 	db	119	;'w'
   203  00103F  69                 	db	105	;'i'
   204  001040  74                 	db	116	;'t'
   205  001041  68                 	db	104	;'h'
   206  001042  20                 	db	32
   207  001043  65                 	db	101	;'e'
   208  001044  72                 	db	114	;'r'
   209  001045  72                 	db	114	;'r'
   210  001046  6F                 	db	111	;'o'
   211  001047  72                 	db	114	;'r'
   212  001048  20                 	db	32
   213  001049  63                 	db	99	;'c'
   214  00104A  6F                 	db	111	;'o'
   215  00104B  64                 	db	100	;'d'
   216  00104C  65                 	db	101	;'e'
   217  00104D  73                 	db	115	;'s'
   218  00104E  0A                 	db	10
   219  00104F  0D                 	db	13
   220  001050  00                 	db	0
   221  001051                     STR_5:
   222  001051  20                 	db	32
   223  001052  3C                 	db	60	;'<'
   224  001053  72                 	db	114	;'r'
   225  001054  65                 	db	101	;'e'
   226  001055  73                 	db	115	;'s'
   227  001056  65                 	db	101	;'e'
   228  001057  74                 	db	116	;'t'
   229  001058  3E                 	db	62	;'>'
   230  001059  20                 	db	32
   231  00105A  00                 	db	0
   232  00105B                     STR_4:
   233  00105B  3C                 	db	60	;'<'
   234  00105C  53                 	db	83	;'S'
   235  00105D  54                 	db	84	;'T'
   236  00105E  4B                 	db	75	;'K'
   237  00105F  46                 	db	70	;'F'
   238  001060  55                 	db	85	;'U'
   239  001061  4C                 	db	76	;'L'
   240  001062  3E                 	db	62	;'>'
   241  001063  00                 	db	0
   242  001064                     STR_3:
   243  001064  3C                 	db	60	;'<'
   244  001065  57                 	db	87	;'W'
   245  001066  44                 	db	68	;'D'
   246  001067  54                 	db	84	;'T'
   247  001068  20                 	db	32
   248  001069  54                 	db	84	;'T'
   249  00106A  4F                 	db	79	;'O'
   250  00106B  3E                 	db	62	;'>'
   251  00106C  00                 	db	0
   252  00106D                     STR_6:
   253  00106D  5C                 	db	92	;'\'
   254  00106E  3C                 	db	60	;'<'
   255  00106F  4C                 	db	76	;'L'
   256  001070  56                 	db	86	;'V'
   257  001071  44                 	db	68	;'D'
   258  001072  3E                 	db	62	;'>'
   259  001073  00                 	db	0
   260  001074                     STR_2:
   261  001074  3C                 	db	60	;'<'
   262  001075  42                 	db	66	;'B'
   263  001076  4F                 	db	79	;'O'
   264  001077  52                 	db	82	;'R'
   265  001078  3E                 	db	62	;'>'
   266  001079  00                 	db	0
   267  00107A                     STR_1:
   268  00107A  3C                 	db	60	;'<'
   269  00107B  50                 	db	80	;'P'
   270  00107C  4F                 	db	79	;'O'
   271  00107D  52                 	db	82	;'R'
   272  00107E  3E                 	db	62	;'>'
   273  00107F  00                 	db	0
   274                           
   275                           ; #config settings
   276  001080  00                 	db	0	; dummy byte at the end
   277  0000                     
   278                           	psect	cinit
   279  002120                     __pcinit:
   280                           	opt stack 0
   281  002120                     start_initialization:
   282                           	opt stack 0
   283  002120                     __initialization:
   284                           	opt stack 0
   285                           
   286                           ; Clear objects allocated to COMRAM (22 bytes)
   287  002120  EE00  F03C         	lfsr	0,__pbssCOMRAM
   288  002124  0E16               	movlw	22
   289  002126                     clear_0:
   290  002126  6AEE               	clrf	postinc0,c
   291  002128  06E8               	decf	wreg,f,c
   292  00212A  E1FD               	bnz	clear_0
   293  00212C                     end_of_initialization:
   294                           	opt stack 0
   295  00212C                     __end_of__initialization:
   296                           	opt stack 0
   297  00212C  0100               	movlb	0
   298  00212E  EF44  F00A         	goto	_main	;jump to C main() function
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           
   302                           	psect	bssCOMRAM
   303  00003C                     __pbssCOMRAM:
   304                           	opt stack 0
   305  00003C                     main@F4201:
   306                           	opt stack 0
   307  00003C                     	ds	3
   308  00003F                     PID_LineFollowing@D:
   309                           	opt stack 0
   310  00003F                     	ds	2
   311  000041                     PID_LineFollowing@delta_velocity:
   312                           	opt stack 0
   313  000041                     	ds	2
   314  000043                     _D_flag_counter:
   315                           	opt stack 0
   316  000043                     	ds	2
   317  000045                     _I:
   318                           	opt stack 0
   319  000045                     	ds	2
   320  000047                     _I_flag_counter:
   321                           	opt stack 0
   322  000047                     	ds	2
   323  000049                     _threshold:
   324                           	opt stack 0
   325  000049                     	ds	2
   326  00004B                     _CCW_rotation_flag:
   327                           	opt stack 0
   328  00004B                     	ds	1
   329  00004C                     _CW_rotation_flag:
   330                           	opt stack 0
   331  00004C                     	ds	1
   332  00004D                     _SeeLine:
   333                           	opt stack 0
   334  00004D                     	ds	1
   335  00004E                     _flag_counter_enabled:
   336                           	opt stack 0
   337  00004E                     	ds	1
   338  00004F                     _lvd_flag:
   339                           	opt stack 0
   340  00004F                     	ds	1
   341  000050                     _flag_counter:
   342                           	opt stack 0
   343  000050                     	ds	2
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	cstackCOMRAM
   348  000001                     __pcstackCOMRAM:
   349                           	opt stack 0
   350  000001                     ??_high_isr:
   351  000001                     
   352                           ; 1 bytes @ 0x0
   353  000001                     	ds	14
   354  00000F                     ??_SetChanADC:
   355  00000F                     ??_set_leds:
   356  00000F                     ?_ReadADC:
   357                           	opt stack 0
   358  00000F                     ?_printf:
   359                           	opt stack 0
   360  00000F                     ?___lwdiv:
   361                           	opt stack 0
   362  00000F                     OpenADC@config2:
   363                           	opt stack 0
   364  00000F                     OpenPWM1@period:
   365                           	opt stack 0
   366  00000F                     OpenPWM2@period:
   367                           	opt stack 0
   368  00000F                     OpenTimer0@config:
   369                           	opt stack 0
   370  00000F                     OpenTimer2@config:
   371                           	opt stack 0
   372  00000F                     set_osc_32MHz@i:
   373                           	opt stack 0
   374  00000F                     printf@f:
   375                           	opt stack 0
   376  00000F                     SetDCPWM1@dutycycle:
   377                           	opt stack 0
   378  00000F                     SetDCPWM2@dutycycle:
   379                           	opt stack 0
   380  00000F                     WriteTimer0@timer0:
   381                           	opt stack 0
   382  00000F                     OpenUSART@spbrg:
   383                           	opt stack 0
   384  00000F                     ___lwdiv@dividend:
   385                           	opt stack 0
   386  00000F                     gtrap@count:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0xE
   390  00000F                     	ds	1
   391  000010                     OpenADC@portconfig:
   392                           	opt stack 0
   393  000010                     SetChanADC@channel:
   394                           	opt stack 0
   395  000010                     OpenPWM2@ccp2mx:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0xF
   399  000010                     	ds	1
   400  000011                     ??_OpenADC:
   401  000011                     ??_SetDCPWM1:
   402  000011                     ??_SetDCPWM2:
   403  000011                     ??_ReadADC:
   404  000011                     OpenUSART@config:
   405                           	opt stack 0
   406  000011                     printf@ap:
   407                           	opt stack 0
   408  000011                     WriteTimer0@timer:
   409                           	opt stack 0
   410  000011                     ___lwdiv@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x10
   414  000011                     	ds	2
   415  000013                     ?_adc:
   416                           	opt stack 0
   417  000013                     printf@c:
   418                           	opt stack 0
   419  000013                     OpenADC@config:
   420                           	opt stack 0
   421  000013                     SetDCPWM1@DCycle:
   422                           	opt stack 0
   423  000013                     SetDCPWM2@DCycle:
   424                           	opt stack 0
   425  000013                     ___lwdiv@quotient:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x12
   429  000013                     	ds	1
   430  000014                     PORtask@count1:
   431                           	opt stack 0
   432                           
   433                           ; 4 bytes @ 0x13
   434  000014                     	ds	1
   435  000015                     adc@channel:
   436                           	opt stack 0
   437  000015                     ___lwdiv@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x14
   441  000015                     	ds	1
   442  000016                     ??_check_sensors:
   443  000016                     ?___wmul:
   444                           	opt stack 0
   445  000016                     ___wmul@multiplier:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x15
   449  000016                     	ds	2
   450  000018                     ___wmul@multiplicand:
   451                           	opt stack 0
   452  000018                     PORtask@count2:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0x17
   456  000018                     	ds	2
   457  00001A                     ___wmul@product:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x19
   461  00001A                     	ds	2
   462  00001C                     ?___awdiv:
   463                           	opt stack 0
   464  00001C                     ___awdiv@dividend:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x1B
   468  00001C                     	ds	2
   469  00001E                     ___awdiv@divisor:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x1D
   473  00001E                     	ds	2
   474  000020                     ___awdiv@counter:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x1F
   478  000020                     	ds	1
   479  000021                     ___awdiv@sign:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x20
   483  000021                     	ds	1
   484  000022                     ___awdiv@quotient:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x21
   488  000022                     	ds	2
   489  000024                     MotorControl@delta_velocity:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x23
   493  000024                     	ds	2
   494  000026                     ??_MotorControl:
   495                           
   496                           ; 0 bytes @ 0x25
   497  000026                     	ds	1
   498  000027                     MotorControl@left_dir_modifier:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x26
   502  000027                     	ds	1
   503  000028                     MotorControl@right_dir_modifier:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x27
   507  000028                     	ds	1
   508  000029                     MotorControl@left_duty_cycle:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x28
   512  000029                     	ds	2
   513  00002B                     MotorControl@right_duty_cycle:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x2A
   517  00002B                     	ds	2
   518  00002D                     ??_AllSensorsTriggered:
   519  00002D                     ??_SharpTurn:
   520  00002D                     PID_LineFollowing@error:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x2C
   524  00002D                     	ds	1
   525  00002E                     SharpTurn@direction:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x2D
   529  00002E                     	ds	1
   530  00002F                     ??_PID_LineFollowing:
   531  00002F                     _AllSensorsTriggered$1457:
   532                           	opt stack 0
   533  00002F                     SharpTurn@delta_velocity:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x2E
   537  00002F                     	ds	2
   538  000031                     GetBackonTrack@error:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x30
   542  000031                     	ds	2
   543  000033                     ??_GetBackonTrack:
   544                           
   545                           ; 0 bytes @ 0x32
   546  000033                     	ds	2
   547  000035                     GetBackonTrack@i:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x34
   551  000035                     	ds	2
   552  000037                     ??_main:
   553                           
   554                           ; 0 bytes @ 0x36
   555  000037                     	ds	2
   556  000039                     main@error:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x38
   560  000039                     	ds	3
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 35 in file "../Robot Files/main2.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  error           3   56[COMRAM] char [3]
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        5 bytes
   588 ;; Hardware stack levels required when called:    6
   589 ;; This function calls:
   590 ;;		_AllSensorsTriggered
   591 ;;		_FilterNearbyTrack
   592 ;;		_GetBackonTrack
   593 ;;		_LVtrap
   594 ;;		_OpenTimer0
   595 ;;		_PID_LineFollowing
   596 ;;		_WriteTimer0
   597 ;;		_check_sensors
   598 ;;		_initialization
   599 ;;		_lvd_flag_set
   600 ;;		_printf
   601 ;;		_set_leds
   602 ;; This function is called by:
   603 ;;		Startup code after reset
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text0
   608  001488                     __ptext0:
   609                           	opt stack 0
   610  001488                     _main:
   611                           	opt stack 25
   612                           
   613                           ;main2.c: 37: signed char error[3]={0};
   614                           
   615                           ;incstack = 0
   616  001488  C03C  F039         	movff	main@F4201,main@error
   617  00148C  C03D  F03A         	movff	main@F4201+1,main@error+1
   618  001490  C03E  F03B         	movff	main@F4201+2,main@error+2
   619                           
   620                           ;main2.c: 40: initialization();
   621  001494  EC66  F00D         	call	_initialization	;wreg free
   622                           
   623                           ;main2.c: 45: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\
      +                          r");
   624  001498  0E11               	movlw	low STR_7
   625  00149A  6E0F               	movwf	printf@f,c
   626  00149C  0E10               	movlw	high STR_7
   627  00149E  6E10               	movwf	printf@f+1,c
   628  0014A0  EC69  F00F         	call	_printf	;wreg free
   629  0014A4  0004               	clrwdt		;# 
   630                           
   631                           ;main2.c: 47: threshold = 575u;
   632  0014A6  0E02               	movlw	2
   633  0014A8  6E4A               	movwf	_threshold+1,c
   634  0014AA  0E3F               	movlw	63
   635  0014AC  6E49               	movwf	_threshold,c
   636                           
   637                           ;main2.c: 51: OpenTimer0(0b01111111 & 0b11011111 & 0b11111111 & 0b11110000);
   638  0014AE  0E50               	movlw	80
   639  0014B0  EC05  F010         	call	_OpenTimer0
   640                           
   641                           ;main2.c: 52: WriteTimer0(0);
   642  0014B4  0E00               	movlw	0
   643  0014B6  6E10               	movwf	WriteTimer0@timer0+1,c
   644  0014B8  0E00               	movlw	0
   645  0014BA  6E0F               	movwf	WriteTimer0@timer0,c
   646  0014BC  ECA2  F010         	call	_WriteTimer0	;wreg free
   647                           
   648                           ;main2.c: 53: TMR0IF = 0;
   649  0014C0  94F2               	bcf	intcon,2,c	;volatile
   650  0014C2  D000               	goto	l2681
   651  0014C4                     l2681:
   652                           
   653                           ;main2.c: 56: {
   654                           ;main2.c: 57: check_sensors();
   655  0014C4  ECBC  F00B         	call	_check_sensors	;wreg free
   656                           
   657                           ;main2.c: 59: FilterNearbyTrack();
   658  0014C8  EC25  F010         	call	_FilterNearbyTrack	;wreg free
   659                           
   660                           ;main2.c: 66: switch(SeeLine.B)
   661  0014CC  D033               	goto	l2711
   662  0014CE                     l2685:
   663                           
   664                           ;main2.c: 69: error[2]=1; break;
   665  0014CE  0E01               	movlw	1
   666  0014D0  D02F               	goto	L7
   667  0014D2                     l2687:
   668                           
   669                           ;main2.c: 71: error[2]=2; break;
   670  0014D2  0E02               	movlw	2
   671  0014D4  D02D               	goto	L7
   672  0014D6                     l2689:
   673                           
   674                           ;main2.c: 73: error[2]=3; break;
   675  0014D6  0E03               	movlw	3
   676  0014D8  D02B               	goto	L7
   677  0014DA                     l2691:
   678                           
   679                           ;main2.c: 75: error[2]=4; break;
   680  0014DA  0E04               	movlw	4
   681  0014DC  D029               	goto	L7
   682  0014DE                     l322:
   683                           
   684                           ;main2.c: 77: error[2]=-1; break;
   685  0014DE  683B               	setf	main@error+2,c
   686  0014E0  D050               	goto	l318
   687  0014E2                     l2693:
   688                           
   689                           ;main2.c: 79: error[2]=-2; break;
   690  0014E2  0EFE               	movlw	254
   691  0014E4  D025               	goto	L7
   692  0014E6                     l2695:
   693                           
   694                           ;main2.c: 81: error[2]=-3; break;
   695  0014E6  0EFD               	movlw	253
   696  0014E8  D023               	goto	L7
   697  0014EA                     l2697:
   698                           
   699                           ;main2.c: 83: error[2]=-4; break;
   700  0014EA  0EFC               	movlw	252
   701  0014EC  D021               	goto	L7
   702  0014EE                     l2699:
   703                           
   704                           ;main2.c: 85: {
   705                           ;main2.c: 86: flag_counter_enabled = 1;
   706  0014EE  0E01               	movlw	1
   707  0014F0  6E4E               	movwf	_flag_counter_enabled,c
   708                           
   709                           ;main2.c: 87: flag_counter = 0;
   710  0014F2  0E00               	movlw	0
   711  0014F4  6E51               	movwf	_flag_counter+1,c
   712  0014F6  0E00               	movlw	0
   713  0014F8  6E50               	movwf	_flag_counter,c
   714                           
   715                           ;main2.c: 88: CW_rotation_flag = 1;
   716  0014FA  0E01               	movlw	1
   717  0014FC  6E4C               	movwf	_CW_rotation_flag,c
   718                           
   719                           ;main2.c: 89: CCW_rotation_flag = 0;
   720  0014FE  0E00               	movlw	0
   721  001500  6E4B               	movwf	_CCW_rotation_flag,c
   722                           
   723                           ;main2.c: 90: }break;
   724  001502  D03F               	goto	l318
   725  001504                     l2701:
   726                           
   727                           ;main2.c: 92: {
   728                           ;main2.c: 93: flag_counter_enabled = 1;
   729  001504  0E01               	movlw	1
   730  001506  6E4E               	movwf	_flag_counter_enabled,c
   731                           
   732                           ;main2.c: 94: flag_counter = 0;
   733  001508  0E00               	movlw	0
   734  00150A  6E51               	movwf	_flag_counter+1,c
   735  00150C  0E00               	movlw	0
   736  00150E  6E50               	movwf	_flag_counter,c
   737                           
   738                           ;main2.c: 95: CCW_rotation_flag = 1;
   739  001510  0E01               	movlw	1
   740  001512  6E4B               	movwf	_CCW_rotation_flag,c
   741                           
   742                           ;main2.c: 96: CW_rotation_flag = 0;
   743  001514  0E00               	movlw	0
   744  001516  6E4C               	movwf	_CW_rotation_flag,c
   745                           
   746                           ;main2.c: 97: }break;
   747  001518  D034               	goto	l318
   748  00151A                     l2703:
   749                           
   750                           ;main2.c: 99: GetBackonTrack(error); break;
   751  00151A  0E39               	movlw	low main@error
   752  00151C  6E31               	movwf	GetBackonTrack@error,c
   753  00151E  0E00               	movlw	high main@error
   754  001520  6E32               	movwf	GetBackonTrack@error+1,c
   755  001522  EC03  F00B         	call	_GetBackonTrack	;wreg free
   756  001526  D02D               	goto	l318
   757  001528                     l2705:
   758                           
   759                           ;main2.c: 101: AllSensorsTriggered(); break;
   760  001528  EC74  F00C         	call	_AllSensorsTriggered	;wreg free
   761  00152C  D02A               	goto	l318
   762  00152E                     l2707:
   763                           
   764                           ;main2.c: 103: error[2]=0; break;
   765  00152E  0E00               	movlw	0
   766  001530                     L7:
   767  001530  6E3B               	movwf	main@error+2,c
   768                           
   769                           ;main2.c: 104: }
   770  001532  D027               	goto	l318
   771  001534                     l2711:
   772  001534  504D               	movf	_SeeLine,w,c
   773  001536  0B1F               	andlw	31
   774                           
   775                           ; Switch size 1, requested type "space"
   776                           ; Number of cases is 12, Range of values is 0 to 31
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte           37    19 (average)
   780                           ;	Chosen strategy is simple_byte
   781  001538  0A00               	xorlw	0	; case 0
   782  00153A  B4D8               	btfsc	status,2,c
   783  00153C  D7EE               	goto	l2703
   784  00153E  0A01               	xorlw	1	; case 1
   785  001540  B4D8               	btfsc	status,2,c
   786  001542  D7CB               	goto	l2691
   787  001544  0A03               	xorlw	3	; case 2
   788  001546  B4D8               	btfsc	status,2,c
   789  001548  D7C4               	goto	l2687
   790  00154A  0A01               	xorlw	1	; case 3
   791  00154C  B4D8               	btfsc	status,2,c
   792  00154E  D7C3               	goto	l2689
   793  001550  0A05               	xorlw	5	; case 6
   794  001552  B4D8               	btfsc	status,2,c
   795  001554  D7BC               	goto	l2685
   796  001556  0A01               	xorlw	1	; case 7
   797  001558  B4D8               	btfsc	status,2,c
   798  00155A  D7C9               	goto	l2699
   799  00155C  0A0F               	xorlw	15	; case 8
   800  00155E  B4D8               	btfsc	status,2,c
   801  001560  D7C0               	goto	l2693
   802  001562  0A04               	xorlw	4	; case 12
   803  001564  B4D8               	btfsc	status,2,c
   804  001566  D7BB               	goto	l322
   805  001568  0A1C               	xorlw	28	; case 16
   806  00156A  B4D8               	btfsc	status,2,c
   807  00156C  D7BE               	goto	l2697
   808  00156E  0A08               	xorlw	8	; case 24
   809  001570  B4D8               	btfsc	status,2,c
   810  001572  D7B9               	goto	l2695
   811  001574  0A04               	xorlw	4	; case 28
   812  001576  B4D8               	btfsc	status,2,c
   813  001578  D7C5               	goto	l2701
   814  00157A  0A03               	xorlw	3	; case 31
   815  00157C  B4D8               	btfsc	status,2,c
   816  00157E  D7D4               	goto	l2705
   817  001580  D7D6               	goto	l2707
   818  001582                     l318:
   819                           
   820                           ;main2.c: 107: if (TMR0IF)
   821  001582  A4F2               	btfss	intcon,2,c	;volatile
   822  001584  D02D               	goto	l2725
   823                           
   824                           ;main2.c: 108: {
   825                           ;main2.c: 109: I_flag_counter++;
   826  001586  4A47               	infsnz	_I_flag_counter,f,c
   827  001588  2A48               	incf	_I_flag_counter+1,f,c
   828                           
   829                           ;main2.c: 110: D_flag_counter++;
   830  00158A  4A43               	infsnz	_D_flag_counter,f,c
   831  00158C  2A44               	incf	_D_flag_counter+1,f,c
   832                           
   833                           ;main2.c: 112: if(flag_counter_enabled)
   834  00158E  504E               	movf	_flag_counter_enabled,w,c
   835  001590  B4D8               	btfsc	status,2,c
   836  001592  D024               	goto	l2723
   837                           
   838                           ;main2.c: 113: {
   839                           ;main2.c: 114: flag_counter++;
   840  001594  4A50               	infsnz	_flag_counter,f,c
   841  001596  2A51               	incf	_flag_counter+1,f,c
   842                           
   843                           ;main2.c: 115: if(flag_counter < 16*TIME_SHARP_TURN_ms)
   844  001598  0E0B               	movlw	low _TIME_SHARP_TURN_ms
   845  00159A  6EF6               	movwf	tblptrl,c
   846  00159C                     	if	1	;There is more than 1 active tblptr byte
   847  00159C  0E10               	movlw	high _TIME_SHARP_TURN_ms
   848  00159E  6EF7               	movwf	tblptrh,c
   849  0015A0                     	endif
   850  0015A0                     	if	1	;There are 3 active tblptr bytes
   851  0015A0  0E00               	movlw	low (_TIME_SHARP_TURN_ms shr (0+16))
   852  0015A2  6EF8               	movwf	tblptru,c
   853  0015A4                     	endif
   854  0015A4  0009               	tblrd		*+
   855  0015A6  CFF5 F037          	movff	tablat,??_main
   856  0015AA  0009               	tblrd		*+
   857  0015AC  CFF5 F038          	movff	tablat,??_main+1
   858  0015B0  3A37               	swapf	??_main,f,c
   859  0015B2  3A38               	swapf	??_main+1,f,c
   860  0015B4  0EF0               	movlw	240
   861  0015B6  1638               	andwf	??_main+1,f,c
   862  0015B8  5037               	movf	??_main,w,c
   863  0015BA  0B0F               	andlw	15
   864  0015BC  1238               	iorwf	??_main+1,f,c
   865  0015BE  0EF0               	movlw	240
   866  0015C0  1637               	andwf	??_main,f,c
   867  0015C2  5037               	movf	??_main,w,c
   868  0015C4  5C50               	subwf	_flag_counter,w,c
   869  0015C6  5038               	movf	??_main+1,w,c
   870  0015C8  5851               	subwfb	_flag_counter+1,w,c
   871  0015CA  B0D8               	btfsc	status,0,c
   872  0015CC  D007               	goto	l2723
   873                           
   874                           ;main2.c: 116: {
   875                           ;main2.c: 117: CW_rotation_flag = 0;
   876  0015CE  0E00               	movlw	0
   877  0015D0  6E4C               	movwf	_CW_rotation_flag,c
   878                           
   879                           ;main2.c: 118: CCW_rotation_flag = 0;
   880  0015D2  0E00               	movlw	0
   881  0015D4  6E4B               	movwf	_CCW_rotation_flag,c
   882                           
   883                           ;main2.c: 119: flag_counter_enabled = 0;
   884  0015D6  0E00               	movlw	0
   885  0015D8  6E4E               	movwf	_flag_counter_enabled,c
   886  0015DA  D000               	goto	l2723
   887  0015DC                     l2723:
   888                           
   889                           ;main2.c: 120: }
   890                           ;main2.c: 121: }
   891                           ;main2.c: 123: TMR0IF = 0;
   892  0015DC  94F2               	bcf	intcon,2,c	;volatile
   893  0015DE  D000               	goto	l2725
   894  0015E0                     l2725:
   895                           
   896                           ;main2.c: 124: }
   897                           ;main2.c: 126: set_leds();
   898  0015E0  ECAE  F00D         	call	_set_leds	;wreg free
   899                           
   900                           ;main2.c: 127: PID_LineFollowing(error);
   901  0015E4  0E39               	movlw	low main@error
   902  0015E6  6E2D               	movwf	PID_LineFollowing@error,c
   903  0015E8  0E00               	movlw	high main@error
   904  0015EA  6E2E               	movwf	PID_LineFollowing@error+1,c
   905  0015EC  EC41  F008         	call	_PID_LineFollowing	;wreg free
   906  0015F0  0004               	clrwdt		;# 
   907                           
   908                           ;main2.c: 130: if(lvd_flag_set()) LVtrap();
   909  0015F2  ECC1  F010         	call	_lvd_flag_set	;wreg free
   910  0015F6  0900               	iorlw	0
   911  0015F8  B4D8               	btfsc	status,2,c
   912  0015FA  D764               	goto	l2681
   913  0015FC  EC15  F010         	call	_LVtrap	;wreg free
   914  001600  D761               	goto	l2681
   915  001602  EF0C  F000         	goto	start
   916  001606                     __end_of_main:
   917                           	opt stack 0
   918                           tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           tblptrl	equ	0xFF6
   921                           tablat	equ	0xFF5
   922                           intcon	equ	0xFF2
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           status	equ	0xFD8
   926                           
   927 ;; *************** function _lvd_flag_set *****************
   928 ;; Defined at:
   929 ;;		line 47 in file "../Robot Files/interrupts.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      unsigned char 
   936 ;; Registers used:
   937 ;;		wreg, status,2
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text1
   958  002182                     __ptext1:
   959                           	opt stack 0
   960  002182                     _lvd_flag_set:
   961                           	opt stack 29
   962                           
   963                           ;interrupts.c: 49: return lvd_flag;
   964                           
   965                           ;incstack = 0
   966  002182  504F               	movf	_lvd_flag,w,c
   967  002184  D000               	goto	l205
   968  002186                     l205:
   969  002186  0012               	return		;funcret
   970  002188                     __end_of_lvd_flag_set:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           intcon	equ	0xFF2
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           status	equ	0xFD8
   980                           
   981 ;; *************** function _initialization *****************
   982 ;; Defined at:
   983 ;;		line 65 in file "../Robot Files/sumovore.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;		None               void
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    5
  1004 ;; This function calls:
  1005 ;;		_OpenADC
  1006 ;;		_OpenPWM1
  1007 ;;		_OpenPWM2
  1008 ;;		_OpenTimer2
  1009 ;;		_OpenUSART
  1010 ;;		_SetDCPWM1
  1011 ;;		_SetDCPWM2
  1012 ;;		_openLVD
  1013 ;;		_openPORTA
  1014 ;;		_openPORTB
  1015 ;;		_openPORTCforPWM
  1016 ;;		_openPORTCforUSART
  1017 ;;		_openPORTD
  1018 ;;		_openPORTE
  1019 ;;		_reset_codes
  1020 ;;		_set_osc_32MHz
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text2
  1027  001ACC                     __ptext2:
  1028                           	opt stack 0
  1029  001ACC                     _initialization:
  1030                           	opt stack 25
  1031                           
  1032                           ;sumovore.c: 67: SeeLine.B = 0;
  1033                           
  1034                           ;incstack = 0
  1035  001ACC  904D               	bcf	_SeeLine,0,c
  1036  001ACE  924D               	bcf	_SeeLine,1,c
  1037  001AD0  944D               	bcf	_SeeLine,2,c
  1038  001AD2  964D               	bcf	_SeeLine,3,c
  1039  001AD4  984D               	bcf	_SeeLine,4,c
  1040                           
  1041                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  1042  001AD6  8ED0               	bsf	4048,7,c	;volatile
  1043                           
  1044                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  1045  001AD8  9EF2               	bcf	intcon,7,c	;volatile
  1046                           
  1047                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  1048  001ADA  9CF2               	bcf	intcon,6,c	;volatile
  1049                           
  1050                           ;sumovore.c: 72: set_osc_32MHz();
  1051  001ADC  EC80  F00F         	call	_set_osc_32MHz	;wreg free
  1052                           
  1053                           ;sumovore.c: 73: openPORTCforUSART();
  1054  001AE0  ECCA  F010         	call	_openPORTCforUSART	;wreg free
  1055                           
  1056                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1057                           ;sumovore.c: 76: 16 );
  1058  001AE4  0E00               	movlw	0
  1059  001AE6  6E10               	movwf	OpenUSART@spbrg+1,c
  1060  001AE8  0E10               	movlw	16
  1061  001AEA  6E0F               	movwf	OpenUSART@spbrg,c
  1062  001AEC  0E3C               	movlw	60
  1063  001AEE  EC2C  F00E         	call	_OpenUSART
  1064                           
  1065                           ;sumovore.c: 82: openPORTD();
  1066  001AF2  ECD3  F010         	call	_openPORTD	;wreg free
  1067                           
  1068                           ;sumovore.c: 83: PORTD = 0;
  1069  001AF6  0E00               	movlw	0
  1070  001AF8  6E83               	movwf	3971,c	;volatile
  1071                           
  1072                           ;sumovore.c: 85: reset_codes();
  1073  001AFA  ECF2  F00E         	call	_reset_codes	;wreg free
  1074                           
  1075                           ;sumovore.c: 87: openPORTCforPWM();
  1076  001AFE  ECB3  F010         	call	_openPORTCforPWM	;wreg free
  1077                           
  1078                           ;sumovore.c: 89: openPORTA();
  1079  001B02  ECD0  F010         	call	_openPORTA	;wreg free
  1080                           
  1081                           ;sumovore.c: 90: openPORTB();
  1082  001B06  ECCD  F010         	call	_openPORTB	;wreg free
  1083                           
  1084                           ;sumovore.c: 91: openPORTE();
  1085  001B0A  ECC7  F010         	call	_openPORTE	;wreg free
  1086                           
  1087                           ;sumovore.c: 94: openLVD();
  1088  001B0E  EC6E  F010         	call	_openLVD	;wreg free
  1089                           
  1090                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1091  001B12  0E0C               	movlw	12
  1092  001B14  6E0F               	movwf	OpenADC@config2,c
  1093  001B16  0E0A               	movlw	10
  1094  001B18  6E10               	movwf	OpenADC@portconfig,c
  1095  001B1A  0EA7               	movlw	167
  1096  001B1C  EC95  F00E         	call	_OpenADC
  1097                           
  1098                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1099  001B20  9A82               	bcf	3970,5,c	;volatile
  1100                           
  1101                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1102  001B22  9084               	bcf	3972,0,c	;volatile
  1103                           
  1104                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1105  001B24  9082               	bcf	3970,0,c	;volatile
  1106                           
  1107                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1108  001B26  9284               	bcf	3972,1,c	;volatile
  1109                           
  1110                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1111  001B28  0E06               	movlw	6
  1112  001B2A  EC60  F010         	call	_OpenTimer2
  1113                           
  1114                           ;sumovore.c: 110: OpenPWM1(199);
  1115  001B2E  0EC7               	movlw	199
  1116  001B30  EC99  F010         	call	_OpenPWM1
  1117                           
  1118                           ;sumovore.c: 112: OpenPWM2(199);
  1119  001B34  0EC7               	movlw	199
  1120  001B36  EC4D  F00F         	call	_OpenPWM2
  1121                           
  1122                           ;sumovore.c: 113: SetDCPWM1(0);
  1123  001B3A  0E00               	movlw	0
  1124  001B3C  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1125  001B3E  0E00               	movlw	0
  1126  001B40  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1127  001B42  EC30  F00F         	call	_SetDCPWM1	;wreg free
  1128                           
  1129                           ;sumovore.c: 116: SetDCPWM2(0);
  1130  001B46  0E00               	movlw	0
  1131  001B48  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1132  001B4A  0E00               	movlw	0
  1133  001B4C  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1134  001B4E  EC13  F00F         	call	_SetDCPWM2	;wreg free
  1135                           
  1136                           ;sumovore.c: 117: threshold = 512u;
  1137  001B52  0E02               	movlw	2
  1138  001B54  6E4A               	movwf	_threshold+1,c
  1139  001B56  0E00               	movlw	0
  1140  001B58  6E49               	movwf	_threshold,c
  1141  001B5A  0012               	return		;funcret
  1142  001B5C                     __end_of_initialization:
  1143                           	opt stack 0
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           intcon	equ	0xFF2
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           status	equ	0xFD8
  1152                           
  1153 ;; *************** function _set_osc_32MHz *****************
  1154 ;; Defined at:
  1155 ;;		line 18 in file "../Robot Files/osc.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  i               2   14[COMRAM] int 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;		None               void
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;Total ram usage:        2 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_initialization
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text3
  1184  001F00                     __ptext3:
  1185                           	opt stack 0
  1186  001F00                     _set_osc_32MHz:
  1187                           	opt stack 28
  1188                           
  1189                           ;osc.c: 20: int i;
  1190                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1191                           
  1192                           ;incstack = 0
  1193  001F00  8CD3               	bsf	4051,6,c	;volatile
  1194                           
  1195                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1196  001F02  8AD3               	bsf	4051,5,c	;volatile
  1197                           
  1198                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1199  001F04  88D3               	bsf	4051,4,c	;volatile
  1200                           
  1201                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1202  001F06  8C9B               	bsf	3995,6,c	;volatile
  1203                           
  1204                           ;osc.c: 28: for(i=0;i<500;i++);
  1205  001F08  0E00               	movlw	0
  1206  001F0A  6E10               	movwf	set_osc_32MHz@i+1,c
  1207  001F0C  0E00               	movlw	0
  1208  001F0E  6E0F               	movwf	set_osc_32MHz@i,c
  1209  001F10                     l1565:
  1210  001F10  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1211  001F12  D008               	goto	l1569
  1212  001F14  0EF4               	movlw	244
  1213  001F16  5C0F               	subwf	set_osc_32MHz@i,w,c
  1214  001F18  0E01               	movlw	1
  1215  001F1A  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1216  001F1C  B0D8               	btfsc	status,0,c
  1217  001F1E  D005               	goto	l214
  1218  001F20  D001               	goto	l1569
  1219  001F22  D003               	goto	l214
  1220  001F24                     l1569:
  1221  001F24  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1222  001F26  2A10               	incf	set_osc_32MHz@i+1,f,c
  1223  001F28  D7F3               	goto	l1565
  1224  001F2A                     l214:
  1225  001F2A  0012               	return		;funcret
  1226  001F2C                     __end_of_set_osc_32MHz:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           intcon	equ	0xFF2
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function _reset_codes *****************
  1238 ;; Defined at:
  1239 ;;		line 282 in file "../Robot Files/sumovore.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;		None               void
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		_BORtask
  1262 ;;		_PORtask
  1263 ;;		_RESETtask
  1264 ;;		_STKFULtask
  1265 ;;		_WDTtask
  1266 ;;		_isBOR
  1267 ;;		_isPOR
  1268 ;;		_isWDTTO
  1269 ;; This function is called by:
  1270 ;;		_initialization
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text4
  1275  001DE4                     __ptext4:
  1276                           	opt stack 0
  1277  001DE4                     _reset_codes:
  1278                           	opt stack 25
  1279                           
  1280                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1281                           
  1282                           ;incstack = 0
  1283  001DE4  ECD1  F00F         	call	_isPOR	;wreg free
  1284  001DE8  0900               	iorlw	0
  1285  001DEA  B4D8               	btfsc	status,2,c
  1286  001DEC  D003               	goto	l2391
  1287  001DEE  EC1E  F00C         	call	_PORtask	;wreg free
  1288  001DF2  D018               	goto	l145
  1289  001DF4                     l2391:
  1290                           
  1291                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1292  001DF4  EC7A  F010         	call	_isBOR	;wreg free
  1293  001DF8  0900               	iorlw	0
  1294  001DFA  B4D8               	btfsc	status,2,c
  1295  001DFC  D003               	goto	l2395
  1296  001DFE  ECF5  F00F         	call	_BORtask	;wreg free
  1297  001E02  D010               	goto	l145
  1298  001E04                     l2395:
  1299                           
  1300                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1301  001E04  ECBE  F00F         	call	_isWDTTO	;wreg free
  1302  001E08  0900               	iorlw	0
  1303  001E0A  B4D8               	btfsc	status,2,c
  1304  001E0C  D003               	goto	l141
  1305  001E0E  EC44  F010         	call	_WDTtask	;wreg free
  1306  001E12  D008               	goto	l145
  1307  001E14                     l141:
  1308                           
  1309                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1310  001E14  AEFC               	btfss	stkptr,7,c	;volatile
  1311  001E16  D003               	goto	l2401
  1312  001E18  EC35  F010         	call	_STKFULtask	;wreg free
  1313  001E1C  D003               	goto	l145
  1314  001E1E                     l2401:
  1315                           
  1316                           ;sumovore.c: 297: else RESETtask();
  1317  001E1E  EC52  F010         	call	_RESETtask	;wreg free
  1318  001E22  D000               	goto	l145
  1319  001E24                     l145:
  1320  001E24  0012               	return		;funcret
  1321  001E26                     __end_of_reset_codes:
  1322                           	opt stack 0
  1323                           stkptr	equ	0xFFC
  1324                           tblptru	equ	0xFF8
  1325                           tblptrh	equ	0xFF7
  1326                           tblptrl	equ	0xFF6
  1327                           tablat	equ	0xFF5
  1328                           intcon	equ	0xFF2
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           status	equ	0xFD8
  1332                           
  1333 ;; *************** function _isWDTTO *****************
  1334 ;; Defined at:
  1335 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      unsigned char 
  1342 ;; Registers used:
  1343 ;;		wreg
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_reset_codes
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text5
  1364  001F7C                     __ptext5:
  1365                           	opt stack 0
  1366  001F7C                     _isWDTTO:
  1367                           	opt stack 27
  1368                           
  1369                           ;incstack = 0
  1370  001F7C  A2D0               	btfss	4048,1,c	;volatile
  1371  001F7E  D00E               	goto	l1467
  1372  001F80  A4D0               	btfss	4048,2,c	;volatile
  1373  001F82  D00A               	goto	l1463
  1374  001F84  A0D0               	btfss	4048,0,c	;volatile
  1375  001F86  D006               	goto	l1459
  1376  001F88  A6D0               	btfss	4048,3,c	;volatile
  1377  001F8A  D002               	goto	l1455
  1378  001F8C  D003               	goto	l1459
  1379  001F8E  D008               	goto	l627
  1380  001F90                     l1455:
  1381  001F90  0E01               	movlw	1
  1382  001F92  D006               	goto	l627
  1383  001F94                     l1459:
  1384  001F94  0E00               	movlw	0
  1385  001F96  D004               	goto	l627
  1386  001F98                     l1463:
  1387  001F98  0E00               	movlw	0
  1388  001F9A  D002               	goto	l627
  1389  001F9C                     l1467:
  1390  001F9C  0E00               	movlw	0
  1391  001F9E  D000               	goto	l627
  1392  001FA0                     l627:
  1393  001FA0  0012               	return		;funcret
  1394  001FA2                     __end_of_isWDTTO:
  1395                           	opt stack 0
  1396                           stkptr	equ	0xFFC
  1397                           tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           intcon	equ	0xFF2
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           status	equ	0xFD8
  1405                           
  1406 ;; *************** function _isPOR *****************
  1407 ;; Defined at:
  1408 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      unsigned char 
  1415 ;; Registers used:
  1416 ;;		wreg
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_reset_codes
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text6
  1437  001FA2                     __ptext6:
  1438                           	opt stack 0
  1439  001FA2                     _isPOR:
  1440                           	opt stack 27
  1441                           
  1442                           ;incstack = 0
  1443  001FA2  B2D0               	btfsc	4048,1,c	;volatile
  1444  001FA4  D00E               	goto	l1375
  1445  001FA6  A4D0               	btfss	4048,2,c	;volatile
  1446  001FA8  D00A               	goto	l1371
  1447  001FAA  B0D0               	btfsc	4048,0,c	;volatile
  1448  001FAC  D006               	goto	l1367
  1449  001FAE  B6D0               	btfsc	4048,3,c	;volatile
  1450  001FB0  D002               	goto	l1363
  1451  001FB2  D003               	goto	l1367
  1452  001FB4  D008               	goto	l618
  1453  001FB6                     l1363:
  1454  001FB6  0E01               	movlw	1
  1455  001FB8  D006               	goto	l618
  1456  001FBA                     l1367:
  1457  001FBA  0E00               	movlw	0
  1458  001FBC  D004               	goto	l618
  1459  001FBE                     l1371:
  1460  001FBE  0E00               	movlw	0
  1461  001FC0  D002               	goto	l618
  1462  001FC2                     l1375:
  1463  001FC2  0E00               	movlw	0
  1464  001FC4  D000               	goto	l618
  1465  001FC6                     l618:
  1466  001FC6  0012               	return		;funcret
  1467  001FC8                     __end_of_isPOR:
  1468                           	opt stack 0
  1469                           stkptr	equ	0xFFC
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _isBOR *****************
  1480 ;; Defined at:
  1481 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      unsigned char 
  1488 ;; Registers used:
  1489 ;;		wreg
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_reset_codes
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text7
  1510  0020F4                     __ptext7:
  1511                           	opt stack 0
  1512  0020F4                     _isBOR:
  1513                           	opt stack 27
  1514                           
  1515                           ;incstack = 0
  1516  0020F4  B0D0               	btfsc	4048,0,c	;volatile
  1517  0020F6  D006               	goto	l1423
  1518  0020F8  B2D0               	btfsc	4048,1,c	;volatile
  1519  0020FA  D002               	goto	l1419
  1520  0020FC  D003               	goto	l1423
  1521  0020FE  D004               	goto	l609
  1522  002100                     l1419:
  1523  002100  0E01               	movlw	1
  1524  002102  D002               	goto	l609
  1525  002104                     l1423:
  1526  002104  0E00               	movlw	0
  1527  002106  D000               	goto	l609
  1528  002108                     l609:
  1529  002108  0012               	return		;funcret
  1530  00210A                     __end_of_isBOR:
  1531                           	opt stack 0
  1532                           stkptr	equ	0xFFC
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           intcon	equ	0xFF2
  1538                           postinc0	equ	0xFEE
  1539                           wreg	equ	0xFE8
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _WDTtask *****************
  1543 ;; Defined at:
  1544 ;;		line 370 in file "../Robot Files/sumovore.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;		None               void
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    3
  1565 ;; This function calls:
  1566 ;;		_gtrap
  1567 ;;		_printf
  1568 ;; This function is called by:
  1569 ;;		_reset_codes
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text8
  1574  002088                     __ptext8:
  1575                           	opt stack 0
  1576  002088                     _WDTtask:
  1577                           	opt stack 25
  1578                           
  1579                           ;sumovore.c: 372: printf("<WDT TO>");
  1580                           
  1581                           ;incstack = 0
  1582  002088  0E64               	movlw	low STR_3
  1583  00208A  6E0F               	movwf	printf@f,c
  1584  00208C  0E10               	movlw	high STR_3
  1585  00208E  6E10               	movwf	printf@f+1,c
  1586  002090  EC69  F00F         	call	_printf	;wreg free
  1587                           
  1588                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1589  002094  9083               	bcf	3971,0,c	;volatile
  1590                           
  1591                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1592  002096  8283               	bsf	3971,1,c	;volatile
  1593                           
  1594                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1595  002098  9483               	bcf	3971,2,c	;volatile
  1596                           
  1597                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1598  00209A  8683               	bsf	3971,3,c	;volatile
  1599                           
  1600                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1601  00209C  8883               	bsf	3971,4,c	;volatile
  1602                           
  1603                           ;sumovore.c: 378: gtrap();
  1604  00209E  EC64  F00E         	call	_gtrap	;wreg free
  1605  0020A2  0012               	return		;funcret
  1606  0020A4                     __end_of_WDTtask:
  1607                           	opt stack 0
  1608                           stkptr	equ	0xFFC
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           intcon	equ	0xFF2
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _STKFULtask *****************
  1619 ;; Defined at:
  1620 ;;		line 389 in file "../Robot Files/sumovore.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;		None               void
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    3
  1641 ;; This function calls:
  1642 ;;		_gtrap
  1643 ;;		_printf
  1644 ;; This function is called by:
  1645 ;;		_reset_codes
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text9
  1650  00206A                     __ptext9:
  1651                           	opt stack 0
  1652  00206A                     _STKFULtask:
  1653                           	opt stack 25
  1654                           
  1655                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1656                           
  1657                           ;incstack = 0
  1658  00206A  9EFC               	bcf	stkptr,7,c	;volatile
  1659                           
  1660                           ;sumovore.c: 393: printf("<STKFUL>");
  1661  00206C  0E5B               	movlw	low STR_4
  1662  00206E  6E0F               	movwf	printf@f,c
  1663  002070  0E10               	movlw	high STR_4
  1664  002072  6E10               	movwf	printf@f+1,c
  1665  002074  EC69  F00F         	call	_printf	;wreg free
  1666                           
  1667                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1668  002078  9083               	bcf	3971,0,c	;volatile
  1669                           
  1670                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1671  00207A  8283               	bsf	3971,1,c	;volatile
  1672                           
  1673                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1674  00207C  9483               	bcf	3971,2,c	;volatile
  1675                           
  1676                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1677  00207E  8683               	bsf	3971,3,c	;volatile
  1678                           
  1679                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1680  002080  9883               	bcf	3971,4,c	;volatile
  1681                           
  1682                           ;sumovore.c: 399: gtrap();
  1683  002082  EC64  F00E         	call	_gtrap	;wreg free
  1684  002086  0012               	return		;funcret
  1685  002088                     __end_of_STKFULtask:
  1686                           	opt stack 0
  1687                           stkptr	equ	0xFFC
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           intcon	equ	0xFF2
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _RESETtask *****************
  1698 ;; Defined at:
  1699 ;;		line 405 in file "../Robot Files/sumovore.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		_gtrap
  1722 ;;		_printf
  1723 ;; This function is called by:
  1724 ;;		_reset_codes
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text10
  1729  0020A4                     __ptext10:
  1730                           	opt stack 0
  1731  0020A4                     _RESETtask:
  1732                           	opt stack 25
  1733                           
  1734                           ;sumovore.c: 408: printf(" <reset> ");
  1735                           
  1736                           ;incstack = 0
  1737  0020A4  0E51               	movlw	low STR_5
  1738  0020A6  6E0F               	movwf	printf@f,c
  1739  0020A8  0E10               	movlw	high STR_5
  1740  0020AA  6E10               	movwf	printf@f+1,c
  1741  0020AC  EC69  F00F         	call	_printf	;wreg free
  1742                           
  1743                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1744  0020B0  9083               	bcf	3971,0,c	;volatile
  1745                           
  1746                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1747  0020B2  8283               	bsf	3971,1,c	;volatile
  1748                           
  1749                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1750  0020B4  9483               	bcf	3971,2,c	;volatile
  1751                           
  1752                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1753  0020B6  9683               	bcf	3971,3,c	;volatile
  1754                           
  1755                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1756  0020B8  9883               	bcf	3971,4,c	;volatile
  1757                           
  1758                           ;sumovore.c: 414: gtrap();
  1759  0020BA  EC64  F00E         	call	_gtrap	;wreg free
  1760  0020BE  0012               	return		;funcret
  1761  0020C0                     __end_of_RESETtask:
  1762                           	opt stack 0
  1763                           stkptr	equ	0xFFC
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           intcon	equ	0xFF2
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           status	equ	0xFD8
  1772                           
  1773 ;; *************** function _PORtask *****************
  1774 ;; Defined at:
  1775 ;;		line 307 in file "../Robot Files/sumovore.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  count2          4   23[COMRAM] unsigned long 
  1780 ;;  count1          4   19[COMRAM] unsigned long 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;		None               void
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;Total ram usage:        8 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    3
  1797 ;; This function calls:
  1798 ;;		_StatusReset
  1799 ;;		_printf
  1800 ;; This function is called by:
  1801 ;;		_reset_codes
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text11
  1806  00183C                     __ptext11:
  1807                           	opt stack 0
  1808  00183C                     _PORtask:
  1809                           	opt stack 25
  1810                           
  1811                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1812                           
  1813                           ;incstack = 0
  1814  00183C  0E00               	movlw	0
  1815  00183E  6E14               	movwf	PORtask@count1,c
  1816  001840  0E00               	movlw	0
  1817  001842  6E15               	movwf	PORtask@count1+1,c
  1818  001844  0E00               	movlw	0
  1819  001846  6E16               	movwf	PORtask@count1+2,c
  1820  001848  0E00               	movlw	0
  1821  00184A  6E17               	movwf	PORtask@count1+3,c
  1822  00184C  0E00               	movlw	0
  1823  00184E  6E18               	movwf	PORtask@count2,c
  1824  001850  0E00               	movlw	0
  1825  001852  6E19               	movwf	PORtask@count2+1,c
  1826  001854  0E00               	movlw	0
  1827  001856  6E1A               	movwf	PORtask@count2+2,c
  1828  001858  0E00               	movlw	0
  1829  00185A  6E1B               	movwf	PORtask@count2+3,c
  1830                           
  1831                           ;sumovore.c: 310: StatusReset();
  1832  00185C  ECC4  F010         	call	_StatusReset	;wreg free
  1833                           
  1834                           ;sumovore.c: 312: printf("<POR>");
  1835  001860  0E7A               	movlw	low STR_1
  1836  001862  6E0F               	movwf	printf@f,c
  1837  001864  0E10               	movlw	high STR_1
  1838  001866  6E10               	movwf	printf@f+1,c
  1839  001868  EC69  F00F         	call	_printf	;wreg free
  1840                           
  1841                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1842  00186C  9083               	bcf	3971,0,c	;volatile
  1843                           
  1844                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1845  00186E  8283               	bsf	3971,1,c	;volatile
  1846                           
  1847                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1848  001870  8483               	bsf	3971,2,c	;volatile
  1849                           
  1850                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1851  001872  8683               	bsf	3971,3,c	;volatile
  1852                           
  1853                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1854  001874  8883               	bsf	3971,4,c	;volatile
  1855                           
  1856                           ;sumovore.c: 318: while(count1<10u)
  1857  001876  D02D               	goto	l148
  1858  001878                     l149:
  1859  001878  0004               	clrwdt		;# 
  1860                           
  1861                           ;sumovore.c: 321: if (count2==30000u)
  1862  00187A  0E30               	movlw	48
  1863  00187C  1818               	xorwf	PORtask@count2,w,c
  1864  00187E  E117               	bnz	l2225
  1865  001880  0E75               	movlw	117
  1866  001882  1819               	xorwf	PORtask@count2+1,w,c
  1867  001884  101A               	iorwf	PORtask@count2+2,w,c
  1868  001886  101B               	iorwf	PORtask@count2+3,w,c
  1869  001888  A4D8               	btfss	status,2,c
  1870  00188A  D011               	goto	l2225
  1871                           
  1872                           ;sumovore.c: 322: {
  1873                           ;sumovore.c: 323: count2=0;
  1874  00188C  0E00               	movlw	0
  1875  00188E  6E18               	movwf	PORtask@count2,c
  1876  001890  0E00               	movlw	0
  1877  001892  6E19               	movwf	PORtask@count2+1,c
  1878  001894  0E00               	movlw	0
  1879  001896  6E1A               	movwf	PORtask@count2+2,c
  1880  001898  0E00               	movlw	0
  1881  00189A  6E1B               	movwf	PORtask@count2+3,c
  1882                           
  1883                           ;sumovore.c: 324: count1++;
  1884  00189C  0E01               	movlw	1
  1885  00189E  2614               	addwf	PORtask@count1,f,c
  1886  0018A0  0E00               	movlw	0
  1887  0018A2  2215               	addwfc	PORtask@count1+1,f,c
  1888  0018A4  2216               	addwfc	PORtask@count1+2,f,c
  1889  0018A6  2217               	addwfc	PORtask@count1+3,f,c
  1890                           
  1891                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1892  0018A8  9083               	bcf	3971,0,c	;volatile
  1893                           
  1894                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1895  0018AA  8283               	bsf	3971,1,c	;volatile
  1896                           
  1897                           ;sumovore.c: 327: }
  1898  0018AC  D00C               	goto	l2229
  1899  0018AE                     l2225:
  1900                           
  1901                           ;sumovore.c: 328: else if (count2==15000u)
  1902  0018AE  0E98               	movlw	152
  1903  0018B0  1818               	xorwf	PORtask@count2,w,c
  1904  0018B2  E109               	bnz	l2229
  1905  0018B4  0E3A               	movlw	58
  1906  0018B6  1819               	xorwf	PORtask@count2+1,w,c
  1907  0018B8  101A               	iorwf	PORtask@count2+2,w,c
  1908  0018BA  101B               	iorwf	PORtask@count2+3,w,c
  1909  0018BC  A4D8               	btfss	status,2,c
  1910  0018BE  D003               	goto	l2229
  1911                           
  1912                           ;sumovore.c: 329: {
  1913                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1914  0018C0  8083               	bsf	3971,0,c	;volatile
  1915                           
  1916                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1917  0018C2  9283               	bcf	3971,1,c	;volatile
  1918  0018C4  D000               	goto	l2229
  1919  0018C6                     l2229:
  1920                           
  1921                           ;sumovore.c: 332: }
  1922                           ;sumovore.c: 333: count2++;
  1923  0018C6  0E01               	movlw	1
  1924  0018C8  2618               	addwf	PORtask@count2,f,c
  1925  0018CA  0E00               	movlw	0
  1926  0018CC  2219               	addwfc	PORtask@count2+1,f,c
  1927  0018CE  221A               	addwfc	PORtask@count2+2,f,c
  1928  0018D0  221B               	addwfc	PORtask@count2+3,f,c
  1929  0018D2                     l148:
  1930  0018D2  5017               	movf	PORtask@count1+3,w,c
  1931  0018D4  1016               	iorwf	PORtask@count1+2,w,c
  1932  0018D6  1015               	iorwf	PORtask@count1+1,w,c
  1933  0018D8  E106               	bnz	l154
  1934  0018DA  0E0A               	movlw	10
  1935  0018DC  5C14               	subwf	PORtask@count1,w,c
  1936  0018DE  B0D8               	btfsc	status,0,c
  1937  0018E0  D002               	goto	l154
  1938  0018E2  D7CA               	goto	l149
  1939  0018E4  D000               	goto	l154
  1940  0018E6                     l154:
  1941  0018E6  0012               	return		;funcret
  1942  0018E8                     __end_of_PORtask:
  1943                           	opt stack 0
  1944                           stkptr	equ	0xFFC
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           intcon	equ	0xFF2
  1950                           postinc0	equ	0xFEE
  1951                           wreg	equ	0xFE8
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _BORtask *****************
  1955 ;; Defined at:
  1956 ;;		line 349 in file "../Robot Files/sumovore.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;		None               void
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    3
  1977 ;; This function calls:
  1978 ;;		_StatusReset
  1979 ;;		_gtrap
  1980 ;;		_printf
  1981 ;; This function is called by:
  1982 ;;		_reset_codes
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text12
  1987  001FEA                     __ptext12:
  1988                           	opt stack 0
  1989  001FEA                     _BORtask:
  1990                           	opt stack 25
  1991                           
  1992                           ;sumovore.c: 351: StatusReset();
  1993                           
  1994                           ;incstack = 0
  1995  001FEA  ECC4  F010         	call	_StatusReset	;wreg free
  1996                           
  1997                           ;sumovore.c: 353: printf("<BOR>");
  1998  001FEE  0E74               	movlw	low STR_2
  1999  001FF0  6E0F               	movwf	printf@f,c
  2000  001FF2  0E10               	movlw	high STR_2
  2001  001FF4  6E10               	movwf	printf@f+1,c
  2002  001FF6  EC69  F00F         	call	_printf	;wreg free
  2003                           
  2004                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  2005  001FFA  8083               	bsf	3971,0,c	;volatile
  2006                           
  2007                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  2008  001FFC  8283               	bsf	3971,1,c	;volatile
  2009                           
  2010                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  2011  001FFE  8483               	bsf	3971,2,c	;volatile
  2012                           
  2013                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  2014  002000  8683               	bsf	3971,3,c	;volatile
  2015                           
  2016                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  2017  002002  9883               	bcf	3971,4,c	;volatile
  2018                           
  2019                           ;sumovore.c: 359: gtrap();
  2020  002004  EC64  F00E         	call	_gtrap	;wreg free
  2021  002008  0012               	return		;funcret
  2022  00200A                     __end_of_BORtask:
  2023                           	opt stack 0
  2024                           stkptr	equ	0xFFC
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           intcon	equ	0xFF2
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function _StatusReset *****************
  2035 ;; Defined at:
  2036 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		None
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_PORtask
  2061 ;;		_BORtask
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text13
  2066  002188                     __ptext13:
  2067                           	opt stack 0
  2068  002188                     _StatusReset:
  2069                           	opt stack 26
  2070                           
  2071                           ;incstack = 0
  2072  002188  82D0               	bsf	4048,1,c	;volatile
  2073  00218A  80D0               	bsf	4048,0,c	;volatile
  2074  00218C  0012               	return		;funcret
  2075  00218E                     __end_of_StatusReset:
  2076                           	opt stack 0
  2077                           stkptr	equ	0xFFC
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           intcon	equ	0xFF2
  2083                           postinc0	equ	0xFEE
  2084                           wreg	equ	0xFE8
  2085                           status	equ	0xFD8
  2086                           
  2087 ;; *************** function _openPORTE *****************
  2088 ;; Defined at:
  2089 ;;		line 178 in file "../Robot Files/sumovore.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;		None               void
  2096 ;; Registers used:
  2097 ;;		wreg, status,2
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_initialization
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text14
  2118  00218E                     __ptext14:
  2119                           	opt stack 0
  2120  00218E                     _openPORTE:
  2121                           	opt stack 28
  2122                           
  2123                           ;sumovore.c: 180: TRISE = 0b000;
  2124                           
  2125                           ;incstack = 0
  2126  00218E  0E00               	movlw	0
  2127  002190  6E96               	movwf	3990,c	;volatile
  2128  002192  0012               	return		;funcret
  2129  002194                     __end_of_openPORTE:
  2130                           	opt stack 0
  2131                           stkptr	equ	0xFFC
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           intcon	equ	0xFF2
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _openPORTCforUSART *****************
  2142 ;; Defined at:
  2143 ;;		line 124 in file "../Robot Files/sumovore.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		None
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_initialization
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text15
  2172  002194                     __ptext15:
  2173                           	opt stack 0
  2174  002194                     _openPORTCforUSART:
  2175                           	opt stack 28
  2176                           
  2177                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2178                           
  2179                           ;incstack = 0
  2180  002194  9C94               	bcf	3988,6,c	;volatile
  2181                           
  2182                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2183  002196  8E94               	bsf	3988,7,c	;volatile
  2184  002198  0012               	return		;funcret
  2185  00219A                     __end_of_openPORTCforUSART:
  2186                           	opt stack 0
  2187                           stkptr	equ	0xFFC
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           intcon	equ	0xFF2
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _openPORTCforPWM *****************
  2198 ;; Defined at:
  2199 ;;		line 133 in file "../Robot Files/sumovore.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		None
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_initialization
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text16
  2228  002166                     __ptext16:
  2229                           	opt stack 0
  2230  002166                     _openPORTCforPWM:
  2231                           	opt stack 28
  2232                           
  2233                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2234                           
  2235                           ;incstack = 0
  2236  002166  9094               	bcf	3988,0,c	;volatile
  2237                           
  2238                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2239  002168  9294               	bcf	3988,1,c	;volatile
  2240                           
  2241                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2242  00216A  9494               	bcf	3988,2,c	;volatile
  2243                           
  2244                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2245  00216C  9694               	bcf	3988,3,c	;volatile
  2246                           
  2247                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2248  00216E  9894               	bcf	3988,4,c	;volatile
  2249                           
  2250                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2251  002170  9A94               	bcf	3988,5,c	;volatile
  2252  002172  0012               	return		;funcret
  2253  002174                     __end_of_openPORTCforPWM:
  2254                           	opt stack 0
  2255                           stkptr	equ	0xFFC
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _openPORTB *****************
  2266 ;; Defined at:
  2267 ;;		line 158 in file "../Robot Files/sumovore.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, status,2
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_initialization
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text17
  2296  00219A                     __ptext17:
  2297                           	opt stack 0
  2298  00219A                     _openPORTB:
  2299                           	opt stack 28
  2300                           
  2301                           ;sumovore.c: 160: TRISB = 0B11000000;
  2302                           
  2303                           ;incstack = 0
  2304  00219A  0EC0               	movlw	192
  2305  00219C  6E93               	movwf	3987,c	;volatile
  2306  00219E  0012               	return		;funcret
  2307  0021A0                     __end_of_openPORTB:
  2308                           	opt stack 0
  2309                           stkptr	equ	0xFFC
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           intcon	equ	0xFF2
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           status	equ	0xFD8
  2318                           
  2319 ;; *************** function _openPORTA *****************
  2320 ;; Defined at:
  2321 ;;		line 147 in file "../Robot Files/sumovore.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;		None               void
  2328 ;; Registers used:
  2329 ;;		wreg, status,2
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_initialization
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text18
  2350  0021A0                     __ptext18:
  2351                           	opt stack 0
  2352  0021A0                     _openPORTA:
  2353                           	opt stack 28
  2354                           
  2355                           ;sumovore.c: 149: TRISA = 0B11101111;
  2356                           
  2357                           ;incstack = 0
  2358  0021A0  0EEF               	movlw	239
  2359  0021A2  6E92               	movwf	3986,c	;volatile
  2360  0021A4  0012               	return		;funcret
  2361  0021A6                     __end_of_openPORTA:
  2362                           	opt stack 0
  2363                           stkptr	equ	0xFFC
  2364                           tblptru	equ	0xFF8
  2365                           tblptrh	equ	0xFF7
  2366                           tblptrl	equ	0xFF6
  2367                           tablat	equ	0xFF5
  2368                           intcon	equ	0xFF2
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _openLVD *****************
  2374 ;; Defined at:
  2375 ;;		line 428 in file "../Robot Files/sumovore.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		None
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    1
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_initialization
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text19
  2404  0020DC                     __ptext19:
  2405                           	opt stack 0
  2406  0020DC                     _openLVD:
  2407                           	opt stack 28
  2408                           
  2409                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2410                           
  2411                           ;incstack = 0
  2412  0020DC  8ED0               	bsf	4048,7,c	;volatile
  2413                           
  2414                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2415  0020DE  88D2               	bsf	4050,4,c	;volatile
  2416                           
  2417                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2418  0020E0  84A2               	bsf	4002,2,c	;volatile
  2419                           
  2420                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2421  0020E2  9ED2               	bcf	4050,7,c	;volatile
  2422                           
  2423                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2424  0020E4  86D2               	bsf	4050,3,c	;volatile
  2425                           
  2426                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2427  0020E6  84D2               	bsf	4050,2,c	;volatile
  2428                           
  2429                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2430  0020E8  82D2               	bsf	4050,1,c	;volatile
  2431                           
  2432                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2433  0020EA  90D2               	bcf	4050,0,c	;volatile
  2434                           
  2435                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2436  0020EC  94A1               	bcf	4001,2,c	;volatile
  2437                           
  2438                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2439  0020EE  84A0               	bsf	4000,2,c	;volatile
  2440                           
  2441                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2442  0020F0  8EF2               	bsf	intcon,7,c	;volatile
  2443  0020F2  0012               	return		;funcret
  2444  0020F4                     __end_of_openLVD:
  2445                           	opt stack 0
  2446                           stkptr	equ	0xFFC
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           intcon	equ	0xFF2
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _OpenUSART *****************
  2457 ;; Defined at:
  2458 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  config          1    wreg     unsigned char 
  2461 ;;  spbrg           2   14[COMRAM] unsigned int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  config          1   16[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, status,2
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;Total ram usage:        3 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_initialization
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text20
  2488  001C58                     __ptext20:
  2489                           	opt stack 0
  2490  001C58                     _OpenUSART:
  2491                           	opt stack 28
  2492                           
  2493                           ;incstack = 0
  2494                           ;OpenUSART@config stored from wreg
  2495  001C58  6E11               	movwf	OpenUSART@config,c
  2496  001C5A  0E00               	movlw	0
  2497  001C5C  6EAC               	movwf	4012,c	;volatile
  2498  001C5E  0E00               	movlw	0
  2499  001C60  6EAB               	movwf	4011,c	;volatile
  2500  001C62  A011               	btfss	OpenUSART@config,0,c
  2501  001C64  D002               	goto	l2343
  2502  001C66  88AC               	bsf	4012,4,c	;volatile
  2503  001C68  D000               	goto	l2343
  2504  001C6A                     l2343:
  2505  001C6A  A211               	btfss	OpenUSART@config,1,c
  2506  001C6C  D003               	goto	l2347
  2507  001C6E  8CAC               	bsf	4012,6,c	;volatile
  2508  001C70  8CAB               	bsf	4011,6,c	;volatile
  2509  001C72  D000               	goto	l2347
  2510  001C74                     l2347:
  2511  001C74  A411               	btfss	OpenUSART@config,2,c
  2512  001C76  D002               	goto	l2351
  2513  001C78  8EAC               	bsf	4012,7,c	;volatile
  2514  001C7A  D000               	goto	l2351
  2515  001C7C                     l2351:
  2516  001C7C  A611               	btfss	OpenUSART@config,3,c
  2517  001C7E  D002               	goto	l593
  2518  001C80  88AB               	bsf	4011,4,c	;volatile
  2519  001C82  D002               	goto	l2355
  2520  001C84                     l593:
  2521  001C84  8AAB               	bsf	4011,5,c	;volatile
  2522  001C86  D000               	goto	l2355
  2523  001C88                     l2355:
  2524  001C88  B811               	btfsc	OpenUSART@config,4,c
  2525  001C8A  84AC               	bsf	4012,2,c	;volatile
  2526  001C8C  989E               	bcf	3998,4,c	;volatile
  2527  001C8E  AA11               	btfss	OpenUSART@config,5,c
  2528  001C90  D002               	goto	l2363
  2529  001C92  86AB               	bsf	4011,3,c	;volatile
  2530  001C94  D000               	goto	l2363
  2531  001C96                     l2363:
  2532  001C96  AC11               	btfss	OpenUSART@config,6,c
  2533  001C98  D002               	goto	l597
  2534  001C9A  8A9D               	bsf	3997,5,c	;volatile
  2535  001C9C  D001               	goto	l598
  2536  001C9E                     l597:
  2537  001C9E  9A9D               	bcf	3997,5,c	;volatile
  2538  001CA0                     l598:
  2539  001CA0  9A9E               	bcf	3998,5,c	;volatile
  2540  001CA2  AE11               	btfss	OpenUSART@config,7,c
  2541  001CA4  D002               	goto	l599
  2542  001CA6  889D               	bsf	3997,4,c	;volatile
  2543  001CA8  D001               	goto	l600
  2544  001CAA                     l599:
  2545  001CAA  989D               	bcf	3997,4,c	;volatile
  2546  001CAC                     l600:
  2547  001CAC  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2548  001CB0  5010               	movf	OpenUSART@spbrg+1,w,c
  2549  001CB2  6EB0               	movwf	4016,c	;volatile
  2550  001CB4  8AAC               	bsf	4012,5,c	;volatile
  2551  001CB6  8EAB               	bsf	4011,7,c	;volatile
  2552  001CB8  9C94               	bcf	3988,6,c	;volatile
  2553  001CBA  8E94               	bsf	3988,7,c	;volatile
  2554  001CBC  B8AC               	btfsc	4012,4,c	;volatile
  2555  001CBE  BEAC               	btfsc	4012,7,c	;volatile
  2556  001CC0  D002               	goto	l602
  2557  001CC2  8C94               	bsf	3988,6,c	;volatile
  2558  001CC4  D000               	goto	l602
  2559  001CC6                     l602:
  2560  001CC6  0012               	return		;funcret
  2561  001CC8                     __end_of_OpenUSART:
  2562                           	opt stack 0
  2563                           stkptr	equ	0xFFC
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           intcon	equ	0xFF2
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _OpenTimer2 *****************
  2574 ;; Defined at:
  2575 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  config          1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  config          1   14[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_initialization
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text21
  2604  0020C0                     __ptext21:
  2605                           	opt stack 0
  2606  0020C0                     _OpenTimer2:
  2607                           	opt stack 28
  2608                           
  2609                           ;incstack = 0
  2610                           ;OpenTimer2@config stored from wreg
  2611  0020C0  6E0F               	movwf	OpenTimer2@config,c
  2612  0020C2  500F               	movf	OpenTimer2@config,w,c
  2613  0020C4  0BFB               	andlw	251
  2614  0020C6  6ECA               	movwf	4042,c	;volatile
  2615  0020C8  0E00               	movlw	0
  2616  0020CA  6ECC               	movwf	4044,c	;volatile
  2617  0020CC  929E               	bcf	3998,1,c	;volatile
  2618  0020CE  AE0F               	btfss	OpenTimer2@config,7,c
  2619  0020D0  D002               	goto	l567
  2620  0020D2  829D               	bsf	3997,1,c	;volatile
  2621  0020D4  D001               	goto	l568
  2622  0020D6                     l567:
  2623  0020D6  929D               	bcf	3997,1,c	;volatile
  2624  0020D8                     l568:
  2625  0020D8  84CA               	bsf	4042,2,c	;volatile
  2626  0020DA  0012               	return		;funcret
  2627  0020DC                     __end_of_OpenTimer2:
  2628                           	opt stack 0
  2629                           stkptr	equ	0xFFC
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           intcon	equ	0xFF2
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _OpenPWM2 *****************
  2640 ;; Defined at:
  2641 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  period          1    wreg     unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  period          1   14[COMRAM] unsigned char 
  2646 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2647 ;;  pmmode          1    0        unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_initialization
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text22
  2672  001E9A                     __ptext22:
  2673                           	opt stack 0
  2674  001E9A                     _OpenPWM2:
  2675                           	opt stack 28
  2676                           
  2677                           ;incstack = 0
  2678                           ;OpenPWM2@period stored from wreg
  2679  001E9A  6E0F               	movwf	OpenPWM2@period,c
  2680  001E9C  0E0C               	movlw	12
  2681  001E9E  6EBA               	movwf	4026,c	;volatile
  2682  001EA0  0E05               	movlw	5
  2683  001EA2  6EF6               	movwf	tblptrl,c
  2684  001EA4                     	if	1	;There is more than 1 active tblptr byte
  2685  001EA4  0E00               	movlw	0
  2686  001EA6  6EF7               	movwf	tblptrh,c
  2687  001EA8                     	endif
  2688  001EA8                     	if	1	;There are 3 active tblptr bytes
  2689  001EA8  0E30               	movlw	48
  2690  001EAA  6EF8               	movwf	tblptru,c
  2691  001EAC                     	endif
  2692  001EAC  0008               	tblrd		*
  2693  001EAE  0100               	movlb	12288	; () banked
  2694  001EB0  A0F5               	btfss	tablat,0,c
  2695  001EB2  D002               	goto	l1691
  2696                           
  2697                           ; BSR set to: 0
  2698  001EB4  6810               	setf	OpenPWM2@ccp2mx,c
  2699  001EB6  D002               	goto	l522
  2700  001EB8                     l1691:
  2701                           
  2702                           ; BSR set to: 0
  2703  001EB8  0E00               	movlw	0
  2704  001EBA  6E10               	movwf	OpenPWM2@ccp2mx,c
  2705  001EBC                     l522:
  2706                           
  2707                           ; BSR set to: 0
  2708  001EBC  5010               	movf	OpenPWM2@ccp2mx,w,c
  2709  001EBE  B4D8               	btfsc	status,2,c
  2710  001EC0  D002               	goto	l523
  2711                           
  2712                           ; BSR set to: 0
  2713  001EC2  9294               	bcf	3988,1,c	;volatile
  2714  001EC4  D001               	goto	l524
  2715  001EC6                     l523:
  2716                           
  2717                           ; BSR set to: 0
  2718  001EC6  9693               	bcf	3987,3,c	;volatile
  2719  001EC8                     l524:
  2720                           
  2721                           ; BSR set to: 0
  2722  001EC8  94CA               	bcf	4042,2,c	;volatile
  2723  001ECA  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2724  001ECE  84CA               	bsf	4042,2,c	;volatile
  2725                           
  2726                           ; BSR set to: 0
  2727  001ED0  0012               	return		;funcret
  2728  001ED2                     __end_of_OpenPWM2:
  2729                           	opt stack 0
  2730                           stkptr	equ	0xFFC
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _OpenPWM1 *****************
  2741 ;; Defined at:
  2742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  period          1    wreg     unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  period          1   14[COMRAM] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        1 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_initialization
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text23
  2771  002132                     __ptext23:
  2772                           	opt stack 0
  2773  002132                     _OpenPWM1:
  2774                           	opt stack 28
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;incstack = 0
  2778                           ;OpenPWM1@period stored from wreg
  2779  002132  6E0F               	movwf	OpenPWM1@period,c
  2780  002134  0E0C               	movlw	12
  2781  002136  12BD               	iorwf	4029,f,c	;volatile
  2782  002138  9494               	bcf	3988,2,c	;volatile
  2783  00213A  94CA               	bcf	4042,2,c	;volatile
  2784  00213C  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2785  002140  84CA               	bsf	4042,2,c	;volatile
  2786  002142  0012               	return		;funcret
  2787  002144                     __end_of_OpenPWM1:
  2788                           	opt stack 0
  2789                           stkptr	equ	0xFFC
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           intcon	equ	0xFF2
  2795                           postinc0	equ	0xFEE
  2796                           wreg	equ	0xFE8
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _OpenADC *****************
  2800 ;; Defined at:
  2801 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  config          1    wreg     unsigned char 
  2804 ;;  config2         1   14[COMRAM] unsigned char 
  2805 ;;  portconfig      1   15[COMRAM] unsigned char 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  config          1   18[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;		None               void
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;Total ram usage:        5 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_initialization
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text24
  2832  001D2A                     __ptext24:
  2833                           	opt stack 0
  2834  001D2A                     _OpenADC:
  2835                           	opt stack 28
  2836                           
  2837                           ;incstack = 0
  2838                           ;OpenADC@config stored from wreg
  2839  001D2A  6E13               	movwf	OpenADC@config,c
  2840  001D2C  0E00               	movlw	0
  2841  001D2E  6EC2               	movwf	4034,c	;volatile
  2842  001D30  0E00               	movlw	0
  2843  001D32  6EC0               	movwf	4032,c	;volatile
  2844  001D34  90D8               	bcf	status,0,c
  2845  001D36  300F               	rrcf	OpenADC@config2,w,c
  2846  001D38  0B3C               	andlw	60
  2847  001D3A  6EC2               	movwf	4034,c	;volatile
  2848  001D3C  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2849  001D40  3A11               	swapf	??_OpenADC,f,c
  2850  001D42  0EF0               	movlw	240
  2851  001D44  1611               	andwf	??_OpenADC,f,c
  2852  001D46  0E30               	movlw	48
  2853  001D48  1611               	andwf	??_OpenADC,f,c
  2854  001D4A  5010               	movf	OpenADC@portconfig,w,c
  2855  001D4C  0B0F               	andlw	15
  2856  001D4E  1011               	iorwf	??_OpenADC,w,c
  2857  001D50  6EC1               	movwf	4033,c	;volatile
  2858  001D52  C013  F011         	movff	OpenADC@config,??_OpenADC
  2859  001D56  90D8               	bcf	status,0,c
  2860  001D58  3611               	rlcf	??_OpenADC,f,c
  2861  001D5A  90D8               	bcf	status,0,c
  2862  001D5C  3611               	rlcf	??_OpenADC,f,c
  2863  001D5E  0E38               	movlw	56
  2864  001D60  1611               	andwf	??_OpenADC,f,c
  2865  001D62  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2866  001D66  3A12               	swapf	??_OpenADC+1,f,c
  2867  001D68  0E0F               	movlw	15
  2868  001D6A  1612               	andwf	??_OpenADC+1,f,c
  2869  001D6C  0E07               	movlw	7
  2870  001D6E  1612               	andwf	??_OpenADC+1,f,c
  2871  001D70  5013               	movf	OpenADC@config,w,c
  2872  001D72  0B80               	andlw	128
  2873  001D74  1012               	iorwf	??_OpenADC+1,w,c
  2874  001D76  1011               	iorwf	??_OpenADC,w,c
  2875  001D78  6EC0               	movwf	4032,c	;volatile
  2876  001D7A  AE0F               	btfss	OpenADC@config2,7,c
  2877  001D7C  D003               	goto	l474
  2878  001D7E  9C9E               	bcf	3998,6,c	;volatile
  2879  001D80  8C9D               	bsf	3997,6,c	;volatile
  2880  001D82  8CF2               	bsf	intcon,6,c	;volatile
  2881  001D84                     l474:
  2882  001D84  80C2               	bsf	4034,0,c	;volatile
  2883  001D86  0012               	return		;funcret
  2884  001D88                     __end_of_OpenADC:
  2885                           	opt stack 0
  2886                           stkptr	equ	0xFFC
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           intcon	equ	0xFF2
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _WriteTimer0 *****************
  2897 ;; Defined at:
  2898 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  timer0          2   14[COMRAM] unsigned int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  timer           2   16[COMRAM] struct Timers
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		None
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        4 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text25
  2927  002144                     __ptext25:
  2928                           	opt stack 0
  2929  002144                     _WriteTimer0:
  2930                           	opt stack 29
  2931                           
  2932                           ;incstack = 0
  2933  002144  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2934  002148  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2935  00214C  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2936  002150  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2937  002154  0012               	return		;funcret
  2938  002156                     __end_of_WriteTimer0:
  2939                           	opt stack 0
  2940                           stkptr	equ	0xFFC
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           intcon	equ	0xFF2
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           status	equ	0xFD8
  2949                           
  2950 ;; *************** function _PID_LineFollowing *****************
  2951 ;; Defined at:
  2952 ;;		line 135 in file "../Robot Files/main2.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  error           2   44[COMRAM] PTR char 
  2955 ;;		 -> main@error(3), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:        5 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		_MotorControl
  2976 ;;		___lwdiv
  2977 ;;		___wmul
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text26
  2984  001082                     __ptext26:
  2985                           	opt stack 0
  2986  001082                     _PID_LineFollowing:
  2987                           	opt stack 27
  2988                           
  2989                           ;main2.c: 137: static int delta_velocity = 0;
  2990                           ;main2.c: 139: static int D = 0;
  2991                           ;main2.c: 142: if (I_flag_counter == I_CONSTANT)
  2992                           
  2993                           ;incstack = 0
  2994  001082  0E03               	movlw	low _I_CONSTANT
  2995  001084  6EF6               	movwf	tblptrl,c
  2996  001086                     	if	1	;There is more than 1 active tblptr byte
  2997  001086  0E10               	movlw	high _I_CONSTANT
  2998  001088  6EF7               	movwf	tblptrh,c
  2999  00108A                     	endif
  3000  00108A                     	if	1	;There are 3 active tblptr bytes
  3001  00108A  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  3002  00108C  6EF8               	movwf	tblptru,c
  3003  00108E                     	endif
  3004  00108E  0009               	tblrd		*+
  3005  001090  50F5               	movf	tablat,w,c
  3006  001092  1847               	xorwf	_I_flag_counter,w,c
  3007  001094  E104               	bnz	u2261
  3008  001096  0009               	tblrd		*+
  3009  001098  50F5               	movf	tablat,w,c
  3010  00109A  1848               	xorwf	_I_flag_counter+1,w,c
  3011  00109C  A4D8               	btfss	status,2,c
  3012  00109E                     u2261:
  3013  00109E  D07C               	goto	l2653
  3014                           
  3015                           ;main2.c: 143: {
  3016                           ;main2.c: 144: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=16
      +                          00 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  3017  0010A0  BE42               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3018  0010A2  D006               	goto	l2627
  3019  0010A4  0E40               	movlw	64
  3020  0010A6  5C41               	subwf	PID_LineFollowing@delta_velocity,w,c
  3021  0010A8  0E06               	movlw	6
  3022  0010AA  5842               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3023  0010AC  B0D8               	btfsc	status,0,c
  3024  0010AE  D008               	goto	l2629
  3025  0010B0                     l2627:
  3026  0010B0  BE42               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3027  0010B2  D006               	goto	l2629
  3028  0010B4  0E41               	movlw	65
  3029  0010B6  5C41               	subwf	PID_LineFollowing@delta_velocity,w,c
  3030  0010B8  0E06               	movlw	6
  3031  0010BA  5842               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3032  0010BC  B0D8               	btfsc	status,0,c
  3033  0010BE  D024               	goto	l2637
  3034  0010C0                     l2629:
  3035  0010C0  BE42               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3036  0010C2  D00F               	goto	l2633
  3037  0010C4  0E40               	movlw	64
  3038  0010C6  5C41               	subwf	PID_LineFollowing@delta_velocity,w,c
  3039  0010C8  0E06               	movlw	6
  3040  0010CA  5842               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3041  0010CC  A0D8               	btfss	status,0,c
  3042  0010CE  D009               	goto	l2633
  3043  0010D0  EE20 F002          	lfsr	2,2
  3044  0010D4  502D               	movf	PID_LineFollowing@error,w,c
  3045  0010D6  26D9               	addwf	fsr2l,f,c
  3046  0010D8  502E               	movf	PID_LineFollowing@error+1,w,c
  3047  0010DA  22DA               	addwfc	fsr2h,f,c
  3048  0010DC  0E00               	movlw	0
  3049  0010DE  BEDB               	btfsc	plusw2,7,c
  3050  0010E0  D013               	goto	l2637
  3051  0010E2                     l2633:
  3052  0010E2  AE42               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  3053  0010E4  D054               	goto	l2651
  3054  0010E6  0EC1               	movlw	193
  3055  0010E8  5C41               	subwf	PID_LineFollowing@delta_velocity,w,c
  3056  0010EA  0EF9               	movlw	249
  3057  0010EC  5842               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3058  0010EE  B0D8               	btfsc	status,0,c
  3059  0010F0  D04E               	goto	l2651
  3060  0010F2  EE20 F002          	lfsr	2,2
  3061  0010F6  502D               	movf	PID_LineFollowing@error,w,c
  3062  0010F8  26D9               	addwf	fsr2l,f,c
  3063  0010FA  502E               	movf	PID_LineFollowing@error+1,w,c
  3064  0010FC  22DA               	addwfc	fsr2h,f,c
  3065  0010FE  50DF               	movf	indf2,w,c
  3066  001100  0A80               	xorlw	128
  3067  001102  0F7F               	addlw	-129
  3068  001104  A0D8               	btfss	status,0,c
  3069  001106  D043               	goto	l2651
  3070  001108                     l2637:
  3071                           
  3072                           ;main2.c: 146: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && err
      +                          or[2]>0))
  3073  001108  BE46               	btfsc	_I+1,7,c
  3074  00110A  D006               	goto	l2639
  3075  00110C  0EC9               	movlw	201
  3076  00110E  5C45               	subwf	_I,w,c
  3077  001110  0E0C               	movlw	12
  3078  001112  5846               	subwfb	_I+1,w,c
  3079  001114  B0D8               	btfsc	status,0,c
  3080  001116  D008               	goto	l2641
  3081  001118                     l2639:
  3082  001118  AE46               	btfss	_I+1,7,c
  3083  00111A  D02A               	goto	l2649
  3084  00111C  0E37               	movlw	55
  3085  00111E  5C45               	subwf	_I,w,c
  3086  001120  0EF3               	movlw	243
  3087  001122  5846               	subwfb	_I+1,w,c
  3088  001124  B0D8               	btfsc	status,0,c
  3089  001126  D024               	goto	l2649
  3090  001128                     l2641:
  3091  001128  BE46               	btfsc	_I+1,7,c
  3092  00112A  D00F               	goto	l2645
  3093  00112C  0EC9               	movlw	201
  3094  00112E  5C45               	subwf	_I,w,c
  3095  001130  0E0C               	movlw	12
  3096  001132  5846               	subwfb	_I+1,w,c
  3097  001134  A0D8               	btfss	status,0,c
  3098  001136  D009               	goto	l2645
  3099  001138  EE20 F002          	lfsr	2,2
  3100  00113C  502D               	movf	PID_LineFollowing@error,w,c
  3101  00113E  26D9               	addwf	fsr2l,f,c
  3102  001140  502E               	movf	PID_LineFollowing@error+1,w,c
  3103  001142  22DA               	addwfc	fsr2h,f,c
  3104  001144  0E00               	movlw	0
  3105  001146  BEDB               	btfsc	plusw2,7,c
  3106  001148  D013               	goto	l2649
  3107  00114A                     l2645:
  3108  00114A  AE46               	btfss	_I+1,7,c
  3109  00114C  D020               	goto	l2651
  3110  00114E  0E37               	movlw	55
  3111  001150  5C45               	subwf	_I,w,c
  3112  001152  0EF3               	movlw	243
  3113  001154  5846               	subwfb	_I+1,w,c
  3114  001156  B0D8               	btfsc	status,0,c
  3115  001158  D01A               	goto	l2651
  3116  00115A  EE20 F002          	lfsr	2,2
  3117  00115E  502D               	movf	PID_LineFollowing@error,w,c
  3118  001160  26D9               	addwf	fsr2l,f,c
  3119  001162  502E               	movf	PID_LineFollowing@error+1,w,c
  3120  001164  22DA               	addwfc	fsr2h,f,c
  3121  001166  50DF               	movf	indf2,w,c
  3122  001168  0A80               	xorlw	128
  3123  00116A  0F7F               	addlw	-129
  3124  00116C  A0D8               	btfss	status,0,c
  3125  00116E  D00F               	goto	l2651
  3126  001170                     l2649:
  3127                           
  3128                           ;main2.c: 148: I += error[2];
  3129  001170  EE20 F002          	lfsr	2,2
  3130  001174  502D               	movf	PID_LineFollowing@error,w,c
  3131  001176  26D9               	addwf	fsr2l,f,c
  3132  001178  502E               	movf	PID_LineFollowing@error+1,w,c
  3133  00117A  22DA               	addwfc	fsr2h,f,c
  3134  00117C  50DF               	movf	indf2,w,c
  3135  00117E  6E2F               	movwf	??_PID_LineFollowing& (0+255),c
  3136  001180  502F               	movf	??_PID_LineFollowing,w,c
  3137  001182  2645               	addwf	_I,f,c
  3138  001184  0E00               	movlw	0
  3139  001186  BE2F               	btfsc	??_PID_LineFollowing,7,c
  3140  001188  0EFF               	movlw	255
  3141  00118A  2246               	addwfc	_I+1,f,c
  3142  00118C  D000               	goto	l2651
  3143  00118E                     l2651:
  3144                           
  3145                           ;main2.c: 151: I_flag_counter = 0;
  3146  00118E  0E00               	movlw	0
  3147  001190  6E48               	movwf	_I_flag_counter+1,c
  3148  001192  0E00               	movlw	0
  3149  001194  6E47               	movwf	_I_flag_counter,c
  3150  001196  D000               	goto	l2653
  3151  001198                     l2653:
  3152                           
  3153                           ;main2.c: 152: }
  3154                           ;main2.c: 155: if((error[1]!=error[2]) || (D_flag_counter == 16*TIME_UPDATE_D_ms))
  3155  001198  EE20 F002          	lfsr	2,2
  3156  00119C  502D               	movf	PID_LineFollowing@error,w,c
  3157  00119E  26D9               	addwf	fsr2l,f,c
  3158  0011A0  502E               	movf	PID_LineFollowing@error+1,w,c
  3159  0011A2  22DA               	addwfc	fsr2h,f,c
  3160  0011A4  EE10 F001          	lfsr	1,1
  3161  0011A8  502D               	movf	PID_LineFollowing@error,w,c
  3162  0011AA  26E1               	addwf	fsr1l,f,c
  3163  0011AC  502E               	movf	PID_LineFollowing@error+1,w,c
  3164  0011AE  22E2               	addwfc	fsr1h,f,c
  3165  0011B0  50DE               	movf	postinc2,w,c
  3166  0011B2  18E6               	xorwf	postinc1,w,c
  3167  0011B4  A4D8               	btfss	status,2,c
  3168  0011B6  D01C               	goto	l2657
  3169  0011B8  0E0F               	movlw	low _TIME_UPDATE_D_ms
  3170  0011BA  6EF6               	movwf	tblptrl,c
  3171  0011BC                     	if	1	;There is more than 1 active tblptr byte
  3172  0011BC  0E10               	movlw	high _TIME_UPDATE_D_ms
  3173  0011BE  6EF7               	movwf	tblptrh,c
  3174  0011C0                     	endif
  3175  0011C0                     	if	1	;There are 3 active tblptr bytes
  3176  0011C0  0E00               	movlw	low (_TIME_UPDATE_D_ms shr (0+16))
  3177  0011C2  6EF8               	movwf	tblptru,c
  3178  0011C4                     	endif
  3179  0011C4  0009               	tblrd		*+
  3180  0011C6  CFF5 F02F          	movff	tablat,??_PID_LineFollowing
  3181  0011CA  0009               	tblrd		*+
  3182  0011CC  CFF5 F030          	movff	tablat,??_PID_LineFollowing+1
  3183  0011D0  3A2F               	swapf	??_PID_LineFollowing,f,c
  3184  0011D2  3A30               	swapf	??_PID_LineFollowing+1,f,c
  3185  0011D4  0EF0               	movlw	240
  3186  0011D6  1630               	andwf	??_PID_LineFollowing+1,f,c
  3187  0011D8  502F               	movf	??_PID_LineFollowing,w,c
  3188  0011DA  0B0F               	andlw	15
  3189  0011DC  1230               	iorwf	??_PID_LineFollowing+1,f,c
  3190  0011DE  0EF0               	movlw	240
  3191  0011E0  162F               	andwf	??_PID_LineFollowing,f,c
  3192  0011E2  5043               	movf	_D_flag_counter,w,c
  3193  0011E4  182F               	xorwf	??_PID_LineFollowing,w,c
  3194  0011E6  E15E               	bnz	l2665
  3195  0011E8  5044               	movf	_D_flag_counter+1,w,c
  3196  0011EA  1830               	xorwf	??_PID_LineFollowing+1,w,c
  3197  0011EC  A4D8               	btfss	status,2,c
  3198  0011EE  D05A               	goto	l2665
  3199  0011F0                     l2657:
  3200                           
  3201                           ;main2.c: 156: {
  3202                           ;main2.c: 157: D = D_CONSTANT/D_flag_counter*(error[2]-error[1]);
  3203  0011F0  EE20 F001          	lfsr	2,1
  3204  0011F4  502D               	movf	PID_LineFollowing@error,w,c
  3205  0011F6  26D9               	addwf	fsr2l,f,c
  3206  0011F8  502E               	movf	PID_LineFollowing@error+1,w,c
  3207  0011FA  22DA               	addwfc	fsr2h,f,c
  3208  0011FC  50DF               	movf	indf2,w,c
  3209  0011FE  6E2F               	movwf	??_PID_LineFollowing& (0+255),c
  3210  001200  6A30               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3211  001202  BE2F               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3212  001204  0630               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3213  001206  1E2F               	comf	??_PID_LineFollowing,f,c
  3214  001208  1E30               	comf	??_PID_LineFollowing+1,f,c
  3215  00120A  4A2F               	infsnz	??_PID_LineFollowing,f,c
  3216  00120C  2A30               	incf	??_PID_LineFollowing+1,f,c
  3217  00120E  EE20 F002          	lfsr	2,2
  3218  001212  502D               	movf	PID_LineFollowing@error,w,c
  3219  001214  26D9               	addwf	fsr2l,f,c
  3220  001216  502E               	movf	PID_LineFollowing@error+1,w,c
  3221  001218  22DA               	addwfc	fsr2h,f,c
  3222  00121A  50DF               	movf	indf2,w,c
  3223  00121C  6E31               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3224  00121E  502F               	movf	??_PID_LineFollowing,w,c
  3225  001220  2431               	addwf	??_PID_LineFollowing+2,w,c
  3226  001222  6E16               	movwf	___wmul@multiplier,c
  3227  001224  0E00               	movlw	0
  3228  001226  BE31               	btfsc	??_PID_LineFollowing+2,7,c
  3229  001228  0EFF               	movlw	255
  3230  00122A  2030               	addwfc	??_PID_LineFollowing+1,w,c
  3231  00122C  6E17               	movwf	___wmul@multiplier+1,c
  3232  00122E  C043  F011         	movff	_D_flag_counter,___lwdiv@divisor
  3233  001232  C044  F012         	movff	_D_flag_counter+1,___lwdiv@divisor+1
  3234  001236  0E01               	movlw	low _D_CONSTANT
  3235  001238  6EF6               	movwf	tblptrl,c
  3236  00123A                     	if	1	;There is more than 1 active tblptr byte
  3237  00123A  0E10               	movlw	high _D_CONSTANT
  3238  00123C  6EF7               	movwf	tblptrh,c
  3239  00123E                     	endif
  3240  00123E                     	if	1	;There are 3 active tblptr bytes
  3241  00123E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3242  001240  6EF8               	movwf	tblptru,c
  3243  001242                     	endif
  3244  001242  0009               	tblrd		*+
  3245  001244  CFF5 F00F          	movff	tablat,___lwdiv@dividend
  3246  001248  000A               	tblrd		*-
  3247  00124A  CFF5 F010          	movff	tablat,___lwdiv@dividend+1
  3248  00124E  ECC4  F00E         	call	___lwdiv	;wreg free
  3249  001252  C00F  F018         	movff	?___lwdiv,___wmul@multiplicand
  3250  001256  C010  F019         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3251  00125A  ECAA  F00F         	call	___wmul	;wreg free
  3252  00125E  C016  F03F         	movff	?___wmul,PID_LineFollowing@D
  3253  001262  C017  F040         	movff	?___wmul+1,PID_LineFollowing@D+1
  3254                           
  3255                           ;main2.c: 160: error[0]=error[1];
  3256  001266  EE20 F001          	lfsr	2,1
  3257  00126A  502D               	movf	PID_LineFollowing@error,w,c
  3258  00126C  26D9               	addwf	fsr2l,f,c
  3259  00126E  502E               	movf	PID_LineFollowing@error+1,w,c
  3260  001270  22DA               	addwfc	fsr2h,f,c
  3261  001272  C02D  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3262  001276  C02E  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3263  00127A  CFDF FFE7          	movff	indf2,indf1
  3264                           
  3265                           ;main2.c: 161: error[1]=error[2];
  3266  00127E  EE20 F002          	lfsr	2,2
  3267  001282  502D               	movf	PID_LineFollowing@error,w,c
  3268  001284  26D9               	addwf	fsr2l,f,c
  3269  001286  502E               	movf	PID_LineFollowing@error+1,w,c
  3270  001288  22DA               	addwfc	fsr2h,f,c
  3271  00128A  EE10 F001          	lfsr	1,1
  3272  00128E  502D               	movf	PID_LineFollowing@error,w,c
  3273  001290  26E1               	addwf	fsr1l,f,c
  3274  001292  502E               	movf	PID_LineFollowing@error+1,w,c
  3275  001294  22E2               	addwfc	fsr1h,f,c
  3276  001296  CFDF FFE7          	movff	indf2,indf1
  3277                           
  3278                           ;main2.c: 164: D_flag_counter = 0;
  3279  00129A  0E00               	movlw	0
  3280  00129C  6E44               	movwf	_D_flag_counter+1,c
  3281  00129E  0E00               	movlw	0
  3282  0012A0  6E43               	movwf	_D_flag_counter,c
  3283  0012A2  D000               	goto	l2665
  3284  0012A4                     l2665:
  3285                           
  3286                           ;main2.c: 165: }
  3287                           ;main2.c: 168: delta_velocity = P_CONSTANT*error[2] + I + D;
  3288  0012A4  EE20 F002          	lfsr	2,2
  3289  0012A8  502D               	movf	PID_LineFollowing@error,w,c
  3290  0012AA  26D9               	addwf	fsr2l,f,c
  3291  0012AC  502E               	movf	PID_LineFollowing@error+1,w,c
  3292  0012AE  22DA               	addwfc	fsr2h,f,c
  3293  0012B0  50DF               	movf	indf2,w,c
  3294  0012B2  6E16               	movwf	___wmul@multiplier,c
  3295  0012B4  6A17               	clrf	___wmul@multiplier+1,c
  3296  0012B6  BE16               	btfsc	___wmul@multiplier,7,c
  3297  0012B8  0617               	decf	___wmul@multiplier+1,f,c
  3298  0012BA  0E05               	movlw	low _P_CONSTANT
  3299  0012BC  6EF6               	movwf	tblptrl,c
  3300  0012BE                     	if	1	;There is more than 1 active tblptr byte
  3301  0012BE  0E10               	movlw	high _P_CONSTANT
  3302  0012C0  6EF7               	movwf	tblptrh,c
  3303  0012C2                     	endif
  3304  0012C2                     	if	1	;There are 3 active tblptr bytes
  3305  0012C2  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3306  0012C4  6EF8               	movwf	tblptru,c
  3307  0012C6                     	endif
  3308  0012C6  0009               	tblrd		*+
  3309  0012C8  CFF5 F018          	movff	tablat,___wmul@multiplicand
  3310  0012CC  000A               	tblrd		*-
  3311  0012CE  CFF5 F019          	movff	tablat,___wmul@multiplicand+1
  3312  0012D2  ECAA  F00F         	call	___wmul	;wreg free
  3313  0012D6  5045               	movf	_I,w,c
  3314  0012D8  2616               	addwf	?___wmul,f,c
  3315  0012DA  5046               	movf	_I+1,w,c
  3316  0012DC  2217               	addwfc	?___wmul+1,f,c
  3317  0012DE  503F               	movf	PID_LineFollowing@D,w,c
  3318  0012E0  2416               	addwf	?___wmul,w,c
  3319  0012E2  6E41               	movwf	PID_LineFollowing@delta_velocity,c
  3320  0012E4  5040               	movf	PID_LineFollowing@D+1,w,c
  3321  0012E6  2017               	addwfc	?___wmul+1,w,c
  3322  0012E8  6E42               	movwf	PID_LineFollowing@delta_velocity+1,c
  3323                           
  3324                           ;main2.c: 171: MotorControl(delta_velocity);
  3325  0012EA  C041  F024         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3326  0012EE  C042  F025         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3327  0012F2  EC7C  F009         	call	_MotorControl	;wreg free
  3328  0012F6  0012               	return		;funcret
  3329  0012F8                     __end_of_PID_LineFollowing:
  3330                           	opt stack 0
  3331                           stkptr	equ	0xFFC
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           postinc1	equ	0xFE6
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           postinc2	equ	0xFDE
  3345                           plusw2	equ	0xFDB
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function ___lwdiv *****************
  3351 ;; Defined at:
  3352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  dividend        2   14[COMRAM] unsigned int 
  3355 ;;  divisor         2   16[COMRAM] unsigned int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  quotient        2   18[COMRAM] unsigned int 
  3358 ;;  counter         1   20[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2   14[COMRAM] unsigned int 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;Total ram usage:        7 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_PID_LineFollowing
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text27
  3383  001D88                     __ptext27:
  3384                           	opt stack 0
  3385  001D88                     ___lwdiv:
  3386                           	opt stack 28
  3387                           
  3388                           ;incstack = 0
  3389  001D88  0E00               	movlw	0
  3390  001D8A  6E14               	movwf	___lwdiv@quotient+1,c
  3391  001D8C  0E00               	movlw	0
  3392  001D8E  6E13               	movwf	___lwdiv@quotient,c
  3393  001D90  5011               	movf	___lwdiv@divisor,w,c
  3394  001D92  1012               	iorwf	___lwdiv@divisor+1,w,c
  3395  001D94  B4D8               	btfsc	status,2,c
  3396  001D96  D021               	goto	l1153
  3397  001D98  0E01               	movlw	1
  3398  001D9A  6E15               	movwf	___lwdiv@counter,c
  3399  001D9C  D005               	goto	l2461
  3400  001D9E                     l2459:
  3401  001D9E  90D8               	bcf	status,0,c
  3402  001DA0  3611               	rlcf	___lwdiv@divisor,f,c
  3403  001DA2  3612               	rlcf	___lwdiv@divisor+1,f,c
  3404  001DA4  2A15               	incf	___lwdiv@counter,f,c
  3405  001DA6  D000               	goto	l2461
  3406  001DA8                     l2461:
  3407  001DA8  BE12               	btfsc	___lwdiv@divisor+1,7,c
  3408  001DAA  D002               	goto	l2463
  3409  001DAC  D7F8               	goto	l2459
  3410  001DAE  D000               	goto	l2463
  3411  001DB0                     l2463:
  3412  001DB0  90D8               	bcf	status,0,c
  3413  001DB2  3613               	rlcf	___lwdiv@quotient,f,c
  3414  001DB4  3614               	rlcf	___lwdiv@quotient+1,f,c
  3415  001DB6  5011               	movf	___lwdiv@divisor,w,c
  3416  001DB8  5C0F               	subwf	___lwdiv@dividend,w,c
  3417  001DBA  5012               	movf	___lwdiv@divisor+1,w,c
  3418  001DBC  5810               	subwfb	___lwdiv@dividend+1,w,c
  3419  001DBE  A0D8               	btfss	status,0,c
  3420  001DC0  D006               	goto	l2471
  3421  001DC2  5011               	movf	___lwdiv@divisor,w,c
  3422  001DC4  5E0F               	subwf	___lwdiv@dividend,f,c
  3423  001DC6  5012               	movf	___lwdiv@divisor+1,w,c
  3424  001DC8  5A10               	subwfb	___lwdiv@dividend+1,f,c
  3425  001DCA  8013               	bsf	___lwdiv@quotient,0,c
  3426  001DCC  D000               	goto	l2471
  3427  001DCE                     l2471:
  3428  001DCE  90D8               	bcf	status,0,c
  3429  001DD0  3212               	rrcf	___lwdiv@divisor+1,f,c
  3430  001DD2  3211               	rrcf	___lwdiv@divisor,f,c
  3431  001DD4  2E15               	decfsz	___lwdiv@counter,f,c
  3432  001DD6  D7EC               	goto	l2463
  3433  001DD8  D000               	goto	l1153
  3434  001DDA                     l1153:
  3435  001DDA  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3436  001DDE  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3437  001DE2  0012               	return		;funcret
  3438  001DE4                     __end_of___lwdiv:
  3439                           	opt stack 0
  3440                           stkptr	equ	0xFFC
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           intcon	equ	0xFF2
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           indf1	equ	0xFE7
  3449                           postinc1	equ	0xFE6
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           indf2	equ	0xFDF
  3453                           postinc2	equ	0xFDE
  3454                           plusw2	equ	0xFDB
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function _OpenTimer0 *****************
  3460 ;; Defined at:
  3461 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  config          1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  config          1   14[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        1 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text28
  3490  00200A                     __ptext28:
  3491                           	opt stack 0
  3492  00200A                     _OpenTimer0:
  3493                           	opt stack 29
  3494                           
  3495                           ;incstack = 0
  3496                           ;OpenTimer0@config stored from wreg
  3497  00200A  6E0F               	movwf	OpenTimer0@config,c
  3498  00200C  500F               	movf	OpenTimer0@config,w,c
  3499  00200E  0B7F               	andlw	127
  3500  002010  6ED5               	movwf	4053,c	;volatile
  3501  002012  0E00               	movlw	0
  3502  002014  6ED7               	movwf	4055,c	;volatile
  3503  002016  0E00               	movlw	0
  3504  002018  6ED6               	movwf	4054,c	;volatile
  3505  00201A  94F2               	bcf	intcon,2,c	;volatile
  3506  00201C  AE0F               	btfss	OpenTimer0@config,7,c
  3507  00201E  D002               	goto	l545
  3508  002020  8AF2               	bsf	intcon,5,c	;volatile
  3509  002022  D001               	goto	l546
  3510  002024                     l545:
  3511  002024  9AF2               	bcf	intcon,5,c	;volatile
  3512  002026                     l546:
  3513  002026  8ED5               	bsf	4053,7,c	;volatile
  3514  002028  0012               	return		;funcret
  3515  00202A                     __end_of_OpenTimer0:
  3516                           	opt stack 0
  3517                           stkptr	equ	0xFFC
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           intcon	equ	0xFF2
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           indf1	equ	0xFE7
  3526                           postinc1	equ	0xFE6
  3527                           fsr1h	equ	0xFE2
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           plusw2	equ	0xFDB
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function _LVtrap *****************
  3537 ;; Defined at:
  3538 ;;		line 449 in file "../Robot Files/sumovore.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;		None               void
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    3
  3559 ;; This function calls:
  3560 ;;		_gtrap
  3561 ;;		_openPORTD
  3562 ;;		_printf
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text29
  3569  00202A                     __ptext29:
  3570                           	opt stack 0
  3571  00202A                     _LVtrap:
  3572                           	opt stack 27
  3573                           
  3574                           ;sumovore.c: 451: printf("\\<LVD>");
  3575                           
  3576                           ;incstack = 0
  3577  00202A  0E6D               	movlw	low STR_6
  3578  00202C  6E0F               	movwf	printf@f,c
  3579  00202E  0E10               	movlw	high STR_6
  3580  002030  6E10               	movwf	printf@f+1,c
  3581  002032  EC69  F00F         	call	_printf	;wreg free
  3582                           
  3583                           ;sumovore.c: 452: openPORTD();
  3584  002036  ECD3  F010         	call	_openPORTD	;wreg free
  3585                           
  3586                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3587  00203A  9083               	bcf	3971,0,c	;volatile
  3588                           
  3589                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3590  00203C  8283               	bsf	3971,1,c	;volatile
  3591                           
  3592                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3593  00203E  8483               	bsf	3971,2,c	;volatile
  3594                           
  3595                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3596  002040  9683               	bcf	3971,3,c	;volatile
  3597                           
  3598                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3599  002042  8883               	bsf	3971,4,c	;volatile
  3600                           
  3601                           ;sumovore.c: 458: gtrap();
  3602  002044  EC64  F00E         	call	_gtrap	;wreg free
  3603  002048  0012               	return		;funcret
  3604  00204A                     __end_of_LVtrap:
  3605                           	opt stack 0
  3606                           stkptr	equ	0xFFC
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           intcon	equ	0xFF2
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           postinc1	equ	0xFE6
  3616                           fsr1h	equ	0xFE2
  3617                           fsr1l	equ	0xFE1
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           plusw2	equ	0xFDB
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function _printf *****************
  3626 ;; Defined at:
  3627 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3630 ;;		 -> STR_7(64), STR_6(7), STR_5(10), STR_4(9), 
  3631 ;;		 -> STR_3(9), STR_2(6), STR_1(6), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  tmpval          4    0        struct .
  3634 ;;  cp              3    0        PTR const unsigned char 
  3635 ;;  ap              2   16[COMRAM] PTR void [1]
  3636 ;;		 -> ?_printf(2), 
  3637 ;;  len             2    0        unsigned int 
  3638 ;;  val             2    0        unsigned int 
  3639 ;;  c               1   18[COMRAM] char 
  3640 ;;  flag            1    0        unsigned char 
  3641 ;;  prec            1    0        char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   14[COMRAM] int 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        5 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    2
  3658 ;; This function calls:
  3659 ;;		_putch
  3660 ;; This function is called by:
  3661 ;;		_PORtask
  3662 ;;		_BORtask
  3663 ;;		_WDTtask
  3664 ;;		_STKFULtask
  3665 ;;		_RESETtask
  3666 ;;		_LVtrap
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text30
  3672  001ED2                     __ptext30:
  3673                           	opt stack 0
  3674  001ED2                     _printf:
  3675                           	opt stack 28
  3676                           
  3677                           ;doprnt.c: 466: va_list ap;
  3678                           ;doprnt.c: 499: signed char c;
  3679                           ;doprnt.c: 506: signed char prec;
  3680                           ;doprnt.c: 508: unsigned char flag;
  3681                           ;doprnt.c: 523: union {
  3682                           ;doprnt.c: 524: unsigned long vd;
  3683                           ;doprnt.c: 525: double integ;
  3684                           ;doprnt.c: 526: } tmpval;
  3685                           ;doprnt.c: 528: unsigned int val;
  3686                           ;doprnt.c: 529: unsigned len;
  3687                           ;doprnt.c: 530: const char * cp;
  3688                           ;doprnt.c: 533: *ap = __va_start();
  3689                           
  3690                           ;incstack = 0
  3691  001ED2  0E11               	movlw	low (?_printf+2)
  3692  001ED4  6E11               	movwf	printf@ap,c
  3693  001ED6  0E00               	movlw	high (?_printf+2)
  3694  001ED8  6E12               	movwf	printf@ap+1,c
  3695                           
  3696                           ;doprnt.c: 536: while(c = *f++) {
  3697  001EDA  D004               	goto	l2133
  3698  001EDC                     l2131:
  3699                           
  3700                           ;doprnt.c: 540: {
  3701                           ;doprnt.c: 541: (putch(c) );
  3702  001EDC  5013               	movf	printf@c,w,c
  3703  001EDE  ECD8  F010         	call	_putch
  3704                           
  3705                           ;doprnt.c: 542: continue;
  3706  001EE2  D000               	goto	l2133
  3707  001EE4                     l2133:
  3708  001EE4  C00F  FFF6         	movff	printf@f,tblptrl
  3709  001EE8  C010  FFF7         	movff	printf@f+1,tblptrh
  3710  001EEC  4A0F               	infsnz	printf@f,f,c
  3711  001EEE  2A10               	incf	printf@f+1,f,c
  3712  001EF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3713  001EF0  6AF8               	clrf	tblptru,c
  3714  001EF2                     	endif
  3715  001EF2                     	if	0	;tblptru may be non-zero
  3716  001EF2                     	endif
  3717  001EF2  0008               	tblrd		*
  3718  001EF4  CFF5 F013          	movff	tablat,printf@c
  3719  001EF8  5013               	movf	printf@c,w,c
  3720  001EFA  A4D8               	btfss	status,2,c
  3721  001EFC  D7EF               	goto	l2131
  3722                           
  3723                           ;doprnt.c: 1469: }
  3724                           ;doprnt.c: 1533: }
  3725                           ;doprnt.c: 1540: return 0;
  3726                           ;	Return value of _printf is never used
  3727  001EFE  0012               	return		;funcret
  3728  001F00                     __end_of_printf:
  3729                           	opt stack 0
  3730                           stkptr	equ	0xFFC
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           intcon	equ	0xFF2
  3736                           postinc0	equ	0xFEE
  3737                           wreg	equ	0xFE8
  3738                           indf1	equ	0xFE7
  3739                           postinc1	equ	0xFE6
  3740                           fsr1h	equ	0xFE2
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           plusw2	equ	0xFDB
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _putch *****************
  3750 ;; Defined at:
  3751 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  c               1    wreg     unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  c               1    0[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_printf
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text31
  3780  0021B0                     __ptext31:
  3781                           	opt stack 0
  3782  0021B0                     _putch:
  3783                           	opt stack 28
  3784                           
  3785                           ;incstack = 0
  3786  0021B0  0012               	return		;funcret
  3787  0021B2                     __end_of_putch:
  3788                           	opt stack 0
  3789                           stkptr	equ	0xFFC
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           intcon	equ	0xFF2
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           indf1	equ	0xFE7
  3798                           postinc1	equ	0xFE6
  3799                           fsr1h	equ	0xFE2
  3800                           fsr1l	equ	0xFE1
  3801                           indf2	equ	0xFDF
  3802                           postinc2	equ	0xFDE
  3803                           plusw2	equ	0xFDB
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           
  3808 ;; *************** function _openPORTD *****************
  3809 ;; Defined at:
  3810 ;;		line 168 in file "../Robot Files/sumovore.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;		None               void
  3817 ;; Registers used:
  3818 ;;		wreg, status,2
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    1
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_initialization
  3835 ;;		_LVtrap
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text32
  3840  0021A6                     __ptext32:
  3841                           	opt stack 0
  3842  0021A6                     _openPORTD:
  3843                           	opt stack 28
  3844                           
  3845                           ;sumovore.c: 170: TRISD = 0b01100000;
  3846                           
  3847                           ;incstack = 0
  3848  0021A6  0E60               	movlw	96
  3849  0021A8  6E95               	movwf	3989,c	;volatile
  3850  0021AA  0012               	return		;funcret
  3851  0021AC                     __end_of_openPORTD:
  3852                           	opt stack 0
  3853                           stkptr	equ	0xFFC
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           intcon	equ	0xFF2
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           indf1	equ	0xFE7
  3862                           postinc1	equ	0xFE6
  3863                           fsr1h	equ	0xFE2
  3864                           fsr1l	equ	0xFE1
  3865                           indf2	equ	0xFDF
  3866                           postinc2	equ	0xFDE
  3867                           plusw2	equ	0xFDB
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           status	equ	0xFD8
  3871                           
  3872 ;; *************** function _gtrap *****************
  3873 ;; Defined at:
  3874 ;;		line 464 in file "../Robot Files/sumovore.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  count           4   14[COMRAM] unsigned long 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;		None               void
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;Total ram usage:        4 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_BORtask
  3899 ;;		_WDTtask
  3900 ;;		_STKFULtask
  3901 ;;		_RESETtask
  3902 ;;		_LVtrap
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text33
  3907  001CC8                     __ptext33:
  3908                           	opt stack 0
  3909  001CC8                     _gtrap:
  3910                           	opt stack 26
  3911                           
  3912                           ;sumovore.c: 466: unsigned long count=0;
  3913                           
  3914                           ;incstack = 0
  3915  001CC8  0E00               	movlw	0
  3916  001CCA  6E0F               	movwf	gtrap@count,c
  3917  001CCC  0E00               	movlw	0
  3918  001CCE  6E10               	movwf	gtrap@count+1,c
  3919  001CD0  0E00               	movlw	0
  3920  001CD2  6E11               	movwf	gtrap@count+2,c
  3921  001CD4  0E00               	movlw	0
  3922  001CD6  6E12               	movwf	gtrap@count+3,c
  3923  001CD8                     l175:
  3924  001CD8  0004               	clrwdt		;# 
  3925                           
  3926                           ;sumovore.c: 471: if (count==30000u)
  3927  001CDA  0E30               	movlw	48
  3928  001CDC  180F               	xorwf	gtrap@count,w,c
  3929  001CDE  E111               	bnz	l1281
  3930  001CE0  0E75               	movlw	117
  3931  001CE2  1810               	xorwf	gtrap@count+1,w,c
  3932  001CE4  1011               	iorwf	gtrap@count+2,w,c
  3933  001CE6  1012               	iorwf	gtrap@count+3,w,c
  3934  001CE8  A4D8               	btfss	status,2,c
  3935  001CEA  D00B               	goto	l1281
  3936                           
  3937                           ;sumovore.c: 472: {
  3938                           ;sumovore.c: 473: count=0;
  3939  001CEC  0E00               	movlw	0
  3940  001CEE  6E0F               	movwf	gtrap@count,c
  3941  001CF0  0E00               	movlw	0
  3942  001CF2  6E10               	movwf	gtrap@count+1,c
  3943  001CF4  0E00               	movlw	0
  3944  001CF6  6E11               	movwf	gtrap@count+2,c
  3945  001CF8  0E00               	movlw	0
  3946  001CFA  6E12               	movwf	gtrap@count+3,c
  3947                           
  3948                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  3949  001CFC  9083               	bcf	3971,0,c	;volatile
  3950                           
  3951                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  3952  001CFE  8283               	bsf	3971,1,c	;volatile
  3953                           
  3954                           ;sumovore.c: 476: }
  3955  001D00  D00C               	goto	l1285
  3956  001D02                     l1281:
  3957                           
  3958                           ;sumovore.c: 477: else if (count==15000u)
  3959  001D02  0E98               	movlw	152
  3960  001D04  180F               	xorwf	gtrap@count,w,c
  3961  001D06  E109               	bnz	l1285
  3962  001D08  0E3A               	movlw	58
  3963  001D0A  1810               	xorwf	gtrap@count+1,w,c
  3964  001D0C  1011               	iorwf	gtrap@count+2,w,c
  3965  001D0E  1012               	iorwf	gtrap@count+3,w,c
  3966  001D10  A4D8               	btfss	status,2,c
  3967  001D12  D003               	goto	l1285
  3968                           
  3969                           ;sumovore.c: 478: {
  3970                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  3971  001D14  8083               	bsf	3971,0,c	;volatile
  3972                           
  3973                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  3974  001D16  9283               	bcf	3971,1,c	;volatile
  3975  001D18  D000               	goto	l1285
  3976  001D1A                     l1285:
  3977                           
  3978                           ;sumovore.c: 481: }
  3979                           ;sumovore.c: 482: count++;
  3980  001D1A  0E01               	movlw	1
  3981  001D1C  260F               	addwf	gtrap@count,f,c
  3982  001D1E  0E00               	movlw	0
  3983  001D20  2210               	addwfc	gtrap@count+1,f,c
  3984  001D22  2211               	addwfc	gtrap@count+2,f,c
  3985  001D24  2212               	addwfc	gtrap@count+3,f,c
  3986  001D26  D7D8               	goto	l175
  3987  001D28  0012               	return		;funcret
  3988  001D2A                     __end_of_gtrap:
  3989                           	opt stack 0
  3990                           stkptr	equ	0xFFC
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           intcon	equ	0xFF2
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           indf1	equ	0xFE7
  3999                           postinc1	equ	0xFE6
  4000                           fsr1h	equ	0xFE2
  4001                           fsr1l	equ	0xFE1
  4002                           indf2	equ	0xFDF
  4003                           postinc2	equ	0xFDE
  4004                           plusw2	equ	0xFDB
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _GetBackonTrack *****************
  4010 ;; Defined at:
  4011 ;;		line 224 in file "../Robot Files/main2.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  error           2   48[COMRAM] PTR char 
  4014 ;;		 -> main@error(3), 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  i               2   52[COMRAM] unsigned int 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;Total ram usage:        6 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    5
  4033 ;; This function calls:
  4034 ;;		_MotorControl
  4035 ;;		_SharpTurn
  4036 ;;		_check_sensors
  4037 ;;		_motors_brake_all
  4038 ;;		_set_leds
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text34
  4045  001606                     __ptext34:
  4046                           	opt stack 0
  4047  001606                     _GetBackonTrack:
  4048                           	opt stack 25
  4049                           
  4050                           ;main2.c: 226: if((error[2]>1) || (error[1]>1) || CW_rotation_flag)
  4051                           
  4052                           ;incstack = 0
  4053  001606  EE20 F002          	lfsr	2,2
  4054  00160A  5031               	movf	GetBackonTrack@error,w,c
  4055  00160C  26D9               	addwf	fsr2l,f,c
  4056  00160E  5032               	movf	GetBackonTrack@error+1,w,c
  4057  001610  22DA               	addwfc	fsr2h,f,c
  4058  001612  50DF               	movf	indf2,w,c
  4059  001614  0A80               	xorlw	128
  4060  001616  0F7E               	addlw	-130
  4061  001618  B0D8               	btfsc	status,0,c
  4062  00161A  D00E               	goto	l2545
  4063  00161C  EE20 F001          	lfsr	2,1
  4064  001620  5031               	movf	GetBackonTrack@error,w,c
  4065  001622  26D9               	addwf	fsr2l,f,c
  4066  001624  5032               	movf	GetBackonTrack@error+1,w,c
  4067  001626  22DA               	addwfc	fsr2h,f,c
  4068  001628  50DF               	movf	indf2,w,c
  4069  00162A  0A80               	xorlw	128
  4070  00162C  0F7E               	addlw	-130
  4071  00162E  B0D8               	btfsc	status,0,c
  4072  001630  D003               	goto	l2545
  4073  001632  504C               	movf	_CW_rotation_flag,w,c
  4074  001634  B4D8               	btfsc	status,2,c
  4075  001636  D004               	goto	l2547
  4076  001638                     l2545:
  4077                           
  4078                           ;main2.c: 227: SharpTurn(CW);
  4079  001638  0E01               	movlw	1
  4080  00163A  ECC8  F00C         	call	_SharpTurn
  4081  00163E  D09B               	goto	l398
  4082  001640                     l2547:
  4083                           
  4084                           ;main2.c: 228: else if((error[2]<-1) || (error[1]<-1) || CCW_rotation_flag)
  4085  001640  EE20 F002          	lfsr	2,2
  4086  001644  5031               	movf	GetBackonTrack@error,w,c
  4087  001646  26D9               	addwf	fsr2l,f,c
  4088  001648  5032               	movf	GetBackonTrack@error+1,w,c
  4089  00164A  22DA               	addwfc	fsr2h,f,c
  4090  00164C  50DF               	movf	indf2,w,c
  4091  00164E  0A80               	xorlw	128
  4092  001650  0F81               	addlw	129
  4093  001652  A0D8               	btfss	status,0,c
  4094  001654  D00E               	goto	l2553
  4095  001656  EE20 F001          	lfsr	2,1
  4096  00165A  5031               	movf	GetBackonTrack@error,w,c
  4097  00165C  26D9               	addwf	fsr2l,f,c
  4098  00165E  5032               	movf	GetBackonTrack@error+1,w,c
  4099  001660  22DA               	addwfc	fsr2h,f,c
  4100  001662  50DF               	movf	indf2,w,c
  4101  001664  0A80               	xorlw	128
  4102  001666  0F81               	addlw	129
  4103  001668  A0D8               	btfss	status,0,c
  4104  00166A  D003               	goto	l2553
  4105  00166C  504B               	movf	_CCW_rotation_flag,w,c
  4106  00166E  B4D8               	btfsc	status,2,c
  4107  001670  D004               	goto	l2555
  4108  001672                     l2553:
  4109                           
  4110                           ;main2.c: 229: SharpTurn(CCW);
  4111  001672  0E00               	movlw	0
  4112  001674  ECC8  F00C         	call	_SharpTurn
  4113  001678  D07E               	goto	l398
  4114  00167A                     l2555:
  4115                           
  4116                           ;main2.c: 230: else
  4117                           ;main2.c: 231: {
  4118                           ;main2.c: 232: flag_counter = 0;
  4119  00167A  0E00               	movlw	0
  4120  00167C  6E51               	movwf	_flag_counter+1,c
  4121  00167E  0E00               	movlw	0
  4122  001680  6E50               	movwf	_flag_counter,c
  4123                           
  4124                           ;main2.c: 234: while (!SeeLine.B && (flag_counter < 16*TIME_OFF_TRACK_ms))
  4125  001682  D010               	goto	l2567
  4126  001684                     l2557:
  4127                           
  4128                           ;main2.c: 235: {
  4129                           ;main2.c: 236: check_sensors();
  4130  001684  ECBC  F00B         	call	_check_sensors	;wreg free
  4131                           
  4132                           ;main2.c: 237: set_leds();
  4133  001688  ECAE  F00D         	call	_set_leds	;wreg free
  4134                           
  4135                           ;main2.c: 238: MotorControl(0);
  4136  00168C  0E00               	movlw	0
  4137  00168E  6E25               	movwf	MotorControl@delta_velocity+1,c
  4138  001690  0E00               	movlw	0
  4139  001692  6E24               	movwf	MotorControl@delta_velocity,c
  4140  001694  EC7C  F009         	call	_MotorControl	;wreg free
  4141                           
  4142                           ;main2.c: 239: if(TMR0IF)
  4143  001698  A4F2               	btfss	intcon,2,c	;volatile
  4144  00169A  D004               	goto	l2567
  4145                           
  4146                           ;main2.c: 240: {
  4147                           ;main2.c: 241: flag_counter++;
  4148  00169C  4A50               	infsnz	_flag_counter,f,c
  4149  00169E  2A51               	incf	_flag_counter+1,f,c
  4150                           
  4151                           ;main2.c: 242: TMR0IF = 0;
  4152  0016A0  94F2               	bcf	intcon,2,c	;volatile
  4153  0016A2  D000               	goto	l2567
  4154  0016A4                     l2567:
  4155  0016A4  504D               	movf	_SeeLine,w,c
  4156  0016A6  0B1F               	andlw	31
  4157  0016A8  0900               	iorlw	0
  4158  0016AA  A4D8               	btfss	status,2,c
  4159  0016AC  D01D               	goto	l2571
  4160  0016AE  0E07               	movlw	low _TIME_OFF_TRACK_ms
  4161  0016B0  6EF6               	movwf	tblptrl,c
  4162  0016B2                     	if	1	;There is more than 1 active tblptr byte
  4163  0016B2  0E10               	movlw	high _TIME_OFF_TRACK_ms
  4164  0016B4  6EF7               	movwf	tblptrh,c
  4165  0016B6                     	endif
  4166  0016B6                     	if	1	;There are 3 active tblptr bytes
  4167  0016B6  0E00               	movlw	low (_TIME_OFF_TRACK_ms shr (0+16))
  4168  0016B8  6EF8               	movwf	tblptru,c
  4169  0016BA                     	endif
  4170  0016BA  0009               	tblrd		*+
  4171  0016BC  CFF5 F033          	movff	tablat,??_GetBackonTrack
  4172  0016C0  0009               	tblrd		*+
  4173  0016C2  CFF5 F034          	movff	tablat,??_GetBackonTrack+1
  4174  0016C6  3A33               	swapf	??_GetBackonTrack,f,c
  4175  0016C8  3A34               	swapf	??_GetBackonTrack+1,f,c
  4176  0016CA  0EF0               	movlw	240
  4177  0016CC  1634               	andwf	??_GetBackonTrack+1,f,c
  4178  0016CE  5033               	movf	??_GetBackonTrack,w,c
  4179  0016D0  0B0F               	andlw	15
  4180  0016D2  1234               	iorwf	??_GetBackonTrack+1,f,c
  4181  0016D4  0EF0               	movlw	240
  4182  0016D6  1633               	andwf	??_GetBackonTrack,f,c
  4183  0016D8  5033               	movf	??_GetBackonTrack,w,c
  4184  0016DA  5C50               	subwf	_flag_counter,w,c
  4185  0016DC  5034               	movf	??_GetBackonTrack+1,w,c
  4186  0016DE  5851               	subwfb	_flag_counter+1,w,c
  4187  0016E0  B0D8               	btfsc	status,0,c
  4188  0016E2  D002               	goto	l2571
  4189  0016E4  D7CF               	goto	l2557
  4190  0016E6  D000               	goto	l2571
  4191  0016E8                     l2571:
  4192                           
  4193                           ;main2.c: 243: }
  4194                           ;main2.c: 244: }
  4195                           ;main2.c: 246: if(!SeeLine.B)
  4196  0016E8  504D               	movf	_SeeLine,w,c
  4197  0016EA  0B1F               	andlw	31
  4198  0016EC  0900               	iorlw	0
  4199  0016EE  A4D8               	btfss	status,2,c
  4200  0016F0  D042               	goto	l398
  4201                           
  4202                           ;main2.c: 247: {
  4203                           ;main2.c: 248: motors_brake_all();
  4204  0016F2  ECE4  F00F         	call	_motors_brake_all	;wreg free
  4205                           
  4206                           ;main2.c: 249: _delay(50000);
  4207  0016F6  0E41               	movlw	65
  4208  0016F8  6E33               	movwf	??_GetBackonTrack& (0+255),c
  4209  0016FA  0EEE               	movlw	238
  4210  0016FC                     u2457:
  4211  0016FC  2EE8               	decfsz	wreg,f,c
  4212  0016FE  D7FE               	goto	u2457
  4213  001700  2E33               	decfsz	??_GetBackonTrack& (0+255),f,c
  4214  001702  D7FC               	goto	u2457
  4215  001704  D000               	nop2	
  4216                           
  4217                           ;main2.c: 250: MotorControl(1600);
  4218  001706  0E06               	movlw	6
  4219  001708  6E25               	movwf	MotorControl@delta_velocity+1,c
  4220  00170A  0E40               	movlw	64
  4221  00170C  6E24               	movwf	MotorControl@delta_velocity,c
  4222  00170E  EC7C  F009         	call	_MotorControl	;wreg free
  4223                           
  4224                           ;main2.c: 252: for(unsigned int i=0; i < TIME_TURN_ms; i++)
  4225  001712  0E00               	movlw	0
  4226  001714  6E36               	movwf	GetBackonTrack@i+1,c
  4227  001716  0E00               	movlw	0
  4228  001718  6E35               	movwf	GetBackonTrack@i,c
  4229  00171A                     l2581:
  4230  00171A  0E0D               	movlw	low _TIME_TURN_ms
  4231  00171C  6EF6               	movwf	tblptrl,c
  4232  00171E                     	if	1	;There is more than 1 active tblptr byte
  4233  00171E  0E10               	movlw	high _TIME_TURN_ms
  4234  001720  6EF7               	movwf	tblptrh,c
  4235  001722                     	endif
  4236  001722                     	if	1	;There are 3 active tblptr bytes
  4237  001722  0E00               	movlw	low (_TIME_TURN_ms shr (0+16))
  4238  001724  6EF8               	movwf	tblptru,c
  4239  001726                     	endif
  4240  001726  0009               	tblrd		*+
  4241  001728  50F5               	movf	tablat,w,c
  4242  00172A  5C35               	subwf	GetBackonTrack@i,w,c
  4243  00172C  0009               	tblrd		*+
  4244  00172E  50F5               	movf	tablat,w,c
  4245  001730  5836               	subwfb	GetBackonTrack@i+1,w,c
  4246  001732  B0D8               	btfsc	status,0,c
  4247  001734  D019               	goto	l2595
  4248  001736  D001               	goto	l2585
  4249  001738  D017               	goto	l2595
  4250  00173A                     l2585:
  4251                           
  4252                           ;main2.c: 253: _delay(7991);
  4253  00173A  0E0B               	movlw	11
  4254  00173C  6E33               	movwf	??_GetBackonTrack& (0+255),c
  4255  00173E  0E5F               	movlw	95
  4256  001740                     u2467:
  4257  001740  2EE8               	decfsz	wreg,f,c
  4258  001742  D7FE               	goto	u2467
  4259  001744  2E33               	decfsz	??_GetBackonTrack& (0+255),f,c
  4260  001746  D7FC               	goto	u2467
  4261  001748  D000               	nop2	
  4262  00174A  4A35               	infsnz	GetBackonTrack@i,f,c
  4263  00174C  2A36               	incf	GetBackonTrack@i+1,f,c
  4264  00174E  D7E5               	goto	l2581
  4265                           
  4266                           ;main2.c: 255: while (!SeeLine.B)
  4267  001750  D00B               	goto	l2595
  4268  001752                     l2591:
  4269                           
  4270                           ;main2.c: 256: {
  4271                           ;main2.c: 257: check_sensors();
  4272  001752  ECBC  F00B         	call	_check_sensors	;wreg free
  4273                           
  4274                           ;main2.c: 258: set_leds();
  4275  001756  ECAE  F00D         	call	_set_leds	;wreg free
  4276                           
  4277                           ;main2.c: 259: MotorControl(0);
  4278  00175A  0E00               	movlw	0
  4279  00175C  6E25               	movwf	MotorControl@delta_velocity+1,c
  4280  00175E  0E00               	movlw	0
  4281  001760  6E24               	movwf	MotorControl@delta_velocity,c
  4282  001762  EC7C  F009         	call	_MotorControl	;wreg free
  4283  001766  D000               	goto	l2595
  4284  001768                     l2595:
  4285  001768  504D               	movf	_SeeLine,w,c
  4286  00176A  0B1F               	andlw	31
  4287  00176C  0900               	iorlw	0
  4288  00176E  A4D8               	btfss	status,2,c
  4289  001770  D002               	goto	l398
  4290  001772  D7EF               	goto	l2591
  4291  001774  D000               	goto	l398
  4292  001776                     l398:
  4293  001776  0012               	return		;funcret
  4294  001778                     __end_of_GetBackonTrack:
  4295                           	opt stack 0
  4296                           stkptr	equ	0xFFC
  4297                           tblptru	equ	0xFF8
  4298                           tblptrh	equ	0xFF7
  4299                           tblptrl	equ	0xFF6
  4300                           tablat	equ	0xFF5
  4301                           intcon	equ	0xFF2
  4302                           postinc0	equ	0xFEE
  4303                           wreg	equ	0xFE8
  4304                           indf1	equ	0xFE7
  4305                           postinc1	equ	0xFE6
  4306                           fsr1h	equ	0xFE2
  4307                           fsr1l	equ	0xFE1
  4308                           indf2	equ	0xFDF
  4309                           postinc2	equ	0xFDE
  4310                           plusw2	equ	0xFDB
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function _SharpTurn *****************
  4316 ;; Defined at:
  4317 ;;		line 266 in file "../Robot Files/main2.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  direction       1    wreg     enum E4176
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  direction       1   45[COMRAM] enum E4176
  4322 ;;  delta_veloci    2   46[COMRAM] int 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;		None               void
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        4 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    4
  4339 ;; This function calls:
  4340 ;;		_MotorControl
  4341 ;;		_check_sensors
  4342 ;;		_motors_brake_all
  4343 ;;		_set_leds
  4344 ;; This function is called by:
  4345 ;;		_GetBackonTrack
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text35
  4350  001990                     __ptext35:
  4351                           	opt stack 0
  4352  001990                     _SharpTurn:
  4353                           	opt stack 25
  4354                           
  4355                           ;incstack = 0
  4356                           ;SharpTurn@direction stored from wreg
  4357  001990  6E2E               	movwf	SharpTurn@direction,c
  4358                           
  4359                           ;main2.c: 268: int delta_velocity;
  4360                           ;main2.c: 270: motors_brake_all();
  4361  001992  ECE4  F00F         	call	_motors_brake_all	;wreg free
  4362                           
  4363                           ;main2.c: 271: _delay(50000);
  4364  001996  0E41               	movlw	65
  4365  001998  6E2D               	movwf	??_SharpTurn& (0+255),c
  4366  00199A  0EEE               	movlw	238
  4367  00199C                     u2477:
  4368  00199C  2EE8               	decfsz	wreg,f,c
  4369  00199E  D7FE               	goto	u2477
  4370  0019A0  2E2D               	decfsz	??_SharpTurn& (0+255),f,c
  4371  0019A2  D7FC               	goto	u2477
  4372  0019A4  D000               	nop2	
  4373                           
  4374                           ;main2.c: 272: if(direction)
  4375  0019A6  502E               	movf	SharpTurn@direction,w,c
  4376  0019A8  B4D8               	btfsc	status,2,c
  4377  0019AA  D020               	goto	l2437
  4378                           
  4379                           ;main2.c: 273: {
  4380                           ;main2.c: 274: delta_velocity = 1600;
  4381  0019AC  0E06               	movlw	6
  4382  0019AE  6E30               	movwf	SharpTurn@delta_velocity+1,c
  4383  0019B0  0E40               	movlw	64
  4384  0019B2  6E2F               	movwf	SharpTurn@delta_velocity,c
  4385                           
  4386                           ;main2.c: 275: while (!SeeLine.b.CntLeft && delta_velocity)
  4387  0019B4  D010               	goto	l2431
  4388  0019B6                     l2423:
  4389                           
  4390                           ;main2.c: 277: {
  4391                           ;main2.c: 278: check_sensors();
  4392  0019B6  ECBC  F00B         	call	_check_sensors	;wreg free
  4393                           
  4394                           ;main2.c: 279: set_leds();
  4395  0019BA  ECAE  F00D         	call	_set_leds	;wreg free
  4396                           
  4397                           ;main2.c: 280: MotorControl(delta_velocity);
  4398  0019BE  C02F  F024         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4399  0019C2  C030  F025         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4400  0019C6  EC7C  F009         	call	_MotorControl	;wreg free
  4401                           
  4402                           ;main2.c: 281: if (SeeLine.b.Center)
  4403  0019CA  A44D               	btfss	_SeeLine,2,c
  4404  0019CC  D004               	goto	l2431
  4405                           
  4406                           ;main2.c: 282: delta_velocity--;
  4407  0019CE  062F               	decf	SharpTurn@delta_velocity,f,c
  4408  0019D0  A0D8               	btfss	status,0,c
  4409  0019D2  0630               	decf	SharpTurn@delta_velocity+1,f,c
  4410  0019D4  D000               	goto	l2431
  4411  0019D6                     l2431:
  4412  0019D6  B64D               	btfsc	_SeeLine,3,c
  4413  0019D8  D006               	goto	l2435
  4414  0019DA  502F               	movf	SharpTurn@delta_velocity,w,c
  4415  0019DC  1030               	iorwf	SharpTurn@delta_velocity+1,w,c
  4416  0019DE  B4D8               	btfsc	status,2,c
  4417  0019E0  D002               	goto	l2435
  4418  0019E2  D7E9               	goto	l2423
  4419  0019E4  D000               	goto	l2435
  4420  0019E6                     l2435:
  4421                           
  4422                           ;main2.c: 283: }
  4423                           ;main2.c: 284: CW_rotation_flag = 0;
  4424  0019E6  0E00               	movlw	0
  4425  0019E8  6E4C               	movwf	_CW_rotation_flag,c
  4426  0019EA  D01E               	goto	L8
  4427  0019EC                     l2437:
  4428                           
  4429                           ;main2.c: 287: else
  4430                           ;main2.c: 288: {
  4431                           ;main2.c: 289: delta_velocity = -1600;
  4432  0019EC  0EF9               	movlw	249
  4433  0019EE  6E30               	movwf	SharpTurn@delta_velocity+1,c
  4434  0019F0  0EC0               	movlw	192
  4435  0019F2  6E2F               	movwf	SharpTurn@delta_velocity,c
  4436                           
  4437                           ;main2.c: 290: while (!SeeLine.b.CntRight && delta_velocity)
  4438  0019F4  D00F               	goto	l2447
  4439  0019F6                     l2439:
  4440                           
  4441                           ;main2.c: 292: {
  4442                           ;main2.c: 293: check_sensors();
  4443  0019F6  ECBC  F00B         	call	_check_sensors	;wreg free
  4444                           
  4445                           ;main2.c: 294: set_leds();
  4446  0019FA  ECAE  F00D         	call	_set_leds	;wreg free
  4447                           
  4448                           ;main2.c: 295: MotorControl(delta_velocity);
  4449  0019FE  C02F  F024         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4450  001A02  C030  F025         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4451  001A06  EC7C  F009         	call	_MotorControl	;wreg free
  4452                           
  4453                           ;main2.c: 296: if (SeeLine.b.Center)
  4454  001A0A  A44D               	btfss	_SeeLine,2,c
  4455  001A0C  D003               	goto	l2447
  4456                           
  4457                           ;main2.c: 297: delta_velocity++;
  4458  001A0E  4A2F               	infsnz	SharpTurn@delta_velocity,f,c
  4459  001A10  2A30               	incf	SharpTurn@delta_velocity+1,f,c
  4460  001A12  D000               	goto	l2447
  4461  001A14                     l2447:
  4462  001A14  B24D               	btfsc	_SeeLine,1,c
  4463  001A16  D006               	goto	l2451
  4464  001A18  502F               	movf	SharpTurn@delta_velocity,w,c
  4465  001A1A  1030               	iorwf	SharpTurn@delta_velocity+1,w,c
  4466  001A1C  B4D8               	btfsc	status,2,c
  4467  001A1E  D002               	goto	l2451
  4468  001A20  D7EA               	goto	l2439
  4469  001A22  D000               	goto	l2451
  4470  001A24                     l2451:
  4471                           
  4472                           ;main2.c: 298: }
  4473                           ;main2.c: 299: CCW_rotation_flag = 0;
  4474  001A24  0E00               	movlw	0
  4475  001A26  6E4B               	movwf	_CCW_rotation_flag,c
  4476  001A28                     L8:
  4477                           
  4478                           ;main2.c: 300: flag_counter_enabled = 0;
  4479  001A28  0E00               	movlw	0
  4480  001A2A  6E4E               	movwf	_flag_counter_enabled,c
  4481                           
  4482                           ;main2.c: 301: }
  4483                           ;main2.c: 302: I = 0;
  4484  001A2C  0E00               	movlw	0
  4485  001A2E  6E46               	movwf	_I+1,c
  4486  001A30  0E00               	movlw	0
  4487  001A32  6E45               	movwf	_I,c
  4488  001A34  0012               	return		;funcret
  4489  001A36                     __end_of_SharpTurn:
  4490                           	opt stack 0
  4491                           stkptr	equ	0xFFC
  4492                           tblptru	equ	0xFF8
  4493                           tblptrh	equ	0xFF7
  4494                           tblptrl	equ	0xFF6
  4495                           tablat	equ	0xFF5
  4496                           intcon	equ	0xFF2
  4497                           postinc0	equ	0xFEE
  4498                           wreg	equ	0xFE8
  4499                           indf1	equ	0xFE7
  4500                           postinc1	equ	0xFE6
  4501                           fsr1h	equ	0xFE2
  4502                           fsr1l	equ	0xFE1
  4503                           indf2	equ	0xFDF
  4504                           postinc2	equ	0xFDE
  4505                           plusw2	equ	0xFDB
  4506                           fsr2h	equ	0xFDA
  4507                           fsr2l	equ	0xFD9
  4508                           status	equ	0xFD8
  4509                           
  4510 ;; *************** function _FilterNearbyTrack *****************
  4511 ;; Defined at:
  4512 ;;		line 333 in file "../Robot Files/main2.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;		None               void
  4519 ;; Registers used:
  4520 ;;		None
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text36
  4541  00204A                     __ptext36:
  4542                           	opt stack 0
  4543  00204A                     _FilterNearbyTrack:
  4544                           	opt stack 29
  4545                           
  4546                           ;main2.c: 337: if((SeeLine.b.Left && !SeeLine.b.CntLeft) && (SeeLine.b.Center || SeeLine
      +                          .b.CntRight))
  4547                           
  4548                           ;incstack = 0
  4549  00204A  B84D               	btfsc	_SeeLine,4,c
  4550  00204C  B64D               	btfsc	_SeeLine,3,c
  4551  00204E  D003               	goto	l431
  4552  002050  A44D               	btfss	_SeeLine,2,c
  4553  002052  B24D               	btfsc	_SeeLine,1,c
  4554                           
  4555                           ;main2.c: 338: SeeLine.b.Left = 0;
  4556  002054  984D               	bcf	_SeeLine,4,c
  4557  002056                     l431:
  4558                           
  4559                           ;main2.c: 342: if((SeeLine.b.Right && !SeeLine.b.CntRight) && (SeeLine.b.Center || SeeLi
      +                          ne.b.CntLeft))
  4560  002056  B04D               	btfsc	_SeeLine,0,c
  4561  002058  B24D               	btfsc	_SeeLine,1,c
  4562  00205A  D006               	goto	l437
  4563  00205C  B44D               	btfsc	_SeeLine,2,c
  4564  00205E  D002               	goto	l436
  4565  002060  A64D               	btfss	_SeeLine,3,c
  4566  002062  D002               	goto	l437
  4567  002064                     l436:
  4568                           
  4569                           ;main2.c: 343: SeeLine.b.Right = 0;
  4570  002064  904D               	bcf	_SeeLine,0,c
  4571  002066  D000               	goto	l437
  4572  002068                     l437:
  4573  002068  0012               	return		;funcret
  4574  00206A                     __end_of_FilterNearbyTrack:
  4575                           	opt stack 0
  4576                           stkptr	equ	0xFFC
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           intcon	equ	0xFF2
  4582                           postinc0	equ	0xFEE
  4583                           wreg	equ	0xFE8
  4584                           indf1	equ	0xFE7
  4585                           postinc1	equ	0xFE6
  4586                           fsr1h	equ	0xFE2
  4587                           fsr1l	equ	0xFE1
  4588                           indf2	equ	0xFDF
  4589                           postinc2	equ	0xFDE
  4590                           plusw2	equ	0xFDB
  4591                           fsr2h	equ	0xFDA
  4592                           fsr2l	equ	0xFD9
  4593                           status	equ	0xFD8
  4594                           
  4595 ;; *************** function _AllSensorsTriggered *****************
  4596 ;; Defined at:
  4597 ;;		line 306 in file "../Robot Files/main2.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;		None               void
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;Total ram usage:        3 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    4
  4618 ;; This function calls:
  4619 ;;		_MotorControl
  4620 ;;		_check_sensors
  4621 ;;		_motors_brake_all
  4622 ;;		_set_leds
  4623 ;; This function is called by:
  4624 ;;		_main
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text37
  4629  0018E8                     __ptext37:
  4630                           	opt stack 0
  4631  0018E8                     _AllSensorsTriggered:
  4632                           	opt stack 26
  4633                           
  4634                           ;main2.c: 308: flag_counter = 0;
  4635                           
  4636                           ;incstack = 0
  4637  0018E8  0E00               	movlw	0
  4638  0018EA  6E51               	movwf	_flag_counter+1,c
  4639  0018EC  0E00               	movlw	0
  4640  0018EE  6E50               	movwf	_flag_counter,c
  4641                           
  4642                           ;main2.c: 310: while (SeeLine.B=0b11111u && (flag_counter<16*TIME_ON_BLACK_ms))
  4643  0018F0  D010               	goto	l2609
  4644  0018F2                     l2599:
  4645                           
  4646                           ;main2.c: 311: {
  4647                           ;main2.c: 312: check_sensors();
  4648  0018F2  ECBC  F00B         	call	_check_sensors	;wreg free
  4649                           
  4650                           ;main2.c: 313: set_leds();
  4651  0018F6  ECAE  F00D         	call	_set_leds	;wreg free
  4652                           
  4653                           ;main2.c: 314: MotorControl(0);
  4654  0018FA  0E00               	movlw	0
  4655  0018FC  6E25               	movwf	MotorControl@delta_velocity+1,c
  4656  0018FE  0E00               	movlw	0
  4657  001900  6E24               	movwf	MotorControl@delta_velocity,c
  4658  001902  EC7C  F009         	call	_MotorControl	;wreg free
  4659                           
  4660                           ;main2.c: 315: if(TMR0IF)
  4661  001906  A4F2               	btfss	intcon,2,c	;volatile
  4662  001908  D004               	goto	l2609
  4663                           
  4664                           ;main2.c: 316: {
  4665                           ;main2.c: 317: flag_counter++;
  4666  00190A  4A50               	infsnz	_flag_counter,f,c
  4667  00190C  2A51               	incf	_flag_counter+1,f,c
  4668                           
  4669                           ;main2.c: 318: TMR0IF = 0;
  4670  00190E  94F2               	bcf	intcon,2,c	;volatile
  4671  001910  D000               	goto	l2609
  4672  001912                     l2609:
  4673  001912  0E00               	movlw	0
  4674  001914  6E2F               	movwf	_AllSensorsTriggered$1457,c
  4675  001916  0E09               	movlw	low _TIME_ON_BLACK_ms
  4676  001918  6EF6               	movwf	tblptrl,c
  4677  00191A                     	if	1	;There is more than 1 active tblptr byte
  4678  00191A  0E10               	movlw	high _TIME_ON_BLACK_ms
  4679  00191C  6EF7               	movwf	tblptrh,c
  4680  00191E                     	endif
  4681  00191E                     	if	1	;There are 3 active tblptr bytes
  4682  00191E  0E00               	movlw	low (_TIME_ON_BLACK_ms shr (0+16))
  4683  001920  6EF8               	movwf	tblptru,c
  4684  001922                     	endif
  4685  001922  0009               	tblrd		*+
  4686  001924  CFF5 F02D          	movff	tablat,??_AllSensorsTriggered
  4687  001928  0009               	tblrd		*+
  4688  00192A  CFF5 F02E          	movff	tablat,??_AllSensorsTriggered+1
  4689  00192E  3A2D               	swapf	??_AllSensorsTriggered,f,c
  4690  001930  3A2E               	swapf	??_AllSensorsTriggered+1,f,c
  4691  001932  0EF0               	movlw	240
  4692  001934  162E               	andwf	??_AllSensorsTriggered+1,f,c
  4693  001936  502D               	movf	??_AllSensorsTriggered,w,c
  4694  001938  0B0F               	andlw	15
  4695  00193A  122E               	iorwf	??_AllSensorsTriggered+1,f,c
  4696  00193C  0EF0               	movlw	240
  4697  00193E  162D               	andwf	??_AllSensorsTriggered,f,c
  4698  001940  502D               	movf	??_AllSensorsTriggered,w,c
  4699  001942  5C50               	subwf	_flag_counter,w,c
  4700  001944  502E               	movf	??_AllSensorsTriggered+1,w,c
  4701  001946  5851               	subwfb	_flag_counter+1,w,c
  4702  001948  B0D8               	btfsc	status,0,c
  4703  00194A  D003               	goto	l2615
  4704  00194C  0E01               	movlw	1
  4705  00194E  6E2F               	movwf	_AllSensorsTriggered$1457,c
  4706  001950  D000               	goto	l2615
  4707  001952                     l2615:
  4708  001952  504D               	movf	_SeeLine,w,c
  4709  001954  182F               	xorwf	_AllSensorsTriggered$1457,w,c
  4710  001956  0BE0               	andlw	-32
  4711  001958  182F               	xorwf	_AllSensorsTriggered$1457,w,c
  4712  00195A  6E4D               	movwf	_SeeLine,c
  4713  00195C  504D               	movf	_SeeLine,w,c
  4714  00195E  0B1F               	andlw	31
  4715  001960  0900               	iorlw	0
  4716  001962  A4D8               	btfss	status,2,c
  4717  001964  D7C6               	goto	l2599
  4718                           
  4719                           ;main2.c: 319: }
  4720                           ;main2.c: 320: }
  4721                           ;main2.c: 321: if (SeeLine.B=0b11111u)
  4722  001966  804D               	bsf	_SeeLine,0,c
  4723  001968  824D               	bsf	_SeeLine,1,c
  4724  00196A  844D               	bsf	_SeeLine,2,c
  4725  00196C  864D               	bsf	_SeeLine,3,c
  4726  00196E  884D               	bsf	_SeeLine,4,c
  4727                           
  4728                           ;main2.c: 322: {
  4729                           ;main2.c: 323: motors_brake_all();
  4730  001970  ECE4  F00F         	call	_motors_brake_all	;wreg free
  4731                           
  4732                           ;main2.c: 324: while (SeeLine.B=0b11111u)
  4733  001974  D005               	goto	l2621
  4734  001976                     l2619:
  4735                           
  4736                           ;main2.c: 325: {
  4737                           ;main2.c: 326: check_sensors();
  4738  001976  ECBC  F00B         	call	_check_sensors	;wreg free
  4739                           
  4740                           ;main2.c: 327: set_leds();
  4741  00197A  ECAE  F00D         	call	_set_leds	;wreg free
  4742  00197E  D000               	goto	l2621
  4743  001980                     l2621:
  4744  001980  804D               	bsf	_SeeLine,0,c
  4745  001982  824D               	bsf	_SeeLine,1,c
  4746  001984  844D               	bsf	_SeeLine,2,c
  4747  001986  864D               	bsf	_SeeLine,3,c
  4748  001988  884D               	bsf	_SeeLine,4,c
  4749  00198A  D7F5               	goto	l2619
  4750  00198C  D000               	goto	l428
  4751  00198E                     l428:
  4752  00198E  0012               	return		;funcret
  4753  001990                     __end_of_AllSensorsTriggered:
  4754                           	opt stack 0
  4755                           stkptr	equ	0xFFC
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           intcon	equ	0xFF2
  4761                           postinc0	equ	0xFEE
  4762                           wreg	equ	0xFE8
  4763                           indf1	equ	0xFE7
  4764                           postinc1	equ	0xFE6
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           indf2	equ	0xFDF
  4768                           postinc2	equ	0xFDE
  4769                           plusw2	equ	0xFDB
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774 ;; *************** function _set_leds *****************
  4775 ;; Defined at:
  4776 ;;		line 256 in file "../Robot Files/sumovore.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;		None               void
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        1 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_main
  4801 ;;		_GetBackonTrack
  4802 ;;		_SharpTurn
  4803 ;;		_AllSensorsTriggered
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text38
  4808  001B5C                     __ptext38:
  4809                           	opt stack 0
  4810  001B5C                     _set_leds:
  4811                           	opt stack 29
  4812                           
  4813                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4814                           
  4815                           ;incstack = 0
  4816  001B5C  B84D               	btfsc	_SeeLine,4,c
  4817  001B5E  D003               	goto	u1610
  4818  001B60  6A0F               	clrf	??_set_leds& (0+255),c
  4819  001B62  2A0F               	incf	??_set_leds& (0+255),f,c
  4820  001B64  D001               	goto	u1628
  4821  001B66                     u1610:
  4822  001B66  6A0F               	clrf	??_set_leds& (0+255),c
  4823  001B68                     u1628:
  4824  001B68  5083               	movf	3971,w,c	;volatile
  4825  001B6A  180F               	xorwf	??_set_leds,w,c
  4826  001B6C  0BFE               	andlw	-2
  4827  001B6E  180F               	xorwf	??_set_leds,w,c
  4828  001B70  6E83               	movwf	3971,c	;volatile
  4829                           
  4830                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  4831  001B72  B64D               	btfsc	_SeeLine,3,c
  4832  001B74  D003               	goto	u1630
  4833  001B76  6A0F               	clrf	??_set_leds& (0+255),c
  4834  001B78  2A0F               	incf	??_set_leds& (0+255),f,c
  4835  001B7A  D001               	goto	u1648
  4836  001B7C                     u1630:
  4837  001B7C  6A0F               	clrf	??_set_leds& (0+255),c
  4838  001B7E                     u1648:
  4839  001B7E  460F               	rlncf	??_set_leds,f,c
  4840  001B80  5083               	movf	3971,w,c	;volatile
  4841  001B82  180F               	xorwf	??_set_leds,w,c
  4842  001B84  0BFD               	andlw	-3
  4843  001B86  180F               	xorwf	??_set_leds,w,c
  4844  001B88  6E83               	movwf	3971,c	;volatile
  4845                           
  4846                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  4847  001B8A  B44D               	btfsc	_SeeLine,2,c
  4848  001B8C  D003               	goto	u1650
  4849  001B8E  6A0F               	clrf	??_set_leds& (0+255),c
  4850  001B90  2A0F               	incf	??_set_leds& (0+255),f,c
  4851  001B92  D001               	goto	u1668
  4852  001B94                     u1650:
  4853  001B94  6A0F               	clrf	??_set_leds& (0+255),c
  4854  001B96                     u1668:
  4855  001B96  460F               	rlncf	??_set_leds,f,c
  4856  001B98  460F               	rlncf	??_set_leds,f,c
  4857  001B9A  5083               	movf	3971,w,c	;volatile
  4858  001B9C  180F               	xorwf	??_set_leds,w,c
  4859  001B9E  0BFB               	andlw	-5
  4860  001BA0  180F               	xorwf	??_set_leds,w,c
  4861  001BA2  6E83               	movwf	3971,c	;volatile
  4862                           
  4863                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  4864  001BA4  B24D               	btfsc	_SeeLine,1,c
  4865  001BA6  D003               	goto	u1670
  4866  001BA8  6A0F               	clrf	??_set_leds& (0+255),c
  4867  001BAA  2A0F               	incf	??_set_leds& (0+255),f,c
  4868  001BAC  D001               	goto	u1688
  4869  001BAE                     u1670:
  4870  001BAE  6A0F               	clrf	??_set_leds& (0+255),c
  4871  001BB0                     u1688:
  4872  001BB0  460F               	rlncf	??_set_leds,f,c
  4873  001BB2  460F               	rlncf	??_set_leds,f,c
  4874  001BB4  460F               	rlncf	??_set_leds,f,c
  4875  001BB6  5083               	movf	3971,w,c	;volatile
  4876  001BB8  180F               	xorwf	??_set_leds,w,c
  4877  001BBA  0BF7               	andlw	-9
  4878  001BBC  180F               	xorwf	??_set_leds,w,c
  4879  001BBE  6E83               	movwf	3971,c	;volatile
  4880                           
  4881                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  4882  001BC0  B04D               	btfsc	_SeeLine,0,c
  4883  001BC2  D003               	goto	u1690
  4884  001BC4  6A0F               	clrf	??_set_leds& (0+255),c
  4885  001BC6  2A0F               	incf	??_set_leds& (0+255),f,c
  4886  001BC8  D001               	goto	u1708
  4887  001BCA                     u1690:
  4888  001BCA  6A0F               	clrf	??_set_leds& (0+255),c
  4889  001BCC                     u1708:
  4890  001BCC  3A0F               	swapf	??_set_leds,f,c
  4891  001BCE  5083               	movf	3971,w,c	;volatile
  4892  001BD0  180F               	xorwf	??_set_leds,w,c
  4893  001BD2  0BEF               	andlw	-17
  4894  001BD4  180F               	xorwf	??_set_leds,w,c
  4895  001BD6  6E83               	movwf	3971,c	;volatile
  4896  001BD8  0012               	return		;funcret
  4897  001BDA                     __end_of_set_leds:
  4898                           	opt stack 0
  4899                           stkptr	equ	0xFFC
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           intcon	equ	0xFF2
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           indf1	equ	0xFE7
  4908                           postinc1	equ	0xFE6
  4909                           fsr1h	equ	0xFE2
  4910                           fsr1l	equ	0xFE1
  4911                           indf2	equ	0xFDF
  4912                           postinc2	equ	0xFDE
  4913                           plusw2	equ	0xFDB
  4914                           fsr2h	equ	0xFDA
  4915                           fsr2l	equ	0xFD9
  4916                           status	equ	0xFD8
  4917                           
  4918 ;; *************** function _motors_brake_all *****************
  4919 ;; Defined at:
  4920 ;;		line 219 in file "../Robot Files/sumovore.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:        0 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    2
  4941 ;; This function calls:
  4942 ;;		_SetDCPWM1
  4943 ;;		_SetDCPWM2
  4944 ;; This function is called by:
  4945 ;;		_GetBackonTrack
  4946 ;;		_SharpTurn
  4947 ;;		_AllSensorsTriggered
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text39
  4952  001FC8                     __ptext39:
  4953                           	opt stack 0
  4954  001FC8                     _motors_brake_all:
  4955                           	opt stack 27
  4956                           
  4957                           ;sumovore.c: 221: SetDCPWM1(800u );
  4958                           
  4959                           ;incstack = 0
  4960  001FC8  0E03               	movlw	3
  4961  001FCA  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  4962  001FCC  0E20               	movlw	32
  4963  001FCE  6E0F               	movwf	SetDCPWM1@dutycycle,c
  4964  001FD0  EC30  F00F         	call	_SetDCPWM1	;wreg free
  4965                           
  4966                           ;sumovore.c: 222: SetDCPWM2(800u );
  4967  001FD4  0E03               	movlw	3
  4968  001FD6  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  4969  001FD8  0E20               	movlw	32
  4970  001FDA  6E0F               	movwf	SetDCPWM2@dutycycle,c
  4971  001FDC  EC13  F00F         	call	_SetDCPWM2	;wreg free
  4972                           
  4973                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  4974  001FE0  9284               	bcf	3972,1,c	;volatile
  4975                           
  4976                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  4977  001FE2  9082               	bcf	3970,0,c	;volatile
  4978                           
  4979                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  4980  001FE4  9084               	bcf	3972,0,c	;volatile
  4981                           
  4982                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  4983  001FE6  9A82               	bcf	3970,5,c	;volatile
  4984  001FE8  0012               	return		;funcret
  4985  001FEA                     __end_of_motors_brake_all:
  4986                           	opt stack 0
  4987                           stkptr	equ	0xFFC
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           intcon	equ	0xFF2
  4993                           postinc0	equ	0xFEE
  4994                           wreg	equ	0xFE8
  4995                           indf1	equ	0xFE7
  4996                           postinc1	equ	0xFE6
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           indf2	equ	0xFDF
  5000                           postinc2	equ	0xFDE
  5001                           plusw2	equ	0xFDB
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _check_sensors *****************
  5007 ;; Defined at:
  5008 ;;		line 242 in file "../Robot Files/sumovore.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;		None               void
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;Total ram usage:        1 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    3
  5029 ;; This function calls:
  5030 ;;		_adc
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;;		_GetBackonTrack
  5034 ;;		_SharpTurn
  5035 ;;		_AllSensorsTriggered
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text40
  5040  001778                     __ptext40:
  5041                           	opt stack 0
  5042  001778                     _check_sensors:
  5043                           	opt stack 27
  5044                           
  5045                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5046                           
  5047                           ;incstack = 0
  5048  001778  0E87               	movlw	135
  5049  00177A  EC96  F00F         	call	_adc
  5050  00177E  5013               	movf	?_adc,w,c
  5051  001780  5C49               	subwf	_threshold,w,c
  5052  001782  5014               	movf	?_adc+1,w,c
  5053  001784  584A               	subwfb	_threshold+1,w,c
  5054  001786  B0D8               	btfsc	status,0,c
  5055  001788  D003               	goto	u1510
  5056  00178A  6A16               	clrf	??_check_sensors& (0+255),c
  5057  00178C  2A16               	incf	??_check_sensors& (0+255),f,c
  5058  00178E  D001               	goto	u1528
  5059  001790                     u1510:
  5060  001790  6A16               	clrf	??_check_sensors& (0+255),c
  5061  001792                     u1528:
  5062  001792  3A16               	swapf	??_check_sensors,f,c
  5063  001794  504D               	movf	_SeeLine,w,c
  5064  001796  1816               	xorwf	??_check_sensors,w,c
  5065  001798  0BEF               	andlw	-17
  5066  00179A  1816               	xorwf	??_check_sensors,w,c
  5067  00179C  6E4D               	movwf	_SeeLine,c
  5068                           
  5069                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5070  00179E  0E8F               	movlw	143
  5071  0017A0  EC96  F00F         	call	_adc
  5072  0017A4  5013               	movf	?_adc,w,c
  5073  0017A6  5C49               	subwf	_threshold,w,c
  5074  0017A8  5014               	movf	?_adc+1,w,c
  5075  0017AA  584A               	subwfb	_threshold+1,w,c
  5076  0017AC  B0D8               	btfsc	status,0,c
  5077  0017AE  D003               	goto	u1530
  5078  0017B0  6A16               	clrf	??_check_sensors& (0+255),c
  5079  0017B2  2A16               	incf	??_check_sensors& (0+255),f,c
  5080  0017B4  D001               	goto	u1548
  5081  0017B6                     u1530:
  5082  0017B6  6A16               	clrf	??_check_sensors& (0+255),c
  5083  0017B8                     u1548:
  5084  0017B8  4616               	rlncf	??_check_sensors,f,c
  5085  0017BA  4616               	rlncf	??_check_sensors,f,c
  5086  0017BC  4616               	rlncf	??_check_sensors,f,c
  5087  0017BE  504D               	movf	_SeeLine,w,c
  5088  0017C0  1816               	xorwf	??_check_sensors,w,c
  5089  0017C2  0BF7               	andlw	-9
  5090  0017C4  1816               	xorwf	??_check_sensors,w,c
  5091  0017C6  6E4D               	movwf	_SeeLine,c
  5092                           
  5093                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5094  0017C8  0E97               	movlw	151
  5095  0017CA  EC96  F00F         	call	_adc
  5096  0017CE  5013               	movf	?_adc,w,c
  5097  0017D0  5C49               	subwf	_threshold,w,c
  5098  0017D2  5014               	movf	?_adc+1,w,c
  5099  0017D4  584A               	subwfb	_threshold+1,w,c
  5100  0017D6  B0D8               	btfsc	status,0,c
  5101  0017D8  D003               	goto	u1550
  5102  0017DA  6A16               	clrf	??_check_sensors& (0+255),c
  5103  0017DC  2A16               	incf	??_check_sensors& (0+255),f,c
  5104  0017DE  D001               	goto	u1568
  5105  0017E0                     u1550:
  5106  0017E0  6A16               	clrf	??_check_sensors& (0+255),c
  5107  0017E2                     u1568:
  5108  0017E2  4616               	rlncf	??_check_sensors,f,c
  5109  0017E4  4616               	rlncf	??_check_sensors,f,c
  5110  0017E6  504D               	movf	_SeeLine,w,c
  5111  0017E8  1816               	xorwf	??_check_sensors,w,c
  5112  0017EA  0BFB               	andlw	-5
  5113  0017EC  1816               	xorwf	??_check_sensors,w,c
  5114  0017EE  6E4D               	movwf	_SeeLine,c
  5115                           
  5116                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5117  0017F0  0E9F               	movlw	159
  5118  0017F2  EC96  F00F         	call	_adc
  5119  0017F6  5013               	movf	?_adc,w,c
  5120  0017F8  5C49               	subwf	_threshold,w,c
  5121  0017FA  5014               	movf	?_adc+1,w,c
  5122  0017FC  584A               	subwfb	_threshold+1,w,c
  5123  0017FE  B0D8               	btfsc	status,0,c
  5124  001800  D003               	goto	u1570
  5125  001802  6A16               	clrf	??_check_sensors& (0+255),c
  5126  001804  2A16               	incf	??_check_sensors& (0+255),f,c
  5127  001806  D001               	goto	u1588
  5128  001808                     u1570:
  5129  001808  6A16               	clrf	??_check_sensors& (0+255),c
  5130  00180A                     u1588:
  5131  00180A  4616               	rlncf	??_check_sensors,f,c
  5132  00180C  504D               	movf	_SeeLine,w,c
  5133  00180E  1816               	xorwf	??_check_sensors,w,c
  5134  001810  0BFD               	andlw	-3
  5135  001812  1816               	xorwf	??_check_sensors,w,c
  5136  001814  6E4D               	movwf	_SeeLine,c
  5137                           
  5138                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5139  001816  0EA7               	movlw	167
  5140  001818  EC96  F00F         	call	_adc
  5141  00181C  5013               	movf	?_adc,w,c
  5142  00181E  5C49               	subwf	_threshold,w,c
  5143  001820  5014               	movf	?_adc+1,w,c
  5144  001822  584A               	subwfb	_threshold+1,w,c
  5145  001824  B0D8               	btfsc	status,0,c
  5146  001826  D003               	goto	u1590
  5147  001828  6A16               	clrf	??_check_sensors& (0+255),c
  5148  00182A  2A16               	incf	??_check_sensors& (0+255),f,c
  5149  00182C  D001               	goto	u1608
  5150  00182E                     u1590:
  5151  00182E  6A16               	clrf	??_check_sensors& (0+255),c
  5152  001830                     u1608:
  5153  001830  504D               	movf	_SeeLine,w,c
  5154  001832  1816               	xorwf	??_check_sensors,w,c
  5155  001834  0BFE               	andlw	-2
  5156  001836  1816               	xorwf	??_check_sensors,w,c
  5157  001838  6E4D               	movwf	_SeeLine,c
  5158  00183A  0012               	return		;funcret
  5159  00183C                     __end_of_check_sensors:
  5160                           	opt stack 0
  5161                           stkptr	equ	0xFFC
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           intcon	equ	0xFF2
  5167                           postinc0	equ	0xFEE
  5168                           wreg	equ	0xFE8
  5169                           indf1	equ	0xFE7
  5170                           postinc1	equ	0xFE6
  5171                           fsr1h	equ	0xFE2
  5172                           fsr1l	equ	0xFE1
  5173                           indf2	equ	0xFDF
  5174                           postinc2	equ	0xFDE
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _adc *****************
  5181 ;; Defined at:
  5182 ;;		line 230 in file "../Robot Files/sumovore.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  channel         1    wreg     unsigned char 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  channel         1   20[COMRAM] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  2   18[COMRAM] unsigned int 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;Total ram usage:        3 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    2
  5203 ;; This function calls:
  5204 ;;		_BusyADC
  5205 ;;		_ConvertADC
  5206 ;;		_ReadADC
  5207 ;;		_SetChanADC
  5208 ;; This function is called by:
  5209 ;;		_check_sensors
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text41
  5214  001F2C                     __ptext41:
  5215                           	opt stack 0
  5216  001F2C                     _adc:
  5217                           	opt stack 27
  5218                           
  5219                           ;incstack = 0
  5220                           ;adc@channel stored from wreg
  5221  001F2C  6E15               	movwf	adc@channel,c
  5222                           
  5223                           ;sumovore.c: 232: SetChanADC( channel );
  5224  001F2E  5015               	movf	adc@channel,w,c
  5225  001F30  EC85  F010         	call	_SetChanADC
  5226                           
  5227                           ;sumovore.c: 233: ConvertADC();
  5228  001F34  ECD6  F010         	call	_ConvertADC	;wreg free
  5229                           
  5230                           ;sumovore.c: 234: while( BusyADC() );
  5231  001F38  D000               	goto	l2123
  5232  001F3A                     l2123:
  5233  001F3A  ECBA  F010         	call	_BusyADC	;wreg free
  5234  001F3E  0900               	iorlw	0
  5235  001F40  A4D8               	btfss	status,2,c
  5236  001F42  D7FB               	goto	l2123
  5237                           
  5238                           ;sumovore.c: 236: return ReadADC();
  5239  001F44  ECAB  F010         	call	_ReadADC	;wreg free
  5240  001F48  C00F  F013         	movff	?_ReadADC,?_adc
  5241  001F4C  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5242  001F50  D000               	goto	l128
  5243  001F52                     l128:
  5244  001F52  0012               	return		;funcret
  5245  001F54                     __end_of_adc:
  5246                           	opt stack 0
  5247                           stkptr	equ	0xFFC
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           intcon	equ	0xFF2
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           indf1	equ	0xFE7
  5256                           postinc1	equ	0xFE6
  5257                           fsr1h	equ	0xFE2
  5258                           fsr1l	equ	0xFE1
  5259                           indf2	equ	0xFDF
  5260                           postinc2	equ	0xFDE
  5261                           plusw2	equ	0xFDB
  5262                           fsr2h	equ	0xFDA
  5263                           fsr2l	equ	0xFD9
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function _SetChanADC *****************
  5267 ;; Defined at:
  5268 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  channel         1    wreg     unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  channel         1   15[COMRAM] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;Total ram usage:        2 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    1
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_adc
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text42
  5297  00210A                     __ptext42:
  5298                           	opt stack 0
  5299  00210A                     _SetChanADC:
  5300                           	opt stack 27
  5301                           
  5302                           ;incstack = 0
  5303                           ;SetChanADC@channel stored from wreg
  5304  00210A  6E10               	movwf	SetChanADC@channel,c
  5305  00210C  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5306  002110  0EC3               	movlw	195
  5307  002112  160F               	andwf	??_SetChanADC,f,c
  5308  002114  90D8               	bcf	status,0,c
  5309  002116  3010               	rrcf	SetChanADC@channel,w,c
  5310  002118  0B3C               	andlw	60
  5311  00211A  100F               	iorwf	??_SetChanADC,w,c
  5312  00211C  6EC2               	movwf	4034,c	;volatile
  5313  00211E  0012               	return		;funcret
  5314  002120                     __end_of_SetChanADC:
  5315                           	opt stack 0
  5316                           stkptr	equ	0xFFC
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           intcon	equ	0xFF2
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           indf1	equ	0xFE7
  5325                           postinc1	equ	0xFE6
  5326                           fsr1h	equ	0xFE2
  5327                           fsr1l	equ	0xFE1
  5328                           indf2	equ	0xFDF
  5329                           postinc2	equ	0xFDE
  5330                           plusw2	equ	0xFDB
  5331                           fsr2h	equ	0xFDA
  5332                           fsr2l	equ	0xFD9
  5333                           status	equ	0xFD8
  5334                           
  5335 ;; *************** function _ReadADC *****************
  5336 ;; Defined at:
  5337 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2   14[COMRAM] int 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        4 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_adc
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text43
  5366  002156                     __ptext43:
  5367                           	opt stack 0
  5368  002156                     _ReadADC:
  5369                           	opt stack 27
  5370                           
  5371                           ;incstack = 0
  5372  002156  50C4               	movf	4036,w,c	;volatile
  5373  002158  6E11               	movwf	??_ReadADC& (0+255),c
  5374  00215A  50C3               	movf	4035,w,c	;volatile
  5375  00215C  6E0F               	movwf	?_ReadADC,c
  5376  00215E  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5377  002162  D000               	goto	l482
  5378  002164                     l482:
  5379  002164  0012               	return		;funcret
  5380  002166                     __end_of_ReadADC:
  5381                           	opt stack 0
  5382                           stkptr	equ	0xFFC
  5383                           tblptru	equ	0xFF8
  5384                           tblptrh	equ	0xFF7
  5385                           tblptrl	equ	0xFF6
  5386                           tablat	equ	0xFF5
  5387                           intcon	equ	0xFF2
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           indf1	equ	0xFE7
  5391                           postinc1	equ	0xFE6
  5392                           fsr1h	equ	0xFE2
  5393                           fsr1l	equ	0xFE1
  5394                           indf2	equ	0xFDF
  5395                           postinc2	equ	0xFDE
  5396                           plusw2	equ	0xFDB
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _ConvertADC *****************
  5402 ;; Defined at:
  5403 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;		None               void
  5410 ;; Registers used:
  5411 ;;		None
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_adc
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text44
  5432  0021AC                     __ptext44:
  5433                           	opt stack 0
  5434  0021AC                     _ConvertADC:
  5435                           	opt stack 27
  5436                           
  5437                           ;incstack = 0
  5438  0021AC  82C2               	bsf	4034,1,c	;volatile
  5439  0021AE  0012               	return		;funcret
  5440  0021B0                     __end_of_ConvertADC:
  5441                           	opt stack 0
  5442                           stkptr	equ	0xFFC
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           intcon	equ	0xFF2
  5448                           postinc0	equ	0xFEE
  5449                           wreg	equ	0xFE8
  5450                           indf1	equ	0xFE7
  5451                           postinc1	equ	0xFE6
  5452                           fsr1h	equ	0xFE2
  5453                           fsr1l	equ	0xFE1
  5454                           indf2	equ	0xFDF
  5455                           postinc2	equ	0xFDE
  5456                           plusw2	equ	0xFDB
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function _BusyADC *****************
  5462 ;; Defined at:
  5463 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      unsigned char 
  5470 ;; Registers used:
  5471 ;;		wreg
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    1
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_adc
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text45
  5492  002174                     __ptext45:
  5493                           	opt stack 0
  5494  002174                     _BusyADC:
  5495                           	opt stack 27
  5496                           
  5497                           ;incstack = 0
  5498  002174  A2C2               	btfss	4034,1,c	;volatile
  5499  002176  D002               	goto	u1400
  5500  002178  0E01               	movlw	1
  5501  00217A  D002               	goto	l452
  5502  00217C                     u1400:
  5503  00217C  0E00               	movlw	0
  5504  00217E  D000               	goto	l452
  5505  002180                     l452:
  5506  002180  0012               	return		;funcret
  5507  002182                     __end_of_BusyADC:
  5508                           	opt stack 0
  5509                           stkptr	equ	0xFFC
  5510                           tblptru	equ	0xFF8
  5511                           tblptrh	equ	0xFF7
  5512                           tblptrl	equ	0xFF6
  5513                           tablat	equ	0xFF5
  5514                           intcon	equ	0xFF2
  5515                           postinc0	equ	0xFEE
  5516                           wreg	equ	0xFE8
  5517                           indf1	equ	0xFE7
  5518                           postinc1	equ	0xFE6
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           plusw2	equ	0xFDB
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _MotorControl *****************
  5529 ;; Defined at:
  5530 ;;		line 175 in file "../Robot Files/main2.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  delta_veloci    2   35[COMRAM] int 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  right_duty_c    2   42[COMRAM] int 
  5535 ;;  left_duty_cy    2   40[COMRAM] int 
  5536 ;;  right_dir_mo    1   39[COMRAM] enum E4176
  5537 ;;  left_dir_mod    1   38[COMRAM] enum E4176
  5538 ;; Return value:  Size  Location     Type
  5539 ;;		None               void
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;Total ram usage:        9 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    2
  5554 ;; This function calls:
  5555 ;;		_SetDCPWM1
  5556 ;;		_SetDCPWM2
  5557 ;;		___awdiv
  5558 ;;		___wmul
  5559 ;; This function is called by:
  5560 ;;		_PID_LineFollowing
  5561 ;;		_GetBackonTrack
  5562 ;;		_SharpTurn
  5563 ;;		_AllSensorsTriggered
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text46
  5568  0012F8                     __ptext46:
  5569                           	opt stack 0
  5570  0012F8                     _MotorControl:
  5571                           	opt stack 27
  5572                           
  5573                           ;main2.c: 177: int left_duty_cycle = 700, right_duty_cycle = 700;
  5574                           
  5575                           ;incstack = 0
  5576  0012F8  0E02               	movlw	2
  5577  0012FA  6E2A               	movwf	MotorControl@left_duty_cycle+1,c
  5578  0012FC  0EBC               	movlw	188
  5579  0012FE  6E29               	movwf	MotorControl@left_duty_cycle,c
  5580  001300  0E02               	movlw	2
  5581  001302  6E2C               	movwf	MotorControl@right_duty_cycle+1,c
  5582  001304  0EBC               	movlw	188
  5583  001306  6E2B               	movwf	MotorControl@right_duty_cycle,c
  5584                           
  5585                           ;main2.c: 178: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5586  001308  0E01               	movlw	1
  5587  00130A  6E27               	movwf	MotorControl@left_dir_modifier,c
  5588  00130C  0E01               	movlw	1
  5589  00130E  6E28               	movwf	MotorControl@right_dir_modifier,c
  5590                           
  5591                           ;main2.c: 181: if ( delta_velocity < 0 )
  5592  001310  AE25               	btfss	MotorControl@delta_velocity+1,7,c
  5593  001312  D023               	goto	l2299
  5594                           
  5595                           ;main2.c: 182: {
  5596                           ;main2.c: 183: left_duty_cycle += delta_velocity*15/16;
  5597  001314  C024  F016         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5598  001318  C025  F017         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5599  00131C  0E00               	movlw	0
  5600  00131E  6E19               	movwf	___wmul@multiplicand+1,c
  5601  001320  0E0F               	movlw	15
  5602  001322  6E18               	movwf	___wmul@multiplicand,c
  5603  001324  ECAA  F00F         	call	___wmul	;wreg free
  5604  001328  C016  F01C         	movff	?___wmul,___awdiv@dividend
  5605  00132C  C017  F01D         	movff	?___wmul+1,___awdiv@dividend+1
  5606  001330  0E00               	movlw	0
  5607  001332  6E1F               	movwf	___awdiv@divisor+1,c
  5608  001334  0E10               	movlw	16
  5609  001336  6E1E               	movwf	___awdiv@divisor,c
  5610  001338  EC1B  F00D         	call	___awdiv	;wreg free
  5611  00133C  501C               	movf	?___awdiv,w,c
  5612  00133E  2629               	addwf	MotorControl@left_duty_cycle,f,c
  5613  001340  501D               	movf	?___awdiv+1,w,c
  5614  001342  222A               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5615                           
  5616                           ;main2.c: 184: right_duty_cycle -= delta_velocity/16;
  5617  001344  C024  F01C         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5618  001348  C025  F01D         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5619  00134C  0E00               	movlw	0
  5620  00134E  6E1F               	movwf	___awdiv@divisor+1,c
  5621  001350  0E10               	movlw	16
  5622  001352  6E1E               	movwf	___awdiv@divisor,c
  5623  001354  EC1B  F00D         	call	___awdiv	;wreg free
  5624  001358  D022               	goto	L9
  5625  00135A                     l2299:
  5626                           
  5627                           ;main2.c: 187: else
  5628                           ;main2.c: 188: {
  5629                           ;main2.c: 189: left_duty_cycle += delta_velocity/16;
  5630  00135A  C024  F01C         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5631  00135E  C025  F01D         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5632  001362  0E00               	movlw	0
  5633  001364  6E1F               	movwf	___awdiv@divisor+1,c
  5634  001366  0E10               	movlw	16
  5635  001368  6E1E               	movwf	___awdiv@divisor,c
  5636  00136A  EC1B  F00D         	call	___awdiv	;wreg free
  5637  00136E  501C               	movf	?___awdiv,w,c
  5638  001370  2629               	addwf	MotorControl@left_duty_cycle,f,c
  5639  001372  501D               	movf	?___awdiv+1,w,c
  5640  001374  222A               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5641                           
  5642                           ;main2.c: 190: right_duty_cycle -= delta_velocity*15/16;
  5643  001376  C024  F016         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5644  00137A  C025  F017         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5645  00137E  0E00               	movlw	0
  5646  001380  6E19               	movwf	___wmul@multiplicand+1,c
  5647  001382  0E0F               	movlw	15
  5648  001384  6E18               	movwf	___wmul@multiplicand,c
  5649  001386  ECAA  F00F         	call	___wmul	;wreg free
  5650  00138A  C016  F01C         	movff	?___wmul,___awdiv@dividend
  5651  00138E  C017  F01D         	movff	?___wmul+1,___awdiv@dividend+1
  5652  001392  0E00               	movlw	0
  5653  001394  6E1F               	movwf	___awdiv@divisor+1,c
  5654  001396  0E10               	movlw	16
  5655  001398  6E1E               	movwf	___awdiv@divisor,c
  5656  00139A  EC1B  F00D         	call	___awdiv	;wreg free
  5657  00139E                     L9:
  5658  00139E  501C               	movf	?___awdiv,w,c
  5659  0013A0  5E2B               	subwf	MotorControl@right_duty_cycle,f,c
  5660  0013A2  501D               	movf	?___awdiv+1,w,c
  5661  0013A4  5A2C               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5662  0013A6  D000               	goto	l2303
  5663  0013A8                     l2303:
  5664                           
  5665                           ;main2.c: 191: }
  5666                           ;main2.c: 197: if ( left_duty_cycle < 0 )
  5667  0013A8  AE2A               	btfss	MotorControl@left_duty_cycle+1,7,c
  5668  0013AA  D010               	goto	l2309
  5669                           
  5670                           ;main2.c: 198: {
  5671                           ;main2.c: 199: left_dir_modifier = reverse;
  5672  0013AC  0E00               	movlw	0
  5673  0013AE  6E27               	movwf	MotorControl@left_dir_modifier,c
  5674                           
  5675                           ;main2.c: 200: left_duty_cycle *= -1;
  5676  0013B0  C029  F016         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5677  0013B4  C02A  F017         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5678  0013B8  0EFF               	movlw	255
  5679  0013BA  6E19               	movwf	___wmul@multiplicand+1,c
  5680  0013BC  6818               	setf	___wmul@multiplicand,c
  5681  0013BE  ECAA  F00F         	call	___wmul	;wreg free
  5682  0013C2  C016  F029         	movff	?___wmul,MotorControl@left_duty_cycle
  5683  0013C6  C017  F02A         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5684  0013CA  D000               	goto	l2309
  5685  0013CC                     l2309:
  5686                           
  5687                           ;main2.c: 201: }
  5688                           ;main2.c: 202: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5689  0013CC  BE2A               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5690  0013CE  D00B               	goto	l2313
  5691  0013D0  0E21               	movlw	33
  5692  0013D2  5C29               	subwf	MotorControl@left_duty_cycle,w,c
  5693  0013D4  0E03               	movlw	3
  5694  0013D6  582A               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5695  0013D8  A0D8               	btfss	status,0,c
  5696  0013DA  D005               	goto	l2313
  5697  0013DC  0E03               	movlw	3
  5698  0013DE  6E2A               	movwf	MotorControl@left_duty_cycle+1,c
  5699  0013E0  0E20               	movlw	32
  5700  0013E2  6E29               	movwf	MotorControl@left_duty_cycle,c
  5701  0013E4  D000               	goto	l2313
  5702  0013E6                     l2313:
  5703                           
  5704                           ;main2.c: 204: SetDCPWM2((unsigned int) left_duty_cycle );
  5705  0013E6  C029  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5706  0013EA  C02A  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5707  0013EE  EC13  F00F         	call	_SetDCPWM2	;wreg free
  5708                           
  5709                           ;main2.c: 205: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5710  0013F2  5027               	movf	MotorControl@left_dir_modifier,w,c
  5711  0013F4  A4D8               	btfss	status,2,c
  5712  0013F6  D002               	goto	l369
  5713  0013F8  9082               	bcf	3970,0,c	;volatile
  5714  0013FA  D002               	goto	l2319
  5715  0013FC                     l369:
  5716                           
  5717                           ;main2.c: 206: else PORTCbits.RC0 = 0b1;
  5718  0013FC  8082               	bsf	3970,0,c	;volatile
  5719  0013FE  D000               	goto	l2319
  5720  001400                     l2319:
  5721                           
  5722                           ;main2.c: 207: PORTEbits.RE1 = !PORTCbits.RC0;
  5723  001400  B082               	btfsc	3970,0,c	;volatile
  5724  001402  D003               	goto	u1780
  5725  001404  6A26               	clrf	??_MotorControl& (0+255),c
  5726  001406  2A26               	incf	??_MotorControl& (0+255),f,c
  5727  001408  D001               	goto	u1798
  5728  00140A                     u1780:
  5729  00140A  6A26               	clrf	??_MotorControl& (0+255),c
  5730  00140C                     u1798:
  5731  00140C  4626               	rlncf	??_MotorControl,f,c
  5732  00140E  5084               	movf	3972,w,c	;volatile
  5733  001410  1826               	xorwf	??_MotorControl,w,c
  5734  001412  0BFD               	andlw	-3
  5735  001414  1826               	xorwf	??_MotorControl,w,c
  5736  001416  6E84               	movwf	3972,c	;volatile
  5737                           
  5738                           ;main2.c: 210: if ( right_duty_cycle < 0 )
  5739  001418  AE2C               	btfss	MotorControl@right_duty_cycle+1,7,c
  5740  00141A  D010               	goto	l2325
  5741                           
  5742                           ;main2.c: 211: {
  5743                           ;main2.c: 212: right_dir_modifier = reverse;
  5744  00141C  0E00               	movlw	0
  5745  00141E  6E28               	movwf	MotorControl@right_dir_modifier,c
  5746                           
  5747                           ;main2.c: 213: right_duty_cycle *= -1;
  5748  001420  C02B  F016         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5749  001424  C02C  F017         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5750  001428  0EFF               	movlw	255
  5751  00142A  6E19               	movwf	___wmul@multiplicand+1,c
  5752  00142C  6818               	setf	___wmul@multiplicand,c
  5753  00142E  ECAA  F00F         	call	___wmul	;wreg free
  5754  001432  C016  F02B         	movff	?___wmul,MotorControl@right_duty_cycle
  5755  001436  C017  F02C         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5756  00143A  D000               	goto	l2325
  5757  00143C                     l2325:
  5758                           
  5759                           ;main2.c: 214: }
  5760                           ;main2.c: 215: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5761  00143C  BE2C               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5762  00143E  D00B               	goto	l2329
  5763  001440  0E21               	movlw	33
  5764  001442  5C2B               	subwf	MotorControl@right_duty_cycle,w,c
  5765  001444  0E03               	movlw	3
  5766  001446  582C               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5767  001448  A0D8               	btfss	status,0,c
  5768  00144A  D005               	goto	l2329
  5769  00144C  0E03               	movlw	3
  5770  00144E  6E2C               	movwf	MotorControl@right_duty_cycle+1,c
  5771  001450  0E20               	movlw	32
  5772  001452  6E2B               	movwf	MotorControl@right_duty_cycle,c
  5773  001454  D000               	goto	l2329
  5774  001456                     l2329:
  5775                           
  5776                           ;main2.c: 217: SetDCPWM1((unsigned int) right_duty_cycle );
  5777  001456  C02B  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5778  00145A  C02C  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5779  00145E  EC30  F00F         	call	_SetDCPWM1	;wreg free
  5780                           
  5781                           ;main2.c: 218: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5782  001462  5028               	movf	MotorControl@right_dir_modifier,w,c
  5783  001464  A4D8               	btfss	status,2,c
  5784  001466  D002               	goto	l373
  5785  001468  9A82               	bcf	3970,5,c	;volatile
  5786  00146A  D002               	goto	l2335
  5787  00146C                     l373:
  5788                           
  5789                           ;main2.c: 219: else PORTCbits.RC5 = 0b1;
  5790  00146C  8A82               	bsf	3970,5,c	;volatile
  5791  00146E  D000               	goto	l2335
  5792  001470                     l2335:
  5793                           
  5794                           ;main2.c: 220: PORTEbits.RE0 = !PORTCbits.RC5;
  5795  001470  BA82               	btfsc	3970,5,c	;volatile
  5796  001472  D003               	goto	u1830
  5797  001474  6A26               	clrf	??_MotorControl& (0+255),c
  5798  001476  2A26               	incf	??_MotorControl& (0+255),f,c
  5799  001478  D001               	goto	u1848
  5800  00147A                     u1830:
  5801  00147A  6A26               	clrf	??_MotorControl& (0+255),c
  5802  00147C                     u1848:
  5803  00147C  5084               	movf	3972,w,c	;volatile
  5804  00147E  1826               	xorwf	??_MotorControl,w,c
  5805  001480  0BFE               	andlw	-2
  5806  001482  1826               	xorwf	??_MotorControl,w,c
  5807  001484  6E84               	movwf	3972,c	;volatile
  5808  001486  0012               	return		;funcret
  5809  001488                     __end_of_MotorControl:
  5810                           	opt stack 0
  5811                           stkptr	equ	0xFFC
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           intcon	equ	0xFF2
  5817                           postinc0	equ	0xFEE
  5818                           wreg	equ	0xFE8
  5819                           indf1	equ	0xFE7
  5820                           postinc1	equ	0xFE6
  5821                           fsr1h	equ	0xFE2
  5822                           fsr1l	equ	0xFE1
  5823                           indf2	equ	0xFDF
  5824                           postinc2	equ	0xFDE
  5825                           plusw2	equ	0xFDB
  5826                           fsr2h	equ	0xFDA
  5827                           fsr2l	equ	0xFD9
  5828                           status	equ	0xFD8
  5829                           
  5830 ;; *************** function ___wmul *****************
  5831 ;; Defined at:
  5832 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  multiplier      2   21[COMRAM] unsigned int 
  5835 ;;  multiplicand    2   23[COMRAM] unsigned int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  product         2   25[COMRAM] unsigned int 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  2   21[COMRAM] unsigned int 
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0, prodl, prodh
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;Total ram usage:        6 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_PID_LineFollowing
  5858 ;;		_MotorControl
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text47
  5863  001F54                     __ptext47:
  5864                           	opt stack 0
  5865  001F54                     ___wmul:
  5866                           	opt stack 28
  5867                           
  5868                           ;incstack = 0
  5869  001F54  5016               	movf	___wmul@multiplier,w,c
  5870  001F56  0218               	mulwf	___wmul@multiplicand,c
  5871  001F58  CFF3 F01A          	movff	prodl,___wmul@product
  5872  001F5C  CFF4 F01B          	movff	prodh,___wmul@product+1
  5873  001F60  5016               	movf	___wmul@multiplier,w,c
  5874  001F62  0219               	mulwf	___wmul@multiplicand+1,c
  5875  001F64  50F3               	movf	prodl,w,c
  5876  001F66  261B               	addwf	___wmul@product+1,f,c
  5877  001F68  5017               	movf	___wmul@multiplier+1,w,c
  5878  001F6A  0218               	mulwf	___wmul@multiplicand,c
  5879  001F6C  50F3               	movf	prodl,w,c
  5880  001F6E  261B               	addwf	___wmul@product+1,f,c
  5881  001F70  C01A  F016         	movff	___wmul@product,?___wmul
  5882  001F74  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  5883  001F78  D000               	goto	l635
  5884  001F7A                     l635:
  5885  001F7A  0012               	return		;funcret
  5886  001F7C                     __end_of___wmul:
  5887                           	opt stack 0
  5888                           stkptr	equ	0xFFC
  5889                           tblptru	equ	0xFF8
  5890                           tblptrh	equ	0xFF7
  5891                           tblptrl	equ	0xFF6
  5892                           tablat	equ	0xFF5
  5893                           prodh	equ	0xFF4
  5894                           prodl	equ	0xFF3
  5895                           intcon	equ	0xFF2
  5896                           postinc0	equ	0xFEE
  5897                           wreg	equ	0xFE8
  5898                           indf1	equ	0xFE7
  5899                           postinc1	equ	0xFE6
  5900                           fsr1h	equ	0xFE2
  5901                           fsr1l	equ	0xFE1
  5902                           indf2	equ	0xFDF
  5903                           postinc2	equ	0xFDE
  5904                           plusw2	equ	0xFDB
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function ___awdiv *****************
  5910 ;; Defined at:
  5911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  dividend        2   27[COMRAM] int 
  5914 ;;  divisor         2   29[COMRAM] int 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  quotient        2   33[COMRAM] int 
  5917 ;;  sign            1   32[COMRAM] unsigned char 
  5918 ;;  counter         1   31[COMRAM] unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  2   27[COMRAM] int 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:        8 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_MotorControl
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text48
  5943  001A36                     __ptext48:
  5944                           	opt stack 0
  5945  001A36                     ___awdiv:
  5946                           	opt stack 27
  5947                           
  5948                           ;incstack = 0
  5949  001A36  0E00               	movlw	0
  5950  001A38  6E21               	movwf	___awdiv@sign,c
  5951  001A3A  AE1F               	btfss	___awdiv@divisor+1,7,c
  5952  001A3C  D007               	goto	l2149
  5953  001A3E  6C1E               	negf	___awdiv@divisor,c
  5954  001A40  1E1F               	comf	___awdiv@divisor+1,f,c
  5955  001A42  B0D8               	btfsc	status,0,c
  5956  001A44  2A1F               	incf	___awdiv@divisor+1,f,c
  5957  001A46  0E01               	movlw	1
  5958  001A48  6E21               	movwf	___awdiv@sign,c
  5959  001A4A  D000               	goto	l2149
  5960  001A4C                     l2149:
  5961  001A4C  AE1D               	btfss	___awdiv@dividend+1,7,c
  5962  001A4E  D007               	goto	l2155
  5963  001A50  6C1C               	negf	___awdiv@dividend,c
  5964  001A52  1E1D               	comf	___awdiv@dividend+1,f,c
  5965  001A54  B0D8               	btfsc	status,0,c
  5966  001A56  2A1D               	incf	___awdiv@dividend+1,f,c
  5967  001A58  0E01               	movlw	1
  5968  001A5A  1A21               	xorwf	___awdiv@sign,f,c
  5969  001A5C  D000               	goto	l2155
  5970  001A5E                     l2155:
  5971  001A5E  0E00               	movlw	0
  5972  001A60  6E23               	movwf	___awdiv@quotient+1,c
  5973  001A62  0E00               	movlw	0
  5974  001A64  6E22               	movwf	___awdiv@quotient,c
  5975  001A66  501E               	movf	___awdiv@divisor,w,c
  5976  001A68  101F               	iorwf	___awdiv@divisor+1,w,c
  5977  001A6A  B4D8               	btfsc	status,2,c
  5978  001A6C  D021               	goto	l2177
  5979  001A6E  0E01               	movlw	1
  5980  001A70  6E20               	movwf	___awdiv@counter,c
  5981  001A72  D005               	goto	l2163
  5982  001A74                     l2161:
  5983  001A74  90D8               	bcf	status,0,c
  5984  001A76  361E               	rlcf	___awdiv@divisor,f,c
  5985  001A78  361F               	rlcf	___awdiv@divisor+1,f,c
  5986  001A7A  2A20               	incf	___awdiv@counter,f,c
  5987  001A7C  D000               	goto	l2163
  5988  001A7E                     l2163:
  5989  001A7E  BE1F               	btfsc	___awdiv@divisor+1,7,c
  5990  001A80  D002               	goto	l2165
  5991  001A82  D7F8               	goto	l2161
  5992  001A84  D000               	goto	l2165
  5993  001A86                     l2165:
  5994  001A86  90D8               	bcf	status,0,c
  5995  001A88  3622               	rlcf	___awdiv@quotient,f,c
  5996  001A8A  3623               	rlcf	___awdiv@quotient+1,f,c
  5997  001A8C  501E               	movf	___awdiv@divisor,w,c
  5998  001A8E  5C1C               	subwf	___awdiv@dividend,w,c
  5999  001A90  501F               	movf	___awdiv@divisor+1,w,c
  6000  001A92  581D               	subwfb	___awdiv@dividend+1,w,c
  6001  001A94  A0D8               	btfss	status,0,c
  6002  001A96  D006               	goto	l2173
  6003  001A98  501E               	movf	___awdiv@divisor,w,c
  6004  001A9A  5E1C               	subwf	___awdiv@dividend,f,c
  6005  001A9C  501F               	movf	___awdiv@divisor+1,w,c
  6006  001A9E  5A1D               	subwfb	___awdiv@dividend+1,f,c
  6007  001AA0  8022               	bsf	___awdiv@quotient,0,c
  6008  001AA2  D000               	goto	l2173
  6009  001AA4                     l2173:
  6010  001AA4  90D8               	bcf	status,0,c
  6011  001AA6  321F               	rrcf	___awdiv@divisor+1,f,c
  6012  001AA8  321E               	rrcf	___awdiv@divisor,f,c
  6013  001AAA  2E20               	decfsz	___awdiv@counter,f,c
  6014  001AAC  D7EC               	goto	l2165
  6015  001AAE  D000               	goto	l2177
  6016  001AB0                     l2177:
  6017  001AB0  5021               	movf	___awdiv@sign,w,c
  6018  001AB2  B4D8               	btfsc	status,2,c
  6019  001AB4  D005               	goto	l2181
  6020  001AB6  6C22               	negf	___awdiv@quotient,c
  6021  001AB8  1E23               	comf	___awdiv@quotient+1,f,c
  6022  001ABA  B0D8               	btfsc	status,0,c
  6023  001ABC  2A23               	incf	___awdiv@quotient+1,f,c
  6024  001ABE  D000               	goto	l2181
  6025  001AC0                     l2181:
  6026  001AC0  C022  F01C         	movff	___awdiv@quotient,?___awdiv
  6027  001AC4  C023  F01D         	movff	___awdiv@quotient+1,?___awdiv+1
  6028  001AC8  D000               	goto	l828
  6029  001ACA                     l828:
  6030  001ACA  0012               	return		;funcret
  6031  001ACC                     __end_of___awdiv:
  6032                           	opt stack 0
  6033                           stkptr	equ	0xFFC
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           prodh	equ	0xFF4
  6039                           prodl	equ	0xFF3
  6040                           intcon	equ	0xFF2
  6041                           postinc0	equ	0xFEE
  6042                           wreg	equ	0xFE8
  6043                           indf1	equ	0xFE7
  6044                           postinc1	equ	0xFE6
  6045                           fsr1h	equ	0xFE2
  6046                           fsr1l	equ	0xFE1
  6047                           indf2	equ	0xFDF
  6048                           postinc2	equ	0xFDE
  6049                           plusw2	equ	0xFDB
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function _SetDCPWM2 *****************
  6055 ;; Defined at:
  6056 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6061 ;; Return value:  Size  Location     Type
  6062 ;;		None               void
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;Total ram usage:        6 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:    1
  6077 ;; This function calls:
  6078 ;;		Nothing
  6079 ;; This function is called by:
  6080 ;;		_initialization
  6081 ;;		_motors_brake_all
  6082 ;;		_MotorControl
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text49
  6087  001E26                     __ptext49:
  6088                           	opt stack 0
  6089  001E26                     _SetDCPWM2:
  6090                           	opt stack 28
  6091                           
  6092                           ;incstack = 0
  6093  001E26  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6094  001E2A  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6095  001E2E  0E06               	movlw	6
  6096  001E30                     u1425:
  6097  001E30  90D8               	bcf	status,0,c
  6098  001E32  3611               	rlcf	??_SetDCPWM2,f,c
  6099  001E34  3612               	rlcf	??_SetDCPWM2+1,f,c
  6100  001E36  2EE8               	decfsz	wreg,f,c
  6101  001E38  D7FB               	goto	u1425
  6102  001E3A  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6103  001E3E  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6104  001E42  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6105  001E46  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6106  001E4A  90D8               	bcf	status,0,c
  6107  001E4C  3211               	rrcf	??_SetDCPWM2,f,c
  6108  001E4E  90D8               	bcf	status,0,c
  6109  001E50  3211               	rrcf	??_SetDCPWM2,f,c
  6110  001E52  0E30               	movlw	48
  6111  001E54  1611               	andwf	??_SetDCPWM2,f,c
  6112  001E56  50BA               	movf	4026,w,c	;volatile
  6113  001E58  0BCF               	andlw	207
  6114  001E5A  1011               	iorwf	??_SetDCPWM2,w,c
  6115  001E5C  6EBA               	movwf	4026,c	;volatile
  6116  001E5E  0012               	return		;funcret
  6117  001E60                     __end_of_SetDCPWM2:
  6118                           	opt stack 0
  6119                           stkptr	equ	0xFFC
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           prodh	equ	0xFF4
  6125                           prodl	equ	0xFF3
  6126                           intcon	equ	0xFF2
  6127                           postinc0	equ	0xFEE
  6128                           wreg	equ	0xFE8
  6129                           indf1	equ	0xFE7
  6130                           postinc1	equ	0xFE6
  6131                           fsr1h	equ	0xFE2
  6132                           fsr1l	equ	0xFE1
  6133                           indf2	equ	0xFDF
  6134                           postinc2	equ	0xFDE
  6135                           plusw2	equ	0xFDB
  6136                           fsr2h	equ	0xFDA
  6137                           fsr2l	equ	0xFD9
  6138                           status	equ	0xFD8
  6139                           
  6140 ;; *************** function _SetDCPWM1 *****************
  6141 ;; Defined at:
  6142 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6147 ;; Return value:  Size  Location     Type
  6148 ;;		None               void
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;Total ram usage:        6 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    1
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_initialization
  6167 ;;		_motors_brake_all
  6168 ;;		_MotorControl
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text50
  6173  001E60                     __ptext50:
  6174                           	opt stack 0
  6175  001E60                     _SetDCPWM1:
  6176                           	opt stack 28
  6177                           
  6178                           ;incstack = 0
  6179  001E60  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6180  001E64  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6181  001E68  0E06               	movlw	6
  6182  001E6A                     u1415:
  6183  001E6A  90D8               	bcf	status,0,c
  6184  001E6C  3611               	rlcf	??_SetDCPWM1,f,c
  6185  001E6E  3612               	rlcf	??_SetDCPWM1+1,f,c
  6186  001E70  2EE8               	decfsz	wreg,f,c
  6187  001E72  D7FB               	goto	u1415
  6188  001E74  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6189  001E78  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6190  001E7C  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6191  001E80  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6192  001E84  90D8               	bcf	status,0,c
  6193  001E86  3211               	rrcf	??_SetDCPWM1,f,c
  6194  001E88  90D8               	bcf	status,0,c
  6195  001E8A  3211               	rrcf	??_SetDCPWM1,f,c
  6196  001E8C  0E30               	movlw	48
  6197  001E8E  1611               	andwf	??_SetDCPWM1,f,c
  6198  001E90  50BD               	movf	4029,w,c	;volatile
  6199  001E92  0BCF               	andlw	207
  6200  001E94  1011               	iorwf	??_SetDCPWM1,w,c
  6201  001E96  6EBD               	movwf	4029,c	;volatile
  6202  001E98  0012               	return		;funcret
  6203  001E9A                     __end_of_SetDCPWM1:
  6204                           	opt stack 0
  6205                           stkptr	equ	0xFFC
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           prodh	equ	0xFF4
  6211                           prodl	equ	0xFF3
  6212                           intcon	equ	0xFF2
  6213                           postinc0	equ	0xFEE
  6214                           wreg	equ	0xFE8
  6215                           indf1	equ	0xFE7
  6216                           postinc1	equ	0xFE6
  6217                           fsr1h	equ	0xFE2
  6218                           fsr1l	equ	0xFE1
  6219                           indf2	equ	0xFDF
  6220                           postinc2	equ	0xFDE
  6221                           plusw2	equ	0xFDB
  6222                           fsr2h	equ	0xFDA
  6223                           fsr2l	equ	0xFD9
  6224                           status	equ	0xFD8
  6225                           
  6226 ;; *************** function _high_isr *****************
  6227 ;; Defined at:
  6228 ;;		line 24 in file "../Robot Files/interrupts.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;		None               void
  6235 ;; Registers used:
  6236 ;;		wreg, status,2
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:       14 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		Interrupt level 2
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	intcode
  6256  000008                     __pintcode:
  6257                           	opt stack 0
  6258  000008                     _high_isr:
  6259                           	opt stack 25
  6260                           
  6261                           ;incstack = 0
  6262  000008  CFFA F001          	movff	pclath,??_high_isr
  6263  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6264  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6265  000014  EDED  F00D         	call	int_func,f	;refresh shadow registers
  6266                           stkptr	equ	0xFFC
  6267                           pclatu	equ	0xFFB
  6268                           pclath	equ	0xFFA
  6269                           tblptru	equ	0xFF8
  6270                           tblptrh	equ	0xFF7
  6271                           tblptrl	equ	0xFF6
  6272                           tablat	equ	0xFF5
  6273                           prodh	equ	0xFF4
  6274                           prodl	equ	0xFF3
  6275                           intcon	equ	0xFF2
  6276                           postinc0	equ	0xFEE
  6277                           fsr0l	equ	0xFE9
  6278                           wreg	equ	0xFE8
  6279                           indf1	equ	0xFE7
  6280                           postinc1	equ	0xFE6
  6281                           fsr1h	equ	0xFE2
  6282                           fsr1l	equ	0xFE1
  6283                           indf2	equ	0xFDF
  6284                           postinc2	equ	0xFDE
  6285                           plusw2	equ	0xFDB
  6286                           fsr2h	equ	0xFDA
  6287                           fsr2l	equ	0xFD9
  6288                           status	equ	0xFD8
  6289                           
  6290                           	psect	intcode_body
  6291  001BDA                     __pintcode_body:
  6292                           	opt stack 25
  6293  001BDA                     int_func:
  6294                           	opt stack 25
  6295  001BDA  0006               	pop		; remove dummy address from shadow register refresh
  6296  001BDC  CFEA F004          	movff	fsr0h,??_high_isr+3
  6297  001BE0  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6298  001BE4  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6299  001BE8  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6300  001BEC  CFDA F008          	movff	fsr2h,??_high_isr+7
  6301  001BF0  CFF3 F009          	movff	prodl,??_high_isr+8
  6302  001BF4  CFF4 F00A          	movff	prodh,??_high_isr+9
  6303  001BF8  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6304  001BFC  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6305  001C00  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6306  001C04  CFF5 F00E          	movff	tablat,??_high_isr+13
  6307                           
  6308                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6309  001C08  94A1               	bcf	4001,2,c	;volatile
  6310                           
  6311                           ;interrupts.c: 27: TRISA = 0xff;
  6312  001C0A  6892               	setf	3986,c	;volatile
  6313                           
  6314                           ;interrupts.c: 28: TRISB = 0xff;
  6315  001C0C  6893               	setf	3987,c	;volatile
  6316                           
  6317                           ;interrupts.c: 29: TRISC = 0xff;
  6318  001C0E  6894               	setf	3988,c	;volatile
  6319                           
  6320                           ;interrupts.c: 30: TRISD = 0xff;
  6321  001C10  6895               	setf	3989,c	;volatile
  6322                           
  6323                           ;interrupts.c: 31: TRISE = 0x03;
  6324  001C12  0E03               	movlw	3
  6325  001C14  6E96               	movwf	3990,c	;volatile
  6326                           
  6327                           ;interrupts.c: 32: lvd_flag =1;
  6328  001C16  0E01               	movlw	1
  6329  001C18  6E4F               	movwf	_lvd_flag,c
  6330                           
  6331                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6332  001C1A  94A0               	bcf	4000,2,c	;volatile
  6333                           
  6334                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6335  001C1C  98D2               	bcf	4050,4,c	;volatile
  6336  001C1E  C00E  FFF5         	movff	??_high_isr+13,tablat
  6337  001C22  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6338  001C26  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6339  001C2A  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6340  001C2E  C00A  FFF4         	movff	??_high_isr+9,prodh
  6341  001C32  C009  FFF3         	movff	??_high_isr+8,prodl
  6342  001C36  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6343  001C3A  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6344  001C3E  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6345  001C42  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6346  001C46  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6347  001C4A  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6348  001C4E  C002  FFFB         	movff	??_high_isr+1,pclatu
  6349  001C52  C001  FFFA         	movff	??_high_isr,pclath
  6350  001C56  0011               	retfie		f
  6351  001C58                     __end_of_high_isr:
  6352                           	opt stack 0
  6353                           stkptr	equ	0xFFC
  6354                           pclatu	equ	0xFFB
  6355                           pclath	equ	0xFFA
  6356                           tblptru	equ	0xFF8
  6357                           tblptrh	equ	0xFF7
  6358                           tblptrl	equ	0xFF6
  6359                           tablat	equ	0xFF5
  6360                           prodh	equ	0xFF4
  6361                           prodl	equ	0xFF3
  6362                           intcon	equ	0xFF2
  6363                           postinc0	equ	0xFEE
  6364                           fsr0h	equ	0xFEA
  6365                           fsr0l	equ	0xFE9
  6366                           wreg	equ	0xFE8
  6367                           indf1	equ	0xFE7
  6368                           postinc1	equ	0xFE6
  6369                           fsr1h	equ	0xFE2
  6370                           fsr1l	equ	0xFE1
  6371                           indf2	equ	0xFDF
  6372                           postinc2	equ	0xFDE
  6373                           plusw2	equ	0xFDB
  6374                           fsr2h	equ	0xFDA
  6375                           fsr2l	equ	0xFD9
  6376                           status	equ	0xFD8
  6377                           stkptr	equ	0xFFC
  6378                           pclatu	equ	0xFFB
  6379                           pclath	equ	0xFFA
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           intcon	equ	0xFF2
  6387                           postinc0	equ	0xFEE
  6388                           fsr0h	equ	0xFEA
  6389                           fsr0l	equ	0xFE9
  6390                           wreg	equ	0xFE8
  6391                           indf1	equ	0xFE7
  6392                           postinc1	equ	0xFE6
  6393                           fsr1h	equ	0xFE2
  6394                           fsr1l	equ	0xFE1
  6395                           indf2	equ	0xFDF
  6396                           postinc2	equ	0xFDE
  6397                           plusw2	equ	0xFDB
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402                           	psect	rparam
  6403  0000                     stkptr	equ	0xFFC
  6404                           pclatu	equ	0xFFB
  6405                           pclath	equ	0xFFA
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           prodh	equ	0xFF4
  6411                           prodl	equ	0xFF3
  6412                           intcon	equ	0xFF2
  6413                           postinc0	equ	0xFEE
  6414                           fsr0h	equ	0xFEA
  6415                           fsr0l	equ	0xFE9
  6416                           wreg	equ	0xFE8
  6417                           indf1	equ	0xFE7
  6418                           postinc1	equ	0xFE6
  6419                           fsr1h	equ	0xFE2
  6420                           fsr1l	equ	0xFE1
  6421                           indf2	equ	0xFDF
  6422                           postinc2	equ	0xFDE
  6423                           plusw2	equ	0xFDB
  6424                           fsr2h	equ	0xFDA
  6425                           fsr2l	equ	0xFD9
  6426                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    16
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     59      81
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[64]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   21178
                                             54 COMRAM     5     5      0
                _AllSensorsTriggered
                  _FilterNearbyTrack
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     132
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    5     3      2    4640
                                             44 COMRAM     5     3      2
                       _MotorControl
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       6     4      2    7542
                                             48 COMRAM     6     4      2
                       _MotorControl
                          _SharpTurn
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    3729
                                             44 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _FilterNearbyTrack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  3     3      0    3639
                                             44 COMRAM     3     3      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      44
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      44
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                         9     7      2    3051
                                             35 COMRAM     9     7      2
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     927
                                             21 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     812
                                             27 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           ___lwdiv (ARG)
       ___wmul
         ___lwdiv (ARG)
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _FilterNearbyTrack
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           ___lwdiv (ARG)
       ___wmul
         ___lwdiv (ARG)
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             ___lwdiv (ARG)
         ___wmul
           ___lwdiv (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           ___lwdiv (ARG)
       ___wmul
         ___lwdiv (ARG)
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3B      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      34        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 17:06:02 2020

                     _STKPTRbits 000FFC                                _I 0045  
                 _I_flag_counter 0047                     ___awdiv@sign 0021  
            ___wmul@multiplicand 0018                      __CFG_BORV$0 000000  
                            l141 1E14                              l205 2186  
                            l214 1F2A                              l128 1F52  
                            l145 1E24                              l154 18E6  
                            l322 14DE                              l148 18D2  
                            l149 1878                              l318 1582  
                            l431 2056                              l175 1CD8  
                            l600 1CAC                              l522 1EBC  
                            l602 1CC6                              l523 1EC6  
                            l452 2180                              l428 198E  
                            l436 2064                              l524 1EC8  
                            l373 146C                              l437 2068  
                            l369 13FC                              l545 2024  
                            l609 2108                              l482 2164  
                            l546 2026                              l474 1D84  
                            l618 1FC6                              l635 1F7A  
                            l627 1FA0                              l398 1776  
                            l567 20D6                              l568 20D8  
                            l593 1C84                              l828 1ACA  
                            l597 1C9E                              l598 1CA0  
                            l599 1CAA                              _PR2 000FCB  
           __size_of_WriteTimer0 0012                              _adc 1F2C  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_adc 0013  
                           l1153 1DDA                             l2123 1F3A  
                           l2131 1EDC                             l2133 1EE4  
                           l2303 13A8                             l1423 2104  
                           l2161 1A74                             l2313 13E6  
                           l1281 1D02                             l2225 18AE  
                           l2401 1E1E                             l2163 1A7E  
                           l2155 1A5E                             l1419 2100  
                           l1363 1FB6                             l1371 1FBE  
                           l2181 1AC0                             l2173 1AA4  
                           l2165 1A86                             l2149 1A4C  
                           l2325 143C                             l2309 13CC  
                           l1285 1D1A                             l2229 18C6  
                           l2335 1470                             l2319 1400  
                           l2423 19B6                             l2431 19D6  
                           l2351 1C7C                             l2343 1C6A  
                           l1367 1FBA                             l1375 1FC2  
                           l1455 1F90                             l1463 1F98  
                           l2177 1AB0                             l2329 1456  
                           l2451 1A24                             l2435 19E6  
                           l2363 1C96                             l2355 1C88  
                           l2347 1C74                             l1459 1F94  
                           l1467 1F9C                             l2621 1980  
                           l2437 19EC                             l2461 1DA8  
                           l1565 1F10                             l2701 1504  
                           l2615 1952                             l2439 19F6  
                           l2447 1A14                             l2471 1DCE  
                           l2463 1DB0                             l2391 1DF4  
                           l2703 151A                             l2711 1534  
                           l2609 1912                             l2553 1672  
                           l2545 1638                             l2641 1128  
                           l2633 10E2                             l1569 1F24  
                           l2705 1528                             l2299 135A  
                           l2619 1976                             l2571 16E8  
                           l2555 167A                             l2547 1640  
                           l2459 1D9E                             l2651 118E  
                           l2627 10B0                             l1691 1EB8  
                           l2395 1E04                             l2723 15DC  
                           l2707 152E                             l2581 171A  
                           l2557 1684                             l2645 114A  
                           l2637 1108                             l2629 10C0  
                           l2653 1198                             l2725 15E0  
                           l2591 1752                             l2567 16A4  
                           l2639 1118                             l2585 173A  
                           l2665 12A4                             l2657 11F0  
                           l2649 1170                             l2681 14C4  
                           l2595 1768                             l2691 14DA  
                           l2693 14E2                             l2685 14CE  
                           l2599 18F2                             l2695 14E6  
                           l2687 14D2                             l2697 14EA  
                           l2689 14D6                             l2699 14EE  
                __end_of_BORtask 200A                             STR_1 107A  
                           STR_2 1074                             STR_3 1064  
                           STR_4 105B                             STR_5 1051  
                           STR_6 106D                             STR_7 1011  
                           u1400 217C                             u1510 1790  
                           u1415 1E6A                             u1425 1E30  
                           u1530 17B6                             u1610 1B66  
                           u2261 109E                             u1550 17E0  
                           u1630 1B7C                             u1608 1830  
                           u1528 1792                             u1570 1808  
                           u1650 1B94                             u1548 17B8  
                           u1708 1BCC                             u1628 1B68  
                           u1830 147A                             u1590 182E  
                           u1670 1BAE                             u1568 17E2  
                           u1648 1B7E                             u2457 16FC  
                           u1690 1BCA                             u2467 1740  
                           u1780 140A                             u1588 180A  
                           u1668 1B96                             u2477 199C  
                           u1848 147C                             u1688 1BB0  
                           u1798 140C                  ?_GetBackonTrack 0031  
                           _TMR2 000FCC                     __CFG_WDTPS$8 000000  
               ??_initialization 001C                             _main 1488  
          __end_of_check_sensors 183C                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             pclat 000FFA  
                  __CFG_BOREN$ON 000000                  __end_of_PORtask 18E8  
                           prodh 000FF4                             prodl 000FF3  
     MotorControl@delta_velocity 0024                             start 0018  
                __end_of_WDTtask 20A4                     ___param_bank 000010  
                __end_of_BusyADC 2182                  __end_of_ReadADC 2166  
                __end_of_OpenADC 1D88                            ??_adc 0015  
         PID_LineFollowing@error 002D                            ?_main 0001  
                __end_of___awdiv 1ACC                            _T0CON 000FD5  
                ___awdiv@divisor 001E                            _T2CON 000FCA  
                __end_of___lwdiv 1DE4                  ___awdiv@counter 0020  
             __size_of_RESETtask 001C                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _SPBRG 000FAF                            _PORTD 000F83  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TXSTA 000FAC  
                __end_of_isWDTTO 1FA2          __end_of_openPORTCforPWM 2174  
                          _isBOR 20F4                            _isPOR 1FA2  
                          _gtrap 1CC8                            _putch 21B0  
                __end_of_openLVD 20F4                       _ConvertADC 21AC  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 2120                     __end_of_main 1606  
               __end_of_OpenPWM1 2144                 __end_of_OpenPWM2 1ED2  
                         ??_main 0037                    __activetblptr 000003  
                     _SetChanADC 210A                        ??_BORtask 0014  
                         ?_isBOR 0001              GetBackonTrack@error 0031  
                         ?_isPOR 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_gtrap 0001                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                 ___awdiv@dividend 001C  
                         ?_putch 0001                        ??_PORtask 0014  
                      ??_WDTtask 0014                       _OpenTimer0 200A  
                     _OpenTimer2 20C0             _flag_counter_enabled 004E  
                         _TMR0IF 007F92                           _SPBRGH 000FB0  
             __size_of_SetDCPWM1 003A               __size_of_SetDCPWM2 003A  
                      ??_BusyADC 000F                        ??_ReadADC 0011  
                         _LVtrap 202A                __end_of_RESETtask 20C0  
                      ??_OpenADC 0011                     ?_reset_codes 0001  
               __end_of_high_isr 1C58               __size_of_OpenUSART 0070  
               _TIME_ON_BLACK_ms 1009                           ___wmul 1F54  
                      ??___awdiv 0020                   __CFG_STVREN$ON 000000  
               OpenTimer0@config 000F                        ??___lwdiv 0013  
              _TIME_OFF_TRACK_ms 1007               __size_of_SharpTurn 00A6  
               OpenTimer2@config 000F                           clear_0 2126  
               ___awdiv@quotient 0022                        ??_isWDTTO 000F  
                         _printf 1ED2                 _TIME_UPDATE_D_ms 100F  
               __end_of_set_leds 1BDA                        ??_openLVD 000F  
            __size_of_STKFULtask 001E                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_openPORTCforPWM 0001  
              ?_motors_brake_all 0001                           putch@c 0001  
             ??_motors_brake_all 0015                      ?_ConvertADC 0001  
                     __accesstop 0080          __end_of__initialization 212C  
              _FilterNearbyTrack 204A                       adc@channel 0015  
                  ___rparam_used 000001               ?_FilterNearbyTrack 0001  
          __end_of_set_osc_32MHz 1F2C        __end_of_TIME_OFF_TRACK_ms 1009  
                 __pcstackCOMRAM 0001                    __end_of_isBOR 210A  
                  __end_of_isPOR 1FC8                    __end_of_gtrap 1D2A  
            ??_FilterNearbyTrack 000F                    __end_of_putch 21B2  
   __size_of_AllSensorsTriggered 00A8                __end_of_SetDCPWM1 1E9A  
              __end_of_SetDCPWM2 1E60                    ??_StatusReset 000F  
                    ?_SetChanADC 0001                 ??_GetBackonTrack 0033  
                  ?_lvd_flag_set 0001                          ??_isBOR 000F  
                        ??_isPOR 000F                __end_of_OpenUSART 1CC8  
                        ??_gtrap 000F                          ??_putch 000F  
     __end_of_TIME_SHARP_TURN_ms 100D        __end_of_FilterNearbyTrack 206A  
                    ?_OpenTimer0 0001                      ?_OpenTimer2 0001  
              __end_of_SharpTurn 1A36                        ?_OpenPWM1 0001  
                      ?_OpenPWM2 0001                          ?_LVtrap 0001  
                  ?_MotorControl 0024                   _D_flag_counter 0043  
             __end_of_D_CONSTANT 1003               __size_of_openPORTA 0006  
             __size_of_openPORTB 0006               __size_of_openPORTD 0006  
             __size_of_openPORTE 0006                          ?___wmul 0016  
                        _CCP1CON 000FBD                          _CCP2CON 000FBA  
               WriteTimer0@timer 0011                    ??_WriteTimer0 0011  
              _CCW_rotation_flag 004B              __size_of_ConvertADC 0004  
                        ?_printf 000F                          _BORtask 1FEA  
                 ??_lvd_flag_set 000F                        ?_high_isr 0001  
            __end_of_StatusReset 218E                          _PORtask 183C  
             __end_of_I_CONSTANT 1005                          _WDTtask 2088  
                        _BusyADC 2174                          _ReadADC 2156  
                     ??_OpenPWM1 000F                       ??_OpenPWM2 000F  
                   ??_STKFULtask 0014                          _SeeLine 004D  
                 ??_MotorControl 0026                          _OpenADC 1D2A  
                   _flag_counter 0050                  __size_of_LVtrap 0020  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        __Lparam 0000                        ?_set_leds 0001  
           __size_of_reset_codes 0042                          ___awdiv 1A36  
                __size_of___wmul 0028                          ___lwdiv 1D88  
                   __psmallconst 1000                          __pcinit 2120  
                        _isWDTTO 1F7C                          __ramtop 1000  
            __size_of_OpenTimer0 0020              __size_of_OpenTimer2 001C  
                        __ptext0 1488                          __ptext1 2182  
                        __ptext2 1ACC                          __ptext3 1F00  
                        __ptext4 1DE4                          __ptext5 1F7C  
                        __ptext6 1FA2                          __ptext7 20F4  
                        __ptext8 2088                          __ptext9 206A  
                __size_of_printf 002E                        _T0CONbits 000FD5  
                   __size_of_adc 0028                        _T2CONbits 000FCA  
         __size_of_check_sensors 00C4                          _openLVD 20DC  
            __end_of_WriteTimer0 2156               __end_of_STKFULtask 2088  
       __end_of_TIME_ON_BLACK_ms 100B               __end_of_P_CONSTANT 1007  
              __end_of_openPORTA 21A6                __end_of_openPORTB 21A0  
              __end_of_openPORTD 21AC                __end_of_openPORTE 2194  
                 OpenADC@config2 000F                       ??_high_isr 0001  
                 __pintcode_body 1BDA             end_of_initialization 212C  
     __size_of_FilterNearbyTrack 0020                          int_func 1BDA  
       __end_of_TIME_UPDATE_D_ms 1011                       ??_set_leds 000F  
                      _RCSTAbits 000FAB                          printf@c 0013  
                        printf@f 000F                        _RESETtask 20A4  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE          __size_of_initialization 0090  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
                      _PORTEbits 000F84                   set_osc_32MHz@i 000F  
                    _StatusReset 2188                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     ??_ConvertADC 000F  
    MotorControl@left_duty_cycle 0029                _PID_LineFollowing 1082  
  MotorControl@left_dir_modifier 0027              _AllSensorsTriggered 18E8  
             ?_PID_LineFollowing 002D                        _TXSTAbits 000FAC  
                  _check_sensors 1778        __size_of_motors_brake_all 0022  
                 __end_of_LVtrap 204A             __end_of_lvd_flag_set 2188  
 MotorControl@right_dir_modifier 0028              ??_PID_LineFollowing 002F  
                     ?_RESETtask 0001                   __end_of___wmul 1F7C  
                    _WriteTimer0 2144             ?_AllSensorsTriggered 0001  
             __end_of_ConvertADC 21B0         _AllSensorsTriggered$1457 002F  
                   ??_SetChanADC 000F                   __end_of_printf 1F00  
            start_initialization 2120             __end_of_MotorControl 1488  
                      _SetDCPWM1 1E60                        _SetDCPWM2 1E26  
                SetDCPWM1@DCycle 0013                      __end_of_adc 1F54  
                SetDCPWM2@DCycle 0013        __end_of_PID_LineFollowing 12F8  
                   ??_OpenTimer0 000F                     ??_OpenTimer2 000F  
                      _OpenUSART 1C58         __size_of_openPORTCforPWM 000E  
                 ?_check_sensors 0001                 __CFG_OSC$INTIO67 000000  
                       ??_LVtrap 0014                        _SharpTurn 1990  
             __end_of_SetChanADC 2120             __end_of_TIME_TURN_ms 100F  
              __size_of_OpenPWM1 0012                __size_of_OpenPWM2 0038  
             _TIME_SHARP_TURN_ms 100B                         ??___wmul 001A  
          ??_AllSensorsTriggered 002D                         ??_printf 0011  
                     gtrap@count 000F               __end_of_OpenTimer0 202A  
             __end_of_OpenTimer2 20DC               SharpTurn@direction 002E  
                    __pbssCOMRAM 003C                         ?_BORtask 0001  
                     ?_SetDCPWM1 000F                       ?_SetDCPWM2 000F  
                  PORtask@count1 0014                    PORtask@count2 0018  
         __size_of_set_osc_32MHz 002C                         ?_PORtask 0001  
                       ?_WDTtask 0001                       ?_OpenUSART 000F  
              __size_of_high_isr 1C50                         ?_BusyADC 0001  
                       ?_ReadADC 000F                       ?_SharpTurn 0001  
              OpenADC@portconfig 0010                         ?_OpenADC 000F  
               ___lwdiv@dividend 000F                        __pintcode 0008  
                    ??_RESETtask 0014                         ?___awdiv 001C  
                 _initialization 1ACC                __size_of_set_leds 007E  
                       ?___lwdiv 000F                         ?_isWDTTO 0001  
                    __smallconst 1000                WriteTimer0@timer0 000F  
             PID_LineFollowing@D 003F                         ?_openLVD 0001  
        SharpTurn@delta_velocity 002F       __size_of_PID_LineFollowing 0276  
                 __size_of_isBOR 0016                 ___lwdiv@quotient 0013  
                 __size_of_isPOR 0026                   __size_of_gtrap 0062  
                 __size_of_putch 0002                  ??_check_sensors 0016  
                      _openPORTA 21A0                        _openPORTB 219A  
                      _openPORTD 21A6                        _openPORTE 218E  
                 ___wmul@product 001A                    OpenADC@config 0013  
          __size_of_lvd_flag_set 0006          __size_of_GetBackonTrack 0172  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                    ??_reset_codes 001C  
               _motors_brake_all 1FC8                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1           __end_of_initialization 1B5C  
                       _RCONbits 000FD0                ??_openPORTCforPWM 000F  
                  _set_osc_32MHz 1F00                        main@F4201 003C  
                    _HLVDCONbits 000FD2                        _threshold 0049  
          __size_of_MotorControl 0190                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0016                     ?_StatusReset 0001  
                GetBackonTrack@i 0035                        main@error 0039  
   MotorControl@right_duty_cycle 002B                      ??_SetDCPWM1 0011  
                    ??_SetDCPWM2 0011                 __size_of_BORtask 0020  
                   _lvd_flag_set 2182                 __size_of_PORtask 00AC  
                    ??_OpenUSART 0011               SetDCPWM1@dutycycle 000F  
                     ?_openPORTA 0001                       ?_openPORTB 0001  
                     ?_openPORTD 0001                       ?_openPORTE 0001  
               __size_of_WDTtask 001C                  OpenUSART@config 0011  
                       _OpenPWM1 2132                         _OpenPWM2 1E9A  
PID_LineFollowing@delta_velocity 0041                 __size_of_BusyADC 000E  
                    ??_SharpTurn 002D                 __size_of_ReadADC 0010  
                       __Hrparam 0000                 __size_of_OpenADC 005E  
                   _MotorControl 12F8                  ?_initialization 0001  
                       __Lrparam 0000               SetDCPWM2@dutycycle 000F  
                 ?_set_osc_32MHz 0001              __end_of_reset_codes 1E26  
               __size_of___awdiv 0096                 __size_of___lwdiv 005C  
                   ?_WriteTimer0 000F                   OpenPWM2@ccp2mx 0010  
               __size_of_isWDTTO 0026                   OpenPWM1@period 000F  
                 OpenPWM2@period 000F                  ___lwdiv@divisor 0011  
               __size_of_openLVD 0018                  ___lwdiv@counter 0015  
                   _TIME_TURN_ms 100D                         __ptext10 20A4  
                       __ptext11 183C                         __ptext20 1C58  
                       __ptext12 1FEA                         __ptext21 20C0  
                       __ptext13 2188                         __ptext30 1ED2  
                       __ptext22 1E9A                         __ptext14 218E  
                       __ptext31 21B0                         __ptext23 2132  
                       __ptext15 2194                         __ptext40 1778  
                       __ptext32 21A6                         __ptext24 1D2A  
                       __ptext16 2166                         __ptext41 1F2C  
                       __ptext33 1CC8                         __ptext25 2144  
                       __ptext17 219A                         __ptext50 1E60  
                       __ptext42 210A                         __ptext34 1606  
                       __ptext26 1082                         __ptext18 21A0  
                       __ptext43 2156                         __ptext35 1990  
                       __ptext27 1D88                         __ptext19 20DC  
                       __ptext44 21AC                         __ptext36 204A  
                       __ptext28 200A                         __ptext45 2174  
                       __ptext37 18E8                         __ptext29 202A  
                       __ptext46 12F8                         __ptext38 1B5C  
                       __ptext47 1F54                         __ptext39 1FC8  
                       __ptext48 1A36                         __ptext49 1E26  
                       _high_isr 0008                 _CW_rotation_flag 004C  
                  __size_of_main 017E                         _lvd_flag 004F  
                       _set_leds 1B5C                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                       _D_CONSTANT 1001  
                 OpenUSART@spbrg 000F                         intlevel2 0000  
                    ??_openPORTA 000F                      ??_openPORTB 000F  
                    ??_openPORTD 000F                      ??_openPORTE 000F  
                 _GetBackonTrack 1606                _openPORTCforUSART 2194  
              SetChanADC@channel 0010                  ??_set_osc_32MHz 000F  
                    _reset_codes 1DE4                       _OSCCONbits 000FD3  
             ?_openPORTCforUSART 0001      __end_of_AllSensorsTriggered 1990  
                     _I_CONSTANT 1003                         printf@ap 0011  
            ??_openPORTCforUSART 000F         __end_of_motors_brake_all 1FEA  
           __size_of_StatusReset 0006           __end_of_GetBackonTrack 1778  
                _openPORTCforPWM 2166        __end_of_openPORTCforUSART 219A  
                     _STKFULtask 206A                       _P_CONSTANT 1005  
