

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 21:16:07 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           	psect	smallconst
    71  001000                     __psmallconst:
    72                           	opt stack 0
    73  001000  00                 	db	0
    74  001001                     _D_CONSTANT:
    75                           	opt stack 0
    76  001001  FFFF               	dw	65535
    77  001003                     __end_of_D_CONSTANT:
    78                           	opt stack 0
    79  001003                     _I_CONSTANT:
    80                           	opt stack 0
    81  001003  04E2               	dw	1250
    82  001005                     __end_of_I_CONSTANT:
    83                           	opt stack 0
    84  001005                     _P_CONSTANT:
    85                           	opt stack 0
    86  001005  0096               	dw	150
    87  001007                     __end_of_P_CONSTANT:
    88                           	opt stack 0
    89  001007                     _TURN_TIME_ms:
    90                           	opt stack 0
    91  001007  0320               	dw	800
    92  001009                     __end_of_TURN_TIME_ms:
    93                           	opt stack 0
    94  001009                     _TURN_SPEED_DIVIDER:
    95                           	opt stack 0
    96  001009  00                 	db	0
    97  00100A                     __end_of_TURN_SPEED_DIVIDER:
    98                           	opt stack 0
    99  0000                     _ADCON0	set	4034
   100  0000                     _ADCON0bits	set	4034
   101  0000                     _ADCON1	set	4033
   102  0000                     _ADCON2	set	4032
   103  0000                     _ADRESH	set	4036
   104  0000                     _ADRESL	set	4035
   105  0000                     _CCP1CON	set	4029
   106  0000                     _CCP2CON	set	4026
   107  0000                     _CCPR1L	set	4030
   108  0000                     _CCPR2L	set	4027
   109  0000                     _HLVDCONbits	set	4050
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IPR2bits	set	4002
   112  0000                     _OSCCONbits	set	4051
   113  0000                     _OSCTUNEbits	set	3995
   114  0000                     _PIE1bits	set	3997
   115  0000                     _PIE2bits	set	4000
   116  0000                     _PIR1bits	set	3998
   117  0000                     _PIR2bits	set	4001
   118  0000                     _PORTCbits	set	3970
   119  0000                     _PORTD	set	3971
   120  0000                     _PORTDbits	set	3971
   121  0000                     _PORTEbits	set	3972
   122  0000                     _PR2	set	4043
   123  0000                     _RCONbits	set	4048
   124  0000                     _RCSTA	set	4011
   125  0000                     _RCSTAbits	set	4011
   126  0000                     _SPBRG	set	4015
   127  0000                     _SPBRGH	set	4016
   128  0000                     _STKPTRbits	set	4092
   129  0000                     _T0CON	set	4053
   130  0000                     _T0CONbits	set	4053
   131  0000                     _T1CON	set	4045
   132  0000                     _T1CONbits	set	4045
   133  0000                     _T2CON	set	4042
   134  0000                     _T2CONbits	set	4042
   135  0000                     _TMR0H	set	4055
   136  0000                     _TMR0L	set	4054
   137  0000                     _TMR1H	set	4047
   138  0000                     _TMR1L	set	4046
   139  0000                     _TMR2	set	4044
   140  0000                     _TRISA	set	3986
   141  0000                     _TRISB	set	3987
   142  0000                     _TRISBbits	set	3987
   143  0000                     _TRISC	set	3988
   144  0000                     _TRISCbits	set	3988
   145  0000                     _TRISD	set	3989
   146  0000                     _TRISE	set	3990
   147  0000                     _TXSTA	set	4012
   148  0000                     _TXSTAbits	set	4012
   149  0000                     _TMR0IF	set	32658
   150  0000                     _TMR1IF	set	31984
   151  00100A                     STR_1:
   152  00100A  0A                 	db	10
   153  00100B  0D                 	db	13
   154  00100C  4B                 	db	75	;'K'
   155  00100D  77                 	db	119	;'w'
   156  00100E  61                 	db	97	;'a'
   157  00100F  6E                 	db	110	;'n'
   158  001010  74                 	db	116	;'t'
   159  001011  6C                 	db	108	;'l'
   160  001012  65                 	db	101	;'e'
   161  001013  6E                 	db	110	;'n'
   162  001014  20                 	db	32
   163  001015  41                 	db	65	;'A'
   164  001016  50                 	db	80	;'P'
   165  001017  53                 	db	83	;'S'
   166  001018  43                 	db	67	;'C'
   167  001019  31                 	db	49	;'1'
   168  00101A  32                 	db	50	;'2'
   169  00101B  39                 	db	57	;'9'
   170  00101C  39                 	db	57	;'9'
   171  00101D  20                 	db	32
   172  00101E  73                 	db	115	;'s'
   173  00101F  69                 	db	105	;'i'
   174  001020  6D                 	db	109	;'m'
   175  001021  70                 	db	112	;'p'
   176  001022  6C                 	db	108	;'l'
   177  001023  65                 	db	101	;'e'
   178  001024  20                 	db	32
   179  001025  63                 	db	99	;'c'
   180  001026  75                 	db	117	;'u'
   181  001027  72                 	db	114	;'r'
   182  001028  76                 	db	118	;'v'
   183  001029  65                 	db	101	;'e'
   184  00102A  20                 	db	32
   185  00102B  66                 	db	102	;'f'
   186  00102C  6F                 	db	111	;'o'
   187  00102D  6C                 	db	108	;'l'
   188  00102E  6C                 	db	108	;'l'
   189  00102F  6F                 	db	111	;'o'
   190  001030  77                 	db	119	;'w'
   191  001031  65                 	db	101	;'e'
   192  001032  72                 	db	114	;'r'
   193  001033  20                 	db	32
   194  001034  2D                 	db	45
   195  001035  2D                 	db	45
   196  001036  20                 	db	32
   197  001037  77                 	db	119	;'w'
   198  001038  69                 	db	105	;'i'
   199  001039  74                 	db	116	;'t'
   200  00103A  68                 	db	104	;'h'
   201  00103B  20                 	db	32
   202  00103C  65                 	db	101	;'e'
   203  00103D  72                 	db	114	;'r'
   204  00103E  72                 	db	114	;'r'
   205  00103F  6F                 	db	111	;'o'
   206  001040  72                 	db	114	;'r'
   207  001041  20                 	db	32
   208  001042  63                 	db	99	;'c'
   209  001043  6F                 	db	111	;'o'
   210  001044  64                 	db	100	;'d'
   211  001045  65                 	db	101	;'e'
   212  001046  73                 	db	115	;'s'
   213  001047  0A                 	db	10
   214  001048  0D                 	db	13
   215  001049  00                 	db	0
   216  00104A                     STR_6:
   217  00104A  20                 	db	32
   218  00104B  3C                 	db	60	;'<'
   219  00104C  72                 	db	114	;'r'
   220  00104D  65                 	db	101	;'e'
   221  00104E  73                 	db	115	;'s'
   222  00104F  65                 	db	101	;'e'
   223  001050  74                 	db	116	;'t'
   224  001051  3E                 	db	62	;'>'
   225  001052  20                 	db	32
   226  001053  00                 	db	0
   227  001054                     STR_5:
   228  001054  3C                 	db	60	;'<'
   229  001055  53                 	db	83	;'S'
   230  001056  54                 	db	84	;'T'
   231  001057  4B                 	db	75	;'K'
   232  001058  46                 	db	70	;'F'
   233  001059  55                 	db	85	;'U'
   234  00105A  4C                 	db	76	;'L'
   235  00105B  3E                 	db	62	;'>'
   236  00105C  00                 	db	0
   237  00105D                     STR_4:
   238  00105D  3C                 	db	60	;'<'
   239  00105E  57                 	db	87	;'W'
   240  00105F  44                 	db	68	;'D'
   241  001060  54                 	db	84	;'T'
   242  001061  20                 	db	32
   243  001062  54                 	db	84	;'T'
   244  001063  4F                 	db	79	;'O'
   245  001064  3E                 	db	62	;'>'
   246  001065  00                 	db	0
   247  001066                     STR_7:
   248  001066  5C                 	db	92	;'\'
   249  001067  3C                 	db	60	;'<'
   250  001068  4C                 	db	76	;'L'
   251  001069  56                 	db	86	;'V'
   252  00106A  44                 	db	68	;'D'
   253  00106B  3E                 	db	62	;'>'
   254  00106C  00                 	db	0
   255  00106D                     STR_3:
   256  00106D  3C                 	db	60	;'<'
   257  00106E  42                 	db	66	;'B'
   258  00106F  4F                 	db	79	;'O'
   259  001070  52                 	db	82	;'R'
   260  001071  3E                 	db	62	;'>'
   261  001072  00                 	db	0
   262  001073                     STR_2:
   263  001073  3C                 	db	60	;'<'
   264  001074  50                 	db	80	;'P'
   265  001075  4F                 	db	79	;'O'
   266  001076  52                 	db	82	;'R'
   267  001077  3E                 	db	62	;'>'
   268  001078  00                 	db	0
   269                           
   270                           ; #config settings
   271  001079  00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           	psect	cinit
   274  002286                     __pcinit:
   275                           	opt stack 0
   276  002286                     start_initialization:
   277                           	opt stack 0
   278  002286                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Clear objects allocated to COMRAM (15 bytes)
   282  002286  EE00  F041         	lfsr	0,__pbssCOMRAM
   283  00228A  0E0F               	movlw	15
   284  00228C                     clear_0:
   285  00228C  6AEE               	clrf	postinc0,c
   286  00228E  06E8               	decf	wreg,f,c
   287  002290  E1FD               	bnz	clear_0
   288  002292                     end_of_initialization:
   289                           	opt stack 0
   290  002292                     __end_of__initialization:
   291                           	opt stack 0
   292  002292  0100               	movlb	0
   293  002294  EF5F  F00B         	goto	_main	;jump to C main() function
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297                           	psect	bssCOMRAM
   298  000041                     __pbssCOMRAM:
   299                           	opt stack 0
   300  000041                     main@F4195:
   301                           	opt stack 0
   302  000041                     	ds	3
   303  000044                     PID_LineFollowing@D:
   304                           	opt stack 0
   305  000044                     	ds	2
   306  000046                     PID_LineFollowing@delta_velocity:
   307                           	opt stack 0
   308  000046                     	ds	2
   309  000048                     _I:
   310                           	opt stack 0
   311  000048                     	ds	2
   312  00004A                     _threshold:
   313                           	opt stack 0
   314  00004A                     	ds	2
   315  00004C                     _CCW_rotation_flag:
   316                           	opt stack 0
   317  00004C                     	ds	1
   318  00004D                     _CW_rotation_flag:
   319                           	opt stack 0
   320  00004D                     	ds	1
   321  00004E                     _SeeLine:
   322                           	opt stack 0
   323  00004E                     	ds	1
   324  00004F                     _lvd_flag:
   325                           	opt stack 0
   326  00004F                     	ds	1
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           
   330                           	psect	cstackCOMRAM
   331  000001                     __pcstackCOMRAM:
   332                           	opt stack 0
   333  000001                     ??_high_isr:
   334  000001                     
   335                           ; 1 bytes @ 0x0
   336  000001                     	ds	14
   337  00000F                     ??_set_leds:
   338  00000F                     ??_SetChanADC:
   339  00000F                     ?_printf:
   340                           	opt stack 0
   341  00000F                     ?_ReadTimer1:
   342                           	opt stack 0
   343  00000F                     ?_ReadTimer0:
   344                           	opt stack 0
   345  00000F                     ?_ReadADC:
   346                           	opt stack 0
   347  00000F                     ?___aldiv:
   348                           	opt stack 0
   349  00000F                     OpenADC@config2:
   350                           	opt stack 0
   351  00000F                     OpenPWM1@period:
   352                           	opt stack 0
   353  00000F                     OpenPWM2@period:
   354                           	opt stack 0
   355  00000F                     OpenTimer0@config:
   356                           	opt stack 0
   357  00000F                     OpenTimer1@config:
   358                           	opt stack 0
   359  00000F                     OpenTimer2@config:
   360                           	opt stack 0
   361  00000F                     set_osc_32MHz@i:
   362                           	opt stack 0
   363  00000F                     printf@f:
   364                           	opt stack 0
   365  00000F                     SetDCPWM1@dutycycle:
   366                           	opt stack 0
   367  00000F                     SetDCPWM2@dutycycle:
   368                           	opt stack 0
   369  00000F                     WriteTimer0@timer0:
   370                           	opt stack 0
   371  00000F                     WriteTimer1@timer1:
   372                           	opt stack 0
   373  00000F                     OpenUSART@spbrg:
   374                           	opt stack 0
   375  00000F                     gtrap@count:
   376                           	opt stack 0
   377  00000F                     ___aldiv@dividend:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0xE
   381  00000F                     	ds	1
   382  000010                     OpenADC@portconfig:
   383                           	opt stack 0
   384  000010                     SetChanADC@channel:
   385                           	opt stack 0
   386  000010                     OpenPWM2@ccp2mx:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0xF
   390  000010                     	ds	1
   391  000011                     ??_SetDCPWM2:
   392  000011                     ??_SetDCPWM1:
   393  000011                     ??_OpenADC:
   394  000011                     ??_ReadADC:
   395  000011                     OpenUSART@config:
   396                           	opt stack 0
   397  000011                     printf@ap:
   398                           	opt stack 0
   399  000011                     ReadTimer0@timer:
   400                           	opt stack 0
   401  000011                     WriteTimer0@timer:
   402                           	opt stack 0
   403  000011                     ReadTimer1@timer:
   404                           	opt stack 0
   405  000011                     WriteTimer1@timer:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x10
   409  000011                     	ds	2
   410  000013                     ?_adc:
   411                           	opt stack 0
   412  000013                     ?___lwdiv:
   413                           	opt stack 0
   414  000013                     printf@c:
   415                           	opt stack 0
   416  000013                     OpenADC@config:
   417                           	opt stack 0
   418  000013                     SetDCPWM1@DCycle:
   419                           	opt stack 0
   420  000013                     SetDCPWM2@DCycle:
   421                           	opt stack 0
   422  000013                     ___lwdiv@dividend:
   423                           	opt stack 0
   424  000013                     ___aldiv@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 4 bytes @ 0x12
   428  000013                     	ds	1
   429  000014                     PORtask@count1:
   430                           	opt stack 0
   431                           
   432                           ; 4 bytes @ 0x13
   433  000014                     	ds	1
   434  000015                     adc@channel:
   435                           	opt stack 0
   436  000015                     ___lwdiv@divisor:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x14
   440  000015                     	ds	1
   441  000016                     ??_check_sensors:
   442                           
   443                           ; 0 bytes @ 0x15
   444  000016                     	ds	1
   445  000017                     ___aldiv@counter:
   446                           	opt stack 0
   447  000017                     ___lwdiv@quotient:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x16
   451  000017                     	ds	1
   452  000018                     ___aldiv@sign:
   453                           	opt stack 0
   454  000018                     PORtask@count2:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x17
   458  000018                     	ds	1
   459  000019                     ___lwdiv@counter:
   460                           	opt stack 0
   461  000019                     ___aldiv@quotient:
   462                           	opt stack 0
   463                           
   464                           ; 4 bytes @ 0x18
   465  000019                     	ds	3
   466  00001C                     
   467                           ; 0 bytes @ 0x1B
   468  00001C                     	ds	1
   469  00001D                     ?___wmul:
   470                           	opt stack 0
   471  00001D                     ___wmul@multiplier:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x1C
   475  00001D                     	ds	2
   476  00001F                     ___wmul@multiplicand:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x1E
   480  00001F                     	ds	2
   481  000021                     ___wmul@product:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x20
   485  000021                     	ds	2
   486  000023                     ?___awdiv:
   487                           	opt stack 0
   488  000023                     ___awdiv@dividend:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x22
   492  000023                     	ds	2
   493  000025                     ___awdiv@divisor:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x24
   497  000025                     	ds	2
   498  000027                     ___awdiv@counter:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x26
   502  000027                     	ds	1
   503  000028                     ___awdiv@sign:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x27
   507  000028                     	ds	1
   508  000029                     ___awdiv@quotient:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x28
   512  000029                     	ds	2
   513  00002B                     MotorControl@delta_velocity:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x2A
   517  00002B                     	ds	2
   518  00002D                     MotorControl@speed_divider:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x2C
   522  00002D                     	ds	1
   523  00002E                     ??_MotorControl:
   524                           
   525                           ; 0 bytes @ 0x2D
   526  00002E                     	ds	1
   527  00002F                     MotorControl@left_dir_modifier:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x2E
   531  00002F                     	ds	1
   532  000030                     MotorControl@right_dir_modifier:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x2F
   536  000030                     	ds	1
   537  000031                     MotorControl@left_duty_cycle:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x30
   541  000031                     	ds	2
   542  000033                     MotorControl@right_duty_cycle:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x32
   546  000033                     	ds	2
   547  000035                     ??_SharpTurn:
   548  000035                     PID_LineFollowing@error:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x34
   552  000035                     	ds	1
   553  000036                     SharpTurn@direction:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x35
   557  000036                     	ds	1
   558  000037                     ??_PID_LineFollowing:
   559  000037                     SharpTurn@delta_velocity:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x36
   563  000037                     	ds	2
   564  000039                     GetBackonTrack@error:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x38
   568  000039                     	ds	2
   569  00003B                     ??_GetBackonTrack:
   570                           
   571                           ; 0 bytes @ 0x3A
   572  00003B                     	ds	1
   573  00003C                     GetBackonTrack@i:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x3B
   577  00003C                     	ds	2
   578  00003E                     main@error:
   579                           	opt stack 0
   580                           
   581                           ; 3 bytes @ 0x3D
   582  00003E                     	ds	3
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 27 in file "../Robot Files/main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  error           3   61[COMRAM] char [3]
   596 ;; Return value:  Size  Location     Type
   597 ;;		None               void
   598 ;; Registers used:
   599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        3 bytes
   610 ;; Hardware stack levels required when called:    6
   611 ;; This function calls:
   612 ;;		_AllSensorsTriggered
   613 ;;		_FilterNearbyTrack
   614 ;;		_GetBackonTrack
   615 ;;		_LVtrap
   616 ;;		_OpenTimer0
   617 ;;		_OpenTimer1
   618 ;;		_PID_LineFollowing
   619 ;;		_WriteTimer0
   620 ;;		_WriteTimer1
   621 ;;		_check_sensors
   622 ;;		_initialization
   623 ;;		_lvd_flag_set
   624 ;;		_printf
   625 ;;		_set_leds
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632  0016BE                     __ptext0:
   633                           	opt stack 0
   634  0016BE                     _main:
   635                           	opt stack 25
   636                           
   637                           ;main.c: 29: signed char error[3]={0};
   638                           
   639                           ;incstack = 0
   640  0016BE  C041  F03E         	movff	main@F4195,main@error
   641  0016C2  C042  F03F         	movff	main@F4195+1,main@error+1
   642  0016C6  C043  F040         	movff	main@F4195+2,main@error+2
   643                           
   644                           ;main.c: 32: initialization();
   645  0016CA  ECD1  F00D         	call	_initialization	;wreg free
   646                           
   647                           ;main.c: 37: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   648  0016CE  0E0A               	movlw	low STR_1
   649  0016D0  6E0F               	movwf	printf@f,c
   650  0016D2  0E10               	movlw	high STR_1
   651  0016D4  6E10               	movwf	printf@f+1,c
   652  0016D6  EC06  F010         	call	_printf	;wreg free
   653  0016DA  0004               	clrwdt		;# 
   654                           
   655                           ;main.c: 39: threshold = 575u;
   656  0016DC  0E02               	movlw	2
   657  0016DE  6E4B               	movwf	_threshold+1,c
   658  0016E0  0E3F               	movlw	63
   659  0016E2  6E4A               	movwf	_threshold,c
   660                           
   661                           ;main.c: 43: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   662  0016E4  0E16               	movlw	22
   663  0016E6  ECB8  F010         	call	_OpenTimer0
   664                           
   665                           ;main.c: 44: WriteTimer0(0);
   666  0016EA  0E00               	movlw	0
   667  0016EC  6E10               	movwf	WriteTimer0@timer0+1,c
   668  0016EE  0E00               	movlw	0
   669  0016F0  6E0F               	movwf	WriteTimer0@timer0,c
   670  0016F2  EC70  F011         	call	_WriteTimer0	;wreg free
   671                           
   672                           ;main.c: 45: TMR0IF = 0;
   673  0016F6  94F2               	bcf	intcon,2,c	;volatile
   674                           
   675                           ;main.c: 46: OpenTimer1(0b01111111 & 0b11111101 & 0b11111111);
   676  0016F8  0E7D               	movlw	125
   677  0016FA  EC33  F010         	call	_OpenTimer1
   678                           
   679                           ;main.c: 47: WriteTimer1(0);
   680  0016FE  0E00               	movlw	0
   681  001700  6E10               	movwf	WriteTimer1@timer1+1,c
   682  001702  0E00               	movlw	0
   683  001704  6E0F               	movwf	WriteTimer1@timer1,c
   684  001706  EC55  F011         	call	_WriteTimer1	;wreg free
   685                           
   686                           ;main.c: 48: TMR1IF = 0;
   687  00170A  909E               	bcf	3998,0,c	;volatile
   688  00170C  D000               	goto	l2841
   689  00170E                     l2841:
   690                           
   691                           ;main.c: 50: {
   692                           ;main.c: 51: check_sensors();
   693  00170E  EC79  F00C         	call	_check_sensors	;wreg free
   694                           
   695                           ;main.c: 53: FilterNearbyTrack();
   696  001712  ECD8  F010         	call	_FilterNearbyTrack	;wreg free
   697                           
   698                           ;main.c: 60: switch(SeeLine.B)
   699  001716  D037               	goto	l2883
   700  001718                     l2845:
   701                           
   702                           ;main.c: 63: error[2]=1; break;
   703  001718  0E01               	movlw	1
   704  00171A  D033               	goto	L7
   705  00171C                     l2847:
   706                           
   707                           ;main.c: 65: error[2]=2; break;
   708  00171C  0E02               	movlw	2
   709  00171E  D031               	goto	L7
   710  001720                     l2849:
   711                           
   712                           ;main.c: 67: error[2]=3; break;
   713  001720  0E03               	movlw	3
   714  001722  D02F               	goto	L7
   715  001724                     l2851:
   716                           
   717                           ;main.c: 69: error[2]=4; break;
   718  001724  0E04               	movlw	4
   719  001726  D02D               	goto	L7
   720  001728                     l84:
   721                           
   722                           ;main.c: 71: error[2]=-1; break;
   723  001728  6840               	setf	main@error+2,c
   724  00172A  D05A               	goto	l80
   725  00172C                     l2853:
   726                           
   727                           ;main.c: 73: error[2]=-2; break;
   728  00172C  0EFE               	movlw	254
   729  00172E  D029               	goto	L7
   730  001730                     l2855:
   731                           
   732                           ;main.c: 75: error[2]=-3; break;
   733  001730  0EFD               	movlw	253
   734  001732  D027               	goto	L7
   735  001734                     l2857:
   736                           
   737                           ;main.c: 77: error[2]=-4; break;
   738  001734  0EFC               	movlw	252
   739  001736  D025               	goto	L7
   740                           
   741                           ;main.c: 78: case 0b00111u:
   742  001738  D000               	goto	l2859
   743  00173A                     l2859:
   744                           
   745                           ;main.c: 79: case 0b01111u:
   746                           ;main.c: 80: {
   747                           ;main.c: 81: WriteTimer0(32768);
   748  00173A  0E80               	movlw	128
   749  00173C  6E10               	movwf	WriteTimer0@timer0+1,c
   750  00173E  0E00               	movlw	0
   751  001740  6E0F               	movwf	WriteTimer0@timer0,c
   752  001742  EC70  F011         	call	_WriteTimer0	;wreg free
   753                           
   754                           ;main.c: 82: TMR0IF = 0;
   755  001746  94F2               	bcf	intcon,2,c	;volatile
   756                           
   757                           ;main.c: 83: CW_rotation_flag = 1;
   758  001748  0E01               	movlw	1
   759  00174A  6E4D               	movwf	_CW_rotation_flag,c
   760                           
   761                           ;main.c: 84: CCW_rotation_flag = 0;
   762  00174C  0E00               	movlw	0
   763  00174E  6E4C               	movwf	_CCW_rotation_flag,c
   764                           
   765                           ;main.c: 85: }break;
   766  001750  D047               	goto	l80
   767                           
   768                           ;main.c: 86: case 0b11100u:
   769  001752  D000               	goto	l2867
   770  001754                     l2867:
   771                           
   772                           ;main.c: 87: case 0b11110u:
   773                           ;main.c: 88: {
   774                           ;main.c: 89: WriteTimer0(32768);
   775  001754  0E80               	movlw	128
   776  001756  6E10               	movwf	WriteTimer0@timer0+1,c
   777  001758  0E00               	movlw	0
   778  00175A  6E0F               	movwf	WriteTimer0@timer0,c
   779  00175C  EC70  F011         	call	_WriteTimer0	;wreg free
   780                           
   781                           ;main.c: 90: TMR0IF = 0;
   782  001760  94F2               	bcf	intcon,2,c	;volatile
   783                           
   784                           ;main.c: 91: CCW_rotation_flag = 1;
   785  001762  0E01               	movlw	1
   786  001764  6E4C               	movwf	_CCW_rotation_flag,c
   787                           
   788                           ;main.c: 92: CW_rotation_flag = 0;
   789  001766  0E00               	movlw	0
   790  001768  6E4D               	movwf	_CW_rotation_flag,c
   791                           
   792                           ;main.c: 93: }break;
   793  00176A  D03A               	goto	l80
   794  00176C                     l2875:
   795                           
   796                           ;main.c: 95: GetBackonTrack(error); break;
   797  00176C  0E3E               	movlw	low main@error
   798  00176E  6E39               	movwf	GetBackonTrack@error,c
   799  001770  0E00               	movlw	high main@error
   800  001772  6E3A               	movwf	GetBackonTrack@error+1,c
   801  001774  ECAC  F00A         	call	_GetBackonTrack	;wreg free
   802  001778  D033               	goto	l80
   803  00177A                     l2877:
   804                           
   805                           ;main.c: 97: AllSensorsTriggered(); break;
   806  00177A  ECCF  F00E         	call	_AllSensorsTriggered	;wreg free
   807  00177E  D030               	goto	l80
   808  001780                     l2879:
   809                           
   810                           ;main.c: 99: error[2]=0; break;
   811  001780  0E00               	movlw	0
   812  001782                     L7:
   813  001782  6E40               	movwf	main@error+2,c
   814                           
   815                           ;main.c: 100: }
   816  001784  D02D               	goto	l80
   817  001786                     l2883:
   818  001786  504E               	movf	_SeeLine,w,c
   819  001788  0B1F               	andlw	31
   820                           
   821                           ; Switch size 1, requested type "space"
   822                           ; Number of cases is 14, Range of values is 0 to 31
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte           43    22 (average)
   826                           ;	Chosen strategy is simple_byte
   827  00178A  0A00               	xorlw	0	; case 0
   828  00178C  B4D8               	btfsc	status,2,c
   829  00178E  D7EE               	goto	l2875
   830  001790  0A01               	xorlw	1	; case 1
   831  001792  B4D8               	btfsc	status,2,c
   832  001794  D7C7               	goto	l2851
   833  001796  0A03               	xorlw	3	; case 2
   834  001798  B4D8               	btfsc	status,2,c
   835  00179A  D7C0               	goto	l2847
   836  00179C  0A01               	xorlw	1	; case 3
   837  00179E  B4D8               	btfsc	status,2,c
   838  0017A0  D7BF               	goto	l2849
   839  0017A2  0A05               	xorlw	5	; case 6
   840  0017A4  B4D8               	btfsc	status,2,c
   841  0017A6  D7B8               	goto	l2845
   842  0017A8  0A01               	xorlw	1	; case 7
   843  0017AA  B4D8               	btfsc	status,2,c
   844  0017AC  D7C6               	goto	l2859
   845  0017AE  0A0F               	xorlw	15	; case 8
   846  0017B0  B4D8               	btfsc	status,2,c
   847  0017B2  D7BC               	goto	l2853
   848  0017B4  0A04               	xorlw	4	; case 12
   849  0017B6  B4D8               	btfsc	status,2,c
   850  0017B8  D7B7               	goto	l84
   851  0017BA  0A03               	xorlw	3	; case 15
   852  0017BC  B4D8               	btfsc	status,2,c
   853  0017BE  D7BD               	goto	l2859
   854  0017C0  0A1F               	xorlw	31	; case 16
   855  0017C2  B4D8               	btfsc	status,2,c
   856  0017C4  D7B7               	goto	l2857
   857  0017C6  0A08               	xorlw	8	; case 24
   858  0017C8  B4D8               	btfsc	status,2,c
   859  0017CA  D7B2               	goto	l2855
   860  0017CC  0A04               	xorlw	4	; case 28
   861  0017CE  B4D8               	btfsc	status,2,c
   862  0017D0  D7C1               	goto	l2867
   863  0017D2  0A02               	xorlw	2	; case 30
   864  0017D4  B4D8               	btfsc	status,2,c
   865  0017D6  D7BE               	goto	l2867
   866  0017D8  0A01               	xorlw	1	; case 31
   867  0017DA  B4D8               	btfsc	status,2,c
   868  0017DC  D7CE               	goto	l2877
   869  0017DE  D7D0               	goto	l2879
   870  0017E0                     l80:
   871                           
   872                           ;main.c: 102: if(TMR0IF)
   873  0017E0  A4F2               	btfss	intcon,2,c	;volatile
   874  0017E2  D005               	goto	l2887
   875                           
   876                           ;main.c: 103: {
   877                           ;main.c: 104: CW_rotation_flag = 0;
   878  0017E4  0E00               	movlw	0
   879  0017E6  6E4D               	movwf	_CW_rotation_flag,c
   880                           
   881                           ;main.c: 105: CCW_rotation_flag = 0;
   882  0017E8  0E00               	movlw	0
   883  0017EA  6E4C               	movwf	_CCW_rotation_flag,c
   884  0017EC  D000               	goto	l2887
   885  0017EE                     l2887:
   886                           
   887                           ;main.c: 106: }
   888                           ;main.c: 108: set_leds();
   889  0017EE  EC19  F00E         	call	_set_leds	;wreg free
   890                           
   891                           ;main.c: 109: PID_LineFollowing(error);
   892  0017F2  0E3E               	movlw	low main@error
   893  0017F4  6E35               	movwf	PID_LineFollowing@error,c
   894  0017F6  0E00               	movlw	high main@error
   895  0017F8  6E36               	movwf	PID_LineFollowing@error+1,c
   896  0017FA  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   897  0017FE  0004               	clrwdt		;# 
   898                           
   899                           ;main.c: 112: if(lvd_flag_set()) LVtrap();
   900  001800  EC8F  F011         	call	_lvd_flag_set	;wreg free
   901  001804  0900               	iorlw	0
   902  001806  B4D8               	btfsc	status,2,c
   903  001808  D782               	goto	l2841
   904  00180A  ECC8  F010         	call	_LVtrap	;wreg free
   905  00180E  D77F               	goto	l2841
   906  001810  EF0C  F000         	goto	start
   907  001814                     __end_of_main:
   908                           	opt stack 0
   909                           intcon	equ	0xFF2
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _lvd_flag_set *****************
   915 ;; Defined at:
   916 ;;		line 47 in file "../Robot Files/interrupts.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      unsigned char 
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text1
   945  00231E                     __ptext1:
   946                           	opt stack 0
   947  00231E                     _lvd_flag_set:
   948                           	opt stack 29
   949                           
   950                           ;interrupts.c: 49: return lvd_flag;
   951                           
   952                           ;incstack = 0
   953  00231E  504F               	movf	_lvd_flag,w,c
   954  002320  D000               	goto	l402
   955  002322                     l402:
   956  002322  0012               	return		;funcret
   957  002324                     __end_of_lvd_flag_set:
   958                           	opt stack 0
   959                           intcon	equ	0xFF2
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _initialization *****************
   965 ;; Defined at:
   966 ;;		line 65 in file "../Robot Files/sumovore.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    5
   987 ;; This function calls:
   988 ;;		_OpenADC
   989 ;;		_OpenPWM1
   990 ;;		_OpenPWM2
   991 ;;		_OpenTimer2
   992 ;;		_OpenUSART
   993 ;;		_SetDCPWM1
   994 ;;		_SetDCPWM2
   995 ;;		_openLVD
   996 ;;		_openPORTA
   997 ;;		_openPORTB
   998 ;;		_openPORTCforPWM
   999 ;;		_openPORTCforUSART
  1000 ;;		_openPORTD
  1001 ;;		_openPORTE
  1002 ;;		_reset_codes
  1003 ;;		_set_osc_32MHz
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text2
  1010  001BA2                     __ptext2:
  1011                           	opt stack 0
  1012  001BA2                     _initialization:
  1013                           	opt stack 25
  1014                           
  1015                           ;sumovore.c: 67: SeeLine.B = 0;
  1016                           
  1017                           ;incstack = 0
  1018  001BA2  904E               	bcf	_SeeLine,0,c
  1019  001BA4  924E               	bcf	_SeeLine,1,c
  1020  001BA6  944E               	bcf	_SeeLine,2,c
  1021  001BA8  964E               	bcf	_SeeLine,3,c
  1022  001BAA  984E               	bcf	_SeeLine,4,c
  1023                           
  1024                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  1025  001BAC  8ED0               	bsf	4048,7,c	;volatile
  1026                           
  1027                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  1028  001BAE  9EF2               	bcf	intcon,7,c	;volatile
  1029                           
  1030                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  1031  001BB0  9CF2               	bcf	intcon,6,c	;volatile
  1032                           
  1033                           ;sumovore.c: 72: set_osc_32MHz();
  1034  001BB2  EC1D  F010         	call	_set_osc_32MHz	;wreg free
  1035                           
  1036                           ;sumovore.c: 73: openPORTCforUSART();
  1037  001BB6  EC98  F011         	call	_openPORTCforUSART	;wreg free
  1038                           
  1039                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1040                           ;sumovore.c: 76: 16 );
  1041  001BBA  0E00               	movlw	0
  1042  001BBC  6E10               	movwf	OpenUSART@spbrg+1,c
  1043  001BBE  0E10               	movlw	16
  1044  001BC0  6E0F               	movwf	OpenUSART@spbrg,c
  1045  001BC2  0E3C               	movlw	60
  1046  001BC4  EC97  F00E         	call	_OpenUSART
  1047                           
  1048                           ;sumovore.c: 82: openPORTD();
  1049  001BC8  ECA1  F011         	call	_openPORTD	;wreg free
  1050                           
  1051                           ;sumovore.c: 83: PORTD = 0;
  1052  001BCC  0E00               	movlw	0
  1053  001BCE  6E83               	movwf	3971,c	;volatile
  1054                           
  1055                           ;sumovore.c: 85: reset_codes();
  1056  001BD0  EC8F  F00F         	call	_reset_codes	;wreg free
  1057                           
  1058                           ;sumovore.c: 87: openPORTCforPWM();
  1059  001BD4  EC81  F011         	call	_openPORTCforPWM	;wreg free
  1060                           
  1061                           ;sumovore.c: 89: openPORTA();
  1062  001BD8  EC9E  F011         	call	_openPORTA	;wreg free
  1063                           
  1064                           ;sumovore.c: 90: openPORTB();
  1065  001BDC  EC9B  F011         	call	_openPORTB	;wreg free
  1066                           
  1067                           ;sumovore.c: 91: openPORTE();
  1068  001BE0  EC95  F011         	call	_openPORTE	;wreg free
  1069                           
  1070                           ;sumovore.c: 94: openLVD();
  1071  001BE4  EC21  F011         	call	_openLVD	;wreg free
  1072                           
  1073                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1074  001BE8  0E0C               	movlw	12
  1075  001BEA  6E0F               	movwf	OpenADC@config2,c
  1076  001BEC  0E0A               	movlw	10
  1077  001BEE  6E10               	movwf	OpenADC@portconfig,c
  1078  001BF0  0EA7               	movlw	167
  1079  001BF2  EC32  F00F         	call	_OpenADC
  1080                           
  1081                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1082  001BF6  9A82               	bcf	3970,5,c	;volatile
  1083                           
  1084                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1085  001BF8  9084               	bcf	3972,0,c	;volatile
  1086                           
  1087                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1088  001BFA  9082               	bcf	3970,0,c	;volatile
  1089                           
  1090                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1091  001BFC  9284               	bcf	3972,1,c	;volatile
  1092                           
  1093                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1094  001BFE  0E06               	movlw	6
  1095  001C00  EC13  F011         	call	_OpenTimer2
  1096                           
  1097                           ;sumovore.c: 110: OpenPWM1(199);
  1098  001C04  0EC7               	movlw	199
  1099  001C06  EC4C  F011         	call	_OpenPWM1
  1100                           
  1101                           ;sumovore.c: 112: OpenPWM2(199);
  1102  001C0A  0EC7               	movlw	199
  1103  001C0C  ECEA  F00F         	call	_OpenPWM2
  1104                           
  1105                           ;sumovore.c: 113: SetDCPWM1(0);
  1106  001C10  0E00               	movlw	0
  1107  001C12  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1108  001C14  0E00               	movlw	0
  1109  001C16  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1110  001C18  ECCD  F00F         	call	_SetDCPWM1	;wreg free
  1111                           
  1112                           ;sumovore.c: 116: SetDCPWM2(0);
  1113  001C1C  0E00               	movlw	0
  1114  001C1E  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1115  001C20  0E00               	movlw	0
  1116  001C22  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1117  001C24  ECB0  F00F         	call	_SetDCPWM2	;wreg free
  1118                           
  1119                           ;sumovore.c: 117: threshold = 512u;
  1120  001C28  0E02               	movlw	2
  1121  001C2A  6E4B               	movwf	_threshold+1,c
  1122  001C2C  0E00               	movlw	0
  1123  001C2E  6E4A               	movwf	_threshold,c
  1124  001C30  0012               	return		;funcret
  1125  001C32                     __end_of_initialization:
  1126                           	opt stack 0
  1127                           intcon	equ	0xFF2
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _set_osc_32MHz *****************
  1133 ;; Defined at:
  1134 ;;		line 18 in file "../Robot Files/osc.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  i               2   14[COMRAM] int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;Total ram usage:        2 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_initialization
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text3
  1163  00203A                     __ptext3:
  1164                           	opt stack 0
  1165  00203A                     _set_osc_32MHz:
  1166                           	opt stack 28
  1167                           
  1168                           ;osc.c: 20: int i;
  1169                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1170                           
  1171                           ;incstack = 0
  1172  00203A  8CD3               	bsf	4051,6,c	;volatile
  1173                           
  1174                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1175  00203C  8AD3               	bsf	4051,5,c	;volatile
  1176                           
  1177                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1178  00203E  88D3               	bsf	4051,4,c	;volatile
  1179                           
  1180                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1181  002040  8C9B               	bsf	3995,6,c	;volatile
  1182                           
  1183                           ;osc.c: 28: for(i=0;i<500;i++);
  1184  002042  0E00               	movlw	0
  1185  002044  6E10               	movwf	set_osc_32MHz@i+1,c
  1186  002046  0E00               	movlw	0
  1187  002048  6E0F               	movwf	set_osc_32MHz@i,c
  1188  00204A                     l1649:
  1189  00204A  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1190  00204C  D008               	goto	l1653
  1191  00204E  0EF4               	movlw	244
  1192  002050  5C0F               	subwf	set_osc_32MHz@i,w,c
  1193  002052  0E01               	movlw	1
  1194  002054  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1195  002056  B0D8               	btfsc	status,0,c
  1196  002058  D005               	goto	l411
  1197  00205A  D001               	goto	l1653
  1198  00205C  D003               	goto	l411
  1199  00205E                     l1653:
  1200  00205E  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1201  002060  2A10               	incf	set_osc_32MHz@i+1,f,c
  1202  002062  D7F3               	goto	l1649
  1203  002064                     l411:
  1204  002064  0012               	return		;funcret
  1205  002066                     __end_of_set_osc_32MHz:
  1206                           	opt stack 0
  1207                           intcon	equ	0xFF2
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _reset_codes *****************
  1213 ;; Defined at:
  1214 ;;		line 282 in file "../Robot Files/sumovore.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;		None               void
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    4
  1235 ;; This function calls:
  1236 ;;		_BORtask
  1237 ;;		_PORtask
  1238 ;;		_RESETtask
  1239 ;;		_STKFULtask
  1240 ;;		_WDTtask
  1241 ;;		_isBOR
  1242 ;;		_isPOR
  1243 ;;		_isWDTTO
  1244 ;; This function is called by:
  1245 ;;		_initialization
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text4
  1250  001F1E                     __ptext4:
  1251                           	opt stack 0
  1252  001F1E                     _reset_codes:
  1253                           	opt stack 25
  1254                           
  1255                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1256                           
  1257                           ;incstack = 0
  1258  001F1E  EC84  F010         	call	_isPOR	;wreg free
  1259  001F22  0900               	iorlw	0
  1260  001F24  B4D8               	btfsc	status,2,c
  1261  001F26  D003               	goto	l2541
  1262  001F28  ECDB  F00C         	call	_PORtask	;wreg free
  1263  001F2C  D018               	goto	l342
  1264  001F2E                     l2541:
  1265                           
  1266                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1267  001F2E  EC2D  F011         	call	_isBOR	;wreg free
  1268  001F32  0900               	iorlw	0
  1269  001F34  B4D8               	btfsc	status,2,c
  1270  001F36  D003               	goto	l2545
  1271  001F38  ECA8  F010         	call	_BORtask	;wreg free
  1272  001F3C  D010               	goto	l342
  1273  001F3E                     l2545:
  1274                           
  1275                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1276  001F3E  EC71  F010         	call	_isWDTTO	;wreg free
  1277  001F42  0900               	iorlw	0
  1278  001F44  B4D8               	btfsc	status,2,c
  1279  001F46  D003               	goto	l338
  1280  001F48  ECF7  F010         	call	_WDTtask	;wreg free
  1281  001F4C  D008               	goto	l342
  1282  001F4E                     l338:
  1283                           
  1284                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1285  001F4E  AEFC               	btfss	stkptr,7,c	;volatile
  1286  001F50  D003               	goto	l2551
  1287  001F52  ECE8  F010         	call	_STKFULtask	;wreg free
  1288  001F56  D003               	goto	l342
  1289  001F58                     l2551:
  1290                           
  1291                           ;sumovore.c: 297: else RESETtask();
  1292  001F58  EC05  F011         	call	_RESETtask	;wreg free
  1293  001F5C  D000               	goto	l342
  1294  001F5E                     l342:
  1295  001F5E  0012               	return		;funcret
  1296  001F60                     __end_of_reset_codes:
  1297                           	opt stack 0
  1298                           stkptr	equ	0xFFC
  1299                           intcon	equ	0xFF2
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           status	equ	0xFD8
  1303                           
  1304 ;; *************** function _isWDTTO *****************
  1305 ;; Defined at:
  1306 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      unsigned char 
  1313 ;; Registers used:
  1314 ;;		wreg
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_reset_codes
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text5
  1335  0020E2                     __ptext5:
  1336                           	opt stack 0
  1337  0020E2                     _isWDTTO:
  1338                           	opt stack 27
  1339                           
  1340                           ;incstack = 0
  1341  0020E2  A2D0               	btfss	4048,1,c	;volatile
  1342  0020E4  D00E               	goto	l1551
  1343  0020E6  A4D0               	btfss	4048,2,c	;volatile
  1344  0020E8  D00A               	goto	l1547
  1345  0020EA  A0D0               	btfss	4048,0,c	;volatile
  1346  0020EC  D006               	goto	l1543
  1347  0020EE  A6D0               	btfss	4048,3,c	;volatile
  1348  0020F0  D002               	goto	l1539
  1349  0020F2  D003               	goto	l1543
  1350  0020F4  D008               	goto	l661
  1351  0020F6                     l1539:
  1352  0020F6  0E01               	movlw	1
  1353  0020F8  D006               	goto	l661
  1354  0020FA                     l1543:
  1355  0020FA  0E00               	movlw	0
  1356  0020FC  D004               	goto	l661
  1357  0020FE                     l1547:
  1358  0020FE  0E00               	movlw	0
  1359  002100  D002               	goto	l661
  1360  002102                     l1551:
  1361  002102  0E00               	movlw	0
  1362  002104  D000               	goto	l661
  1363  002106                     l661:
  1364  002106  0012               	return		;funcret
  1365  002108                     __end_of_isWDTTO:
  1366                           	opt stack 0
  1367                           stkptr	equ	0xFFC
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _isPOR *****************
  1374 ;; Defined at:
  1375 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      unsigned char 
  1382 ;; Registers used:
  1383 ;;		wreg
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_reset_codes
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text6
  1404  002108                     __ptext6:
  1405                           	opt stack 0
  1406  002108                     _isPOR:
  1407                           	opt stack 27
  1408                           
  1409                           ;incstack = 0
  1410  002108  B2D0               	btfsc	4048,1,c	;volatile
  1411  00210A  D00E               	goto	l1459
  1412  00210C  A4D0               	btfss	4048,2,c	;volatile
  1413  00210E  D00A               	goto	l1455
  1414  002110  B0D0               	btfsc	4048,0,c	;volatile
  1415  002112  D006               	goto	l1451
  1416  002114  B6D0               	btfsc	4048,3,c	;volatile
  1417  002116  D002               	goto	l1447
  1418  002118  D003               	goto	l1451
  1419  00211A  D008               	goto	l652
  1420  00211C                     l1447:
  1421  00211C  0E01               	movlw	1
  1422  00211E  D006               	goto	l652
  1423  002120                     l1451:
  1424  002120  0E00               	movlw	0
  1425  002122  D004               	goto	l652
  1426  002124                     l1455:
  1427  002124  0E00               	movlw	0
  1428  002126  D002               	goto	l652
  1429  002128                     l1459:
  1430  002128  0E00               	movlw	0
  1431  00212A  D000               	goto	l652
  1432  00212C                     l652:
  1433  00212C  0012               	return		;funcret
  1434  00212E                     __end_of_isPOR:
  1435                           	opt stack 0
  1436                           stkptr	equ	0xFFC
  1437                           intcon	equ	0xFF2
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           status	equ	0xFD8
  1441                           
  1442 ;; *************** function _isBOR *****************
  1443 ;; Defined at:
  1444 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      unsigned char 
  1451 ;; Registers used:
  1452 ;;		wreg
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_reset_codes
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text7
  1473  00225A                     __ptext7:
  1474                           	opt stack 0
  1475  00225A                     _isBOR:
  1476                           	opt stack 27
  1477                           
  1478                           ;incstack = 0
  1479  00225A  B0D0               	btfsc	4048,0,c	;volatile
  1480  00225C  D006               	goto	l1507
  1481  00225E  B2D0               	btfsc	4048,1,c	;volatile
  1482  002260  D002               	goto	l1503
  1483  002262  D003               	goto	l1507
  1484  002264  D004               	goto	l643
  1485  002266                     l1503:
  1486  002266  0E01               	movlw	1
  1487  002268  D002               	goto	l643
  1488  00226A                     l1507:
  1489  00226A  0E00               	movlw	0
  1490  00226C  D000               	goto	l643
  1491  00226E                     l643:
  1492  00226E  0012               	return		;funcret
  1493  002270                     __end_of_isBOR:
  1494                           	opt stack 0
  1495                           stkptr	equ	0xFFC
  1496                           intcon	equ	0xFF2
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _WDTtask *****************
  1502 ;; Defined at:
  1503 ;;		line 370 in file "../Robot Files/sumovore.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    3
  1524 ;; This function calls:
  1525 ;;		_gtrap
  1526 ;;		_printf
  1527 ;; This function is called by:
  1528 ;;		_reset_codes
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text8
  1533  0021EE                     __ptext8:
  1534                           	opt stack 0
  1535  0021EE                     _WDTtask:
  1536                           	opt stack 25
  1537                           
  1538                           ;sumovore.c: 372: printf("<WDT TO>");
  1539                           
  1540                           ;incstack = 0
  1541  0021EE  0E5D               	movlw	low STR_4
  1542  0021F0  6E0F               	movwf	printf@f,c
  1543  0021F2  0E10               	movlw	high STR_4
  1544  0021F4  6E10               	movwf	printf@f+1,c
  1545  0021F6  EC06  F010         	call	_printf	;wreg free
  1546                           
  1547                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1548  0021FA  9083               	bcf	3971,0,c	;volatile
  1549                           
  1550                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1551  0021FC  8283               	bsf	3971,1,c	;volatile
  1552                           
  1553                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1554  0021FE  9483               	bcf	3971,2,c	;volatile
  1555                           
  1556                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1557  002200  8683               	bsf	3971,3,c	;volatile
  1558                           
  1559                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1560  002202  8883               	bsf	3971,4,c	;volatile
  1561                           
  1562                           ;sumovore.c: 378: gtrap();
  1563  002204  EC01  F00F         	call	_gtrap	;wreg free
  1564  002208  0012               	return		;funcret
  1565  00220A                     __end_of_WDTtask:
  1566                           	opt stack 0
  1567                           stkptr	equ	0xFFC
  1568                           intcon	equ	0xFF2
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _STKFULtask *****************
  1574 ;; Defined at:
  1575 ;;		line 389 in file "../Robot Files/sumovore.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		_gtrap
  1598 ;;		_printf
  1599 ;; This function is called by:
  1600 ;;		_reset_codes
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text9
  1605  0021D0                     __ptext9:
  1606                           	opt stack 0
  1607  0021D0                     _STKFULtask:
  1608                           	opt stack 25
  1609                           
  1610                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1611                           
  1612                           ;incstack = 0
  1613  0021D0  9EFC               	bcf	stkptr,7,c	;volatile
  1614                           
  1615                           ;sumovore.c: 393: printf("<STKFUL>");
  1616  0021D2  0E54               	movlw	low STR_5
  1617  0021D4  6E0F               	movwf	printf@f,c
  1618  0021D6  0E10               	movlw	high STR_5
  1619  0021D8  6E10               	movwf	printf@f+1,c
  1620  0021DA  EC06  F010         	call	_printf	;wreg free
  1621                           
  1622                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1623  0021DE  9083               	bcf	3971,0,c	;volatile
  1624                           
  1625                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1626  0021E0  8283               	bsf	3971,1,c	;volatile
  1627                           
  1628                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1629  0021E2  9483               	bcf	3971,2,c	;volatile
  1630                           
  1631                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1632  0021E4  8683               	bsf	3971,3,c	;volatile
  1633                           
  1634                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1635  0021E6  9883               	bcf	3971,4,c	;volatile
  1636                           
  1637                           ;sumovore.c: 399: gtrap();
  1638  0021E8  EC01  F00F         	call	_gtrap	;wreg free
  1639  0021EC  0012               	return		;funcret
  1640  0021EE                     __end_of_STKFULtask:
  1641                           	opt stack 0
  1642                           stkptr	equ	0xFFC
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _RESETtask *****************
  1649 ;; Defined at:
  1650 ;;		line 405 in file "../Robot Files/sumovore.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		_gtrap
  1673 ;;		_printf
  1674 ;; This function is called by:
  1675 ;;		_reset_codes
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text10
  1680  00220A                     __ptext10:
  1681                           	opt stack 0
  1682  00220A                     _RESETtask:
  1683                           	opt stack 25
  1684                           
  1685                           ;sumovore.c: 408: printf(" <reset> ");
  1686                           
  1687                           ;incstack = 0
  1688  00220A  0E4A               	movlw	low STR_6
  1689  00220C  6E0F               	movwf	printf@f,c
  1690  00220E  0E10               	movlw	high STR_6
  1691  002210  6E10               	movwf	printf@f+1,c
  1692  002212  EC06  F010         	call	_printf	;wreg free
  1693                           
  1694                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1695  002216  9083               	bcf	3971,0,c	;volatile
  1696                           
  1697                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1698  002218  8283               	bsf	3971,1,c	;volatile
  1699                           
  1700                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1701  00221A  9483               	bcf	3971,2,c	;volatile
  1702                           
  1703                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1704  00221C  9683               	bcf	3971,3,c	;volatile
  1705                           
  1706                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1707  00221E  9883               	bcf	3971,4,c	;volatile
  1708                           
  1709                           ;sumovore.c: 414: gtrap();
  1710  002220  EC01  F00F         	call	_gtrap	;wreg free
  1711  002224  0012               	return		;funcret
  1712  002226                     __end_of_RESETtask:
  1713                           	opt stack 0
  1714                           stkptr	equ	0xFFC
  1715                           intcon	equ	0xFF2
  1716                           postinc0	equ	0xFEE
  1717                           wreg	equ	0xFE8
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _PORtask *****************
  1721 ;; Defined at:
  1722 ;;		line 307 in file "../Robot Files/sumovore.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  count2          4   23[COMRAM] unsigned long 
  1727 ;;  count1          4   19[COMRAM] unsigned long 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    3
  1744 ;; This function calls:
  1745 ;;		_StatusReset
  1746 ;;		_printf
  1747 ;; This function is called by:
  1748 ;;		_reset_codes
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text11
  1753  0019B6                     __ptext11:
  1754                           	opt stack 0
  1755  0019B6                     _PORtask:
  1756                           	opt stack 25
  1757                           
  1758                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1759                           
  1760                           ;incstack = 0
  1761  0019B6  0E00               	movlw	0
  1762  0019B8  6E14               	movwf	PORtask@count1,c
  1763  0019BA  0E00               	movlw	0
  1764  0019BC  6E15               	movwf	PORtask@count1+1,c
  1765  0019BE  0E00               	movlw	0
  1766  0019C0  6E16               	movwf	PORtask@count1+2,c
  1767  0019C2  0E00               	movlw	0
  1768  0019C4  6E17               	movwf	PORtask@count1+3,c
  1769  0019C6  0E00               	movlw	0
  1770  0019C8  6E18               	movwf	PORtask@count2,c
  1771  0019CA  0E00               	movlw	0
  1772  0019CC  6E19               	movwf	PORtask@count2+1,c
  1773  0019CE  0E00               	movlw	0
  1774  0019D0  6E1A               	movwf	PORtask@count2+2,c
  1775  0019D2  0E00               	movlw	0
  1776  0019D4  6E1B               	movwf	PORtask@count2+3,c
  1777                           
  1778                           ;sumovore.c: 310: StatusReset();
  1779  0019D6  EC92  F011         	call	_StatusReset	;wreg free
  1780                           
  1781                           ;sumovore.c: 312: printf("<POR>");
  1782  0019DA  0E73               	movlw	low STR_2
  1783  0019DC  6E0F               	movwf	printf@f,c
  1784  0019DE  0E10               	movlw	high STR_2
  1785  0019E0  6E10               	movwf	printf@f+1,c
  1786  0019E2  EC06  F010         	call	_printf	;wreg free
  1787                           
  1788                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1789  0019E6  9083               	bcf	3971,0,c	;volatile
  1790                           
  1791                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1792  0019E8  8283               	bsf	3971,1,c	;volatile
  1793                           
  1794                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1795  0019EA  8483               	bsf	3971,2,c	;volatile
  1796                           
  1797                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1798  0019EC  8683               	bsf	3971,3,c	;volatile
  1799                           
  1800                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1801  0019EE  8883               	bsf	3971,4,c	;volatile
  1802                           
  1803                           ;sumovore.c: 318: while(count1<10u)
  1804  0019F0  D02D               	goto	l345
  1805  0019F2                     l346:
  1806  0019F2  0004               	clrwdt		;# 
  1807                           
  1808                           ;sumovore.c: 321: if (count2==30000u)
  1809  0019F4  0E30               	movlw	48
  1810  0019F6  1818               	xorwf	PORtask@count2,w,c
  1811  0019F8  E117               	bnz	l2375
  1812  0019FA  0E75               	movlw	117
  1813  0019FC  1819               	xorwf	PORtask@count2+1,w,c
  1814  0019FE  101A               	iorwf	PORtask@count2+2,w,c
  1815  001A00  101B               	iorwf	PORtask@count2+3,w,c
  1816  001A02  A4D8               	btfss	status,2,c
  1817  001A04  D011               	goto	l2375
  1818                           
  1819                           ;sumovore.c: 322: {
  1820                           ;sumovore.c: 323: count2=0;
  1821  001A06  0E00               	movlw	0
  1822  001A08  6E18               	movwf	PORtask@count2,c
  1823  001A0A  0E00               	movlw	0
  1824  001A0C  6E19               	movwf	PORtask@count2+1,c
  1825  001A0E  0E00               	movlw	0
  1826  001A10  6E1A               	movwf	PORtask@count2+2,c
  1827  001A12  0E00               	movlw	0
  1828  001A14  6E1B               	movwf	PORtask@count2+3,c
  1829                           
  1830                           ;sumovore.c: 324: count1++;
  1831  001A16  0E01               	movlw	1
  1832  001A18  2614               	addwf	PORtask@count1,f,c
  1833  001A1A  0E00               	movlw	0
  1834  001A1C  2215               	addwfc	PORtask@count1+1,f,c
  1835  001A1E  2216               	addwfc	PORtask@count1+2,f,c
  1836  001A20  2217               	addwfc	PORtask@count1+3,f,c
  1837                           
  1838                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1839  001A22  9083               	bcf	3971,0,c	;volatile
  1840                           
  1841                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1842  001A24  8283               	bsf	3971,1,c	;volatile
  1843                           
  1844                           ;sumovore.c: 327: }
  1845  001A26  D00C               	goto	l2379
  1846  001A28                     l2375:
  1847                           
  1848                           ;sumovore.c: 328: else if (count2==15000u)
  1849  001A28  0E98               	movlw	152
  1850  001A2A  1818               	xorwf	PORtask@count2,w,c
  1851  001A2C  E109               	bnz	l2379
  1852  001A2E  0E3A               	movlw	58
  1853  001A30  1819               	xorwf	PORtask@count2+1,w,c
  1854  001A32  101A               	iorwf	PORtask@count2+2,w,c
  1855  001A34  101B               	iorwf	PORtask@count2+3,w,c
  1856  001A36  A4D8               	btfss	status,2,c
  1857  001A38  D003               	goto	l2379
  1858                           
  1859                           ;sumovore.c: 329: {
  1860                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1861  001A3A  8083               	bsf	3971,0,c	;volatile
  1862                           
  1863                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1864  001A3C  9283               	bcf	3971,1,c	;volatile
  1865  001A3E  D000               	goto	l2379
  1866  001A40                     l2379:
  1867                           
  1868                           ;sumovore.c: 332: }
  1869                           ;sumovore.c: 333: count2++;
  1870  001A40  0E01               	movlw	1
  1871  001A42  2618               	addwf	PORtask@count2,f,c
  1872  001A44  0E00               	movlw	0
  1873  001A46  2219               	addwfc	PORtask@count2+1,f,c
  1874  001A48  221A               	addwfc	PORtask@count2+2,f,c
  1875  001A4A  221B               	addwfc	PORtask@count2+3,f,c
  1876  001A4C                     l345:
  1877  001A4C  5017               	movf	PORtask@count1+3,w,c
  1878  001A4E  1016               	iorwf	PORtask@count1+2,w,c
  1879  001A50  1015               	iorwf	PORtask@count1+1,w,c
  1880  001A52  E106               	bnz	l351
  1881  001A54  0E0A               	movlw	10
  1882  001A56  5C14               	subwf	PORtask@count1,w,c
  1883  001A58  B0D8               	btfsc	status,0,c
  1884  001A5A  D002               	goto	l351
  1885  001A5C  D7CA               	goto	l346
  1886  001A5E  D000               	goto	l351
  1887  001A60                     l351:
  1888  001A60  0012               	return		;funcret
  1889  001A62                     __end_of_PORtask:
  1890                           	opt stack 0
  1891                           stkptr	equ	0xFFC
  1892                           intcon	equ	0xFF2
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _BORtask *****************
  1898 ;; Defined at:
  1899 ;;		line 349 in file "../Robot Files/sumovore.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		_StatusReset
  1922 ;;		_gtrap
  1923 ;;		_printf
  1924 ;; This function is called by:
  1925 ;;		_reset_codes
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text12
  1930  002150                     __ptext12:
  1931                           	opt stack 0
  1932  002150                     _BORtask:
  1933                           	opt stack 25
  1934                           
  1935                           ;sumovore.c: 351: StatusReset();
  1936                           
  1937                           ;incstack = 0
  1938  002150  EC92  F011         	call	_StatusReset	;wreg free
  1939                           
  1940                           ;sumovore.c: 353: printf("<BOR>");
  1941  002154  0E6D               	movlw	low STR_3
  1942  002156  6E0F               	movwf	printf@f,c
  1943  002158  0E10               	movlw	high STR_3
  1944  00215A  6E10               	movwf	printf@f+1,c
  1945  00215C  EC06  F010         	call	_printf	;wreg free
  1946                           
  1947                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1948  002160  8083               	bsf	3971,0,c	;volatile
  1949                           
  1950                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1951  002162  8283               	bsf	3971,1,c	;volatile
  1952                           
  1953                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1954  002164  8483               	bsf	3971,2,c	;volatile
  1955                           
  1956                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1957  002166  8683               	bsf	3971,3,c	;volatile
  1958                           
  1959                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1960  002168  9883               	bcf	3971,4,c	;volatile
  1961                           
  1962                           ;sumovore.c: 359: gtrap();
  1963  00216A  EC01  F00F         	call	_gtrap	;wreg free
  1964  00216E  0012               	return		;funcret
  1965  002170                     __end_of_BORtask:
  1966                           	opt stack 0
  1967                           stkptr	equ	0xFFC
  1968                           intcon	equ	0xFF2
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _StatusReset *****************
  1974 ;; Defined at:
  1975 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_PORtask
  2000 ;;		_BORtask
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text13
  2005  002324                     __ptext13:
  2006                           	opt stack 0
  2007  002324                     _StatusReset:
  2008                           	opt stack 26
  2009                           
  2010                           ;incstack = 0
  2011  002324  82D0               	bsf	4048,1,c	;volatile
  2012  002326  80D0               	bsf	4048,0,c	;volatile
  2013  002328  0012               	return		;funcret
  2014  00232A                     __end_of_StatusReset:
  2015                           	opt stack 0
  2016                           stkptr	equ	0xFFC
  2017                           intcon	equ	0xFF2
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _openPORTE *****************
  2023 ;; Defined at:
  2024 ;;		line 178 in file "../Robot Files/sumovore.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;		None               void
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_initialization
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text14
  2053  00232A                     __ptext14:
  2054                           	opt stack 0
  2055  00232A                     _openPORTE:
  2056                           	opt stack 28
  2057                           
  2058                           ;sumovore.c: 180: TRISE = 0b000;
  2059                           
  2060                           ;incstack = 0
  2061  00232A  0E00               	movlw	0
  2062  00232C  6E96               	movwf	3990,c	;volatile
  2063  00232E  0012               	return		;funcret
  2064  002330                     __end_of_openPORTE:
  2065                           	opt stack 0
  2066                           stkptr	equ	0xFFC
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _openPORTCforUSART *****************
  2073 ;; Defined at:
  2074 ;;		line 124 in file "../Robot Files/sumovore.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;		None               void
  2081 ;; Registers used:
  2082 ;;		None
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_initialization
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text15
  2103  002330                     __ptext15:
  2104                           	opt stack 0
  2105  002330                     _openPORTCforUSART:
  2106                           	opt stack 28
  2107                           
  2108                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2109                           
  2110                           ;incstack = 0
  2111  002330  9C94               	bcf	3988,6,c	;volatile
  2112                           
  2113                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2114  002332  8E94               	bsf	3988,7,c	;volatile
  2115  002334  0012               	return		;funcret
  2116  002336                     __end_of_openPORTCforUSART:
  2117                           	opt stack 0
  2118                           stkptr	equ	0xFFC
  2119                           intcon	equ	0xFF2
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _openPORTCforPWM *****************
  2125 ;; Defined at:
  2126 ;;		line 133 in file "../Robot Files/sumovore.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		None
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_initialization
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text16
  2155  002302                     __ptext16:
  2156                           	opt stack 0
  2157  002302                     _openPORTCforPWM:
  2158                           	opt stack 28
  2159                           
  2160                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2161                           
  2162                           ;incstack = 0
  2163  002302  9094               	bcf	3988,0,c	;volatile
  2164                           
  2165                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2166  002304  9294               	bcf	3988,1,c	;volatile
  2167                           
  2168                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2169  002306  9494               	bcf	3988,2,c	;volatile
  2170                           
  2171                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2172  002308  9694               	bcf	3988,3,c	;volatile
  2173                           
  2174                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2175  00230A  9894               	bcf	3988,4,c	;volatile
  2176                           
  2177                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2178  00230C  9A94               	bcf	3988,5,c	;volatile
  2179  00230E  0012               	return		;funcret
  2180  002310                     __end_of_openPORTCforPWM:
  2181                           	opt stack 0
  2182                           stkptr	equ	0xFFC
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _openPORTB *****************
  2189 ;; Defined at:
  2190 ;;		line 158 in file "../Robot Files/sumovore.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;		None               void
  2197 ;; Registers used:
  2198 ;;		wreg, status,2
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_initialization
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text17
  2219  002336                     __ptext17:
  2220                           	opt stack 0
  2221  002336                     _openPORTB:
  2222                           	opt stack 28
  2223                           
  2224                           ;sumovore.c: 160: TRISB = 0B11000000;
  2225                           
  2226                           ;incstack = 0
  2227  002336  0EC0               	movlw	192
  2228  002338  6E93               	movwf	3987,c	;volatile
  2229  00233A  0012               	return		;funcret
  2230  00233C                     __end_of_openPORTB:
  2231                           	opt stack 0
  2232                           stkptr	equ	0xFFC
  2233                           intcon	equ	0xFF2
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           status	equ	0xFD8
  2237                           
  2238 ;; *************** function _openPORTA *****************
  2239 ;; Defined at:
  2240 ;;		line 147 in file "../Robot Files/sumovore.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, status,2
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_initialization
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text18
  2269  00233C                     __ptext18:
  2270                           	opt stack 0
  2271  00233C                     _openPORTA:
  2272                           	opt stack 28
  2273                           
  2274                           ;sumovore.c: 149: TRISA = 0B11101111;
  2275                           
  2276                           ;incstack = 0
  2277  00233C  0EEF               	movlw	239
  2278  00233E  6E92               	movwf	3986,c	;volatile
  2279  002340  0012               	return		;funcret
  2280  002342                     __end_of_openPORTA:
  2281                           	opt stack 0
  2282                           stkptr	equ	0xFFC
  2283                           intcon	equ	0xFF2
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _openLVD *****************
  2289 ;; Defined at:
  2290 ;;		line 428 in file "../Robot Files/sumovore.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		None
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_initialization
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text19
  2319  002242                     __ptext19:
  2320                           	opt stack 0
  2321  002242                     _openLVD:
  2322                           	opt stack 28
  2323                           
  2324                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2325                           
  2326                           ;incstack = 0
  2327  002242  8ED0               	bsf	4048,7,c	;volatile
  2328                           
  2329                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2330  002244  88D2               	bsf	4050,4,c	;volatile
  2331                           
  2332                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2333  002246  84A2               	bsf	4002,2,c	;volatile
  2334                           
  2335                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2336  002248  9ED2               	bcf	4050,7,c	;volatile
  2337                           
  2338                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2339  00224A  86D2               	bsf	4050,3,c	;volatile
  2340                           
  2341                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2342  00224C  84D2               	bsf	4050,2,c	;volatile
  2343                           
  2344                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2345  00224E  82D2               	bsf	4050,1,c	;volatile
  2346                           
  2347                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2348  002250  90D2               	bcf	4050,0,c	;volatile
  2349                           
  2350                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2351  002252  94A1               	bcf	4001,2,c	;volatile
  2352                           
  2353                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2354  002254  84A0               	bsf	4000,2,c	;volatile
  2355                           
  2356                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2357  002256  8EF2               	bsf	intcon,7,c	;volatile
  2358  002258  0012               	return		;funcret
  2359  00225A                     __end_of_openLVD:
  2360                           	opt stack 0
  2361                           stkptr	equ	0xFFC
  2362                           intcon	equ	0xFF2
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _OpenUSART *****************
  2368 ;; Defined at:
  2369 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  config          1    wreg     unsigned char 
  2372 ;;  spbrg           2   14[COMRAM] unsigned int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  config          1   16[COMRAM] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg, status,2
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;Total ram usage:        3 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_initialization
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text20
  2399  001D2E                     __ptext20:
  2400                           	opt stack 0
  2401  001D2E                     _OpenUSART:
  2402                           	opt stack 28
  2403                           
  2404                           ;incstack = 0
  2405                           ;OpenUSART@config stored from wreg
  2406  001D2E  6E11               	movwf	OpenUSART@config,c
  2407  001D30  0E00               	movlw	0
  2408  001D32  6EAC               	movwf	4012,c	;volatile
  2409  001D34  0E00               	movlw	0
  2410  001D36  6EAB               	movwf	4011,c	;volatile
  2411  001D38  A011               	btfss	OpenUSART@config,0,c
  2412  001D3A  D002               	goto	l2493
  2413  001D3C  88AC               	bsf	4012,4,c	;volatile
  2414  001D3E  D000               	goto	l2493
  2415  001D40                     l2493:
  2416  001D40  A211               	btfss	OpenUSART@config,1,c
  2417  001D42  D003               	goto	l2497
  2418  001D44  8CAC               	bsf	4012,6,c	;volatile
  2419  001D46  8CAB               	bsf	4011,6,c	;volatile
  2420  001D48  D000               	goto	l2497
  2421  001D4A                     l2497:
  2422  001D4A  A411               	btfss	OpenUSART@config,2,c
  2423  001D4C  D002               	goto	l2501
  2424  001D4E  8EAC               	bsf	4012,7,c	;volatile
  2425  001D50  D000               	goto	l2501
  2426  001D52                     l2501:
  2427  001D52  A611               	btfss	OpenUSART@config,3,c
  2428  001D54  D002               	goto	l627
  2429  001D56  88AB               	bsf	4011,4,c	;volatile
  2430  001D58  D002               	goto	l2505
  2431  001D5A                     l627:
  2432  001D5A  8AAB               	bsf	4011,5,c	;volatile
  2433  001D5C  D000               	goto	l2505
  2434  001D5E                     l2505:
  2435  001D5E  B811               	btfsc	OpenUSART@config,4,c
  2436  001D60  84AC               	bsf	4012,2,c	;volatile
  2437  001D62  989E               	bcf	3998,4,c	;volatile
  2438  001D64  AA11               	btfss	OpenUSART@config,5,c
  2439  001D66  D002               	goto	l2513
  2440  001D68  86AB               	bsf	4011,3,c	;volatile
  2441  001D6A  D000               	goto	l2513
  2442  001D6C                     l2513:
  2443  001D6C  AC11               	btfss	OpenUSART@config,6,c
  2444  001D6E  D002               	goto	l631
  2445  001D70  8A9D               	bsf	3997,5,c	;volatile
  2446  001D72  D001               	goto	l632
  2447  001D74                     l631:
  2448  001D74  9A9D               	bcf	3997,5,c	;volatile
  2449  001D76                     l632:
  2450  001D76  9A9E               	bcf	3998,5,c	;volatile
  2451  001D78  AE11               	btfss	OpenUSART@config,7,c
  2452  001D7A  D002               	goto	l633
  2453  001D7C  889D               	bsf	3997,4,c	;volatile
  2454  001D7E  D001               	goto	l634
  2455  001D80                     l633:
  2456  001D80  989D               	bcf	3997,4,c	;volatile
  2457  001D82                     l634:
  2458  001D82  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2459  001D86  5010               	movf	OpenUSART@spbrg+1,w,c
  2460  001D88  6EB0               	movwf	4016,c	;volatile
  2461  001D8A  8AAC               	bsf	4012,5,c	;volatile
  2462  001D8C  8EAB               	bsf	4011,7,c	;volatile
  2463  001D8E  9C94               	bcf	3988,6,c	;volatile
  2464  001D90  8E94               	bsf	3988,7,c	;volatile
  2465  001D92  B8AC               	btfsc	4012,4,c	;volatile
  2466  001D94  BEAC               	btfsc	4012,7,c	;volatile
  2467  001D96  D002               	goto	l636
  2468  001D98  8C94               	bsf	3988,6,c	;volatile
  2469  001D9A  D000               	goto	l636
  2470  001D9C                     l636:
  2471  001D9C  0012               	return		;funcret
  2472  001D9E                     __end_of_OpenUSART:
  2473                           	opt stack 0
  2474                           stkptr	equ	0xFFC
  2475                           intcon	equ	0xFF2
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _OpenTimer2 *****************
  2481 ;; Defined at:
  2482 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  config          1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  config          1   14[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_initialization
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text21
  2511  002226                     __ptext21:
  2512                           	opt stack 0
  2513  002226                     _OpenTimer2:
  2514                           	opt stack 28
  2515                           
  2516                           ;incstack = 0
  2517                           ;OpenTimer2@config stored from wreg
  2518  002226  6E0F               	movwf	OpenTimer2@config,c
  2519  002228  500F               	movf	OpenTimer2@config,w,c
  2520  00222A  0BFB               	andlw	251
  2521  00222C  6ECA               	movwf	4042,c	;volatile
  2522  00222E  0E00               	movlw	0
  2523  002230  6ECC               	movwf	4044,c	;volatile
  2524  002232  929E               	bcf	3998,1,c	;volatile
  2525  002234  AE0F               	btfss	OpenTimer2@config,7,c
  2526  002236  D002               	goto	l601
  2527  002238  829D               	bsf	3997,1,c	;volatile
  2528  00223A  D001               	goto	l602
  2529  00223C                     l601:
  2530  00223C  929D               	bcf	3997,1,c	;volatile
  2531  00223E                     l602:
  2532  00223E  84CA               	bsf	4042,2,c	;volatile
  2533  002240  0012               	return		;funcret
  2534  002242                     __end_of_OpenTimer2:
  2535                           	opt stack 0
  2536                           stkptr	equ	0xFFC
  2537                           intcon	equ	0xFF2
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _OpenPWM2 *****************
  2543 ;; Defined at:
  2544 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  period          1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  period          1   14[COMRAM] unsigned char 
  2549 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2550 ;;  pmmode          1    0        unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_initialization
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text22
  2575  001FD4                     __ptext22:
  2576                           	opt stack 0
  2577  001FD4                     _OpenPWM2:
  2578                           	opt stack 28
  2579                           
  2580                           ;incstack = 0
  2581                           ;OpenPWM2@period stored from wreg
  2582  001FD4  6E0F               	movwf	OpenPWM2@period,c
  2583  001FD6  0E0C               	movlw	12
  2584  001FD8  6EBA               	movwf	4026,c	;volatile
  2585  001FDA  0E05               	movlw	5
  2586  001FDC  6EF6               	movwf	tblptrl,c
  2587  001FDE                     	if	1	;There is more than 1 active tblptr byte
  2588  001FDE  0E00               	movlw	0
  2589  001FE0  6EF7               	movwf	tblptrh,c
  2590  001FE2                     	endif
  2591  001FE2                     	if	1	;There are 3 active tblptr bytes
  2592  001FE2  0E30               	movlw	48
  2593  001FE4  6EF8               	movwf	tblptru,c
  2594  001FE6                     	endif
  2595  001FE6  0008               	tblrd		*
  2596  001FE8  0100               	movlb	12288	; () banked
  2597  001FEA  A0F5               	btfss	tablat,0,c
  2598  001FEC  D002               	goto	l1775
  2599                           
  2600                           ; BSR set to: 0
  2601  001FEE  6810               	setf	OpenPWM2@ccp2mx,c
  2602  001FF0  D002               	goto	l516
  2603  001FF2                     l1775:
  2604                           
  2605                           ; BSR set to: 0
  2606  001FF2  0E00               	movlw	0
  2607  001FF4  6E10               	movwf	OpenPWM2@ccp2mx,c
  2608  001FF6                     l516:
  2609                           
  2610                           ; BSR set to: 0
  2611  001FF6  5010               	movf	OpenPWM2@ccp2mx,w,c
  2612  001FF8  B4D8               	btfsc	status,2,c
  2613  001FFA  D002               	goto	l517
  2614                           
  2615                           ; BSR set to: 0
  2616  001FFC  9294               	bcf	3988,1,c	;volatile
  2617  001FFE  D001               	goto	l518
  2618  002000                     l517:
  2619                           
  2620                           ; BSR set to: 0
  2621  002000  9693               	bcf	3987,3,c	;volatile
  2622  002002                     l518:
  2623                           
  2624                           ; BSR set to: 0
  2625  002002  94CA               	bcf	4042,2,c	;volatile
  2626  002004  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2627  002008  84CA               	bsf	4042,2,c	;volatile
  2628                           
  2629                           ; BSR set to: 0
  2630  00200A  0012               	return		;funcret
  2631  00200C                     __end_of_OpenPWM2:
  2632                           	opt stack 0
  2633                           stkptr	equ	0xFFC
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           intcon	equ	0xFF2
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _OpenPWM1 *****************
  2644 ;; Defined at:
  2645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  period          1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  period          1   14[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_initialization
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text23
  2674  002298                     __ptext23:
  2675                           	opt stack 0
  2676  002298                     _OpenPWM1:
  2677                           	opt stack 28
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;incstack = 0
  2681                           ;OpenPWM1@period stored from wreg
  2682  002298  6E0F               	movwf	OpenPWM1@period,c
  2683  00229A  0E0C               	movlw	12
  2684  00229C  12BD               	iorwf	4029,f,c	;volatile
  2685  00229E  9494               	bcf	3988,2,c	;volatile
  2686  0022A0  94CA               	bcf	4042,2,c	;volatile
  2687  0022A2  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2688  0022A6  84CA               	bsf	4042,2,c	;volatile
  2689  0022A8  0012               	return		;funcret
  2690  0022AA                     __end_of_OpenPWM1:
  2691                           	opt stack 0
  2692                           stkptr	equ	0xFFC
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           intcon	equ	0xFF2
  2698                           postinc0	equ	0xFEE
  2699                           wreg	equ	0xFE8
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _OpenADC *****************
  2703 ;; Defined at:
  2704 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  config          1    wreg     unsigned char 
  2707 ;;  config2         1   14[COMRAM] unsigned char 
  2708 ;;  portconfig      1   15[COMRAM] unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  config          1   18[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;Total ram usage:        5 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_initialization
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text24
  2735  001E64                     __ptext24:
  2736                           	opt stack 0
  2737  001E64                     _OpenADC:
  2738                           	opt stack 28
  2739                           
  2740                           ;incstack = 0
  2741                           ;OpenADC@config stored from wreg
  2742  001E64  6E13               	movwf	OpenADC@config,c
  2743  001E66  0E00               	movlw	0
  2744  001E68  6EC2               	movwf	4034,c	;volatile
  2745  001E6A  0E00               	movlw	0
  2746  001E6C  6EC0               	movwf	4032,c	;volatile
  2747  001E6E  90D8               	bcf	status,0,c
  2748  001E70  300F               	rrcf	OpenADC@config2,w,c
  2749  001E72  0B3C               	andlw	60
  2750  001E74  6EC2               	movwf	4034,c	;volatile
  2751  001E76  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2752  001E7A  3A11               	swapf	??_OpenADC,f,c
  2753  001E7C  0EF0               	movlw	240
  2754  001E7E  1611               	andwf	??_OpenADC,f,c
  2755  001E80  0E30               	movlw	48
  2756  001E82  1611               	andwf	??_OpenADC,f,c
  2757  001E84  5010               	movf	OpenADC@portconfig,w,c
  2758  001E86  0B0F               	andlw	15
  2759  001E88  1011               	iorwf	??_OpenADC,w,c
  2760  001E8A  6EC1               	movwf	4033,c	;volatile
  2761  001E8C  C013  F011         	movff	OpenADC@config,??_OpenADC
  2762  001E90  90D8               	bcf	status,0,c
  2763  001E92  3611               	rlcf	??_OpenADC,f,c
  2764  001E94  90D8               	bcf	status,0,c
  2765  001E96  3611               	rlcf	??_OpenADC,f,c
  2766  001E98  0E38               	movlw	56
  2767  001E9A  1611               	andwf	??_OpenADC,f,c
  2768  001E9C  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2769  001EA0  3A12               	swapf	??_OpenADC+1,f,c
  2770  001EA2  0E0F               	movlw	15
  2771  001EA4  1612               	andwf	??_OpenADC+1,f,c
  2772  001EA6  0E07               	movlw	7
  2773  001EA8  1612               	andwf	??_OpenADC+1,f,c
  2774  001EAA  5013               	movf	OpenADC@config,w,c
  2775  001EAC  0B80               	andlw	128
  2776  001EAE  1012               	iorwf	??_OpenADC+1,w,c
  2777  001EB0  1011               	iorwf	??_OpenADC,w,c
  2778  001EB2  6EC0               	movwf	4032,c	;volatile
  2779  001EB4  AE0F               	btfss	OpenADC@config2,7,c
  2780  001EB6  D003               	goto	l468
  2781  001EB8  9C9E               	bcf	3998,6,c	;volatile
  2782  001EBA  8C9D               	bsf	3997,6,c	;volatile
  2783  001EBC  8CF2               	bsf	intcon,6,c	;volatile
  2784  001EBE                     l468:
  2785  001EBE  80C2               	bsf	4034,0,c	;volatile
  2786  001EC0  0012               	return		;funcret
  2787  001EC2                     __end_of_OpenADC:
  2788                           	opt stack 0
  2789                           stkptr	equ	0xFFC
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           intcon	equ	0xFF2
  2795                           postinc0	equ	0xFEE
  2796                           wreg	equ	0xFE8
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _PID_LineFollowing *****************
  2800 ;; Defined at:
  2801 ;;		line 117 in file "../Robot Files/main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  error           2   52[COMRAM] PTR char 
  2804 ;;		 -> main@error(3), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;Total ram usage:        7 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    3
  2823 ;; This function calls:
  2824 ;;		_MotorControl
  2825 ;;		_ReadTimer0
  2826 ;;		_ReadTimer1
  2827 ;;		_WriteTimer0
  2828 ;;		_WriteTimer1
  2829 ;;		___aldiv
  2830 ;;		___lwdiv
  2831 ;;		___wmul
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text25
  2838  00107A                     __ptext25:
  2839                           	opt stack 0
  2840  00107A                     _PID_LineFollowing:
  2841                           	opt stack 27
  2842                           
  2843                           ;main.c: 119: static int delta_velocity = 0;
  2844                           ;main.c: 121: static int D = 0;
  2845                           ;main.c: 124: if (I_CONSTANT < ReadTimer1())
  2846                           
  2847                           ;incstack = 0
  2848  00107A  EC5E  F011         	call	_ReadTimer1	;wreg free
  2849  00107E  0E03               	movlw	low _I_CONSTANT
  2850  001080  6EF6               	movwf	tblptrl,c
  2851  001082                     	if	1	;There is more than 1 active tblptr byte
  2852  001082  0E10               	movlw	high _I_CONSTANT
  2853  001084  6EF7               	movwf	tblptrh,c
  2854  001086                     	endif
  2855  001086                     	if	1	;There are 3 active tblptr bytes
  2856  001086  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2857  001088  6EF8               	movwf	tblptru,c
  2858  00108A                     	endif
  2859  00108A  500F               	movf	?_ReadTimer1,w,c
  2860  00108C  0009               	tblrd		*+
  2861  00108E  5CF5               	subwf	tablat,w,c
  2862  001090  5010               	movf	?_ReadTimer1+1,w,c
  2863  001092  0009               	tblrd		*+
  2864  001094  58F5               	subwfb	tablat,w,c
  2865  001096  B0D8               	btfsc	status,0,c
  2866  001098  D07E               	goto	l2783
  2867                           
  2868                           ;main.c: 125: {
  2869                           ;main.c: 126: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=160
      +                          0 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2870  00109A  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2871  00109C  D006               	goto	l2757
  2872  00109E  0E40               	movlw	64
  2873  0010A0  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2874  0010A2  0E06               	movlw	6
  2875  0010A4  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2876  0010A6  B0D8               	btfsc	status,0,c
  2877  0010A8  D008               	goto	l2759
  2878  0010AA                     l2757:
  2879  0010AA  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2880  0010AC  D006               	goto	l2759
  2881  0010AE  0E41               	movlw	65
  2882  0010B0  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2883  0010B2  0E06               	movlw	6
  2884  0010B4  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2885  0010B6  B0D8               	btfsc	status,0,c
  2886  0010B8  D024               	goto	l2767
  2887  0010BA                     l2759:
  2888  0010BA  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2889  0010BC  D00F               	goto	l2763
  2890  0010BE  0E40               	movlw	64
  2891  0010C0  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2892  0010C2  0E06               	movlw	6
  2893  0010C4  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2894  0010C6  A0D8               	btfss	status,0,c
  2895  0010C8  D009               	goto	l2763
  2896  0010CA  EE20 F002          	lfsr	2,2
  2897  0010CE  5035               	movf	PID_LineFollowing@error,w,c
  2898  0010D0  26D9               	addwf	fsr2l,f,c
  2899  0010D2  5036               	movf	PID_LineFollowing@error+1,w,c
  2900  0010D4  22DA               	addwfc	fsr2h,f,c
  2901  0010D6  0E00               	movlw	0
  2902  0010D8  BEDB               	btfsc	plusw2,7,c
  2903  0010DA  D013               	goto	l2767
  2904  0010DC                     l2763:
  2905  0010DC  AE47               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2906  0010DE  D054               	goto	l2781
  2907  0010E0  0EC1               	movlw	193
  2908  0010E2  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2909  0010E4  0EF9               	movlw	249
  2910  0010E6  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2911  0010E8  B0D8               	btfsc	status,0,c
  2912  0010EA  D04E               	goto	l2781
  2913  0010EC  EE20 F002          	lfsr	2,2
  2914  0010F0  5035               	movf	PID_LineFollowing@error,w,c
  2915  0010F2  26D9               	addwf	fsr2l,f,c
  2916  0010F4  5036               	movf	PID_LineFollowing@error+1,w,c
  2917  0010F6  22DA               	addwfc	fsr2h,f,c
  2918  0010F8  50DF               	movf	indf2,w,c
  2919  0010FA  0A80               	xorlw	128
  2920  0010FC  0F7F               	addlw	-129
  2921  0010FE  A0D8               	btfss	status,0,c
  2922  001100  D043               	goto	l2781
  2923  001102                     l2767:
  2924                           
  2925                           ;main.c: 128: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && erro
      +                          r[2]>0))
  2926  001102  BE49               	btfsc	_I+1,7,c
  2927  001104  D006               	goto	l2769
  2928  001106  0EC9               	movlw	201
  2929  001108  5C48               	subwf	_I,w,c
  2930  00110A  0E0C               	movlw	12
  2931  00110C  5849               	subwfb	_I+1,w,c
  2932  00110E  B0D8               	btfsc	status,0,c
  2933  001110  D008               	goto	l2771
  2934  001112                     l2769:
  2935  001112  AE49               	btfss	_I+1,7,c
  2936  001114  D02A               	goto	l2779
  2937  001116  0E37               	movlw	55
  2938  001118  5C48               	subwf	_I,w,c
  2939  00111A  0EF3               	movlw	243
  2940  00111C  5849               	subwfb	_I+1,w,c
  2941  00111E  B0D8               	btfsc	status,0,c
  2942  001120  D024               	goto	l2779
  2943  001122                     l2771:
  2944  001122  BE49               	btfsc	_I+1,7,c
  2945  001124  D00F               	goto	l2775
  2946  001126  0EC9               	movlw	201
  2947  001128  5C48               	subwf	_I,w,c
  2948  00112A  0E0C               	movlw	12
  2949  00112C  5849               	subwfb	_I+1,w,c
  2950  00112E  A0D8               	btfss	status,0,c
  2951  001130  D009               	goto	l2775
  2952  001132  EE20 F002          	lfsr	2,2
  2953  001136  5035               	movf	PID_LineFollowing@error,w,c
  2954  001138  26D9               	addwf	fsr2l,f,c
  2955  00113A  5036               	movf	PID_LineFollowing@error+1,w,c
  2956  00113C  22DA               	addwfc	fsr2h,f,c
  2957  00113E  0E00               	movlw	0
  2958  001140  BEDB               	btfsc	plusw2,7,c
  2959  001142  D013               	goto	l2779
  2960  001144                     l2775:
  2961  001144  AE49               	btfss	_I+1,7,c
  2962  001146  D020               	goto	l2781
  2963  001148  0E37               	movlw	55
  2964  00114A  5C48               	subwf	_I,w,c
  2965  00114C  0EF3               	movlw	243
  2966  00114E  5849               	subwfb	_I+1,w,c
  2967  001150  B0D8               	btfsc	status,0,c
  2968  001152  D01A               	goto	l2781
  2969  001154  EE20 F002          	lfsr	2,2
  2970  001158  5035               	movf	PID_LineFollowing@error,w,c
  2971  00115A  26D9               	addwf	fsr2l,f,c
  2972  00115C  5036               	movf	PID_LineFollowing@error+1,w,c
  2973  00115E  22DA               	addwfc	fsr2h,f,c
  2974  001160  50DF               	movf	indf2,w,c
  2975  001162  0A80               	xorlw	128
  2976  001164  0F7F               	addlw	-129
  2977  001166  A0D8               	btfss	status,0,c
  2978  001168  D00F               	goto	l2781
  2979  00116A                     l2779:
  2980                           
  2981                           ;main.c: 130: I += error[2];
  2982  00116A  EE20 F002          	lfsr	2,2
  2983  00116E  5035               	movf	PID_LineFollowing@error,w,c
  2984  001170  26D9               	addwf	fsr2l,f,c
  2985  001172  5036               	movf	PID_LineFollowing@error+1,w,c
  2986  001174  22DA               	addwfc	fsr2h,f,c
  2987  001176  50DF               	movf	indf2,w,c
  2988  001178  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2989  00117A  5037               	movf	??_PID_LineFollowing,w,c
  2990  00117C  2648               	addwf	_I,f,c
  2991  00117E  0E00               	movlw	0
  2992  001180  BE37               	btfsc	??_PID_LineFollowing,7,c
  2993  001182  0EFF               	movlw	255
  2994  001184  2249               	addwfc	_I+1,f,c
  2995  001186  D000               	goto	l2781
  2996  001188                     l2781:
  2997                           
  2998                           ;main.c: 132: WriteTimer1(0);
  2999  001188  0E00               	movlw	0
  3000  00118A  6E10               	movwf	WriteTimer1@timer1+1,c
  3001  00118C  0E00               	movlw	0
  3002  00118E  6E0F               	movwf	WriteTimer1@timer1,c
  3003  001190  EC55  F011         	call	_WriteTimer1	;wreg free
  3004  001194  D000               	goto	l2783
  3005  001196                     l2783:
  3006                           
  3007                           ;main.c: 133: }
  3008                           ;main.c: 136: if(error[1]!=error[2])
  3009  001196  EE20 F002          	lfsr	2,2
  3010  00119A  5035               	movf	PID_LineFollowing@error,w,c
  3011  00119C  26D9               	addwf	fsr2l,f,c
  3012  00119E  5036               	movf	PID_LineFollowing@error+1,w,c
  3013  0011A0  22DA               	addwfc	fsr2h,f,c
  3014  0011A2  EE10 F001          	lfsr	1,1
  3015  0011A6  5035               	movf	PID_LineFollowing@error,w,c
  3016  0011A8  26E1               	addwf	fsr1l,f,c
  3017  0011AA  5036               	movf	PID_LineFollowing@error+1,w,c
  3018  0011AC  22E2               	addwfc	fsr1h,f,c
  3019  0011AE  50DE               	movf	postinc2,w,c
  3020  0011B0  18E6               	xorwf	postinc1,w,c
  3021  0011B2  B4D8               	btfsc	status,2,c
  3022  0011B4  D05F               	goto	l2795
  3023                           
  3024                           ;main.c: 137: {
  3025                           ;main.c: 138: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  3026  0011B6  EE20 F001          	lfsr	2,1
  3027  0011BA  5035               	movf	PID_LineFollowing@error,w,c
  3028  0011BC  26D9               	addwf	fsr2l,f,c
  3029  0011BE  5036               	movf	PID_LineFollowing@error+1,w,c
  3030  0011C0  22DA               	addwfc	fsr2h,f,c
  3031  0011C2  50DF               	movf	indf2,w,c
  3032  0011C4  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3033  0011C6  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3034  0011C8  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3035  0011CA  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3036  0011CC  1E37               	comf	??_PID_LineFollowing,f,c
  3037  0011CE  1E38               	comf	??_PID_LineFollowing+1,f,c
  3038  0011D0  4A37               	infsnz	??_PID_LineFollowing,f,c
  3039  0011D2  2A38               	incf	??_PID_LineFollowing+1,f,c
  3040  0011D4  EE20 F002          	lfsr	2,2
  3041  0011D8  5035               	movf	PID_LineFollowing@error,w,c
  3042  0011DA  26D9               	addwf	fsr2l,f,c
  3043  0011DC  5036               	movf	PID_LineFollowing@error+1,w,c
  3044  0011DE  22DA               	addwfc	fsr2h,f,c
  3045  0011E0  50DF               	movf	indf2,w,c
  3046  0011E2  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3047  0011E4  5037               	movf	??_PID_LineFollowing,w,c
  3048  0011E6  2439               	addwf	??_PID_LineFollowing+2,w,c
  3049  0011E8  6E1D               	movwf	___wmul@multiplier,c
  3050  0011EA  0E00               	movlw	0
  3051  0011EC  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3052  0011EE  0EFF               	movlw	255
  3053  0011F0  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3054  0011F2  6E1E               	movwf	___wmul@multiplier+1,c
  3055  0011F4  EC67  F011         	call	_ReadTimer0	;wreg free
  3056  0011F8  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  3057  0011FC  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  3058  001200  0E01               	movlw	low _D_CONSTANT
  3059  001202  6EF6               	movwf	tblptrl,c
  3060  001204                     	if	1	;There is more than 1 active tblptr byte
  3061  001204  0E10               	movlw	high _D_CONSTANT
  3062  001206  6EF7               	movwf	tblptrh,c
  3063  001208                     	endif
  3064  001208                     	if	1	;There are 3 active tblptr bytes
  3065  001208  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3066  00120A  6EF8               	movwf	tblptru,c
  3067  00120C                     	endif
  3068  00120C  0009               	tblrd		*+
  3069  00120E  CFF5 F013          	movff	tablat,___lwdiv@dividend
  3070  001212  000A               	tblrd		*-
  3071  001214  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  3072  001218  EC61  F00F         	call	___lwdiv	;wreg free
  3073  00121C  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  3074  001220  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3075  001224  EC5D  F010         	call	___wmul	;wreg free
  3076  001228  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3077  00122C  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3078                           
  3079                           ;main.c: 141: error[0]=error[1];
  3080  001230  EE20 F001          	lfsr	2,1
  3081  001234  5035               	movf	PID_LineFollowing@error,w,c
  3082  001236  26D9               	addwf	fsr2l,f,c
  3083  001238  5036               	movf	PID_LineFollowing@error+1,w,c
  3084  00123A  22DA               	addwfc	fsr2h,f,c
  3085  00123C  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3086  001240  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3087  001244  CFDF FFE7          	movff	indf2,indf1
  3088                           
  3089                           ;main.c: 142: error[1]=error[2];
  3090  001248  EE20 F002          	lfsr	2,2
  3091  00124C  5035               	movf	PID_LineFollowing@error,w,c
  3092  00124E  26D9               	addwf	fsr2l,f,c
  3093  001250  5036               	movf	PID_LineFollowing@error+1,w,c
  3094  001252  22DA               	addwfc	fsr2h,f,c
  3095  001254  EE10 F001          	lfsr	1,1
  3096  001258  5035               	movf	PID_LineFollowing@error,w,c
  3097  00125A  26E1               	addwf	fsr1l,f,c
  3098  00125C  5036               	movf	PID_LineFollowing@error+1,w,c
  3099  00125E  22E2               	addwfc	fsr1h,f,c
  3100  001260  CFDF FFE7          	movff	indf2,indf1
  3101                           
  3102                           ;main.c: 144: WriteTimer0(0);
  3103  001264  0E00               	movlw	0
  3104  001266  6E10               	movwf	WriteTimer0@timer0+1,c
  3105  001268  0E00               	movlw	0
  3106  00126A  6E0F               	movwf	WriteTimer0@timer0,c
  3107  00126C  EC70  F011         	call	_WriteTimer0	;wreg free
  3108                           
  3109                           ;main.c: 145: TMR0IF = 0;
  3110  001270  94F2               	bcf	intcon,2,c	;volatile
  3111  001272  D000               	goto	l2795
  3112  001274                     l2795:
  3113                           
  3114                           ;main.c: 146: }
  3115                           ;main.c: 148: if(TMR0IF)
  3116  001274  A4F2               	btfss	intcon,2,c	;volatile
  3117  001276  D05E               	goto	l122
  3118                           
  3119                           ;main.c: 149: {
  3120                           ;main.c: 150: D = D_CONSTANT/65535*(error[1]-error[0]);
  3121  001278  C035  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3122  00127C  C036  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3123  001280  50DF               	movf	indf2,w,c
  3124  001282  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3125  001284  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3126  001286  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3127  001288  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3128  00128A  1E37               	comf	??_PID_LineFollowing,f,c
  3129  00128C  1E38               	comf	??_PID_LineFollowing+1,f,c
  3130  00128E  4A37               	infsnz	??_PID_LineFollowing,f,c
  3131  001290  2A38               	incf	??_PID_LineFollowing+1,f,c
  3132  001292  EE20 F001          	lfsr	2,1
  3133  001296  5035               	movf	PID_LineFollowing@error,w,c
  3134  001298  26D9               	addwf	fsr2l,f,c
  3135  00129A  5036               	movf	PID_LineFollowing@error+1,w,c
  3136  00129C  22DA               	addwfc	fsr2h,f,c
  3137  00129E  50DF               	movf	indf2,w,c
  3138  0012A0  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3139  0012A2  5037               	movf	??_PID_LineFollowing,w,c
  3140  0012A4  2439               	addwf	??_PID_LineFollowing+2,w,c
  3141  0012A6  6E1D               	movwf	___wmul@multiplier,c
  3142  0012A8  0E00               	movlw	0
  3143  0012AA  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3144  0012AC  0EFF               	movlw	255
  3145  0012AE  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3146  0012B0  6E1E               	movwf	___wmul@multiplier+1,c
  3147  0012B2  0EFF               	movlw	255
  3148  0012B4  6E13               	movwf	___aldiv@divisor,c
  3149  0012B6  0EFF               	movlw	255
  3150  0012B8  6E14               	movwf	___aldiv@divisor+1,c
  3151  0012BA  0E00               	movlw	0
  3152  0012BC  6E15               	movwf	___aldiv@divisor+2,c
  3153  0012BE  0E00               	movlw	0
  3154  0012C0  6E16               	movwf	___aldiv@divisor+3,c
  3155  0012C2  0E01               	movlw	low _D_CONSTANT
  3156  0012C4  6EF6               	movwf	tblptrl,c
  3157  0012C6                     	if	1	;There is more than 1 active tblptr byte
  3158  0012C6  0E10               	movlw	high _D_CONSTANT
  3159  0012C8  6EF7               	movwf	tblptrh,c
  3160  0012CA                     	endif
  3161  0012CA                     	if	1	;There are 3 active tblptr bytes
  3162  0012CA  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3163  0012CC  6EF8               	movwf	tblptru,c
  3164  0012CE                     	endif
  3165  0012CE  0009               	tblrd		*+
  3166  0012D0  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+3
  3167  0012D4  0009               	tblrd		*+
  3168  0012D6  CFF5 F03B          	movff	tablat,??_PID_LineFollowing+4
  3169  0012DA  C03A  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3170  0012DE  C03B  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3171  0012E2  6A11               	clrf	___aldiv@dividend+2,c
  3172  0012E4  6A12               	clrf	___aldiv@dividend+3,c
  3173  0012E6  EC0A  F00C         	call	___aldiv	;wreg free
  3174  0012EA  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3175  0012EE  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3176  0012F2  EC5D  F010         	call	___wmul	;wreg free
  3177  0012F6  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3178  0012FA  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3179                           
  3180                           ;main.c: 153: error[0]=error[1];
  3181  0012FE  EE20 F001          	lfsr	2,1
  3182  001302  5035               	movf	PID_LineFollowing@error,w,c
  3183  001304  26D9               	addwf	fsr2l,f,c
  3184  001306  5036               	movf	PID_LineFollowing@error+1,w,c
  3185  001308  22DA               	addwfc	fsr2h,f,c
  3186  00130A  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3187  00130E  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3188  001312  CFDF FFE7          	movff	indf2,indf1
  3189                           
  3190                           ;main.c: 154: error[1]=error[2];
  3191  001316  EE20 F002          	lfsr	2,2
  3192  00131A  5035               	movf	PID_LineFollowing@error,w,c
  3193  00131C  26D9               	addwf	fsr2l,f,c
  3194  00131E  5036               	movf	PID_LineFollowing@error+1,w,c
  3195  001320  22DA               	addwfc	fsr2h,f,c
  3196  001322  EE10 F001          	lfsr	1,1
  3197  001326  5035               	movf	PID_LineFollowing@error,w,c
  3198  001328  26E1               	addwf	fsr1l,f,c
  3199  00132A  5036               	movf	PID_LineFollowing@error+1,w,c
  3200  00132C  22E2               	addwfc	fsr1h,f,c
  3201  00132E  CFDF FFE7          	movff	indf2,indf1
  3202                           
  3203                           ;main.c: 156: TMR0IF = 0;
  3204  001332  94F2               	bcf	intcon,2,c	;volatile
  3205  001334                     l122:
  3206                           
  3207                           ;main.c: 157: }
  3208                           ;main.c: 161: delta_velocity = P_CONSTANT*error[2] + I + D;
  3209  001334  EE20 F002          	lfsr	2,2
  3210  001338  5035               	movf	PID_LineFollowing@error,w,c
  3211  00133A  26D9               	addwf	fsr2l,f,c
  3212  00133C  5036               	movf	PID_LineFollowing@error+1,w,c
  3213  00133E  22DA               	addwfc	fsr2h,f,c
  3214  001340  50DF               	movf	indf2,w,c
  3215  001342  6E1D               	movwf	___wmul@multiplier,c
  3216  001344  6A1E               	clrf	___wmul@multiplier+1,c
  3217  001346  BE1D               	btfsc	___wmul@multiplier,7,c
  3218  001348  061E               	decf	___wmul@multiplier+1,f,c
  3219  00134A  0E05               	movlw	low _P_CONSTANT
  3220  00134C  6EF6               	movwf	tblptrl,c
  3221  00134E                     	if	1	;There is more than 1 active tblptr byte
  3222  00134E  0E10               	movlw	high _P_CONSTANT
  3223  001350  6EF7               	movwf	tblptrh,c
  3224  001352                     	endif
  3225  001352                     	if	1	;There are 3 active tblptr bytes
  3226  001352  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3227  001354  6EF8               	movwf	tblptru,c
  3228  001356                     	endif
  3229  001356  0009               	tblrd		*+
  3230  001358  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3231  00135C  000A               	tblrd		*-
  3232  00135E  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3233  001362  EC5D  F010         	call	___wmul	;wreg free
  3234  001366  5048               	movf	_I,w,c
  3235  001368  261D               	addwf	?___wmul,f,c
  3236  00136A  5049               	movf	_I+1,w,c
  3237  00136C  221E               	addwfc	?___wmul+1,f,c
  3238  00136E  5044               	movf	PID_LineFollowing@D,w,c
  3239  001370  241D               	addwf	?___wmul,w,c
  3240  001372  6E46               	movwf	PID_LineFollowing@delta_velocity,c
  3241  001374  5045               	movf	PID_LineFollowing@D+1,w,c
  3242  001376  201E               	addwfc	?___wmul+1,w,c
  3243  001378  6E47               	movwf	PID_LineFollowing@delta_velocity+1,c
  3244                           
  3245                           ;main.c: 164: MotorControl(delta_velocity,0);
  3246  00137A  C046  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3247  00137E  C047  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3248  001382  0E00               	movlw	0
  3249  001384  6E2D               	movwf	MotorControl@speed_divider,c
  3250  001386  ECC6  F009         	call	_MotorControl	;wreg free
  3251  00138A  0012               	return		;funcret
  3252  00138C                     __end_of_PID_LineFollowing:
  3253                           	opt stack 0
  3254                           stkptr	equ	0xFFC
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           intcon	equ	0xFF2
  3260                           postinc0	equ	0xFEE
  3261                           wreg	equ	0xFE8
  3262                           indf1	equ	0xFE7
  3263                           postinc1	equ	0xFE6
  3264                           fsr1h	equ	0xFE2
  3265                           fsr1l	equ	0xFE1
  3266                           indf2	equ	0xFDF
  3267                           postinc2	equ	0xFDE
  3268                           plusw2	equ	0xFDB
  3269                           fsr2h	equ	0xFDA
  3270                           fsr2l	equ	0xFD9
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function ___lwdiv *****************
  3274 ;; Defined at:
  3275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  dividend        2   18[COMRAM] unsigned int 
  3278 ;;  divisor         2   20[COMRAM] unsigned int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  quotient        2   22[COMRAM] unsigned int 
  3281 ;;  counter         1   24[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  2   18[COMRAM] unsigned int 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;Total ram usage:        7 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_PID_LineFollowing
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text26
  3306  001EC2                     __ptext26:
  3307                           	opt stack 0
  3308  001EC2                     ___lwdiv:
  3309                           	opt stack 28
  3310                           
  3311                           ;incstack = 0
  3312  001EC2  0E00               	movlw	0
  3313  001EC4  6E18               	movwf	___lwdiv@quotient+1,c
  3314  001EC6  0E00               	movlw	0
  3315  001EC8  6E17               	movwf	___lwdiv@quotient,c
  3316  001ECA  5015               	movf	___lwdiv@divisor,w,c
  3317  001ECC  1016               	iorwf	___lwdiv@divisor+1,w,c
  3318  001ECE  B4D8               	btfsc	status,2,c
  3319  001ED0  D021               	goto	l1187
  3320  001ED2  0E01               	movlw	1
  3321  001ED4  6E19               	movwf	___lwdiv@counter,c
  3322  001ED6  D005               	goto	l2617
  3323  001ED8                     l2615:
  3324  001ED8  90D8               	bcf	status,0,c
  3325  001EDA  3615               	rlcf	___lwdiv@divisor,f,c
  3326  001EDC  3616               	rlcf	___lwdiv@divisor+1,f,c
  3327  001EDE  2A19               	incf	___lwdiv@counter,f,c
  3328  001EE0  D000               	goto	l2617
  3329  001EE2                     l2617:
  3330  001EE2  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3331  001EE4  D002               	goto	l2619
  3332  001EE6  D7F8               	goto	l2615
  3333  001EE8  D000               	goto	l2619
  3334  001EEA                     l2619:
  3335  001EEA  90D8               	bcf	status,0,c
  3336  001EEC  3617               	rlcf	___lwdiv@quotient,f,c
  3337  001EEE  3618               	rlcf	___lwdiv@quotient+1,f,c
  3338  001EF0  5015               	movf	___lwdiv@divisor,w,c
  3339  001EF2  5C13               	subwf	___lwdiv@dividend,w,c
  3340  001EF4  5016               	movf	___lwdiv@divisor+1,w,c
  3341  001EF6  5814               	subwfb	___lwdiv@dividend+1,w,c
  3342  001EF8  A0D8               	btfss	status,0,c
  3343  001EFA  D006               	goto	l2627
  3344  001EFC  5015               	movf	___lwdiv@divisor,w,c
  3345  001EFE  5E13               	subwf	___lwdiv@dividend,f,c
  3346  001F00  5016               	movf	___lwdiv@divisor+1,w,c
  3347  001F02  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3348  001F04  8017               	bsf	___lwdiv@quotient,0,c
  3349  001F06  D000               	goto	l2627
  3350  001F08                     l2627:
  3351  001F08  90D8               	bcf	status,0,c
  3352  001F0A  3216               	rrcf	___lwdiv@divisor+1,f,c
  3353  001F0C  3215               	rrcf	___lwdiv@divisor,f,c
  3354  001F0E  2E19               	decfsz	___lwdiv@counter,f,c
  3355  001F10  D7EC               	goto	l2619
  3356  001F12  D000               	goto	l1187
  3357  001F14                     l1187:
  3358  001F14  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3359  001F18  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3360  001F1C  0012               	return		;funcret
  3361  001F1E                     __end_of___lwdiv:
  3362                           	opt stack 0
  3363                           stkptr	equ	0xFFC
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           intcon	equ	0xFF2
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           indf1	equ	0xFE7
  3372                           postinc1	equ	0xFE6
  3373                           fsr1h	equ	0xFE2
  3374                           fsr1l	equ	0xFE1
  3375                           indf2	equ	0xFDF
  3376                           postinc2	equ	0xFDE
  3377                           plusw2	equ	0xFDB
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function ___aldiv *****************
  3383 ;; Defined at:
  3384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  dividend        4   14[COMRAM] long 
  3387 ;;  divisor         4   18[COMRAM] long 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  quotient        4   24[COMRAM] long 
  3390 ;;  sign            1   23[COMRAM] unsigned char 
  3391 ;;  counter         1   22[COMRAM] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  4   14[COMRAM] long 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3401 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;Total ram usage:       14 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_PID_LineFollowing
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text27
  3416  001814                     __ptext27:
  3417                           	opt stack 0
  3418  001814                     ___aldiv:
  3419                           	opt stack 28
  3420                           
  3421                           ;incstack = 0
  3422  001814  0E00               	movlw	0
  3423  001816  6E18               	movwf	___aldiv@sign,c
  3424  001818  AE16               	btfss	___aldiv@divisor+3,7,c
  3425  00181A  D00B               	goto	l2573
  3426  00181C  1E16               	comf	___aldiv@divisor+3,f,c
  3427  00181E  1E15               	comf	___aldiv@divisor+2,f,c
  3428  001820  1E14               	comf	___aldiv@divisor+1,f,c
  3429  001822  6C13               	negf	___aldiv@divisor,c
  3430  001824  0E00               	movlw	0
  3431  001826  2214               	addwfc	___aldiv@divisor+1,f,c
  3432  001828  2215               	addwfc	___aldiv@divisor+2,f,c
  3433  00182A  2216               	addwfc	___aldiv@divisor+3,f,c
  3434  00182C  0E01               	movlw	1
  3435  00182E  6E18               	movwf	___aldiv@sign,c
  3436  001830  D000               	goto	l2573
  3437  001832                     l2573:
  3438  001832  AE12               	btfss	___aldiv@dividend+3,7,c
  3439  001834  D00B               	goto	l2579
  3440  001836  1E12               	comf	___aldiv@dividend+3,f,c
  3441  001838  1E11               	comf	___aldiv@dividend+2,f,c
  3442  00183A  1E10               	comf	___aldiv@dividend+1,f,c
  3443  00183C  6C0F               	negf	___aldiv@dividend,c
  3444  00183E  0E00               	movlw	0
  3445  001840  2210               	addwfc	___aldiv@dividend+1,f,c
  3446  001842  2211               	addwfc	___aldiv@dividend+2,f,c
  3447  001844  2212               	addwfc	___aldiv@dividend+3,f,c
  3448  001846  0E01               	movlw	1
  3449  001848  1A18               	xorwf	___aldiv@sign,f,c
  3450  00184A  D000               	goto	l2579
  3451  00184C                     l2579:
  3452  00184C  0E00               	movlw	0
  3453  00184E  6E19               	movwf	___aldiv@quotient,c
  3454  001850  0E00               	movlw	0
  3455  001852  6E1A               	movwf	___aldiv@quotient+1,c
  3456  001854  0E00               	movlw	0
  3457  001856  6E1B               	movwf	___aldiv@quotient+2,c
  3458  001858  0E00               	movlw	0
  3459  00185A  6E1C               	movwf	___aldiv@quotient+3,c
  3460  00185C  5013               	movf	___aldiv@divisor,w,c
  3461  00185E  1014               	iorwf	___aldiv@divisor+1,w,c
  3462  001860  1015               	iorwf	___aldiv@divisor+2,w,c
  3463  001862  1016               	iorwf	___aldiv@divisor+3,w,c
  3464  001864  B4D8               	btfsc	status,2,c
  3465  001866  D02F               	goto	l2601
  3466  001868  0E01               	movlw	1
  3467  00186A  6E17               	movwf	___aldiv@counter,c
  3468  00186C  D007               	goto	l2587
  3469  00186E                     l2585:
  3470  00186E  90D8               	bcf	status,0,c
  3471  001870  3613               	rlcf	___aldiv@divisor,f,c
  3472  001872  3614               	rlcf	___aldiv@divisor+1,f,c
  3473  001874  3615               	rlcf	___aldiv@divisor+2,f,c
  3474  001876  3616               	rlcf	___aldiv@divisor+3,f,c
  3475  001878  2A17               	incf	___aldiv@counter,f,c
  3476  00187A  D000               	goto	l2587
  3477  00187C                     l2587:
  3478  00187C  BE16               	btfsc	___aldiv@divisor+3,7,c
  3479  00187E  D002               	goto	l2589
  3480  001880  D7F6               	goto	l2585
  3481  001882  D000               	goto	l2589
  3482  001884                     l2589:
  3483  001884  90D8               	bcf	status,0,c
  3484  001886  3619               	rlcf	___aldiv@quotient,f,c
  3485  001888  361A               	rlcf	___aldiv@quotient+1,f,c
  3486  00188A  361B               	rlcf	___aldiv@quotient+2,f,c
  3487  00188C  361C               	rlcf	___aldiv@quotient+3,f,c
  3488  00188E  5013               	movf	___aldiv@divisor,w,c
  3489  001890  5C0F               	subwf	___aldiv@dividend,w,c
  3490  001892  5014               	movf	___aldiv@divisor+1,w,c
  3491  001894  5810               	subwfb	___aldiv@dividend+1,w,c
  3492  001896  5015               	movf	___aldiv@divisor+2,w,c
  3493  001898  5811               	subwfb	___aldiv@dividend+2,w,c
  3494  00189A  5016               	movf	___aldiv@divisor+3,w,c
  3495  00189C  5812               	subwfb	___aldiv@dividend+3,w,c
  3496  00189E  A0D8               	btfss	status,0,c
  3497  0018A0  D00A               	goto	l2597
  3498  0018A2  5013               	movf	___aldiv@divisor,w,c
  3499  0018A4  5E0F               	subwf	___aldiv@dividend,f,c
  3500  0018A6  5014               	movf	___aldiv@divisor+1,w,c
  3501  0018A8  5A10               	subwfb	___aldiv@dividend+1,f,c
  3502  0018AA  5015               	movf	___aldiv@divisor+2,w,c
  3503  0018AC  5A11               	subwfb	___aldiv@dividend+2,f,c
  3504  0018AE  5016               	movf	___aldiv@divisor+3,w,c
  3505  0018B0  5A12               	subwfb	___aldiv@dividend+3,f,c
  3506  0018B2  8019               	bsf	___aldiv@quotient,0,c
  3507  0018B4  D000               	goto	l2597
  3508  0018B6                     l2597:
  3509  0018B6  90D8               	bcf	status,0,c
  3510  0018B8  3216               	rrcf	___aldiv@divisor+3,f,c
  3511  0018BA  3215               	rrcf	___aldiv@divisor+2,f,c
  3512  0018BC  3214               	rrcf	___aldiv@divisor+1,f,c
  3513  0018BE  3213               	rrcf	___aldiv@divisor,f,c
  3514  0018C0  2E17               	decfsz	___aldiv@counter,f,c
  3515  0018C2  D7E0               	goto	l2589
  3516  0018C4  D000               	goto	l2601
  3517  0018C6                     l2601:
  3518  0018C6  5018               	movf	___aldiv@sign,w,c
  3519  0018C8  B4D8               	btfsc	status,2,c
  3520  0018CA  D009               	goto	l2605
  3521  0018CC  1E1C               	comf	___aldiv@quotient+3,f,c
  3522  0018CE  1E1B               	comf	___aldiv@quotient+2,f,c
  3523  0018D0  1E1A               	comf	___aldiv@quotient+1,f,c
  3524  0018D2  6C19               	negf	___aldiv@quotient,c
  3525  0018D4  0E00               	movlw	0
  3526  0018D6  221A               	addwfc	___aldiv@quotient+1,f,c
  3527  0018D8  221B               	addwfc	___aldiv@quotient+2,f,c
  3528  0018DA  221C               	addwfc	___aldiv@quotient+3,f,c
  3529  0018DC  D000               	goto	l2605
  3530  0018DE                     l2605:
  3531  0018DE  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  3532  0018E2  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  3533  0018E6  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  3534  0018EA  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  3535  0018EE  D000               	goto	l738
  3536  0018F0                     l738:
  3537  0018F0  0012               	return		;funcret
  3538  0018F2                     __end_of___aldiv:
  3539                           	opt stack 0
  3540                           stkptr	equ	0xFFC
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           intcon	equ	0xFF2
  3546                           postinc0	equ	0xFEE
  3547                           wreg	equ	0xFE8
  3548                           indf1	equ	0xFE7
  3549                           postinc1	equ	0xFE6
  3550                           fsr1h	equ	0xFE2
  3551                           fsr1l	equ	0xFE1
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           plusw2	equ	0xFDB
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function _WriteTimer1 *****************
  3560 ;; Defined at:
  3561 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  timer1          2   14[COMRAM] unsigned int 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  timer           2   16[COMRAM] struct Timers
  3566 ;; Return value:  Size  Location     Type
  3567 ;;		None               void
  3568 ;; Registers used:
  3569 ;;		None
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_main
  3586 ;;		_PID_LineFollowing
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text28
  3591  0022AA                     __ptext28:
  3592                           	opt stack 0
  3593  0022AA                     _WriteTimer1:
  3594                           	opt stack 29
  3595                           
  3596                           ;incstack = 0
  3597  0022AA  C00F  F011         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3598  0022AE  C010  F012         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3599  0022B2  C012  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3600  0022B6  C011  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3601  0022BA  0012               	return		;funcret
  3602  0022BC                     __end_of_WriteTimer1:
  3603                           	opt stack 0
  3604                           stkptr	equ	0xFFC
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           indf1	equ	0xFE7
  3613                           postinc1	equ	0xFE6
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           postinc2	equ	0xFDE
  3618                           plusw2	equ	0xFDB
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function _ReadTimer1 *****************
  3624 ;; Defined at:
  3625 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  timer           2   16[COMRAM] struct Timers
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2   14[COMRAM] unsigned int 
  3632 ;; Registers used:
  3633 ;;		None
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;Total ram usage:        4 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_PID_LineFollowing
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text29
  3654  0022BC                     __ptext29:
  3655                           	opt stack 0
  3656  0022BC                     _ReadTimer1:
  3657                           	opt stack 28
  3658                           
  3659                           ;incstack = 0
  3660  0022BC  CFCE F011          	movff	4046,ReadTimer1@timer	;volatile
  3661  0022C0  CFCF F012          	movff	4047,ReadTimer1@timer+1	;volatile
  3662  0022C4  C011  F00F         	movff	ReadTimer1@timer,?_ReadTimer1
  3663  0022C8  C012  F010         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  3664  0022CC  0012               	return		;funcret
  3665  0022CE                     __end_of_ReadTimer1:
  3666                           	opt stack 0
  3667                           stkptr	equ	0xFFC
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           intcon	equ	0xFF2
  3673                           postinc0	equ	0xFEE
  3674                           wreg	equ	0xFE8
  3675                           indf1	equ	0xFE7
  3676                           postinc1	equ	0xFE6
  3677                           fsr1h	equ	0xFE2
  3678                           fsr1l	equ	0xFE1
  3679                           indf2	equ	0xFDF
  3680                           postinc2	equ	0xFDE
  3681                           plusw2	equ	0xFDB
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _OpenTimer1 *****************
  3687 ;; Defined at:
  3688 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  config          1    wreg     unsigned char 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  config          1   14[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;		None               void
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text30
  3717  002066                     __ptext30:
  3718                           	opt stack 0
  3719  002066                     _OpenTimer1:
  3720                           	opt stack 29
  3721                           
  3722                           ;incstack = 0
  3723                           ;OpenTimer1@config stored from wreg
  3724  002066  6E0F               	movwf	OpenTimer1@config,c
  3725  002068  500F               	movf	OpenTimer1@config,w,c
  3726  00206A  0B7E               	andlw	126
  3727  00206C  6ECD               	movwf	4045,c	;volatile
  3728  00206E  AC0F               	btfss	OpenTimer1@config,6,c
  3729  002070  D002               	goto	l570
  3730  002072  8ECD               	bsf	4045,7,c	;volatile
  3731  002074  D002               	goto	l1909
  3732  002076                     l570:
  3733  002076  9ECD               	bcf	4045,7,c	;volatile
  3734  002078  D000               	goto	l1909
  3735  00207A                     l1909:
  3736  00207A  0E00               	movlw	0
  3737  00207C  6ECF               	movwf	4047,c	;volatile
  3738  00207E  0E00               	movlw	0
  3739  002080  6ECE               	movwf	4046,c	;volatile
  3740  002082  909E               	bcf	3998,0,c	;volatile
  3741  002084  AE0F               	btfss	OpenTimer1@config,7,c
  3742  002086  D002               	goto	l572
  3743  002088  809D               	bsf	3997,0,c	;volatile
  3744  00208A  D001               	goto	l573
  3745  00208C                     l572:
  3746  00208C  909D               	bcf	3997,0,c	;volatile
  3747  00208E                     l573:
  3748  00208E  80CD               	bsf	4045,0,c	;volatile
  3749  002090  0012               	return		;funcret
  3750  002092                     __end_of_OpenTimer1:
  3751                           	opt stack 0
  3752                           stkptr	equ	0xFFC
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           intcon	equ	0xFF2
  3758                           postinc0	equ	0xFEE
  3759                           wreg	equ	0xFE8
  3760                           indf1	equ	0xFE7
  3761                           postinc1	equ	0xFE6
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           indf2	equ	0xFDF
  3765                           postinc2	equ	0xFDE
  3766                           plusw2	equ	0xFDB
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _OpenTimer0 *****************
  3772 ;; Defined at:
  3773 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  config          1    wreg     unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  config          1   14[COMRAM] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;Total ram usage:        1 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text31
  3802  002170                     __ptext31:
  3803                           	opt stack 0
  3804  002170                     _OpenTimer0:
  3805                           	opt stack 29
  3806                           
  3807                           ;incstack = 0
  3808                           ;OpenTimer0@config stored from wreg
  3809  002170  6E0F               	movwf	OpenTimer0@config,c
  3810  002172  500F               	movf	OpenTimer0@config,w,c
  3811  002174  0B7F               	andlw	127
  3812  002176  6ED5               	movwf	4053,c	;volatile
  3813  002178  0E00               	movlw	0
  3814  00217A  6ED7               	movwf	4055,c	;volatile
  3815  00217C  0E00               	movlw	0
  3816  00217E  6ED6               	movwf	4054,c	;volatile
  3817  002180  94F2               	bcf	intcon,2,c	;volatile
  3818  002182  AE0F               	btfss	OpenTimer0@config,7,c
  3819  002184  D002               	goto	l539
  3820  002186  8AF2               	bsf	intcon,5,c	;volatile
  3821  002188  D001               	goto	l540
  3822  00218A                     l539:
  3823  00218A  9AF2               	bcf	intcon,5,c	;volatile
  3824  00218C                     l540:
  3825  00218C  8ED5               	bsf	4053,7,c	;volatile
  3826  00218E  0012               	return		;funcret
  3827  002190                     __end_of_OpenTimer0:
  3828                           	opt stack 0
  3829                           stkptr	equ	0xFFC
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           intcon	equ	0xFF2
  3835                           postinc0	equ	0xFEE
  3836                           wreg	equ	0xFE8
  3837                           indf1	equ	0xFE7
  3838                           postinc1	equ	0xFE6
  3839                           fsr1h	equ	0xFE2
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           postinc2	equ	0xFDE
  3843                           plusw2	equ	0xFDB
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848 ;; *************** function _LVtrap *****************
  3849 ;; Defined at:
  3850 ;;		line 449 in file "../Robot Files/sumovore.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;		None               void
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        0 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    3
  3871 ;; This function calls:
  3872 ;;		_gtrap
  3873 ;;		_openPORTD
  3874 ;;		_printf
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text32
  3881  002190                     __ptext32:
  3882                           	opt stack 0
  3883  002190                     _LVtrap:
  3884                           	opt stack 27
  3885                           
  3886                           ;sumovore.c: 451: printf("\\<LVD>");
  3887                           
  3888                           ;incstack = 0
  3889  002190  0E66               	movlw	low STR_7
  3890  002192  6E0F               	movwf	printf@f,c
  3891  002194  0E10               	movlw	high STR_7
  3892  002196  6E10               	movwf	printf@f+1,c
  3893  002198  EC06  F010         	call	_printf	;wreg free
  3894                           
  3895                           ;sumovore.c: 452: openPORTD();
  3896  00219C  ECA1  F011         	call	_openPORTD	;wreg free
  3897                           
  3898                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3899  0021A0  9083               	bcf	3971,0,c	;volatile
  3900                           
  3901                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3902  0021A2  8283               	bsf	3971,1,c	;volatile
  3903                           
  3904                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3905  0021A4  8483               	bsf	3971,2,c	;volatile
  3906                           
  3907                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3908  0021A6  9683               	bcf	3971,3,c	;volatile
  3909                           
  3910                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3911  0021A8  8883               	bsf	3971,4,c	;volatile
  3912                           
  3913                           ;sumovore.c: 458: gtrap();
  3914  0021AA  EC01  F00F         	call	_gtrap	;wreg free
  3915  0021AE  0012               	return		;funcret
  3916  0021B0                     __end_of_LVtrap:
  3917                           	opt stack 0
  3918                           stkptr	equ	0xFFC
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           intcon	equ	0xFF2
  3924                           postinc0	equ	0xFEE
  3925                           wreg	equ	0xFE8
  3926                           indf1	equ	0xFE7
  3927                           postinc1	equ	0xFE6
  3928                           fsr1h	equ	0xFE2
  3929                           fsr1l	equ	0xFE1
  3930                           indf2	equ	0xFDF
  3931                           postinc2	equ	0xFDE
  3932                           plusw2	equ	0xFDB
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _printf *****************
  3938 ;; Defined at:
  3939 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3942 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3943 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  tmpval          4    0        struct .
  3946 ;;  cp              3    0        PTR const unsigned char 
  3947 ;;  ap              2   16[COMRAM] PTR void [1]
  3948 ;;		 -> ?_printf(2), 
  3949 ;;  len             2    0        unsigned int 
  3950 ;;  val             2    0        unsigned int 
  3951 ;;  c               1   18[COMRAM] char 
  3952 ;;  flag            1    0        unsigned char 
  3953 ;;  prec            1    0        char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  2   14[COMRAM] int 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;Total ram usage:        5 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    2
  3970 ;; This function calls:
  3971 ;;		_putch
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;;		_PORtask
  3975 ;;		_BORtask
  3976 ;;		_WDTtask
  3977 ;;		_STKFULtask
  3978 ;;		_RESETtask
  3979 ;;		_LVtrap
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text33
  3984  00200C                     __ptext33:
  3985                           	opt stack 0
  3986  00200C                     _printf:
  3987                           	opt stack 28
  3988                           
  3989                           ;doprnt.c: 466: va_list ap;
  3990                           ;doprnt.c: 499: signed char c;
  3991                           ;doprnt.c: 506: signed char prec;
  3992                           ;doprnt.c: 508: unsigned char flag;
  3993                           ;doprnt.c: 523: union {
  3994                           ;doprnt.c: 524: unsigned long vd;
  3995                           ;doprnt.c: 525: double integ;
  3996                           ;doprnt.c: 526: } tmpval;
  3997                           ;doprnt.c: 528: unsigned int val;
  3998                           ;doprnt.c: 529: unsigned len;
  3999                           ;doprnt.c: 530: const char * cp;
  4000                           ;doprnt.c: 533: *ap = __va_start();
  4001                           
  4002                           ;incstack = 0
  4003  00200C  0E11               	movlw	low (?_printf+2)
  4004  00200E  6E11               	movwf	printf@ap,c
  4005  002010  0E00               	movlw	high (?_printf+2)
  4006  002012  6E12               	movwf	printf@ap+1,c
  4007                           
  4008                           ;doprnt.c: 536: while(c = *f++) {
  4009  002014  D004               	goto	l2217
  4010  002016                     l2215:
  4011                           
  4012                           ;doprnt.c: 540: {
  4013                           ;doprnt.c: 541: (putch(c) );
  4014  002016  5013               	movf	printf@c,w,c
  4015  002018  ECA6  F011         	call	_putch
  4016                           
  4017                           ;doprnt.c: 542: continue;
  4018  00201C  D000               	goto	l2217
  4019  00201E                     l2217:
  4020  00201E  C00F  FFF6         	movff	printf@f,tblptrl
  4021  002022  C010  FFF7         	movff	printf@f+1,tblptrh
  4022  002026  4A0F               	infsnz	printf@f,f,c
  4023  002028  2A10               	incf	printf@f+1,f,c
  4024  00202A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4025  00202A  6AF8               	clrf	tblptru,c
  4026  00202C                     	endif
  4027  00202C                     	if	0	;tblptru may be non-zero
  4028  00202C                     	endif
  4029  00202C  0008               	tblrd		*
  4030  00202E  CFF5 F013          	movff	tablat,printf@c
  4031  002032  5013               	movf	printf@c,w,c
  4032  002034  A4D8               	btfss	status,2,c
  4033  002036  D7EF               	goto	l2215
  4034                           
  4035                           ;doprnt.c: 1469: }
  4036                           ;doprnt.c: 1533: }
  4037                           ;doprnt.c: 1540: return 0;
  4038                           ;	Return value of _printf is never used
  4039  002038  0012               	return		;funcret
  4040  00203A                     __end_of_printf:
  4041                           	opt stack 0
  4042                           stkptr	equ	0xFFC
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           intcon	equ	0xFF2
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           indf1	equ	0xFE7
  4051                           postinc1	equ	0xFE6
  4052                           fsr1h	equ	0xFE2
  4053                           fsr1l	equ	0xFE1
  4054                           indf2	equ	0xFDF
  4055                           postinc2	equ	0xFDE
  4056                           plusw2	equ	0xFDB
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _putch *****************
  4062 ;; Defined at:
  4063 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  c               1    wreg     unsigned char 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  c               1    0[COMRAM] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;		None               void
  4070 ;; Registers used:
  4071 ;;		wreg
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_printf
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text34
  4092  00234C                     __ptext34:
  4093                           	opt stack 0
  4094  00234C                     _putch:
  4095                           	opt stack 28
  4096                           
  4097                           ;incstack = 0
  4098  00234C  0012               	return		;funcret
  4099  00234E                     __end_of_putch:
  4100                           	opt stack 0
  4101                           stkptr	equ	0xFFC
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           intcon	equ	0xFF2
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           indf1	equ	0xFE7
  4110                           postinc1	equ	0xFE6
  4111                           fsr1h	equ	0xFE2
  4112                           fsr1l	equ	0xFE1
  4113                           indf2	equ	0xFDF
  4114                           postinc2	equ	0xFDE
  4115                           plusw2	equ	0xFDB
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _openPORTD *****************
  4121 ;; Defined at:
  4122 ;;		line 168 in file "../Robot Files/sumovore.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;		None               void
  4129 ;; Registers used:
  4130 ;;		wreg, status,2
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_initialization
  4147 ;;		_LVtrap
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text35
  4152  002342                     __ptext35:
  4153                           	opt stack 0
  4154  002342                     _openPORTD:
  4155                           	opt stack 28
  4156                           
  4157                           ;sumovore.c: 170: TRISD = 0b01100000;
  4158                           
  4159                           ;incstack = 0
  4160  002342  0E60               	movlw	96
  4161  002344  6E95               	movwf	3989,c	;volatile
  4162  002346  0012               	return		;funcret
  4163  002348                     __end_of_openPORTD:
  4164                           	opt stack 0
  4165                           stkptr	equ	0xFFC
  4166                           tblptru	equ	0xFF8
  4167                           tblptrh	equ	0xFF7
  4168                           tblptrl	equ	0xFF6
  4169                           tablat	equ	0xFF5
  4170                           intcon	equ	0xFF2
  4171                           postinc0	equ	0xFEE
  4172                           wreg	equ	0xFE8
  4173                           indf1	equ	0xFE7
  4174                           postinc1	equ	0xFE6
  4175                           fsr1h	equ	0xFE2
  4176                           fsr1l	equ	0xFE1
  4177                           indf2	equ	0xFDF
  4178                           postinc2	equ	0xFDE
  4179                           plusw2	equ	0xFDB
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function _gtrap *****************
  4185 ;; Defined at:
  4186 ;;		line 464 in file "../Robot Files/sumovore.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  count           4   14[COMRAM] unsigned long 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;		None               void
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:        4 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_BORtask
  4211 ;;		_WDTtask
  4212 ;;		_STKFULtask
  4213 ;;		_RESETtask
  4214 ;;		_LVtrap
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text36
  4219  001E02                     __ptext36:
  4220                           	opt stack 0
  4221  001E02                     _gtrap:
  4222                           	opt stack 26
  4223                           
  4224                           ;sumovore.c: 466: unsigned long count=0;
  4225                           
  4226                           ;incstack = 0
  4227  001E02  0E00               	movlw	0
  4228  001E04  6E0F               	movwf	gtrap@count,c
  4229  001E06  0E00               	movlw	0
  4230  001E08  6E10               	movwf	gtrap@count+1,c
  4231  001E0A  0E00               	movlw	0
  4232  001E0C  6E11               	movwf	gtrap@count+2,c
  4233  001E0E  0E00               	movlw	0
  4234  001E10  6E12               	movwf	gtrap@count+3,c
  4235  001E12                     l372:
  4236  001E12  0004               	clrwdt		;# 
  4237                           
  4238                           ;sumovore.c: 471: if (count==30000u)
  4239  001E14  0E30               	movlw	48
  4240  001E16  180F               	xorwf	gtrap@count,w,c
  4241  001E18  E111               	bnz	l1315
  4242  001E1A  0E75               	movlw	117
  4243  001E1C  1810               	xorwf	gtrap@count+1,w,c
  4244  001E1E  1011               	iorwf	gtrap@count+2,w,c
  4245  001E20  1012               	iorwf	gtrap@count+3,w,c
  4246  001E22  A4D8               	btfss	status,2,c
  4247  001E24  D00B               	goto	l1315
  4248                           
  4249                           ;sumovore.c: 472: {
  4250                           ;sumovore.c: 473: count=0;
  4251  001E26  0E00               	movlw	0
  4252  001E28  6E0F               	movwf	gtrap@count,c
  4253  001E2A  0E00               	movlw	0
  4254  001E2C  6E10               	movwf	gtrap@count+1,c
  4255  001E2E  0E00               	movlw	0
  4256  001E30  6E11               	movwf	gtrap@count+2,c
  4257  001E32  0E00               	movlw	0
  4258  001E34  6E12               	movwf	gtrap@count+3,c
  4259                           
  4260                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  4261  001E36  9083               	bcf	3971,0,c	;volatile
  4262                           
  4263                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  4264  001E38  8283               	bsf	3971,1,c	;volatile
  4265                           
  4266                           ;sumovore.c: 476: }
  4267  001E3A  D00C               	goto	l1319
  4268  001E3C                     l1315:
  4269                           
  4270                           ;sumovore.c: 477: else if (count==15000u)
  4271  001E3C  0E98               	movlw	152
  4272  001E3E  180F               	xorwf	gtrap@count,w,c
  4273  001E40  E109               	bnz	l1319
  4274  001E42  0E3A               	movlw	58
  4275  001E44  1810               	xorwf	gtrap@count+1,w,c
  4276  001E46  1011               	iorwf	gtrap@count+2,w,c
  4277  001E48  1012               	iorwf	gtrap@count+3,w,c
  4278  001E4A  A4D8               	btfss	status,2,c
  4279  001E4C  D003               	goto	l1319
  4280                           
  4281                           ;sumovore.c: 478: {
  4282                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  4283  001E4E  8083               	bsf	3971,0,c	;volatile
  4284                           
  4285                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  4286  001E50  9283               	bcf	3971,1,c	;volatile
  4287  001E52  D000               	goto	l1319
  4288  001E54                     l1319:
  4289                           
  4290                           ;sumovore.c: 481: }
  4291                           ;sumovore.c: 482: count++;
  4292  001E54  0E01               	movlw	1
  4293  001E56  260F               	addwf	gtrap@count,f,c
  4294  001E58  0E00               	movlw	0
  4295  001E5A  2210               	addwfc	gtrap@count+1,f,c
  4296  001E5C  2211               	addwfc	gtrap@count+2,f,c
  4297  001E5E  2212               	addwfc	gtrap@count+3,f,c
  4298  001E60  D7D8               	goto	l372
  4299  001E62  0012               	return		;funcret
  4300  001E64                     __end_of_gtrap:
  4301                           	opt stack 0
  4302                           stkptr	equ	0xFFC
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           intcon	equ	0xFF2
  4308                           postinc0	equ	0xFEE
  4309                           wreg	equ	0xFE8
  4310                           indf1	equ	0xFE7
  4311                           postinc1	equ	0xFE6
  4312                           fsr1h	equ	0xFE2
  4313                           fsr1l	equ	0xFE1
  4314                           indf2	equ	0xFDF
  4315                           postinc2	equ	0xFDE
  4316                           plusw2	equ	0xFDB
  4317                           fsr2h	equ	0xFDA
  4318                           fsr2l	equ	0xFD9
  4319                           status	equ	0xFD8
  4320                           
  4321 ;; *************** function _GetBackonTrack *****************
  4322 ;; Defined at:
  4323 ;;		line 224 in file "../Robot Files/main.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  error           2   56[COMRAM] PTR char 
  4326 ;;		 -> main@error(3), 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  i               2   59[COMRAM] unsigned int 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;		None               void
  4331 ;; Registers used:
  4332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;Total ram usage:        5 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    5
  4345 ;; This function calls:
  4346 ;;		_MotorControl
  4347 ;;		_ReadTimer0
  4348 ;;		_SharpTurn
  4349 ;;		_WriteTimer0
  4350 ;;		_check_sensors
  4351 ;;		_motors_brake_all
  4352 ;;		_set_leds
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text37
  4359  001558                     __ptext37:
  4360                           	opt stack 0
  4361  001558                     _GetBackonTrack:
  4362                           	opt stack 25
  4363                           
  4364                           ;main.c: 226: if((error[2]>2) || (error[1]>2) || CW_rotation_flag)
  4365                           
  4366                           ;incstack = 0
  4367  001558  EE20 F002          	lfsr	2,2
  4368  00155C  5039               	movf	GetBackonTrack@error,w,c
  4369  00155E  26D9               	addwf	fsr2l,f,c
  4370  001560  503A               	movf	GetBackonTrack@error+1,w,c
  4371  001562  22DA               	addwfc	fsr2h,f,c
  4372  001564  50DF               	movf	indf2,w,c
  4373  001566  0A80               	xorlw	128
  4374  001568  0F7D               	addlw	-131
  4375  00156A  B0D8               	btfsc	status,0,c
  4376  00156C  D00E               	goto	l2683
  4377  00156E  EE20 F001          	lfsr	2,1
  4378  001572  5039               	movf	GetBackonTrack@error,w,c
  4379  001574  26D9               	addwf	fsr2l,f,c
  4380  001576  503A               	movf	GetBackonTrack@error+1,w,c
  4381  001578  22DA               	addwfc	fsr2h,f,c
  4382  00157A  50DF               	movf	indf2,w,c
  4383  00157C  0A80               	xorlw	128
  4384  00157E  0F7D               	addlw	-131
  4385  001580  B0D8               	btfsc	status,0,c
  4386  001582  D003               	goto	l2683
  4387  001584  504D               	movf	_CW_rotation_flag,w,c
  4388  001586  B4D8               	btfsc	status,2,c
  4389  001588  D004               	goto	l2685
  4390  00158A                     l2683:
  4391                           
  4392                           ;main.c: 227: SharpTurn(CW);
  4393  00158A  0E01               	movlw	1
  4394  00158C  EC31  F00D         	call	_SharpTurn
  4395  001590  D095               	goto	l159
  4396  001592                     l2685:
  4397                           
  4398                           ;main.c: 228: else if((error[2]<-2) || (error[1]<-2) || CCW_rotation_flag)
  4399  001592  EE20 F002          	lfsr	2,2
  4400  001596  5039               	movf	GetBackonTrack@error,w,c
  4401  001598  26D9               	addwf	fsr2l,f,c
  4402  00159A  503A               	movf	GetBackonTrack@error+1,w,c
  4403  00159C  22DA               	addwfc	fsr2h,f,c
  4404  00159E  50DF               	movf	indf2,w,c
  4405  0015A0  0A80               	xorlw	128
  4406  0015A2  0F82               	addlw	130
  4407  0015A4  A0D8               	btfss	status,0,c
  4408  0015A6  D00E               	goto	l2691
  4409  0015A8  EE20 F001          	lfsr	2,1
  4410  0015AC  5039               	movf	GetBackonTrack@error,w,c
  4411  0015AE  26D9               	addwf	fsr2l,f,c
  4412  0015B0  503A               	movf	GetBackonTrack@error+1,w,c
  4413  0015B2  22DA               	addwfc	fsr2h,f,c
  4414  0015B4  50DF               	movf	indf2,w,c
  4415  0015B6  0A80               	xorlw	128
  4416  0015B8  0F82               	addlw	130
  4417  0015BA  A0D8               	btfss	status,0,c
  4418  0015BC  D003               	goto	l2691
  4419  0015BE  504C               	movf	_CCW_rotation_flag,w,c
  4420  0015C0  B4D8               	btfsc	status,2,c
  4421  0015C2  D004               	goto	l2693
  4422  0015C4                     l2691:
  4423                           
  4424                           ;main.c: 229: SharpTurn(CCW);
  4425  0015C4  0E00               	movlw	0
  4426  0015C6  EC31  F00D         	call	_SharpTurn
  4427  0015CA  D078               	goto	l159
  4428  0015CC                     l2693:
  4429                           
  4430                           ;main.c: 230: else
  4431                           ;main.c: 231: {
  4432                           ;main.c: 232: WriteTimer0(0);
  4433  0015CC  0E00               	movlw	0
  4434  0015CE  6E10               	movwf	WriteTimer0@timer0+1,c
  4435  0015D0  0E00               	movlw	0
  4436  0015D2  6E0F               	movwf	WriteTimer0@timer0,c
  4437  0015D4  EC70  F011         	call	_WriteTimer0	;wreg free
  4438                           
  4439                           ;main.c: 233: TMR0IF = 0;
  4440  0015D8  94F2               	bcf	intcon,2,c	;volatile
  4441                           
  4442                           ;main.c: 234: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  4443  0015DA  D00D               	goto	l2701
  4444  0015DC                     l2697:
  4445                           
  4446                           ;main.c: 235: {
  4447                           ;main.c: 236: check_sensors();
  4448  0015DC  EC79  F00C         	call	_check_sensors	;wreg free
  4449                           
  4450                           ;main.c: 237: set_leds();
  4451  0015E0  EC19  F00E         	call	_set_leds	;wreg free
  4452                           
  4453                           ;main.c: 238: MotorControl(0,0);
  4454  0015E4  0E00               	movlw	0
  4455  0015E6  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4456  0015E8  0E00               	movlw	0
  4457  0015EA  6E2B               	movwf	MotorControl@delta_velocity,c
  4458  0015EC  0E00               	movlw	0
  4459  0015EE  6E2D               	movwf	MotorControl@speed_divider,c
  4460  0015F0  ECC6  F009         	call	_MotorControl	;wreg free
  4461  0015F4  D000               	goto	l2701
  4462  0015F6                     l2701:
  4463  0015F6  504E               	movf	_SeeLine,w,c
  4464  0015F8  0B1F               	andlw	31
  4465  0015FA  0900               	iorlw	0
  4466  0015FC  A4D8               	btfss	status,2,c
  4467  0015FE  D00C               	goto	l2707
  4468  001600  A4F2               	btfss	intcon,2,c	;volatile
  4469  001602  D7EC               	goto	l2697
  4470  001604  EC67  F011         	call	_ReadTimer0	;wreg free
  4471  001608  0E3B               	movlw	59
  4472  00160A  5C0F               	subwf	?_ReadTimer0,w,c
  4473  00160C  0EE8               	movlw	232
  4474  00160E  5810               	subwfb	?_ReadTimer0+1,w,c
  4475  001610  B0D8               	btfsc	status,0,c
  4476  001612  D002               	goto	l2707
  4477  001614  D7E3               	goto	l2697
  4478  001616  D000               	goto	l2707
  4479  001618                     l2707:
  4480                           
  4481                           ;main.c: 239: }
  4482                           ;main.c: 241: if(!SeeLine.B)
  4483  001618  504E               	movf	_SeeLine,w,c
  4484  00161A  0B1F               	andlw	31
  4485  00161C  0900               	iorlw	0
  4486  00161E  A4D8               	btfss	status,2,c
  4487  001620  D04D               	goto	l159
  4488                           
  4489                           ;main.c: 242: {
  4490                           ;main.c: 243: motors_brake_all();
  4491  001622  EC97  F010         	call	_motors_brake_all	;wreg free
  4492                           
  4493                           ;main.c: 244: _delay(50000);
  4494  001626  0E41               	movlw	65
  4495  001628  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4496  00162A  0EEE               	movlw	238
  4497  00162C                     u2487:
  4498  00162C  2EE8               	decfsz	wreg,f,c
  4499  00162E  D7FE               	goto	u2487
  4500  001630  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4501  001632  D7FC               	goto	u2487
  4502  001634  D000               	nop2	
  4503                           
  4504                           ;main.c: 245: MotorControl(1600, TURN_SPEED_DIVIDER);
  4505  001636  0E06               	movlw	6
  4506  001638  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4507  00163A  0E40               	movlw	64
  4508  00163C  6E2B               	movwf	MotorControl@delta_velocity,c
  4509  00163E  0E09               	movlw	low _TURN_SPEED_DIVIDER
  4510  001640  6EF6               	movwf	tblptrl,c
  4511  001642                     	if	1	;There is more than 1 active tblptr byte
  4512  001642  0E10               	movlw	high _TURN_SPEED_DIVIDER
  4513  001644  6EF7               	movwf	tblptrh,c
  4514  001646                     	endif
  4515  001646                     	if	1	;There are 3 active tblptr bytes
  4516  001646  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  4517  001648  6EF8               	movwf	tblptru,c
  4518  00164A                     	endif
  4519  00164A  0008               	tblrd		*
  4520  00164C  CFF5 F02D          	movff	tablat,MotorControl@speed_divider
  4521  001650  ECC6  F009         	call	_MotorControl	;wreg free
  4522                           
  4523                           ;main.c: 247: for(unsigned int i=0; i < TURN_TIME_ms; i++)
  4524  001654  0E00               	movlw	0
  4525  001656  6E3D               	movwf	GetBackonTrack@i+1,c
  4526  001658  0E00               	movlw	0
  4527  00165A  6E3C               	movwf	GetBackonTrack@i,c
  4528  00165C                     l2717:
  4529  00165C  0E07               	movlw	low _TURN_TIME_ms
  4530  00165E  6EF6               	movwf	tblptrl,c
  4531  001660                     	if	1	;There is more than 1 active tblptr byte
  4532  001660  0E10               	movlw	high _TURN_TIME_ms
  4533  001662  6EF7               	movwf	tblptrh,c
  4534  001664                     	endif
  4535  001664                     	if	1	;There are 3 active tblptr bytes
  4536  001664  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4537  001666  6EF8               	movwf	tblptru,c
  4538  001668                     	endif
  4539  001668  0009               	tblrd		*+
  4540  00166A  50F5               	movf	tablat,w,c
  4541  00166C  5C3C               	subwf	GetBackonTrack@i,w,c
  4542  00166E  0009               	tblrd		*+
  4543  001670  50F5               	movf	tablat,w,c
  4544  001672  583D               	subwfb	GetBackonTrack@i+1,w,c
  4545  001674  B0D8               	btfsc	status,0,c
  4546  001676  D01B               	goto	l2731
  4547  001678  D001               	goto	l2721
  4548  00167A  D019               	goto	l2731
  4549  00167C                     l2721:
  4550                           
  4551                           ;main.c: 248: _delay(7991);
  4552  00167C  0E0B               	movlw	11
  4553  00167E  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4554  001680  0E5F               	movlw	95
  4555  001682                     u2497:
  4556  001682  2EE8               	decfsz	wreg,f,c
  4557  001684  D7FE               	goto	u2497
  4558  001686  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4559  001688  D7FC               	goto	u2497
  4560  00168A  D000               	nop2	
  4561  00168C  4A3C               	infsnz	GetBackonTrack@i,f,c
  4562  00168E  2A3D               	incf	GetBackonTrack@i+1,f,c
  4563  001690  D7E5               	goto	l2717
  4564                           
  4565                           ;main.c: 250: while (!SeeLine.B)
  4566  001692  D00D               	goto	l2731
  4567  001694                     l2727:
  4568                           
  4569                           ;main.c: 251: {
  4570                           ;main.c: 252: check_sensors();
  4571  001694  EC79  F00C         	call	_check_sensors	;wreg free
  4572                           
  4573                           ;main.c: 253: set_leds();
  4574  001698  EC19  F00E         	call	_set_leds	;wreg free
  4575                           
  4576                           ;main.c: 254: MotorControl(0,0);
  4577  00169C  0E00               	movlw	0
  4578  00169E  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4579  0016A0  0E00               	movlw	0
  4580  0016A2  6E2B               	movwf	MotorControl@delta_velocity,c
  4581  0016A4  0E00               	movlw	0
  4582  0016A6  6E2D               	movwf	MotorControl@speed_divider,c
  4583  0016A8  ECC6  F009         	call	_MotorControl	;wreg free
  4584  0016AC  D000               	goto	l2731
  4585  0016AE                     l2731:
  4586  0016AE  504E               	movf	_SeeLine,w,c
  4587  0016B0  0B1F               	andlw	31
  4588  0016B2  0900               	iorlw	0
  4589  0016B4  A4D8               	btfss	status,2,c
  4590  0016B6  D002               	goto	l159
  4591  0016B8  D7ED               	goto	l2727
  4592  0016BA  D000               	goto	l159
  4593  0016BC                     l159:
  4594  0016BC  0012               	return		;funcret
  4595  0016BE                     __end_of_GetBackonTrack:
  4596                           	opt stack 0
  4597                           stkptr	equ	0xFFC
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           intcon	equ	0xFF2
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           indf1	equ	0xFE7
  4606                           postinc1	equ	0xFE6
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           plusw2	equ	0xFDB
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _SharpTurn *****************
  4617 ;; Defined at:
  4618 ;;		line 261 in file "../Robot Files/main.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  direction       1    wreg     enum E4173
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  direction       1   53[COMRAM] enum E4173
  4623 ;;  delta_veloci    2   54[COMRAM] int 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;		None               void
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;Total ram usage:        4 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    4
  4640 ;; This function calls:
  4641 ;;		_MotorControl
  4642 ;;		_check_sensors
  4643 ;;		_motors_brake_all
  4644 ;;		_set_leds
  4645 ;; This function is called by:
  4646 ;;		_GetBackonTrack
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text38
  4651  001A62                     __ptext38:
  4652                           	opt stack 0
  4653  001A62                     _SharpTurn:
  4654                           	opt stack 25
  4655                           
  4656                           ;incstack = 0
  4657                           ;SharpTurn@direction stored from wreg
  4658  001A62  6E36               	movwf	SharpTurn@direction,c
  4659                           
  4660                           ;main.c: 263: int delta_velocity;
  4661                           ;main.c: 265: motors_brake_all();
  4662  001A64  EC97  F010         	call	_motors_brake_all	;wreg free
  4663                           
  4664                           ;main.c: 266: _delay(50000);
  4665  001A68  0E41               	movlw	65
  4666  001A6A  6E35               	movwf	??_SharpTurn& (0+255),c
  4667  001A6C  0EEE               	movlw	238
  4668  001A6E                     u2507:
  4669  001A6E  2EE8               	decfsz	wreg,f,c
  4670  001A70  D7FE               	goto	u2507
  4671  001A72  2E35               	decfsz	??_SharpTurn& (0+255),f,c
  4672  001A74  D7FC               	goto	u2507
  4673  001A76  D000               	nop2	
  4674                           
  4675                           ;main.c: 267: if(direction)
  4676  001A78  5036               	movf	SharpTurn@direction,w,c
  4677  001A7A  B4D8               	btfsc	status,2,c
  4678  001A7C  D022               	goto	l2471
  4679                           
  4680                           ;main.c: 268: {
  4681                           ;main.c: 269: delta_velocity = 1600;
  4682  001A7E  0E06               	movlw	6
  4683  001A80  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4684  001A82  0E40               	movlw	64
  4685  001A84  6E37               	movwf	SharpTurn@delta_velocity,c
  4686                           
  4687                           ;main.c: 270: while (!SeeLine.b.CntLeft && delta_velocity)
  4688  001A86  D012               	goto	l2465
  4689  001A88                     l2457:
  4690                           
  4691                           ;main.c: 272: {
  4692                           ;main.c: 273: check_sensors();
  4693  001A88  EC79  F00C         	call	_check_sensors	;wreg free
  4694                           
  4695                           ;main.c: 274: set_leds();
  4696  001A8C  EC19  F00E         	call	_set_leds	;wreg free
  4697                           
  4698                           ;main.c: 275: MotorControl(delta_velocity,0);
  4699  001A90  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4700  001A94  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4701  001A98  0E00               	movlw	0
  4702  001A9A  6E2D               	movwf	MotorControl@speed_divider,c
  4703  001A9C  ECC6  F009         	call	_MotorControl	;wreg free
  4704                           
  4705                           ;main.c: 276: if (SeeLine.b.Center)
  4706  001AA0  A44E               	btfss	_SeeLine,2,c
  4707  001AA2  D004               	goto	l2465
  4708                           
  4709                           ;main.c: 277: delta_velocity--;
  4710  001AA4  0637               	decf	SharpTurn@delta_velocity,f,c
  4711  001AA6  A0D8               	btfss	status,0,c
  4712  001AA8  0638               	decf	SharpTurn@delta_velocity+1,f,c
  4713  001AAA  D000               	goto	l2465
  4714  001AAC                     l2465:
  4715  001AAC  B64E               	btfsc	_SeeLine,3,c
  4716  001AAE  D006               	goto	l2469
  4717  001AB0  5037               	movf	SharpTurn@delta_velocity,w,c
  4718  001AB2  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4719  001AB4  B4D8               	btfsc	status,2,c
  4720  001AB6  D002               	goto	l2469
  4721  001AB8  D7E7               	goto	l2457
  4722  001ABA  D000               	goto	l2469
  4723  001ABC                     l2469:
  4724                           
  4725                           ;main.c: 278: }
  4726                           ;main.c: 279: CW_rotation_flag = 0;
  4727  001ABC  0E00               	movlw	0
  4728  001ABE  6E4D               	movwf	_CW_rotation_flag,c
  4729                           
  4730                           ;main.c: 280: }
  4731  001AC0  D020               	goto	l169
  4732  001AC2                     l2471:
  4733                           
  4734                           ;main.c: 281: else
  4735                           ;main.c: 282: {
  4736                           ;main.c: 283: delta_velocity = -1600;
  4737  001AC2  0EF9               	movlw	249
  4738  001AC4  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4739  001AC6  0EC0               	movlw	192
  4740  001AC8  6E37               	movwf	SharpTurn@delta_velocity,c
  4741                           
  4742                           ;main.c: 284: while (!SeeLine.b.CntRight && delta_velocity)
  4743  001ACA  D011               	goto	l2481
  4744  001ACC                     l2473:
  4745                           
  4746                           ;main.c: 286: {
  4747                           ;main.c: 287: check_sensors();
  4748  001ACC  EC79  F00C         	call	_check_sensors	;wreg free
  4749                           
  4750                           ;main.c: 288: set_leds();
  4751  001AD0  EC19  F00E         	call	_set_leds	;wreg free
  4752                           
  4753                           ;main.c: 289: MotorControl(delta_velocity,0);
  4754  001AD4  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4755  001AD8  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4756  001ADC  0E00               	movlw	0
  4757  001ADE  6E2D               	movwf	MotorControl@speed_divider,c
  4758  001AE0  ECC6  F009         	call	_MotorControl	;wreg free
  4759                           
  4760                           ;main.c: 290: if (SeeLine.b.Center)
  4761  001AE4  A44E               	btfss	_SeeLine,2,c
  4762  001AE6  D003               	goto	l2481
  4763                           
  4764                           ;main.c: 291: delta_velocity++;
  4765  001AE8  4A37               	infsnz	SharpTurn@delta_velocity,f,c
  4766  001AEA  2A38               	incf	SharpTurn@delta_velocity+1,f,c
  4767  001AEC  D000               	goto	l2481
  4768  001AEE                     l2481:
  4769  001AEE  B24E               	btfsc	_SeeLine,1,c
  4770  001AF0  D006               	goto	l2485
  4771  001AF2  5037               	movf	SharpTurn@delta_velocity,w,c
  4772  001AF4  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4773  001AF6  B4D8               	btfsc	status,2,c
  4774  001AF8  D002               	goto	l2485
  4775  001AFA  D7E8               	goto	l2473
  4776  001AFC  D000               	goto	l2485
  4777  001AFE                     l2485:
  4778                           
  4779                           ;main.c: 292: }
  4780                           ;main.c: 293: CCW_rotation_flag = 0;
  4781  001AFE  0E00               	movlw	0
  4782  001B00  6E4C               	movwf	_CCW_rotation_flag,c
  4783  001B02                     l169:
  4784                           
  4785                           ;main.c: 294: }
  4786                           ;main.c: 295: I = 0;
  4787  001B02  0E00               	movlw	0
  4788  001B04  6E49               	movwf	_I+1,c
  4789  001B06  0E00               	movlw	0
  4790  001B08  6E48               	movwf	_I,c
  4791  001B0A  0012               	return		;funcret
  4792  001B0C                     __end_of_SharpTurn:
  4793                           	opt stack 0
  4794                           stkptr	equ	0xFFC
  4795                           tblptru	equ	0xFF8
  4796                           tblptrh	equ	0xFF7
  4797                           tblptrl	equ	0xFF6
  4798                           tablat	equ	0xFF5
  4799                           intcon	equ	0xFF2
  4800                           postinc0	equ	0xFEE
  4801                           wreg	equ	0xFE8
  4802                           indf1	equ	0xFE7
  4803                           postinc1	equ	0xFE6
  4804                           fsr1h	equ	0xFE2
  4805                           fsr1l	equ	0xFE1
  4806                           indf2	equ	0xFDF
  4807                           postinc2	equ	0xFDE
  4808                           plusw2	equ	0xFDB
  4809                           fsr2h	equ	0xFDA
  4810                           fsr2l	equ	0xFD9
  4811                           status	equ	0xFD8
  4812                           
  4813 ;; *************** function _ReadTimer0 *****************
  4814 ;; Defined at:
  4815 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  timer           2   16[COMRAM] struct Timers
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  2   14[COMRAM] unsigned int 
  4822 ;; Registers used:
  4823 ;;		None
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;Total ram usage:        4 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_PID_LineFollowing
  4840 ;;		_GetBackonTrack
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text39
  4845  0022CE                     __ptext39:
  4846                           	opt stack 0
  4847  0022CE                     _ReadTimer0:
  4848                           	opt stack 28
  4849                           
  4850                           ;incstack = 0
  4851  0022CE  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4852  0022D2  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4853  0022D6  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4854  0022DA  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4855  0022DE  0012               	return		;funcret
  4856  0022E0                     __end_of_ReadTimer0:
  4857                           	opt stack 0
  4858                           stkptr	equ	0xFFC
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           intcon	equ	0xFF2
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           indf1	equ	0xFE7
  4867                           postinc1	equ	0xFE6
  4868                           fsr1h	equ	0xFE2
  4869                           fsr1l	equ	0xFE1
  4870                           indf2	equ	0xFDF
  4871                           postinc2	equ	0xFDE
  4872                           plusw2	equ	0xFDB
  4873                           fsr2h	equ	0xFDA
  4874                           fsr2l	equ	0xFD9
  4875                           status	equ	0xFD8
  4876                           
  4877 ;; *************** function _FilterNearbyTrack *****************
  4878 ;; Defined at:
  4879 ;;		line 321 in file "../Robot Files/main.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;		None               void
  4886 ;; Registers used:
  4887 ;;		None
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;Total ram usage:        0 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_main
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text40
  4908  0021B0                     __ptext40:
  4909                           	opt stack 0
  4910  0021B0                     _FilterNearbyTrack:
  4911                           	opt stack 29
  4912                           
  4913                           ;main.c: 325: if((SeeLine.b.Left && !SeeLine.b.CntLeft) && (SeeLine.b.Center || SeeLine.
      +                          b.CntRight))
  4914                           
  4915                           ;incstack = 0
  4916  0021B0  B84E               	btfsc	_SeeLine,4,c
  4917  0021B2  B64E               	btfsc	_SeeLine,3,c
  4918  0021B4  D003               	goto	l191
  4919  0021B6  A44E               	btfss	_SeeLine,2,c
  4920  0021B8  B24E               	btfsc	_SeeLine,1,c
  4921                           
  4922                           ;main.c: 326: SeeLine.b.Left = 0;
  4923  0021BA  984E               	bcf	_SeeLine,4,c
  4924  0021BC                     l191:
  4925                           
  4926                           ;main.c: 330: if((SeeLine.b.Right && !SeeLine.b.CntRight) && (SeeLine.b.Center || SeeLin
      +                          e.b.CntLeft))
  4927  0021BC  B04E               	btfsc	_SeeLine,0,c
  4928  0021BE  B24E               	btfsc	_SeeLine,1,c
  4929  0021C0  D006               	goto	l197
  4930  0021C2  B44E               	btfsc	_SeeLine,2,c
  4931  0021C4  D002               	goto	l196
  4932  0021C6  A64E               	btfss	_SeeLine,3,c
  4933  0021C8  D002               	goto	l197
  4934  0021CA                     l196:
  4935                           
  4936                           ;main.c: 331: SeeLine.b.Right = 0;
  4937  0021CA  904E               	bcf	_SeeLine,0,c
  4938  0021CC  D000               	goto	l197
  4939  0021CE                     l197:
  4940  0021CE  0012               	return		;funcret
  4941  0021D0                     __end_of_FilterNearbyTrack:
  4942                           	opt stack 0
  4943                           stkptr	equ	0xFFC
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           intcon	equ	0xFF2
  4949                           postinc0	equ	0xFEE
  4950                           wreg	equ	0xFE8
  4951                           indf1	equ	0xFE7
  4952                           postinc1	equ	0xFE6
  4953                           fsr1h	equ	0xFE2
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           plusw2	equ	0xFDB
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _AllSensorsTriggered *****************
  4963 ;; Defined at:
  4964 ;;		line 299 in file "../Robot Files/main.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;		None               void
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;Total ram usage:        0 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    4
  4985 ;; This function calls:
  4986 ;;		_MotorControl
  4987 ;;		_WriteTimer0
  4988 ;;		_check_sensors
  4989 ;;		_motors_brake_all
  4990 ;;		_set_leds
  4991 ;; This function is called by:
  4992 ;;		_main
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text41
  4997  001D9E                     __ptext41:
  4998                           	opt stack 0
  4999  001D9E                     _AllSensorsTriggered:
  5000                           	opt stack 26
  5001                           
  5002                           ;main.c: 301: WriteTimer0(0);
  5003                           
  5004                           ;incstack = 0
  5005  001D9E  0E00               	movlw	0
  5006  001DA0  6E10               	movwf	WriteTimer0@timer0+1,c
  5007  001DA2  0E00               	movlw	0
  5008  001DA4  6E0F               	movwf	WriteTimer0@timer0,c
  5009  001DA6  EC70  F011         	call	_WriteTimer0	;wreg free
  5010                           
  5011                           ;main.c: 302: TMR0IF = 0;
  5012  001DAA  94F2               	bcf	intcon,2,c	;volatile
  5013                           
  5014                           ;main.c: 303: while (SeeLine.B==0b11111u && !(TMR0IF))
  5015  001DAC  D00D               	goto	l2741
  5016  001DAE                     l2737:
  5017                           
  5018                           ;main.c: 304: {
  5019                           ;main.c: 305: check_sensors();
  5020  001DAE  EC79  F00C         	call	_check_sensors	;wreg free
  5021                           
  5022                           ;main.c: 306: set_leds();
  5023  001DB2  EC19  F00E         	call	_set_leds	;wreg free
  5024                           
  5025                           ;main.c: 307: MotorControl(0,0);
  5026  001DB6  0E00               	movlw	0
  5027  001DB8  6E2C               	movwf	MotorControl@delta_velocity+1,c
  5028  001DBA  0E00               	movlw	0
  5029  001DBC  6E2B               	movwf	MotorControl@delta_velocity,c
  5030  001DBE  0E00               	movlw	0
  5031  001DC0  6E2D               	movwf	MotorControl@speed_divider,c
  5032  001DC2  ECC6  F009         	call	_MotorControl	;wreg free
  5033  001DC6  D000               	goto	l2741
  5034  001DC8                     l2741:
  5035  001DC8  504E               	movf	_SeeLine,w,c
  5036  001DCA  0B1F               	andlw	31
  5037  001DCC  0A1F               	xorlw	31
  5038  001DCE  B4D8               	btfsc	status,2,c
  5039  001DD0  B4F2               	btfsc	intcon,2,c	;volatile
  5040  001DD2  D002               	goto	l2745
  5041  001DD4  D7EC               	goto	l2737
  5042  001DD6  D000               	goto	l2745
  5043  001DD8                     l2745:
  5044                           
  5045                           ;main.c: 308: }
  5046                           ;main.c: 309: if (SeeLine.B==0b11111u)
  5047  001DD8  504E               	movf	_SeeLine,w,c
  5048  001DDA  0B1F               	andlw	31
  5049  001DDC  0A1F               	xorlw	31
  5050  001DDE  A4D8               	btfss	status,2,c
  5051  001DE0  D00F               	goto	l188
  5052                           
  5053                           ;main.c: 310: {
  5054                           ;main.c: 311: motors_brake_all();
  5055  001DE2  EC97  F010         	call	_motors_brake_all	;wreg free
  5056                           
  5057                           ;main.c: 312: while (SeeLine.B==0b11111u)
  5058  001DE6  D005               	goto	l2751
  5059  001DE8                     l2749:
  5060                           
  5061                           ;main.c: 313: {
  5062                           ;main.c: 314: check_sensors();
  5063  001DE8  EC79  F00C         	call	_check_sensors	;wreg free
  5064                           
  5065                           ;main.c: 315: set_leds();
  5066  001DEC  EC19  F00E         	call	_set_leds	;wreg free
  5067  001DF0  D000               	goto	l2751
  5068  001DF2                     l2751:
  5069  001DF2  504E               	movf	_SeeLine,w,c
  5070  001DF4  0B1F               	andlw	31
  5071  001DF6  0A1F               	xorlw	31
  5072  001DF8  A4D8               	btfss	status,2,c
  5073  001DFA  D002               	goto	l188
  5074  001DFC  D7F5               	goto	l2749
  5075  001DFE  D000               	goto	l188
  5076  001E00                     l188:
  5077  001E00  0012               	return		;funcret
  5078  001E02                     __end_of_AllSensorsTriggered:
  5079                           	opt stack 0
  5080                           stkptr	equ	0xFFC
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           intcon	equ	0xFF2
  5086                           postinc0	equ	0xFEE
  5087                           wreg	equ	0xFE8
  5088                           indf1	equ	0xFE7
  5089                           postinc1	equ	0xFE6
  5090                           fsr1h	equ	0xFE2
  5091                           fsr1l	equ	0xFE1
  5092                           indf2	equ	0xFDF
  5093                           postinc2	equ	0xFDE
  5094                           plusw2	equ	0xFDB
  5095                           fsr2h	equ	0xFDA
  5096                           fsr2l	equ	0xFD9
  5097                           status	equ	0xFD8
  5098                           
  5099 ;; *************** function _set_leds *****************
  5100 ;; Defined at:
  5101 ;;		line 256 in file "../Robot Files/sumovore.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;Total ram usage:        1 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_main
  5126 ;;		_GetBackonTrack
  5127 ;;		_SharpTurn
  5128 ;;		_AllSensorsTriggered
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text42
  5133  001C32                     __ptext42:
  5134                           	opt stack 0
  5135  001C32                     _set_leds:
  5136                           	opt stack 29
  5137                           
  5138                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  5139                           
  5140                           ;incstack = 0
  5141  001C32  B84E               	btfsc	_SeeLine,4,c
  5142  001C34  D003               	goto	u240
  5143  001C36  6A0F               	clrf	??_set_leds& (0+255),c
  5144  001C38  2A0F               	incf	??_set_leds& (0+255),f,c
  5145  001C3A  D001               	goto	u258
  5146  001C3C                     u240:
  5147  001C3C  6A0F               	clrf	??_set_leds& (0+255),c
  5148  001C3E                     u258:
  5149  001C3E  5083               	movf	3971,w,c	;volatile
  5150  001C40  180F               	xorwf	??_set_leds,w,c
  5151  001C42  0BFE               	andlw	-2
  5152  001C44  180F               	xorwf	??_set_leds,w,c
  5153  001C46  6E83               	movwf	3971,c	;volatile
  5154                           
  5155                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  5156  001C48  B64E               	btfsc	_SeeLine,3,c
  5157  001C4A  D003               	goto	u260
  5158  001C4C  6A0F               	clrf	??_set_leds& (0+255),c
  5159  001C4E  2A0F               	incf	??_set_leds& (0+255),f,c
  5160  001C50  D001               	goto	u278
  5161  001C52                     u260:
  5162  001C52  6A0F               	clrf	??_set_leds& (0+255),c
  5163  001C54                     u278:
  5164  001C54  460F               	rlncf	??_set_leds,f,c
  5165  001C56  5083               	movf	3971,w,c	;volatile
  5166  001C58  180F               	xorwf	??_set_leds,w,c
  5167  001C5A  0BFD               	andlw	-3
  5168  001C5C  180F               	xorwf	??_set_leds,w,c
  5169  001C5E  6E83               	movwf	3971,c	;volatile
  5170                           
  5171                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  5172  001C60  B44E               	btfsc	_SeeLine,2,c
  5173  001C62  D003               	goto	u280
  5174  001C64  6A0F               	clrf	??_set_leds& (0+255),c
  5175  001C66  2A0F               	incf	??_set_leds& (0+255),f,c
  5176  001C68  D001               	goto	u298
  5177  001C6A                     u280:
  5178  001C6A  6A0F               	clrf	??_set_leds& (0+255),c
  5179  001C6C                     u298:
  5180  001C6C  460F               	rlncf	??_set_leds,f,c
  5181  001C6E  460F               	rlncf	??_set_leds,f,c
  5182  001C70  5083               	movf	3971,w,c	;volatile
  5183  001C72  180F               	xorwf	??_set_leds,w,c
  5184  001C74  0BFB               	andlw	-5
  5185  001C76  180F               	xorwf	??_set_leds,w,c
  5186  001C78  6E83               	movwf	3971,c	;volatile
  5187                           
  5188                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  5189  001C7A  B24E               	btfsc	_SeeLine,1,c
  5190  001C7C  D003               	goto	u300
  5191  001C7E  6A0F               	clrf	??_set_leds& (0+255),c
  5192  001C80  2A0F               	incf	??_set_leds& (0+255),f,c
  5193  001C82  D001               	goto	u318
  5194  001C84                     u300:
  5195  001C84  6A0F               	clrf	??_set_leds& (0+255),c
  5196  001C86                     u318:
  5197  001C86  460F               	rlncf	??_set_leds,f,c
  5198  001C88  460F               	rlncf	??_set_leds,f,c
  5199  001C8A  460F               	rlncf	??_set_leds,f,c
  5200  001C8C  5083               	movf	3971,w,c	;volatile
  5201  001C8E  180F               	xorwf	??_set_leds,w,c
  5202  001C90  0BF7               	andlw	-9
  5203  001C92  180F               	xorwf	??_set_leds,w,c
  5204  001C94  6E83               	movwf	3971,c	;volatile
  5205                           
  5206                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  5207  001C96  B04E               	btfsc	_SeeLine,0,c
  5208  001C98  D003               	goto	u320
  5209  001C9A  6A0F               	clrf	??_set_leds& (0+255),c
  5210  001C9C  2A0F               	incf	??_set_leds& (0+255),f,c
  5211  001C9E  D001               	goto	u338
  5212  001CA0                     u320:
  5213  001CA0  6A0F               	clrf	??_set_leds& (0+255),c
  5214  001CA2                     u338:
  5215  001CA2  3A0F               	swapf	??_set_leds,f,c
  5216  001CA4  5083               	movf	3971,w,c	;volatile
  5217  001CA6  180F               	xorwf	??_set_leds,w,c
  5218  001CA8  0BEF               	andlw	-17
  5219  001CAA  180F               	xorwf	??_set_leds,w,c
  5220  001CAC  6E83               	movwf	3971,c	;volatile
  5221  001CAE  0012               	return		;funcret
  5222  001CB0                     __end_of_set_leds:
  5223                           	opt stack 0
  5224                           stkptr	equ	0xFFC
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           intcon	equ	0xFF2
  5230                           postinc0	equ	0xFEE
  5231                           wreg	equ	0xFE8
  5232                           indf1	equ	0xFE7
  5233                           postinc1	equ	0xFE6
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           indf2	equ	0xFDF
  5237                           postinc2	equ	0xFDE
  5238                           plusw2	equ	0xFDB
  5239                           fsr2h	equ	0xFDA
  5240                           fsr2l	equ	0xFD9
  5241                           status	equ	0xFD8
  5242                           
  5243 ;; *************** function _motors_brake_all *****************
  5244 ;; Defined at:
  5245 ;;		line 219 in file "../Robot Files/sumovore.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;		None               void
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    2
  5266 ;; This function calls:
  5267 ;;		_SetDCPWM1
  5268 ;;		_SetDCPWM2
  5269 ;; This function is called by:
  5270 ;;		_GetBackonTrack
  5271 ;;		_SharpTurn
  5272 ;;		_AllSensorsTriggered
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text43
  5277  00212E                     __ptext43:
  5278                           	opt stack 0
  5279  00212E                     _motors_brake_all:
  5280                           	opt stack 27
  5281                           
  5282                           ;sumovore.c: 221: SetDCPWM1(800u );
  5283                           
  5284                           ;incstack = 0
  5285  00212E  0E03               	movlw	3
  5286  002130  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  5287  002132  0E20               	movlw	32
  5288  002134  6E0F               	movwf	SetDCPWM1@dutycycle,c
  5289  002136  ECCD  F00F         	call	_SetDCPWM1	;wreg free
  5290                           
  5291                           ;sumovore.c: 222: SetDCPWM2(800u );
  5292  00213A  0E03               	movlw	3
  5293  00213C  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  5294  00213E  0E20               	movlw	32
  5295  002140  6E0F               	movwf	SetDCPWM2@dutycycle,c
  5296  002142  ECB0  F00F         	call	_SetDCPWM2	;wreg free
  5297                           
  5298                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  5299  002146  9284               	bcf	3972,1,c	;volatile
  5300                           
  5301                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  5302  002148  9082               	bcf	3970,0,c	;volatile
  5303                           
  5304                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  5305  00214A  9084               	bcf	3972,0,c	;volatile
  5306                           
  5307                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  5308  00214C  9A82               	bcf	3970,5,c	;volatile
  5309  00214E  0012               	return		;funcret
  5310  002150                     __end_of_motors_brake_all:
  5311                           	opt stack 0
  5312                           stkptr	equ	0xFFC
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           intcon	equ	0xFF2
  5318                           postinc0	equ	0xFEE
  5319                           wreg	equ	0xFE8
  5320                           indf1	equ	0xFE7
  5321                           postinc1	equ	0xFE6
  5322                           fsr1h	equ	0xFE2
  5323                           fsr1l	equ	0xFE1
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           plusw2	equ	0xFDB
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _check_sensors *****************
  5332 ;; Defined at:
  5333 ;;		line 242 in file "../Robot Files/sumovore.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;		None               void
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        1 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    3
  5354 ;; This function calls:
  5355 ;;		_adc
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;;		_GetBackonTrack
  5359 ;;		_SharpTurn
  5360 ;;		_AllSensorsTriggered
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text44
  5365  0018F2                     __ptext44:
  5366                           	opt stack 0
  5367  0018F2                     _check_sensors:
  5368                           	opt stack 27
  5369                           
  5370                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5371                           
  5372                           ;incstack = 0
  5373  0018F2  0E87               	movlw	135
  5374  0018F4  EC49  F010         	call	_adc
  5375  0018F8  5013               	movf	?_adc,w,c
  5376  0018FA  5C4A               	subwf	_threshold,w,c
  5377  0018FC  5014               	movf	?_adc+1,w,c
  5378  0018FE  584B               	subwfb	_threshold+1,w,c
  5379  001900  B0D8               	btfsc	status,0,c
  5380  001902  D003               	goto	u1580
  5381  001904  6A16               	clrf	??_check_sensors& (0+255),c
  5382  001906  2A16               	incf	??_check_sensors& (0+255),f,c
  5383  001908  D001               	goto	u1598
  5384  00190A                     u1580:
  5385  00190A  6A16               	clrf	??_check_sensors& (0+255),c
  5386  00190C                     u1598:
  5387  00190C  3A16               	swapf	??_check_sensors,f,c
  5388  00190E  504E               	movf	_SeeLine,w,c
  5389  001910  1816               	xorwf	??_check_sensors,w,c
  5390  001912  0BEF               	andlw	-17
  5391  001914  1816               	xorwf	??_check_sensors,w,c
  5392  001916  6E4E               	movwf	_SeeLine,c
  5393                           
  5394                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5395  001918  0E8F               	movlw	143
  5396  00191A  EC49  F010         	call	_adc
  5397  00191E  5013               	movf	?_adc,w,c
  5398  001920  5C4A               	subwf	_threshold,w,c
  5399  001922  5014               	movf	?_adc+1,w,c
  5400  001924  584B               	subwfb	_threshold+1,w,c
  5401  001926  B0D8               	btfsc	status,0,c
  5402  001928  D003               	goto	u1600
  5403  00192A  6A16               	clrf	??_check_sensors& (0+255),c
  5404  00192C  2A16               	incf	??_check_sensors& (0+255),f,c
  5405  00192E  D001               	goto	u1618
  5406  001930                     u1600:
  5407  001930  6A16               	clrf	??_check_sensors& (0+255),c
  5408  001932                     u1618:
  5409  001932  4616               	rlncf	??_check_sensors,f,c
  5410  001934  4616               	rlncf	??_check_sensors,f,c
  5411  001936  4616               	rlncf	??_check_sensors,f,c
  5412  001938  504E               	movf	_SeeLine,w,c
  5413  00193A  1816               	xorwf	??_check_sensors,w,c
  5414  00193C  0BF7               	andlw	-9
  5415  00193E  1816               	xorwf	??_check_sensors,w,c
  5416  001940  6E4E               	movwf	_SeeLine,c
  5417                           
  5418                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5419  001942  0E97               	movlw	151
  5420  001944  EC49  F010         	call	_adc
  5421  001948  5013               	movf	?_adc,w,c
  5422  00194A  5C4A               	subwf	_threshold,w,c
  5423  00194C  5014               	movf	?_adc+1,w,c
  5424  00194E  584B               	subwfb	_threshold+1,w,c
  5425  001950  B0D8               	btfsc	status,0,c
  5426  001952  D003               	goto	u1620
  5427  001954  6A16               	clrf	??_check_sensors& (0+255),c
  5428  001956  2A16               	incf	??_check_sensors& (0+255),f,c
  5429  001958  D001               	goto	u1638
  5430  00195A                     u1620:
  5431  00195A  6A16               	clrf	??_check_sensors& (0+255),c
  5432  00195C                     u1638:
  5433  00195C  4616               	rlncf	??_check_sensors,f,c
  5434  00195E  4616               	rlncf	??_check_sensors,f,c
  5435  001960  504E               	movf	_SeeLine,w,c
  5436  001962  1816               	xorwf	??_check_sensors,w,c
  5437  001964  0BFB               	andlw	-5
  5438  001966  1816               	xorwf	??_check_sensors,w,c
  5439  001968  6E4E               	movwf	_SeeLine,c
  5440                           
  5441                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5442  00196A  0E9F               	movlw	159
  5443  00196C  EC49  F010         	call	_adc
  5444  001970  5013               	movf	?_adc,w,c
  5445  001972  5C4A               	subwf	_threshold,w,c
  5446  001974  5014               	movf	?_adc+1,w,c
  5447  001976  584B               	subwfb	_threshold+1,w,c
  5448  001978  B0D8               	btfsc	status,0,c
  5449  00197A  D003               	goto	u1640
  5450  00197C  6A16               	clrf	??_check_sensors& (0+255),c
  5451  00197E  2A16               	incf	??_check_sensors& (0+255),f,c
  5452  001980  D001               	goto	u1658
  5453  001982                     u1640:
  5454  001982  6A16               	clrf	??_check_sensors& (0+255),c
  5455  001984                     u1658:
  5456  001984  4616               	rlncf	??_check_sensors,f,c
  5457  001986  504E               	movf	_SeeLine,w,c
  5458  001988  1816               	xorwf	??_check_sensors,w,c
  5459  00198A  0BFD               	andlw	-3
  5460  00198C  1816               	xorwf	??_check_sensors,w,c
  5461  00198E  6E4E               	movwf	_SeeLine,c
  5462                           
  5463                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5464  001990  0EA7               	movlw	167
  5465  001992  EC49  F010         	call	_adc
  5466  001996  5013               	movf	?_adc,w,c
  5467  001998  5C4A               	subwf	_threshold,w,c
  5468  00199A  5014               	movf	?_adc+1,w,c
  5469  00199C  584B               	subwfb	_threshold+1,w,c
  5470  00199E  B0D8               	btfsc	status,0,c
  5471  0019A0  D003               	goto	u1660
  5472  0019A2  6A16               	clrf	??_check_sensors& (0+255),c
  5473  0019A4  2A16               	incf	??_check_sensors& (0+255),f,c
  5474  0019A6  D001               	goto	u1678
  5475  0019A8                     u1660:
  5476  0019A8  6A16               	clrf	??_check_sensors& (0+255),c
  5477  0019AA                     u1678:
  5478  0019AA  504E               	movf	_SeeLine,w,c
  5479  0019AC  1816               	xorwf	??_check_sensors,w,c
  5480  0019AE  0BFE               	andlw	-2
  5481  0019B0  1816               	xorwf	??_check_sensors,w,c
  5482  0019B2  6E4E               	movwf	_SeeLine,c
  5483  0019B4  0012               	return		;funcret
  5484  0019B6                     __end_of_check_sensors:
  5485                           	opt stack 0
  5486                           stkptr	equ	0xFFC
  5487                           tblptru	equ	0xFF8
  5488                           tblptrh	equ	0xFF7
  5489                           tblptrl	equ	0xFF6
  5490                           tablat	equ	0xFF5
  5491                           intcon	equ	0xFF2
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           indf1	equ	0xFE7
  5495                           postinc1	equ	0xFE6
  5496                           fsr1h	equ	0xFE2
  5497                           fsr1l	equ	0xFE1
  5498                           indf2	equ	0xFDF
  5499                           postinc2	equ	0xFDE
  5500                           plusw2	equ	0xFDB
  5501                           fsr2h	equ	0xFDA
  5502                           fsr2l	equ	0xFD9
  5503                           status	equ	0xFD8
  5504                           
  5505 ;; *************** function _adc *****************
  5506 ;; Defined at:
  5507 ;;		line 230 in file "../Robot Files/sumovore.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  channel         1    wreg     unsigned char 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  channel         1   20[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  2   18[COMRAM] unsigned int 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        3 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    2
  5528 ;; This function calls:
  5529 ;;		_BusyADC
  5530 ;;		_ConvertADC
  5531 ;;		_ReadADC
  5532 ;;		_SetChanADC
  5533 ;; This function is called by:
  5534 ;;		_check_sensors
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text45
  5539  002092                     __ptext45:
  5540                           	opt stack 0
  5541  002092                     _adc:
  5542                           	opt stack 27
  5543                           
  5544                           ;incstack = 0
  5545                           ;adc@channel stored from wreg
  5546  002092  6E15               	movwf	adc@channel,c
  5547                           
  5548                           ;sumovore.c: 232: SetChanADC( channel );
  5549  002094  5015               	movf	adc@channel,w,c
  5550  002096  EC38  F011         	call	_SetChanADC
  5551                           
  5552                           ;sumovore.c: 233: ConvertADC();
  5553  00209A  ECA4  F011         	call	_ConvertADC	;wreg free
  5554                           
  5555                           ;sumovore.c: 234: while( BusyADC() );
  5556  00209E  D000               	goto	l2231
  5557  0020A0                     l2231:
  5558  0020A0  EC88  F011         	call	_BusyADC	;wreg free
  5559  0020A4  0900               	iorlw	0
  5560  0020A6  A4D8               	btfss	status,2,c
  5561  0020A8  D7FB               	goto	l2231
  5562                           
  5563                           ;sumovore.c: 236: return ReadADC();
  5564  0020AA  EC79  F011         	call	_ReadADC	;wreg free
  5565  0020AE  C00F  F013         	movff	?_ReadADC,?_adc
  5566  0020B2  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5567  0020B6  D000               	goto	l325
  5568  0020B8                     l325:
  5569  0020B8  0012               	return		;funcret
  5570  0020BA                     __end_of_adc:
  5571                           	opt stack 0
  5572                           stkptr	equ	0xFFC
  5573                           tblptru	equ	0xFF8
  5574                           tblptrh	equ	0xFF7
  5575                           tblptrl	equ	0xFF6
  5576                           tablat	equ	0xFF5
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           indf1	equ	0xFE7
  5581                           postinc1	equ	0xFE6
  5582                           fsr1h	equ	0xFE2
  5583                           fsr1l	equ	0xFE1
  5584                           indf2	equ	0xFDF
  5585                           postinc2	equ	0xFDE
  5586                           plusw2	equ	0xFDB
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function _SetChanADC *****************
  5592 ;; Defined at:
  5593 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  channel         1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  channel         1   15[COMRAM] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;Total ram usage:        2 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    1
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_adc
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text46
  5622  002270                     __ptext46:
  5623                           	opt stack 0
  5624  002270                     _SetChanADC:
  5625                           	opt stack 27
  5626                           
  5627                           ;incstack = 0
  5628                           ;SetChanADC@channel stored from wreg
  5629  002270  6E10               	movwf	SetChanADC@channel,c
  5630  002272  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5631  002276  0EC3               	movlw	195
  5632  002278  160F               	andwf	??_SetChanADC,f,c
  5633  00227A  90D8               	bcf	status,0,c
  5634  00227C  3010               	rrcf	SetChanADC@channel,w,c
  5635  00227E  0B3C               	andlw	60
  5636  002280  100F               	iorwf	??_SetChanADC,w,c
  5637  002282  6EC2               	movwf	4034,c	;volatile
  5638  002284  0012               	return		;funcret
  5639  002286                     __end_of_SetChanADC:
  5640                           	opt stack 0
  5641                           stkptr	equ	0xFFC
  5642                           tblptru	equ	0xFF8
  5643                           tblptrh	equ	0xFF7
  5644                           tblptrl	equ	0xFF6
  5645                           tablat	equ	0xFF5
  5646                           intcon	equ	0xFF2
  5647                           postinc0	equ	0xFEE
  5648                           wreg	equ	0xFE8
  5649                           indf1	equ	0xFE7
  5650                           postinc1	equ	0xFE6
  5651                           fsr1h	equ	0xFE2
  5652                           fsr1l	equ	0xFE1
  5653                           indf2	equ	0xFDF
  5654                           postinc2	equ	0xFDE
  5655                           plusw2	equ	0xFDB
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function _ReadADC *****************
  5661 ;; Defined at:
  5662 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2   14[COMRAM] int 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;Total ram usage:        4 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    1
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_adc
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text47
  5691  0022F2                     __ptext47:
  5692                           	opt stack 0
  5693  0022F2                     _ReadADC:
  5694                           	opt stack 27
  5695                           
  5696                           ;incstack = 0
  5697  0022F2  50C4               	movf	4036,w,c	;volatile
  5698  0022F4  6E11               	movwf	??_ReadADC& (0+255),c
  5699  0022F6  50C3               	movf	4035,w,c	;volatile
  5700  0022F8  6E0F               	movwf	?_ReadADC,c
  5701  0022FA  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5702  0022FE  D000               	goto	l476
  5703  002300                     l476:
  5704  002300  0012               	return		;funcret
  5705  002302                     __end_of_ReadADC:
  5706                           	opt stack 0
  5707                           stkptr	equ	0xFFC
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           intcon	equ	0xFF2
  5713                           postinc0	equ	0xFEE
  5714                           wreg	equ	0xFE8
  5715                           indf1	equ	0xFE7
  5716                           postinc1	equ	0xFE6
  5717                           fsr1h	equ	0xFE2
  5718                           fsr1l	equ	0xFE1
  5719                           indf2	equ	0xFDF
  5720                           postinc2	equ	0xFDE
  5721                           plusw2	equ	0xFDB
  5722                           fsr2h	equ	0xFDA
  5723                           fsr2l	equ	0xFD9
  5724                           status	equ	0xFD8
  5725                           
  5726 ;; *************** function _ConvertADC *****************
  5727 ;; Defined at:
  5728 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;		None               void
  5735 ;; Registers used:
  5736 ;;		None
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;Total ram usage:        0 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_adc
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text48
  5757  002348                     __ptext48:
  5758                           	opt stack 0
  5759  002348                     _ConvertADC:
  5760                           	opt stack 27
  5761                           
  5762                           ;incstack = 0
  5763  002348  82C2               	bsf	4034,1,c	;volatile
  5764  00234A  0012               	return		;funcret
  5765  00234C                     __end_of_ConvertADC:
  5766                           	opt stack 0
  5767                           stkptr	equ	0xFFC
  5768                           tblptru	equ	0xFF8
  5769                           tblptrh	equ	0xFF7
  5770                           tblptrl	equ	0xFF6
  5771                           tablat	equ	0xFF5
  5772                           intcon	equ	0xFF2
  5773                           postinc0	equ	0xFEE
  5774                           wreg	equ	0xFE8
  5775                           indf1	equ	0xFE7
  5776                           postinc1	equ	0xFE6
  5777                           fsr1h	equ	0xFE2
  5778                           fsr1l	equ	0xFE1
  5779                           indf2	equ	0xFDF
  5780                           postinc2	equ	0xFDE
  5781                           plusw2	equ	0xFDB
  5782                           fsr2h	equ	0xFDA
  5783                           fsr2l	equ	0xFD9
  5784                           status	equ	0xFD8
  5785                           
  5786 ;; *************** function _BusyADC *****************
  5787 ;; Defined at:
  5788 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      unsigned char 
  5795 ;; Registers used:
  5796 ;;		wreg
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_adc
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text49
  5817  002310                     __ptext49:
  5818                           	opt stack 0
  5819  002310                     _BusyADC:
  5820                           	opt stack 27
  5821                           
  5822                           ;incstack = 0
  5823  002310  A2C2               	btfss	4034,1,c	;volatile
  5824  002312  D002               	goto	u10
  5825  002314  0E01               	movlw	1
  5826  002316  D002               	goto	l446
  5827  002318                     u10:
  5828  002318  0E00               	movlw	0
  5829  00231A  D000               	goto	l446
  5830  00231C                     l446:
  5831  00231C  0012               	return		;funcret
  5832  00231E                     __end_of_BusyADC:
  5833                           	opt stack 0
  5834                           stkptr	equ	0xFFC
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           intcon	equ	0xFF2
  5840                           postinc0	equ	0xFEE
  5841                           wreg	equ	0xFE8
  5842                           indf1	equ	0xFE7
  5843                           postinc1	equ	0xFE6
  5844                           fsr1h	equ	0xFE2
  5845                           fsr1l	equ	0xFE1
  5846                           indf2	equ	0xFDF
  5847                           postinc2	equ	0xFDE
  5848                           plusw2	equ	0xFDB
  5849                           fsr2h	equ	0xFDA
  5850                           fsr2l	equ	0xFD9
  5851                           status	equ	0xFD8
  5852                           
  5853 ;; *************** function _WriteTimer0 *****************
  5854 ;; Defined at:
  5855 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  timer0          2   14[COMRAM] unsigned int 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  timer           2   16[COMRAM] struct Timers
  5860 ;; Return value:  Size  Location     Type
  5861 ;;		None               void
  5862 ;; Registers used:
  5863 ;;		None
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;Total ram usage:        4 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_main
  5880 ;;		_PID_LineFollowing
  5881 ;;		_GetBackonTrack
  5882 ;;		_AllSensorsTriggered
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text50
  5887  0022E0                     __ptext50:
  5888                           	opt stack 0
  5889  0022E0                     _WriteTimer0:
  5890                           	opt stack 29
  5891                           
  5892                           ;incstack = 0
  5893  0022E0  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5894  0022E4  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5895  0022E8  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5896  0022EC  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5897  0022F0  0012               	return		;funcret
  5898  0022F2                     __end_of_WriteTimer0:
  5899                           	opt stack 0
  5900                           stkptr	equ	0xFFC
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           intcon	equ	0xFF2
  5906                           postinc0	equ	0xFEE
  5907                           wreg	equ	0xFE8
  5908                           indf1	equ	0xFE7
  5909                           postinc1	equ	0xFE6
  5910                           fsr1h	equ	0xFE2
  5911                           fsr1l	equ	0xFE1
  5912                           indf2	equ	0xFDF
  5913                           postinc2	equ	0xFDE
  5914                           plusw2	equ	0xFDB
  5915                           fsr2h	equ	0xFDA
  5916                           fsr2l	equ	0xFD9
  5917                           status	equ	0xFD8
  5918                           
  5919 ;; *************** function _MotorControl *****************
  5920 ;; Defined at:
  5921 ;;		line 168 in file "../Robot Files/main.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  delta_veloci    2   42[COMRAM] int 
  5924 ;;  speed_divide    1   44[COMRAM] unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  right_duty_c    2   50[COMRAM] int 
  5927 ;;  left_duty_cy    2   48[COMRAM] int 
  5928 ;;  right_dir_mo    1   47[COMRAM] enum E4173
  5929 ;;  left_dir_mod    1   46[COMRAM] enum E4173
  5930 ;; Return value:  Size  Location     Type
  5931 ;;		None               void
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5939 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;Total ram usage:       10 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    2
  5946 ;; This function calls:
  5947 ;;		_SetDCPWM1
  5948 ;;		_SetDCPWM2
  5949 ;;		___awdiv
  5950 ;;		___wmul
  5951 ;; This function is called by:
  5952 ;;		_PID_LineFollowing
  5953 ;;		_GetBackonTrack
  5954 ;;		_SharpTurn
  5955 ;;		_AllSensorsTriggered
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text51
  5960  00138C                     __ptext51:
  5961                           	opt stack 0
  5962  00138C                     _MotorControl:
  5963                           	opt stack 27
  5964                           
  5965                           ;main.c: 170: int left_duty_cycle = 700, right_duty_cycle = 700;
  5966                           
  5967                           ;incstack = 0
  5968  00138C  0E02               	movlw	2
  5969  00138E  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5970  001390  0EBC               	movlw	188
  5971  001392  6E31               	movwf	MotorControl@left_duty_cycle,c
  5972  001394  0E02               	movlw	2
  5973  001396  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5974  001398  0EBC               	movlw	188
  5975  00139A  6E33               	movwf	MotorControl@right_duty_cycle,c
  5976                           
  5977                           ;main.c: 171: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5978  00139C  0E01               	movlw	1
  5979  00139E  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5980  0013A0  0E01               	movlw	1
  5981  0013A2  6E30               	movwf	MotorControl@right_dir_modifier,c
  5982                           
  5983                           ;main.c: 174: if ( delta_velocity < 0 )
  5984  0013A4  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5985  0013A6  D023               	goto	l2297
  5986                           
  5987                           ;main.c: 175: {
  5988                           ;main.c: 176: left_duty_cycle += delta_velocity*15/16;
  5989  0013A8  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5990  0013AC  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5991  0013B0  0E00               	movlw	0
  5992  0013B2  6E20               	movwf	___wmul@multiplicand+1,c
  5993  0013B4  0E0F               	movlw	15
  5994  0013B6  6E1F               	movwf	___wmul@multiplicand,c
  5995  0013B8  EC5D  F010         	call	___wmul	;wreg free
  5996  0013BC  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5997  0013C0  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5998  0013C4  0E00               	movlw	0
  5999  0013C6  6E26               	movwf	___awdiv@divisor+1,c
  6000  0013C8  0E10               	movlw	16
  6001  0013CA  6E25               	movwf	___awdiv@divisor,c
  6002  0013CC  EC86  F00D         	call	___awdiv	;wreg free
  6003  0013D0  5023               	movf	?___awdiv,w,c
  6004  0013D2  2631               	addwf	MotorControl@left_duty_cycle,f,c
  6005  0013D4  5024               	movf	?___awdiv+1,w,c
  6006  0013D6  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  6007                           
  6008                           ;main.c: 177: right_duty_cycle -= delta_velocity/16;
  6009  0013D8  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  6010  0013DC  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  6011  0013E0  0E00               	movlw	0
  6012  0013E2  6E26               	movwf	___awdiv@divisor+1,c
  6013  0013E4  0E10               	movlw	16
  6014  0013E6  6E25               	movwf	___awdiv@divisor,c
  6015  0013E8  EC86  F00D         	call	___awdiv	;wreg free
  6016  0013EC  D022               	goto	L8
  6017  0013EE                     l2297:
  6018                           
  6019                           ;main.c: 180: else
  6020                           ;main.c: 181: {
  6021                           ;main.c: 182: left_duty_cycle += delta_velocity/16;
  6022  0013EE  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  6023  0013F2  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  6024  0013F6  0E00               	movlw	0
  6025  0013F8  6E26               	movwf	___awdiv@divisor+1,c
  6026  0013FA  0E10               	movlw	16
  6027  0013FC  6E25               	movwf	___awdiv@divisor,c
  6028  0013FE  EC86  F00D         	call	___awdiv	;wreg free
  6029  001402  5023               	movf	?___awdiv,w,c
  6030  001404  2631               	addwf	MotorControl@left_duty_cycle,f,c
  6031  001406  5024               	movf	?___awdiv+1,w,c
  6032  001408  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  6033                           
  6034                           ;main.c: 183: right_duty_cycle -= delta_velocity*15/16;
  6035  00140A  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  6036  00140E  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  6037  001412  0E00               	movlw	0
  6038  001414  6E20               	movwf	___wmul@multiplicand+1,c
  6039  001416  0E0F               	movlw	15
  6040  001418  6E1F               	movwf	___wmul@multiplicand,c
  6041  00141A  EC5D  F010         	call	___wmul	;wreg free
  6042  00141E  C01D  F023         	movff	?___wmul,___awdiv@dividend
  6043  001422  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  6044  001426  0E00               	movlw	0
  6045  001428  6E26               	movwf	___awdiv@divisor+1,c
  6046  00142A  0E10               	movlw	16
  6047  00142C  6E25               	movwf	___awdiv@divisor,c
  6048  00142E  EC86  F00D         	call	___awdiv	;wreg free
  6049  001432                     L8:
  6050  001432  5023               	movf	?___awdiv,w,c
  6051  001434  5E33               	subwf	MotorControl@right_duty_cycle,f,c
  6052  001436  5024               	movf	?___awdiv+1,w,c
  6053  001438  5A34               	subwfb	MotorControl@right_duty_cycle+1,f,c
  6054  00143A  D000               	goto	l2301
  6055  00143C                     l2301:
  6056                           
  6057                           ;main.c: 184: }
  6058                           ;main.c: 190: if (speed_divider)
  6059  00143C  502D               	movf	MotorControl@speed_divider,w,c
  6060  00143E  B4D8               	btfsc	status,2,c
  6061  001440  D01B               	goto	l2305
  6062                           
  6063                           ;main.c: 191: {
  6064                           ;main.c: 192: left_duty_cycle /= speed_divider;
  6065  001442  C031  F023         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  6066  001446  C032  F024         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  6067  00144A  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  6068  00144E  6A26               	clrf	___awdiv@divisor+1,c
  6069  001450  EC86  F00D         	call	___awdiv	;wreg free
  6070  001454  C023  F031         	movff	?___awdiv,MotorControl@left_duty_cycle
  6071  001458  C024  F032         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  6072                           
  6073                           ;main.c: 193: right_duty_cycle /= speed_divider;
  6074  00145C  C033  F023         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  6075  001460  C034  F024         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  6076  001464  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  6077  001468  6A26               	clrf	___awdiv@divisor+1,c
  6078  00146A  EC86  F00D         	call	___awdiv	;wreg free
  6079  00146E  C023  F033         	movff	?___awdiv,MotorControl@right_duty_cycle
  6080  001472  C024  F034         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  6081  001476  D000               	goto	l2305
  6082  001478                     l2305:
  6083                           
  6084                           ;main.c: 194: }
  6085                           ;main.c: 197: if ( left_duty_cycle < 0 )
  6086  001478  AE32               	btfss	MotorControl@left_duty_cycle+1,7,c
  6087  00147A  D010               	goto	l2311
  6088                           
  6089                           ;main.c: 198: {
  6090                           ;main.c: 199: left_dir_modifier = reverse;
  6091  00147C  0E00               	movlw	0
  6092  00147E  6E2F               	movwf	MotorControl@left_dir_modifier,c
  6093                           
  6094                           ;main.c: 200: left_duty_cycle *= -1;
  6095  001480  C031  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  6096  001484  C032  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  6097  001488  0EFF               	movlw	255
  6098  00148A  6E20               	movwf	___wmul@multiplicand+1,c
  6099  00148C  681F               	setf	___wmul@multiplicand,c
  6100  00148E  EC5D  F010         	call	___wmul	;wreg free
  6101  001492  C01D  F031         	movff	?___wmul,MotorControl@left_duty_cycle
  6102  001496  C01E  F032         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  6103  00149A  D000               	goto	l2311
  6104  00149C                     l2311:
  6105                           
  6106                           ;main.c: 201: }
  6107                           ;main.c: 202: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  6108  00149C  BE32               	btfsc	MotorControl@left_duty_cycle+1,7,c
  6109  00149E  D00B               	goto	l2315
  6110  0014A0  0E21               	movlw	33
  6111  0014A2  5C31               	subwf	MotorControl@left_duty_cycle,w,c
  6112  0014A4  0E03               	movlw	3
  6113  0014A6  5832               	subwfb	MotorControl@left_duty_cycle+1,w,c
  6114  0014A8  A0D8               	btfss	status,0,c
  6115  0014AA  D005               	goto	l2315
  6116  0014AC  0E03               	movlw	3
  6117  0014AE  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  6118  0014B0  0E20               	movlw	32
  6119  0014B2  6E31               	movwf	MotorControl@left_duty_cycle,c
  6120  0014B4  D000               	goto	l2315
  6121  0014B6                     l2315:
  6122                           
  6123                           ;main.c: 204: SetDCPWM2((unsigned int) left_duty_cycle );
  6124  0014B6  C031  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  6125  0014BA  C032  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  6126  0014BE  ECB0  F00F         	call	_SetDCPWM2	;wreg free
  6127                           
  6128                           ;main.c: 205: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  6129  0014C2  502F               	movf	MotorControl@left_dir_modifier,w,c
  6130  0014C4  A4D8               	btfss	status,2,c
  6131  0014C6  D002               	goto	l131
  6132  0014C8  9082               	bcf	3970,0,c	;volatile
  6133  0014CA  D002               	goto	l2321
  6134  0014CC                     l131:
  6135                           
  6136                           ;main.c: 206: else PORTCbits.RC0 = 0b1;
  6137  0014CC  8082               	bsf	3970,0,c	;volatile
  6138  0014CE  D000               	goto	l2321
  6139  0014D0                     l2321:
  6140                           
  6141                           ;main.c: 207: PORTEbits.RE1 = !PORTCbits.RC0;
  6142  0014D0  B082               	btfsc	3970,0,c	;volatile
  6143  0014D2  D003               	goto	u1730
  6144  0014D4  6A2E               	clrf	??_MotorControl& (0+255),c
  6145  0014D6  2A2E               	incf	??_MotorControl& (0+255),f,c
  6146  0014D8  D001               	goto	u1748
  6147  0014DA                     u1730:
  6148  0014DA  6A2E               	clrf	??_MotorControl& (0+255),c
  6149  0014DC                     u1748:
  6150  0014DC  462E               	rlncf	??_MotorControl,f,c
  6151  0014DE  5084               	movf	3972,w,c	;volatile
  6152  0014E0  182E               	xorwf	??_MotorControl,w,c
  6153  0014E2  0BFD               	andlw	-3
  6154  0014E4  182E               	xorwf	??_MotorControl,w,c
  6155  0014E6  6E84               	movwf	3972,c	;volatile
  6156                           
  6157                           ;main.c: 210: if ( right_duty_cycle < 0 )
  6158  0014E8  AE34               	btfss	MotorControl@right_duty_cycle+1,7,c
  6159  0014EA  D010               	goto	l2327
  6160                           
  6161                           ;main.c: 211: {
  6162                           ;main.c: 212: right_dir_modifier = reverse;
  6163  0014EC  0E00               	movlw	0
  6164  0014EE  6E30               	movwf	MotorControl@right_dir_modifier,c
  6165                           
  6166                           ;main.c: 213: right_duty_cycle *= -1;
  6167  0014F0  C033  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  6168  0014F4  C034  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  6169  0014F8  0EFF               	movlw	255
  6170  0014FA  6E20               	movwf	___wmul@multiplicand+1,c
  6171  0014FC  681F               	setf	___wmul@multiplicand,c
  6172  0014FE  EC5D  F010         	call	___wmul	;wreg free
  6173  001502  C01D  F033         	movff	?___wmul,MotorControl@right_duty_cycle
  6174  001506  C01E  F034         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  6175  00150A  D000               	goto	l2327
  6176  00150C                     l2327:
  6177                           
  6178                           ;main.c: 214: }
  6179                           ;main.c: 215: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  6180  00150C  BE34               	btfsc	MotorControl@right_duty_cycle+1,7,c
  6181  00150E  D00B               	goto	l2331
  6182  001510  0E21               	movlw	33
  6183  001512  5C33               	subwf	MotorControl@right_duty_cycle,w,c
  6184  001514  0E03               	movlw	3
  6185  001516  5834               	subwfb	MotorControl@right_duty_cycle+1,w,c
  6186  001518  A0D8               	btfss	status,0,c
  6187  00151A  D005               	goto	l2331
  6188  00151C  0E03               	movlw	3
  6189  00151E  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  6190  001520  0E20               	movlw	32
  6191  001522  6E33               	movwf	MotorControl@right_duty_cycle,c
  6192  001524  D000               	goto	l2331
  6193  001526                     l2331:
  6194                           
  6195                           ;main.c: 217: SetDCPWM1((unsigned int) right_duty_cycle );
  6196  001526  C033  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  6197  00152A  C034  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  6198  00152E  ECCD  F00F         	call	_SetDCPWM1	;wreg free
  6199                           
  6200                           ;main.c: 218: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  6201  001532  5030               	movf	MotorControl@right_dir_modifier,w,c
  6202  001534  A4D8               	btfss	status,2,c
  6203  001536  D002               	goto	l135
  6204  001538  9A82               	bcf	3970,5,c	;volatile
  6205  00153A  D002               	goto	l2337
  6206  00153C                     l135:
  6207                           
  6208                           ;main.c: 219: else PORTCbits.RC5 = 0b1;
  6209  00153C  8A82               	bsf	3970,5,c	;volatile
  6210  00153E  D000               	goto	l2337
  6211  001540                     l2337:
  6212                           
  6213                           ;main.c: 220: PORTEbits.RE0 = !PORTCbits.RC5;
  6214  001540  BA82               	btfsc	3970,5,c	;volatile
  6215  001542  D003               	goto	u1780
  6216  001544  6A2E               	clrf	??_MotorControl& (0+255),c
  6217  001546  2A2E               	incf	??_MotorControl& (0+255),f,c
  6218  001548  D001               	goto	u1798
  6219  00154A                     u1780:
  6220  00154A  6A2E               	clrf	??_MotorControl& (0+255),c
  6221  00154C                     u1798:
  6222  00154C  5084               	movf	3972,w,c	;volatile
  6223  00154E  182E               	xorwf	??_MotorControl,w,c
  6224  001550  0BFE               	andlw	-2
  6225  001552  182E               	xorwf	??_MotorControl,w,c
  6226  001554  6E84               	movwf	3972,c	;volatile
  6227  001556  0012               	return		;funcret
  6228  001558                     __end_of_MotorControl:
  6229                           	opt stack 0
  6230                           stkptr	equ	0xFFC
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           intcon	equ	0xFF2
  6236                           postinc0	equ	0xFEE
  6237                           wreg	equ	0xFE8
  6238                           indf1	equ	0xFE7
  6239                           postinc1	equ	0xFE6
  6240                           fsr1h	equ	0xFE2
  6241                           fsr1l	equ	0xFE1
  6242                           indf2	equ	0xFDF
  6243                           postinc2	equ	0xFDE
  6244                           plusw2	equ	0xFDB
  6245                           fsr2h	equ	0xFDA
  6246                           fsr2l	equ	0xFD9
  6247                           status	equ	0xFD8
  6248                           
  6249 ;; *************** function ___wmul *****************
  6250 ;; Defined at:
  6251 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  multiplier      2   28[COMRAM] unsigned int 
  6254 ;;  multiplicand    2   30[COMRAM] unsigned int 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  product         2   32[COMRAM] unsigned int 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  2   28[COMRAM] unsigned int 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0, prodl, prodh
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;Total ram usage:        6 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:    1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_PID_LineFollowing
  6277 ;;		_MotorControl
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text52
  6282  0020BA                     __ptext52:
  6283                           	opt stack 0
  6284  0020BA                     ___wmul:
  6285                           	opt stack 28
  6286                           
  6287                           ;incstack = 0
  6288  0020BA  501D               	movf	___wmul@multiplier,w,c
  6289  0020BC  021F               	mulwf	___wmul@multiplicand,c
  6290  0020BE  CFF3 F021          	movff	prodl,___wmul@product
  6291  0020C2  CFF4 F022          	movff	prodh,___wmul@product+1
  6292  0020C6  501D               	movf	___wmul@multiplier,w,c
  6293  0020C8  0220               	mulwf	___wmul@multiplicand+1,c
  6294  0020CA  50F3               	movf	prodl,w,c
  6295  0020CC  2622               	addwf	___wmul@product+1,f,c
  6296  0020CE  501E               	movf	___wmul@multiplier+1,w,c
  6297  0020D0  021F               	mulwf	___wmul@multiplicand,c
  6298  0020D2  50F3               	movf	prodl,w,c
  6299  0020D4  2622               	addwf	___wmul@product+1,f,c
  6300  0020D6  C021  F01D         	movff	___wmul@product,?___wmul
  6301  0020DA  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6302  0020DE  D000               	goto	l669
  6303  0020E0                     l669:
  6304  0020E0  0012               	return		;funcret
  6305  0020E2                     __end_of___wmul:
  6306                           	opt stack 0
  6307                           stkptr	equ	0xFFC
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           postinc0	equ	0xFEE
  6316                           wreg	equ	0xFE8
  6317                           indf1	equ	0xFE7
  6318                           postinc1	equ	0xFE6
  6319                           fsr1h	equ	0xFE2
  6320                           fsr1l	equ	0xFE1
  6321                           indf2	equ	0xFDF
  6322                           postinc2	equ	0xFDE
  6323                           plusw2	equ	0xFDB
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function ___awdiv *****************
  6329 ;; Defined at:
  6330 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  dividend        2   34[COMRAM] int 
  6333 ;;  divisor         2   36[COMRAM] int 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  quotient        2   40[COMRAM] int 
  6336 ;;  sign            1   39[COMRAM] unsigned char 
  6337 ;;  counter         1   38[COMRAM] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2   34[COMRAM] int 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:        8 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_MotorControl
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text53
  6362  001B0C                     __ptext53:
  6363                           	opt stack 0
  6364  001B0C                     ___awdiv:
  6365                           	opt stack 27
  6366                           
  6367                           ;incstack = 0
  6368  001B0C  0E00               	movlw	0
  6369  001B0E  6E28               	movwf	___awdiv@sign,c
  6370  001B10  AE26               	btfss	___awdiv@divisor+1,7,c
  6371  001B12  D007               	goto	l2251
  6372  001B14  6C25               	negf	___awdiv@divisor,c
  6373  001B16  1E26               	comf	___awdiv@divisor+1,f,c
  6374  001B18  B0D8               	btfsc	status,0,c
  6375  001B1A  2A26               	incf	___awdiv@divisor+1,f,c
  6376  001B1C  0E01               	movlw	1
  6377  001B1E  6E28               	movwf	___awdiv@sign,c
  6378  001B20  D000               	goto	l2251
  6379  001B22                     l2251:
  6380  001B22  AE24               	btfss	___awdiv@dividend+1,7,c
  6381  001B24  D007               	goto	l2257
  6382  001B26  6C23               	negf	___awdiv@dividend,c
  6383  001B28  1E24               	comf	___awdiv@dividend+1,f,c
  6384  001B2A  B0D8               	btfsc	status,0,c
  6385  001B2C  2A24               	incf	___awdiv@dividend+1,f,c
  6386  001B2E  0E01               	movlw	1
  6387  001B30  1A28               	xorwf	___awdiv@sign,f,c
  6388  001B32  D000               	goto	l2257
  6389  001B34                     l2257:
  6390  001B34  0E00               	movlw	0
  6391  001B36  6E2A               	movwf	___awdiv@quotient+1,c
  6392  001B38  0E00               	movlw	0
  6393  001B3A  6E29               	movwf	___awdiv@quotient,c
  6394  001B3C  5025               	movf	___awdiv@divisor,w,c
  6395  001B3E  1026               	iorwf	___awdiv@divisor+1,w,c
  6396  001B40  B4D8               	btfsc	status,2,c
  6397  001B42  D021               	goto	l2279
  6398  001B44  0E01               	movlw	1
  6399  001B46  6E27               	movwf	___awdiv@counter,c
  6400  001B48  D005               	goto	l2265
  6401  001B4A                     l2263:
  6402  001B4A  90D8               	bcf	status,0,c
  6403  001B4C  3625               	rlcf	___awdiv@divisor,f,c
  6404  001B4E  3626               	rlcf	___awdiv@divisor+1,f,c
  6405  001B50  2A27               	incf	___awdiv@counter,f,c
  6406  001B52  D000               	goto	l2265
  6407  001B54                     l2265:
  6408  001B54  BE26               	btfsc	___awdiv@divisor+1,7,c
  6409  001B56  D002               	goto	l2267
  6410  001B58  D7F8               	goto	l2263
  6411  001B5A  D000               	goto	l2267
  6412  001B5C                     l2267:
  6413  001B5C  90D8               	bcf	status,0,c
  6414  001B5E  3629               	rlcf	___awdiv@quotient,f,c
  6415  001B60  362A               	rlcf	___awdiv@quotient+1,f,c
  6416  001B62  5025               	movf	___awdiv@divisor,w,c
  6417  001B64  5C23               	subwf	___awdiv@dividend,w,c
  6418  001B66  5026               	movf	___awdiv@divisor+1,w,c
  6419  001B68  5824               	subwfb	___awdiv@dividend+1,w,c
  6420  001B6A  A0D8               	btfss	status,0,c
  6421  001B6C  D006               	goto	l2275
  6422  001B6E  5025               	movf	___awdiv@divisor,w,c
  6423  001B70  5E23               	subwf	___awdiv@dividend,f,c
  6424  001B72  5026               	movf	___awdiv@divisor+1,w,c
  6425  001B74  5A24               	subwfb	___awdiv@dividend+1,f,c
  6426  001B76  8029               	bsf	___awdiv@quotient,0,c
  6427  001B78  D000               	goto	l2275
  6428  001B7A                     l2275:
  6429  001B7A  90D8               	bcf	status,0,c
  6430  001B7C  3226               	rrcf	___awdiv@divisor+1,f,c
  6431  001B7E  3225               	rrcf	___awdiv@divisor,f,c
  6432  001B80  2E27               	decfsz	___awdiv@counter,f,c
  6433  001B82  D7EC               	goto	l2267
  6434  001B84  D000               	goto	l2279
  6435  001B86                     l2279:
  6436  001B86  5028               	movf	___awdiv@sign,w,c
  6437  001B88  B4D8               	btfsc	status,2,c
  6438  001B8A  D005               	goto	l2283
  6439  001B8C  6C29               	negf	___awdiv@quotient,c
  6440  001B8E  1E2A               	comf	___awdiv@quotient+1,f,c
  6441  001B90  B0D8               	btfsc	status,0,c
  6442  001B92  2A2A               	incf	___awdiv@quotient+1,f,c
  6443  001B94  D000               	goto	l2283
  6444  001B96                     l2283:
  6445  001B96  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6446  001B9A  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6447  001B9E  D000               	goto	l862
  6448  001BA0                     l862:
  6449  001BA0  0012               	return		;funcret
  6450  001BA2                     __end_of___awdiv:
  6451                           	opt stack 0
  6452                           stkptr	equ	0xFFC
  6453                           tblptru	equ	0xFF8
  6454                           tblptrh	equ	0xFF7
  6455                           tblptrl	equ	0xFF6
  6456                           tablat	equ	0xFF5
  6457                           prodh	equ	0xFF4
  6458                           prodl	equ	0xFF3
  6459                           intcon	equ	0xFF2
  6460                           postinc0	equ	0xFEE
  6461                           wreg	equ	0xFE8
  6462                           indf1	equ	0xFE7
  6463                           postinc1	equ	0xFE6
  6464                           fsr1h	equ	0xFE2
  6465                           fsr1l	equ	0xFE1
  6466                           indf2	equ	0xFDF
  6467                           postinc2	equ	0xFDE
  6468                           plusw2	equ	0xFDB
  6469                           fsr2h	equ	0xFDA
  6470                           fsr2l	equ	0xFD9
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function _SetDCPWM2 *****************
  6474 ;; Defined at:
  6475 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6480 ;; Return value:  Size  Location     Type
  6481 ;;		None               void
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;Total ram usage:        6 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_MotorControl
  6500 ;;		_initialization
  6501 ;;		_motors_brake_all
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text54
  6506  001F60                     __ptext54:
  6507                           	opt stack 0
  6508  001F60                     _SetDCPWM2:
  6509                           	opt stack 28
  6510                           
  6511                           ;incstack = 0
  6512  001F60  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6513  001F64  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6514  001F68  0E06               	movlw	6
  6515  001F6A                     u1495:
  6516  001F6A  90D8               	bcf	status,0,c
  6517  001F6C  3611               	rlcf	??_SetDCPWM2,f,c
  6518  001F6E  3612               	rlcf	??_SetDCPWM2+1,f,c
  6519  001F70  2EE8               	decfsz	wreg,f,c
  6520  001F72  D7FB               	goto	u1495
  6521  001F74  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6522  001F78  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6523  001F7C  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6524  001F80  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6525  001F84  90D8               	bcf	status,0,c
  6526  001F86  3211               	rrcf	??_SetDCPWM2,f,c
  6527  001F88  90D8               	bcf	status,0,c
  6528  001F8A  3211               	rrcf	??_SetDCPWM2,f,c
  6529  001F8C  0E30               	movlw	48
  6530  001F8E  1611               	andwf	??_SetDCPWM2,f,c
  6531  001F90  50BA               	movf	4026,w,c	;volatile
  6532  001F92  0BCF               	andlw	207
  6533  001F94  1011               	iorwf	??_SetDCPWM2,w,c
  6534  001F96  6EBA               	movwf	4026,c	;volatile
  6535  001F98  0012               	return		;funcret
  6536  001F9A                     __end_of_SetDCPWM2:
  6537                           	opt stack 0
  6538                           stkptr	equ	0xFFC
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           intcon	equ	0xFF2
  6546                           postinc0	equ	0xFEE
  6547                           wreg	equ	0xFE8
  6548                           indf1	equ	0xFE7
  6549                           postinc1	equ	0xFE6
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           plusw2	equ	0xFDB
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _SetDCPWM1 *****************
  6560 ;; Defined at:
  6561 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6566 ;; Return value:  Size  Location     Type
  6567 ;;		None               void
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;Total ram usage:        6 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    1
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_MotorControl
  6586 ;;		_initialization
  6587 ;;		_motors_brake_all
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text55
  6592  001F9A                     __ptext55:
  6593                           	opt stack 0
  6594  001F9A                     _SetDCPWM1:
  6595                           	opt stack 28
  6596                           
  6597                           ;incstack = 0
  6598  001F9A  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6599  001F9E  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6600  001FA2  0E06               	movlw	6
  6601  001FA4                     u1505:
  6602  001FA4  90D8               	bcf	status,0,c
  6603  001FA6  3611               	rlcf	??_SetDCPWM1,f,c
  6604  001FA8  3612               	rlcf	??_SetDCPWM1+1,f,c
  6605  001FAA  2EE8               	decfsz	wreg,f,c
  6606  001FAC  D7FB               	goto	u1505
  6607  001FAE  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6608  001FB2  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6609  001FB6  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6610  001FBA  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6611  001FBE  90D8               	bcf	status,0,c
  6612  001FC0  3211               	rrcf	??_SetDCPWM1,f,c
  6613  001FC2  90D8               	bcf	status,0,c
  6614  001FC4  3211               	rrcf	??_SetDCPWM1,f,c
  6615  001FC6  0E30               	movlw	48
  6616  001FC8  1611               	andwf	??_SetDCPWM1,f,c
  6617  001FCA  50BD               	movf	4029,w,c	;volatile
  6618  001FCC  0BCF               	andlw	207
  6619  001FCE  1011               	iorwf	??_SetDCPWM1,w,c
  6620  001FD0  6EBD               	movwf	4029,c	;volatile
  6621  001FD2  0012               	return		;funcret
  6622  001FD4                     __end_of_SetDCPWM1:
  6623                           	opt stack 0
  6624                           stkptr	equ	0xFFC
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           postinc0	equ	0xFEE
  6633                           wreg	equ	0xFE8
  6634                           indf1	equ	0xFE7
  6635                           postinc1	equ	0xFE6
  6636                           fsr1h	equ	0xFE2
  6637                           fsr1l	equ	0xFE1
  6638                           indf2	equ	0xFDF
  6639                           postinc2	equ	0xFDE
  6640                           plusw2	equ	0xFDB
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function _high_isr *****************
  6646 ;; Defined at:
  6647 ;;		line 24 in file "../Robot Files/interrupts.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;		None               void
  6654 ;; Registers used:
  6655 ;;		wreg, status,2
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;Total ram usage:       14 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		Interrupt level 2
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	intcode
  6675  000008                     __pintcode:
  6676                           	opt stack 0
  6677  000008                     _high_isr:
  6678                           	opt stack 25
  6679                           
  6680                           ;incstack = 0
  6681  000008  CFFA F001          	movff	pclath,??_high_isr
  6682  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6683  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6684  000014  ED58  F00E         	call	int_func,f	;refresh shadow registers
  6685                           stkptr	equ	0xFFC
  6686                           pclatu	equ	0xFFB
  6687                           pclath	equ	0xFFA
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           postinc0	equ	0xFEE
  6696                           fsr0l	equ	0xFE9
  6697                           wreg	equ	0xFE8
  6698                           indf1	equ	0xFE7
  6699                           postinc1	equ	0xFE6
  6700                           fsr1h	equ	0xFE2
  6701                           fsr1l	equ	0xFE1
  6702                           indf2	equ	0xFDF
  6703                           postinc2	equ	0xFDE
  6704                           plusw2	equ	0xFDB
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709                           	psect	intcode_body
  6710  001CB0                     __pintcode_body:
  6711                           	opt stack 25
  6712  001CB0                     int_func:
  6713                           	opt stack 25
  6714  001CB0  0006               	pop		; remove dummy address from shadow register refresh
  6715  001CB2  CFEA F004          	movff	fsr0h,??_high_isr+3
  6716  001CB6  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6717  001CBA  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6718  001CBE  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6719  001CC2  CFDA F008          	movff	fsr2h,??_high_isr+7
  6720  001CC6  CFF3 F009          	movff	prodl,??_high_isr+8
  6721  001CCA  CFF4 F00A          	movff	prodh,??_high_isr+9
  6722  001CCE  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6723  001CD2  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6724  001CD6  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6725  001CDA  CFF5 F00E          	movff	tablat,??_high_isr+13
  6726                           
  6727                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6728  001CDE  94A1               	bcf	4001,2,c	;volatile
  6729                           
  6730                           ;interrupts.c: 27: TRISA = 0xff;
  6731  001CE0  6892               	setf	3986,c	;volatile
  6732                           
  6733                           ;interrupts.c: 28: TRISB = 0xff;
  6734  001CE2  6893               	setf	3987,c	;volatile
  6735                           
  6736                           ;interrupts.c: 29: TRISC = 0xff;
  6737  001CE4  6894               	setf	3988,c	;volatile
  6738                           
  6739                           ;interrupts.c: 30: TRISD = 0xff;
  6740  001CE6  6895               	setf	3989,c	;volatile
  6741                           
  6742                           ;interrupts.c: 31: TRISE = 0x03;
  6743  001CE8  0E03               	movlw	3
  6744  001CEA  6E96               	movwf	3990,c	;volatile
  6745                           
  6746                           ;interrupts.c: 32: lvd_flag =1;
  6747  001CEC  0E01               	movlw	1
  6748  001CEE  6E4F               	movwf	_lvd_flag,c
  6749                           
  6750                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6751  001CF0  94A0               	bcf	4000,2,c	;volatile
  6752                           
  6753                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6754  001CF2  98D2               	bcf	4050,4,c	;volatile
  6755  001CF4  C00E  FFF5         	movff	??_high_isr+13,tablat
  6756  001CF8  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6757  001CFC  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6758  001D00  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6759  001D04  C00A  FFF4         	movff	??_high_isr+9,prodh
  6760  001D08  C009  FFF3         	movff	??_high_isr+8,prodl
  6761  001D0C  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6762  001D10  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6763  001D14  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6764  001D18  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6765  001D1C  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6766  001D20  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6767  001D24  C002  FFFB         	movff	??_high_isr+1,pclatu
  6768  001D28  C001  FFFA         	movff	??_high_isr,pclath
  6769  001D2C  0011               	retfie		f
  6770  001D2E                     __end_of_high_isr:
  6771                           	opt stack 0
  6772                           stkptr	equ	0xFFC
  6773                           pclatu	equ	0xFFB
  6774                           pclath	equ	0xFFA
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           postinc0	equ	0xFEE
  6783                           fsr0h	equ	0xFEA
  6784                           fsr0l	equ	0xFE9
  6785                           wreg	equ	0xFE8
  6786                           indf1	equ	0xFE7
  6787                           postinc1	equ	0xFE6
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           plusw2	equ	0xFDB
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           stkptr	equ	0xFFC
  6797                           pclatu	equ	0xFFB
  6798                           pclath	equ	0xFFA
  6799                           tblptru	equ	0xFF8
  6800                           tblptrh	equ	0xFF7
  6801                           tblptrl	equ	0xFF6
  6802                           tablat	equ	0xFF5
  6803                           prodh	equ	0xFF4
  6804                           prodl	equ	0xFF3
  6805                           intcon	equ	0xFF2
  6806                           postinc0	equ	0xFEE
  6807                           fsr0h	equ	0xFEA
  6808                           fsr0l	equ	0xFE9
  6809                           wreg	equ	0xFE8
  6810                           indf1	equ	0xFE7
  6811                           postinc1	equ	0xFE6
  6812                           fsr1h	equ	0xFE2
  6813                           fsr1l	equ	0xFE1
  6814                           indf2	equ	0xFDF
  6815                           postinc2	equ	0xFDE
  6816                           plusw2	equ	0xFDB
  6817                           fsr2h	equ	0xFDA
  6818                           fsr2l	equ	0xFD9
  6819                           status	equ	0xFD8
  6820                           
  6821                           	psect	rparam
  6822  0000                     stkptr	equ	0xFFC
  6823                           pclatu	equ	0xFFB
  6824                           pclath	equ	0xFFA
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           postinc0	equ	0xFEE
  6833                           fsr0h	equ	0xFEA
  6834                           fsr0l	equ	0xFE9
  6835                           wreg	equ	0xFE8
  6836                           indf1	equ	0xFE7
  6837                           postinc1	equ	0xFE6
  6838                           fsr1h	equ	0xFE2
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           plusw2	equ	0xFDB
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   27852
                                             61 COMRAM     3     3      0
                _AllSensorsTriggered
                  _FilterNearbyTrack
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                         _OpenTimer1
                  _PID_LineFollowing
                        _WriteTimer0
                        _WriteTimer1
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    7014
                                             52 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                         _ReadTimer1
                        _WriteTimer0
                        _WriteTimer1
                            ___aldiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     196
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      45
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9915
                                             56 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4666
                                             52 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _FilterNearbyTrack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  0     0      0    5004
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      37
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      37
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     452
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3995
                                             42 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _FilterNearbyTrack
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _OpenTimer1
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _ReadTimer1
     _WriteTimer0
     _WriteTimer1
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _WriteTimer1
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      4F       1       62.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 21:16:07 2020

                     _STKPTRbits 000FFC                                _I 0048  
                             l80 17E0                               l84 1728  
                             u10 2318                     ___awdiv@sign 0028  
            ___wmul@multiplicand 001F                      __CFG_BORV$0 000000  
                            l122 1334                              l131 14CC  
                            l135 153C                              l402 2322  
                            l411 2064                              l325 20B8  
                            l342 1F5E                              l191 21BC  
                            l159 16BC                              l351 1A60  
                            l169 1B02                              l601 223C  
                            l345 1A4C                              l602 223E  
                            l346 19F2                              l338 1F4E  
                            l188 1E00                              l196 21CA  
                            l372 1E12                              l540 218C  
                            l516 1FF6                              l197 21CE  
                            l517 2000                              l446 231C  
                            l518 2002                              l631 1D74  
                            l632 1D76                              l633 1D80  
                            l570 2076                              l634 1D82  
                            l539 218A                              l627 1D5A  
                            l643 226E                              l476 2300  
                            l572 208C                              l468 1EBE  
                            l636 1D9C                              l652 212C  
                            l573 208E                              l661 2106  
                            l738 18F0                              l669 20E0  
                            l862 1BA0                              u300 1C84  
                            u320 1CA0                              u240 1C3C  
                            u260 1C52                              u318 1C86  
                            _PR2 000FCB                              u280 1C6A  
                            u338 1CA2                              u258 1C3E  
                            u278 1C54                              u298 1C6C  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                            _adc 2092                              wreg 000FE8  
                ReadTimer0@timer 0011                  ReadTimer1@timer 0011  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           ?_adc 0013                             l1315 1E3C  
                           l2301 143C                             l2311 149C  
                           l2231 20A0                             l1319 1E54  
                           l2215 2016                             l1503 2266  
                           l2321 14D0                             l2305 1478  
                           l2217 201E                             l2251 1B22  
                           l2331 1526                             l2315 14B6  
                           l1187 1F14                             l1507 226A  
                           l1451 2120                             l2501 1D52  
                           l2263 1B4A                             l2327 150C  
                           l1447 211C                             l1455 2124  
                           l1543 20FA                             l1551 2102  
                           l2265 1B54                             l2257 1B34  
                           l2337 1540                             l2601 18C6  
                           l2513 1D6C                             l2505 1D5E  
                           l2283 1B96                             l2275 1B7A  
                           l2267 1B5C                             l1459 2128  
                           l1539 20F6                             l1547 20FE  
                           l2701 15F6                             l2605 18DE  
                           l2541 1F2E                             l1653 205E  
                           l2279 1B86                             l2471 1AC2  
                           l2615 1ED8                             l2375 1A28  
                           l2551 1F58                             l2297 13EE  
                           l2473 1ACC                             l2481 1AEE  
                           l2457 1A88                             l2465 1AAC  
                           l2721 167C                             l2617 1EE2  
                           l2545 1F3E                             l1649 204A  
                           l2731 16AE                             l2707 1618  
                           l2627 1F08                             l2619 1EEA  
                           l2379 1A40                             l2741 1DC8  
                           l2485 1AFE                             l2469 1ABC  
                           l2717 165C                             l1909 207A  
                           l2573 1832                             l2493 1D40  
                           l2751 1DF2                             l2727 1694  
                           l1775 1FF2                             l2745 1DD8  
                           l2737 1DAE                             l2585 186E  
                           l2497 1D4A                             l2841 170E  
                           l2691 15C4                             l2683 158A  
                           l2587 187C                             l2579 184C  
                           l2771 1122                             l2763 10DC  
                           l2851 1724                             l2749 1DE8  
                           l2693 15CC                             l2685 1592  
                           l2597 18B6                             l2589 1884  
                           l2781 1188                             l2757 10AA  
                           l2853 172C                             l2845 1718  
                           l2775 1144                             l2767 1102  
                           l2759 10BA                             l2783 1196  
                           l2855 1730                             l2847 171C  
                           l2697 15DC                             l2769 1112  
                           l2857 1734                             l2849 1720  
                           l2795 1274                             l2779 116A  
                           l2875 176C                             l2867 1754  
                           l2859 173A                             l2883 1786  
                           l2877 177A                             l2887 17EE  
                           l2879 1780                  __end_of_BORtask 2170  
                           STR_1 100A                             STR_2 1073  
                           STR_3 106D                             STR_4 105D  
                           STR_5 1054                             STR_6 104A  
                           STR_7 1066                             u1600 1930  
                           u1505 1FA4                             u1620 195A  
                           u1640 1982                             u1730 14DA  
                           u1618 1932                             u2507 1A6E  
                           u1660 19A8                             u1580 190A  
                           u1638 195C                             u1495 1F6A  
                           u1658 1984                             u1780 154A  
                           u1748 14DC                             u1678 19AA  
                           u1598 190C                             u2487 162C  
                           u2497 1682                             u1798 154C  
                ?_GetBackonTrack 0039                             _TMR2 000FCC  
                   __CFG_WDTPS$8 000000                 ??_initialization 001C  
                           _main 16BE            __end_of_check_sensors 19B6  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                    __CFG_BOREN$ON 000000  
                __end_of_PORtask 1A62                             prodh 000FF4  
                           prodl 000FF3       MotorControl@delta_velocity 002B  
                           start 0018                  __end_of_WDTtask 220A  
                   ___param_bank 000010                  __end_of_BusyADC 231E  
                __end_of_ReadADC 2302                  __end_of_OpenADC 1EC2  
                          ??_adc 0015           PID_LineFollowing@error 0035  
                __end_of___aldiv 18F2                            ?_main 0001  
                __end_of___awdiv 1BA2                            _T0CON 000FD5  
                ___awdiv@divisor 0025                            _T1CON 000FCD  
                          _T2CON 000FCA                  __end_of___lwdiv 1F1E  
                ___awdiv@counter 0027               __size_of_RESETtask 001C  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TXSTA 000FAC                  __end_of_isWDTTO 2108  
        __end_of_openPORTCforPWM 2310                            _isBOR 225A  
                          _isPOR 2108                            _gtrap 1E02  
                          _putch 234C                  __end_of_openLVD 225A  
                   _TURN_TIME_ms 1007                       _ConvertADC 2348  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 2286                     __end_of_main 1814  
                     _ReadTimer0 22CE                       _ReadTimer1 22BC  
               __end_of_OpenPWM1 22AA                 __end_of_OpenPWM2 200C  
                         ??_main 003E                    __activetblptr 000003  
                     _SetChanADC 2270                        ??_BORtask 0014  
      MotorControl@speed_divider 002D                           ?_isBOR 0001  
            GetBackonTrack@error 0039                           ?_isPOR 0001  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_gtrap 0001  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1L 000FBE                           _CCPR2L 000FBB  
               ___awdiv@dividend 0023                           ?_putch 0001  
                      ??_PORtask 0014                        ??_WDTtask 0014  
                     _OpenTimer0 2170                       _OpenTimer1 2066  
                     _OpenTimer2 2226                           _TMR0IF 007F92  
                         _TMR1IF 007CF0                           _SPBRGH 000FB0  
             __size_of_SetDCPWM1 003A               __size_of_SetDCPWM2 003A  
                      ??_BusyADC 000F                        ??_ReadADC 0011  
                         _LVtrap 2190                __end_of_RESETtask 2226  
                      ??_OpenADC 0011                     ?_reset_codes 0001  
               __end_of_high_isr 1D2E               __size_of_OpenUSART 0070  
                      ??___aldiv 0017                           ___wmul 20BA  
                      ??___awdiv 0027                   __CFG_STVREN$ON 000000  
               OpenTimer0@config 000F                        ??___lwdiv 0017  
               OpenTimer1@config 000F               __size_of_SharpTurn 00AA  
               OpenTimer2@config 000F                           clear_0 228C  
               ___awdiv@quotient 0029                        ??_isWDTTO 000F  
                         _printf 200C                 __end_of_set_leds 1CB0  
                      ??_openLVD 000F              __size_of_STKFULtask 001E  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               ?_openPORTCforPWM 0001                ?_motors_brake_all 0001  
                         putch@c 0001               ??_motors_brake_all 0015  
                    ?_ConvertADC 0001                       __accesstop 0080  
        __end_of__initialization 2292                _FilterNearbyTrack 21B0  
                     adc@channel 0015                    ___rparam_used 000001  
             ?_FilterNearbyTrack 0001            __end_of_set_osc_32MHz 2066  
                 __pcstackCOMRAM 0001                      ?_ReadTimer0 000F  
                    ?_ReadTimer1 000F                    __end_of_isBOR 2270  
                  __end_of_isPOR 212E                    __end_of_gtrap 1E64  
            ??_FilterNearbyTrack 000F                    __end_of_putch 234E  
   __size_of_AllSensorsTriggered 0064                __end_of_SetDCPWM1 1FD4  
              __end_of_SetDCPWM2 1F9A                    ??_StatusReset 000F  
                    ?_SetChanADC 0001                 ??_GetBackonTrack 003B  
                  ?_lvd_flag_set 0001                          ??_isBOR 000F  
                        ??_isPOR 000F                __end_of_OpenUSART 1D9E  
                        ??_gtrap 000F                          ??_putch 000F  
      __end_of_FilterNearbyTrack 21D0                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001                      ?_OpenTimer2 0001  
              __end_of_SharpTurn 1B0C                        ?_OpenPWM1 0001  
                      ?_OpenPWM2 0001                          ?_LVtrap 0001  
                  ?_MotorControl 002B               __end_of_D_CONSTANT 1003  
             __size_of_openPORTA 0006               __size_of_openPORTB 0006  
             __size_of_openPORTD 0006               __size_of_openPORTE 0006  
                        ?___wmul 001D                          _CCP1CON 000FBD  
                        _CCP2CON 000FBA                 WriteTimer0@timer 0011  
               WriteTimer1@timer 0011                    ??_WriteTimer0 0011  
                  ??_WriteTimer1 0011                _CCW_rotation_flag 004C  
            __size_of_ConvertADC 0004                          ?_printf 000F  
                        _BORtask 2150                   ??_lvd_flag_set 000F  
                      ?_high_isr 0001              __end_of_StatusReset 232A  
            __size_of_ReadTimer0 0012              __size_of_ReadTimer1 0012  
                        _PORtask 19B6               __end_of_I_CONSTANT 1005  
                        _WDTtask 21EE                          _BusyADC 2310  
                        _ReadADC 22F2                       ??_OpenPWM1 000F  
                     ??_OpenPWM2 000F                     ??_STKFULtask 0014  
                        _SeeLine 004E                   ??_MotorControl 002E  
                        _OpenADC 1E64                  __size_of_LVtrap 0020  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        __Lparam 0000                        ?_set_leds 0001  
           __size_of_reset_codes 0042                          ___aldiv 1814  
                        ___awdiv 1B0C                  __size_of___wmul 0028  
                        ___lwdiv 1EC2                     __psmallconst 1000  
                        __pcinit 2286                          _isWDTTO 20E2  
                        __ramtop 1000              __size_of_OpenTimer0 0020  
            __size_of_OpenTimer1 002C              __size_of_OpenTimer2 001C  
                        __ptext0 16BE                          __ptext1 231E  
                        __ptext2 1BA2                          __ptext3 203A  
                        __ptext4 1F1E                          __ptext5 20E2  
                        __ptext6 2108                          __ptext7 225A  
                        __ptext8 21EE                          __ptext9 21D0  
                __size_of_printf 002E                        _T0CONbits 000FD5  
                      _T1CONbits 000FCD                     __size_of_adc 0028  
                      _T2CONbits 000FCA           __size_of_check_sensors 00C4  
                        _openLVD 2242                 ___aldiv@dividend 000F  
            __end_of_WriteTimer0 22F2              __end_of_WriteTimer1 22BC  
             __end_of_STKFULtask 21EE               __end_of_P_CONSTANT 1007  
              __end_of_openPORTA 2342                __end_of_openPORTB 233C  
              __end_of_openPORTD 2348                __end_of_openPORTE 2330  
                 OpenADC@config2 000F                       ??_high_isr 0001  
                 __pintcode_body 1CB0             end_of_initialization 2292  
     __size_of_FilterNearbyTrack 0020                          int_func 1CB0  
                     ??_set_leds 000F                        _RCSTAbits 000FAB  
                        printf@c 0013                          printf@f 000F  
               ___aldiv@quotient 0019                        _RESETtask 220A  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE          __size_of_initialization 0090  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
                      _PORTEbits 000F84                   set_osc_32MHz@i 000F  
                    _StatusReset 2324                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     ??_ConvertADC 000F  
    MotorControl@left_duty_cycle 0031                _PID_LineFollowing 107A  
  MotorControl@left_dir_modifier 002F              _AllSensorsTriggered 1D9E  
             ?_PID_LineFollowing 0035                        _TXSTAbits 000FAC  
                  _check_sensors 18F2        __size_of_motors_brake_all 0022  
                 __end_of_LVtrap 21B0             __end_of_lvd_flag_set 2324  
 MotorControl@right_dir_modifier 0030              ??_PID_LineFollowing 0037  
                   ??_ReadTimer0 0011                     ??_ReadTimer1 0011  
                     ?_RESETtask 0001                   __end_of___wmul 20E2  
                    _WriteTimer0 22E0                      _WriteTimer1 22AA  
           ?_AllSensorsTriggered 0001               __end_of_ConvertADC 234C  
                   ??_SetChanADC 000F                   __end_of_printf 203A  
            start_initialization 2286             __end_of_MotorControl 1558  
                      _SetDCPWM1 1F9A                        _SetDCPWM2 1F60  
                SetDCPWM1@DCycle 0013                      __end_of_adc 20BA  
                SetDCPWM2@DCycle 0013        __end_of_PID_LineFollowing 138C  
                   ??_OpenTimer0 000F                     ??_OpenTimer1 000F  
                   ??_OpenTimer2 000F               __end_of_ReadTimer0 22E0  
             __end_of_ReadTimer1 22CE                        _OpenUSART 1D2E  
       __size_of_openPORTCforPWM 000E                   ?_check_sensors 0001  
               __CFG_OSC$INTIO67 000000                         ??_LVtrap 0014  
                      _SharpTurn 1A62               __end_of_SetChanADC 2286  
              __size_of_OpenPWM1 0012                __size_of_OpenPWM2 0038  
                       ??___wmul 0021       __end_of_TURN_SPEED_DIVIDER 100A  
          ??_AllSensorsTriggered 0035                         ??_printf 0011  
                     gtrap@count 000F               __end_of_OpenTimer0 2190  
             __end_of_OpenTimer1 2092               __end_of_OpenTimer2 2242  
             SharpTurn@direction 0036                      __pbssCOMRAM 0041  
                       ?_BORtask 0001                       ?_SetDCPWM1 000F  
                     ?_SetDCPWM2 000F                    PORtask@count1 0014  
                  PORtask@count2 0018           __size_of_set_osc_32MHz 002C  
                       ?_PORtask 0001                         ?_WDTtask 0001  
                     ?_OpenUSART 000F                __size_of_high_isr 1D26  
                       ?_BusyADC 0001                         ?_ReadADC 000F  
                     ?_SharpTurn 0001                OpenADC@portconfig 0010  
                       ?_OpenADC 000F                 ___lwdiv@dividend 0013  
                      __pintcode 0008                      ??_RESETtask 0014  
                       ?___aldiv 000F                         ?___awdiv 0023  
                 _initialization 1BA2                __size_of_set_leds 007E  
                       ?___lwdiv 0013                         ?_isWDTTO 0001  
                    __smallconst 1000                WriteTimer0@timer0 000F  
             PID_LineFollowing@D 0044                WriteTimer1@timer1 000F  
                       ?_openLVD 0001          SharpTurn@delta_velocity 0037  
     __size_of_PID_LineFollowing 0312                   __size_of_isBOR 0016  
               ___lwdiv@quotient 0017                   __size_of_isPOR 0026  
                 __size_of_gtrap 0062                   __size_of_putch 0002  
                ??_check_sensors 0016                  ___aldiv@divisor 0013  
                      _openPORTA 233C                        _openPORTB 2336  
                      _openPORTD 2342                        _openPORTE 232A  
                ___aldiv@counter 0017                   ___wmul@product 0021  
                  OpenADC@config 0013            __size_of_lvd_flag_set 0006  
        __size_of_GetBackonTrack 0166                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                  ??_reset_codes 001C                 _motors_brake_all 212E  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
         __end_of_initialization 1C32                         _RCONbits 000FD0  
              ??_openPORTCforPWM 000F                    _set_osc_32MHz 203A  
                      main@F4195 0041                      _HLVDCONbits 000FD2  
                      _threshold 004A            __size_of_MotorControl 01CC  
                     _ADCON0bits 000FC2                ___wmul@multiplier 001D  
                   ?_StatusReset 0001                  GetBackonTrack@i 003C  
                      main@error 003E     MotorControl@right_duty_cycle 0033  
                    ??_SetDCPWM1 0011                      ??_SetDCPWM2 0011  
               __size_of_BORtask 0020                     _lvd_flag_set 231E  
               __size_of_PORtask 00AC                      ??_OpenUSART 0011  
             SetDCPWM1@dutycycle 000F                       ?_openPORTA 0001  
                     ?_openPORTB 0001                       ?_openPORTD 0001  
                     ?_openPORTE 0001                 __size_of_WDTtask 001C  
                OpenUSART@config 0011                         _OpenPWM1 2298  
                       _OpenPWM2 1FD4  PID_LineFollowing@delta_velocity 0046  
               __size_of_BusyADC 000E                      ??_SharpTurn 0035  
               __size_of_ReadADC 0010                         __Hrparam 0000  
               __size_of_OpenADC 005E                     _MotorControl 138C  
                ?_initialization 0001                         __Lrparam 0000  
             SetDCPWM2@dutycycle 000F                   ?_set_osc_32MHz 0001  
               __size_of___aldiv 00DE              __end_of_reset_codes 1F60  
               __size_of___awdiv 0096                 __size_of___lwdiv 005C  
                   ?_WriteTimer0 000F                     ?_WriteTimer1 000F  
                 OpenPWM2@ccp2mx 0010                 __size_of_isWDTTO 0026  
                 OpenPWM1@period 000F                   OpenPWM2@period 000F  
                ___lwdiv@divisor 0015                 __size_of_openLVD 0018  
                ___lwdiv@counter 0019                         __ptext10 220A  
                       __ptext11 19B6                         __ptext20 1D2E  
                       __ptext12 2150                         __ptext21 2226  
                       __ptext13 2324                         __ptext30 2066  
                       __ptext22 1FD4                         __ptext14 232A  
                       __ptext31 2170                         __ptext23 2298  
                       __ptext15 2330                         __ptext40 21B0  
                       __ptext32 2190                         __ptext24 1E64  
                       __ptext16 2302                         __ptext41 1D9E  
                       __ptext33 200C                         __ptext25 107A  
                       __ptext17 2336                         __ptext50 22E0  
                       __ptext42 1C32                         __ptext34 234C  
                       __ptext26 1EC2                         __ptext18 233C  
                       __ptext51 138C                         __ptext43 212E  
                       __ptext35 2342                         __ptext27 1814  
                       __ptext19 2242                         __ptext52 20BA  
                       __ptext44 18F2                         __ptext36 1E02  
                       __ptext28 22AA                         __ptext53 1B0C  
                       __ptext45 2092                         __ptext37 1558  
                       __ptext29 22BC                         __ptext54 1F60  
                       __ptext46 2270                         __ptext38 1A62  
                       __ptext55 1F9A                         __ptext47 22F2  
                       __ptext39 22CE                         __ptext48 2348  
                       __ptext49 2310                         _high_isr 0008  
               _CW_rotation_flag 004D                    __size_of_main 0156  
                       _lvd_flag 004F                         _set_leds 1C32  
           __end_of_TURN_TIME_ms 1009                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                       _D_CONSTANT 1001  
                 OpenUSART@spbrg 000F               _TURN_SPEED_DIVIDER 1009  
                       intlevel2 0000                      ??_openPORTA 000F  
                    ??_openPORTB 000F                      ??_openPORTD 000F  
                    ??_openPORTE 000F                   _GetBackonTrack 1558  
              _openPORTCforUSART 2330                SetChanADC@channel 0010  
                ??_set_osc_32MHz 000F                      _reset_codes 1F1E  
                     _OSCCONbits 000FD3               ?_openPORTCforUSART 0001  
    __end_of_AllSensorsTriggered 1E02                       _I_CONSTANT 1003  
                       printf@ap 0011              ??_openPORTCforUSART 000F  
       __end_of_motors_brake_all 2150                     ___aldiv@sign 0018  
           __size_of_StatusReset 0006           __end_of_GetBackonTrack 16BE  
                _openPORTCforPWM 2302        __end_of_openPORTCforUSART 2336  
                     _STKFULtask 21D0                       _P_CONSTANT 1005  
