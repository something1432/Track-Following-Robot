

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Mar 31 23:39:57 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	smallconst
    64  001000                     __psmallconst:
    65                           	opt stack 0
    66  001000  00                 	db	0
    67  001001                     set_motor_speed@motor_speeds:
    68                           	opt stack 0
    69  001001  FCE0               	dw	64736
    70  001003  FD2B               	dw	64811
    71  001005  FD76               	dw	64886
    72  001007  0000               	dw	0
    73  001009  028A               	dw	650
    74  00100B  02D5               	dw	725
    75  00100D  0320               	dw	800
    76  00100F                     __end_ofset_motor_speed@motor_speeds:
    77                           	opt stack 0
    78  00100F                     _D_CONSTANT:
    79                           	opt stack 0
    80  00100F  00                 	db	0
    81  001010                     __end_of_D_CONSTANT:
    82                           	opt stack 0
    83  001010                     _I_CONSTANT:
    84                           	opt stack 0
    85  001010  00                 	db	0
    86  001011                     __end_of_I_CONSTANT:
    87                           	opt stack 0
    88  001011                     _P_CONSTANT:
    89                           	opt stack 0
    90  001011  00                 	db	0
    91  001012                     __end_of_P_CONSTANT:
    92                           	opt stack 0
    93  0000                     _ADCON0	set	4034
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADRESL	set	4035
    99  0000                     _CCP1CON	set	4029
   100  0000                     _CCP2CON	set	4026
   101  0000                     _CCPR1L	set	4030
   102  0000                     _CCPR2L	set	4027
   103  0000                     _HLVDCONbits	set	4050
   104  0000                     _INTCONbits	set	4082
   105  0000                     _IPR2bits	set	4002
   106  0000                     _OSCCONbits	set	4051
   107  0000                     _OSCTUNEbits	set	3995
   108  0000                     _PIE1bits	set	3997
   109  0000                     _PIE2bits	set	4000
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PIR2bits	set	4001
   112  0000                     _PORTCbits	set	3970
   113  0000                     _PORTD	set	3971
   114  0000                     _PORTDbits	set	3971
   115  0000                     _PORTEbits	set	3972
   116  0000                     _PR2	set	4043
   117  0000                     _RCONbits	set	4048
   118  0000                     _RCSTA	set	4011
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _SPBRG	set	4015
   121  0000                     _SPBRGH	set	4016
   122  0000                     _STKPTRbits	set	4092
   123  0000                     _T0CON	set	4053
   124  0000                     _T0CONbits	set	4053
   125  0000                     _T2CON	set	4042
   126  0000                     _T2CONbits	set	4042
   127  0000                     _TMR0H	set	4055
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR2	set	4044
   130  0000                     _TRISA	set	3986
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISBbits	set	3987
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISCbits	set	3988
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISE	set	3990
   137  0000                     _TXSTA	set	4012
   138  0000                     _TXSTAbits	set	4012
   139  0000                     _TMR0IF	set	32658
   140  001012                     STR_1:
   141  001012  0A                 	db	10
   142  001013  0D                 	db	13
   143  001014  4B                 	db	75	;'K'
   144  001015  77                 	db	119	;'w'
   145  001016  61                 	db	97	;'a'
   146  001017  6E                 	db	110	;'n'
   147  001018  74                 	db	116	;'t'
   148  001019  6C                 	db	108	;'l'
   149  00101A  65                 	db	101	;'e'
   150  00101B  6E                 	db	110	;'n'
   151  00101C  20                 	db	32
   152  00101D  41                 	db	65	;'A'
   153  00101E  50                 	db	80	;'P'
   154  00101F  53                 	db	83	;'S'
   155  001020  43                 	db	67	;'C'
   156  001021  31                 	db	49	;'1'
   157  001022  32                 	db	50	;'2'
   158  001023  39                 	db	57	;'9'
   159  001024  39                 	db	57	;'9'
   160  001025  20                 	db	32
   161  001026  73                 	db	115	;'s'
   162  001027  69                 	db	105	;'i'
   163  001028  6D                 	db	109	;'m'
   164  001029  70                 	db	112	;'p'
   165  00102A  6C                 	db	108	;'l'
   166  00102B  65                 	db	101	;'e'
   167  00102C  20                 	db	32
   168  00102D  63                 	db	99	;'c'
   169  00102E  75                 	db	117	;'u'
   170  00102F  72                 	db	114	;'r'
   171  001030  76                 	db	118	;'v'
   172  001031  65                 	db	101	;'e'
   173  001032  20                 	db	32
   174  001033  66                 	db	102	;'f'
   175  001034  6F                 	db	111	;'o'
   176  001035  6C                 	db	108	;'l'
   177  001036  6C                 	db	108	;'l'
   178  001037  6F                 	db	111	;'o'
   179  001038  77                 	db	119	;'w'
   180  001039  65                 	db	101	;'e'
   181  00103A  72                 	db	114	;'r'
   182  00103B  20                 	db	32
   183  00103C  2D                 	db	45
   184  00103D  2D                 	db	45
   185  00103E  20                 	db	32
   186  00103F  77                 	db	119	;'w'
   187  001040  69                 	db	105	;'i'
   188  001041  74                 	db	116	;'t'
   189  001042  68                 	db	104	;'h'
   190  001043  20                 	db	32
   191  001044  65                 	db	101	;'e'
   192  001045  72                 	db	114	;'r'
   193  001046  72                 	db	114	;'r'
   194  001047  6F                 	db	111	;'o'
   195  001048  72                 	db	114	;'r'
   196  001049  20                 	db	32
   197  00104A  63                 	db	99	;'c'
   198  00104B  6F                 	db	111	;'o'
   199  00104C  64                 	db	100	;'d'
   200  00104D  65                 	db	101	;'e'
   201  00104E  73                 	db	115	;'s'
   202  00104F  0A                 	db	10
   203  001050  0D                 	db	13
   204  001051  00                 	db	0
   205  001052                     STR_6:
   206  001052  20                 	db	32
   207  001053  3C                 	db	60	;'<'
   208  001054  72                 	db	114	;'r'
   209  001055  65                 	db	101	;'e'
   210  001056  73                 	db	115	;'s'
   211  001057  65                 	db	101	;'e'
   212  001058  74                 	db	116	;'t'
   213  001059  3E                 	db	62	;'>'
   214  00105A  20                 	db	32
   215  00105B  00                 	db	0
   216  00105C                     STR_5:
   217  00105C  3C                 	db	60	;'<'
   218  00105D  53                 	db	83	;'S'
   219  00105E  54                 	db	84	;'T'
   220  00105F  4B                 	db	75	;'K'
   221  001060  46                 	db	70	;'F'
   222  001061  55                 	db	85	;'U'
   223  001062  4C                 	db	76	;'L'
   224  001063  3E                 	db	62	;'>'
   225  001064  00                 	db	0
   226  001065                     STR_4:
   227  001065  3C                 	db	60	;'<'
   228  001066  57                 	db	87	;'W'
   229  001067  44                 	db	68	;'D'
   230  001068  54                 	db	84	;'T'
   231  001069  20                 	db	32
   232  00106A  54                 	db	84	;'T'
   233  00106B  4F                 	db	79	;'O'
   234  00106C  3E                 	db	62	;'>'
   235  00106D  00                 	db	0
   236  00106E                     STR_7:
   237  00106E  5C                 	db	92	;'\'
   238  00106F  3C                 	db	60	;'<'
   239  001070  4C                 	db	76	;'L'
   240  001071  56                 	db	86	;'V'
   241  001072  44                 	db	68	;'D'
   242  001073  3E                 	db	62	;'>'
   243  001074  00                 	db	0
   244  001075                     STR_3:
   245  001075  3C                 	db	60	;'<'
   246  001076  42                 	db	66	;'B'
   247  001077  4F                 	db	79	;'O'
   248  001078  52                 	db	82	;'R'
   249  001079  3E                 	db	62	;'>'
   250  00107A  00                 	db	0
   251  00107B                     STR_2:
   252  00107B  3C                 	db	60	;'<'
   253  00107C  50                 	db	80	;'P'
   254  00107D  4F                 	db	79	;'O'
   255  00107E  52                 	db	82	;'R'
   256  00107F  3E                 	db	62	;'>'
   257  001080  00                 	db	0
   258                           
   259                           ; #config settings
   260  001081  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           	psect	cinit
   263  001F1E                     __pcinit:
   264                           	opt stack 0
   265  001F1E                     start_initialization:
   266                           	opt stack 0
   267  001F1E                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Clear objects allocated to COMRAM (15 bytes)
   271  001F1E  EE00  F030         	lfsr	0,__pbssCOMRAM
   272  001F22  0E0F               	movlw	15
   273  001F24                     clear_0:
   274  001F24  6AEE               	clrf	postinc0,c
   275  001F26  06E8               	decf	wreg,f,c
   276  001F28  E1FD               	bnz	clear_0
   277  001F2A                     end_of_initialization:
   278                           	opt stack 0
   279  001F2A                     __end_of__initialization:
   280                           	opt stack 0
   281  001F2A  0100               	movlb	0
   282  001F2C  EF1C  F00A         	goto	_main	;jump to C main() function
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssCOMRAM
   287  000030                     __pbssCOMRAM:
   288                           	opt stack 0
   289  000030                     PID_LineFollowing@D:
   290                           	opt stack 0
   291  000030                     	ds	2
   292  000032                     PID_LineFollowing@delta_velocity:
   293                           	opt stack 0
   294  000032                     	ds	2
   295  000034                     _I:
   296                           	opt stack 0
   297  000034                     	ds	2
   298  000036                     _flag_count:
   299                           	opt stack 0
   300  000036                     	ds	2
   301  000038                     _threshold:
   302                           	opt stack 0
   303  000038                     	ds	2
   304  00003A                     main@F4186:
   305                           	opt stack 0
   306  00003A                     	ds	2
   307  00003C                     PID_LineFollowing@P:
   308                           	opt stack 0
   309  00003C                     	ds	1
   310  00003D                     _SeeLine:
   311                           	opt stack 0
   312  00003D                     	ds	1
   313  00003E                     _lvd_flag:
   314                           	opt stack 0
   315  00003E                     	ds	1
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319                           	psect	cstackCOMRAM
   320  000001                     __pcstackCOMRAM:
   321                           	opt stack 0
   322  000001                     ??_high_isr:
   323  000001                     
   324                           ; 1 bytes @ 0x0
   325  000001                     	ds	14
   326  00000F                     ??_set_leds:
   327  00000F                     ??_SetChanADC:
   328  00000F                     ?_printf:
   329                           	opt stack 0
   330  00000F                     ?_ReadADC:
   331                           	opt stack 0
   332  00000F                     ?___wmul:
   333                           	opt stack 0
   334  00000F                     OpenADC@config2:
   335                           	opt stack 0
   336  00000F                     OpenPWM1@period:
   337                           	opt stack 0
   338  00000F                     OpenPWM2@period:
   339                           	opt stack 0
   340  00000F                     OpenTimer0@config:
   341                           	opt stack 0
   342  00000F                     OpenTimer2@config:
   343                           	opt stack 0
   344  00000F                     set_osc_32MHz@i:
   345                           	opt stack 0
   346  00000F                     printf@f:
   347                           	opt stack 0
   348  00000F                     SetDCPWM1@dutycycle:
   349                           	opt stack 0
   350  00000F                     SetDCPWM2@dutycycle:
   351                           	opt stack 0
   352  00000F                     WriteTimer0@timer0:
   353                           	opt stack 0
   354  00000F                     OpenUSART@spbrg:
   355                           	opt stack 0
   356  00000F                     ___wmul@multiplier:
   357                           	opt stack 0
   358  00000F                     gtrap@count:
   359                           	opt stack 0
   360                           
   361                           ; 4 bytes @ 0xE
   362  00000F                     	ds	1
   363  000010                     OpenADC@portconfig:
   364                           	opt stack 0
   365  000010                     SetChanADC@channel:
   366                           	opt stack 0
   367  000010                     OpenPWM2@ccp2mx:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0xF
   371  000010                     	ds	1
   372  000011                     ??_SetDCPWM2:
   373  000011                     ??_SetDCPWM1:
   374  000011                     ??_OpenADC:
   375  000011                     ??_ReadADC:
   376  000011                     OpenUSART@config:
   377                           	opt stack 0
   378  000011                     printf@ap:
   379                           	opt stack 0
   380  000011                     WriteTimer0@timer:
   381                           	opt stack 0
   382  000011                     ___wmul@multiplicand:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x10
   386  000011                     	ds	2
   387  000013                     ?_adc:
   388                           	opt stack 0
   389  000013                     printf@c:
   390                           	opt stack 0
   391  000013                     OpenADC@config:
   392                           	opt stack 0
   393  000013                     SetDCPWM1@DCycle:
   394                           	opt stack 0
   395  000013                     SetDCPWM2@DCycle:
   396                           	opt stack 0
   397  000013                     ___wmul@product:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x12
   401  000013                     	ds	1
   402  000014                     PORtask@count1:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0x13
   406  000014                     	ds	1
   407  000015                     ?___awdiv:
   408                           	opt stack 0
   409  000015                     ?___lwdiv:
   410                           	opt stack 0
   411  000015                     adc@channel:
   412                           	opt stack 0
   413  000015                     ___awdiv@dividend:
   414                           	opt stack 0
   415  000015                     ___lwdiv@dividend:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x14
   419  000015                     	ds	1
   420  000016                     ??_check_sensors:
   421                           
   422                           ; 0 bytes @ 0x15
   423  000016                     	ds	1
   424  000017                     ___awdiv@divisor:
   425                           	opt stack 0
   426  000017                     ___lwdiv@divisor:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x16
   430  000017                     	ds	1
   431  000018                     PORtask@count2:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x17
   435  000018                     	ds	1
   436  000019                     ___awdiv@counter:
   437                           	opt stack 0
   438  000019                     ___lwdiv@quotient:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x18
   442  000019                     	ds	1
   443  00001A                     ___awdiv@sign:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x19
   447  00001A                     	ds	1
   448  00001B                     ___lwdiv@counter:
   449                           	opt stack 0
   450  00001B                     ___awdiv@quotient:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x1A
   454  00001B                     	ds	1
   455  00001C                     
   456                           ; 0 bytes @ 0x1B
   457  00001C                     	ds	1
   458  00001D                     MotorControl@delta_velocity:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x1C
   462  00001D                     	ds	2
   463  00001F                     ??_MotorControl:
   464                           
   465                           ; 0 bytes @ 0x1E
   466  00001F                     	ds	1
   467  000020                     MotorControl@left_dir_modifier:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x1F
   471  000020                     	ds	1
   472  000021                     MotorControl@right_dir_modifier:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x20
   476  000021                     	ds	1
   477  000022                     MotorControl@left_duty_cycle:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x21
   481  000022                     	ds	2
   482  000024                     MotorControl@right_duty_cycle:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x23
   486  000024                     	ds	2
   487  000026                     PID_LineFollowing@error:
   488                           	opt stack 0
   489  000026                     _SharpTurn$3084:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x25
   493  000026                     	ds	2
   494  000028                     ??_PID_LineFollowing:
   495  000028                     SharpTurn@direction:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x27
   499  000028                     	ds	1
   500  000029                     SharpTurn@delta_velocity:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x28
   504  000029                     	ds	2
   505  00002B                     ??_GetBackonTrack:
   506                           
   507                           ; 0 bytes @ 0x2A
   508  00002B                     	ds	1
   509  00002C                     GetBackonTrack@last_error:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x2B
   513  00002C                     	ds	1
   514  00002D                     GetBackonTrack@i:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2C
   518  00002D                     	ds	1
   519  00002E                     main@error:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x2D
   523  00002E                     	ds	2
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 21 in file "../Robot Files/main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  error           2   45[COMRAM] char [2]
   537 ;; Return value:  Size  Location     Type
   538 ;;		None               void
   539 ;; Registers used:
   540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;Total ram usage:        2 bytes
   551 ;; Hardware stack levels required when called:    6
   552 ;; This function calls:
   553 ;;		_GetBackonTrack
   554 ;;		_LVtrap
   555 ;;		_OpenTimer0
   556 ;;		_PID_LineFollowing
   557 ;;		_SharpTurn
   558 ;;		_WriteTimer0
   559 ;;		_check_sensors
   560 ;;		_initialization
   561 ;;		_lvd_flag_set
   562 ;;		_printf
   563 ;;		_set_leds
   564 ;; This function is called by:
   565 ;;		Startup code after reset
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text0
   570  001438                     __ptext0:
   571                           	opt stack 0
   572  001438                     _main:
   573                           	opt stack 25
   574                           
   575                           ;main.c: 23: signed char error[2]={0};
   576                           
   577                           ;incstack = 0
   578  001438  C03A  F02E         	movff	main@F4186,main@error
   579  00143C  C03B  F02F         	movff	main@F4186+1,main@error+1
   580                           
   581                           ;main.c: 24: initialization();
   582  001440  EC75  F00C         	call	_initialization	;wreg free
   583                           
   584                           ;main.c: 29: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   585  001444  0E12               	movlw	low STR_1
   586  001446  6E0F               	movwf	printf@f,c
   587  001448  0E10               	movlw	high STR_1
   588  00144A  6E10               	movwf	printf@f+1,c
   589  00144C  EC78  F00E         	call	_printf	;wreg free
   590  001450  0004               	clrwdt		;# 
   591                           
   592                           ;main.c: 32: threshold = 620u;
   593  001452  0E02               	movlw	2
   594  001454  6E39               	movwf	_threshold+1,c
   595  001456  0E6C               	movlw	108
   596  001458  6E38               	movwf	_threshold,c
   597                           
   598                           ;main.c: 36: OpenTimer0(0b01111111 & 0b11011111 & 0b11111111 & 0b11110001);
   599  00145A  0E51               	movlw	81
   600  00145C  EC14  F00F         	call	_OpenTimer0
   601                           
   602                           ;main.c: 37: WriteTimer0(0);
   603  001460  0E00               	movlw	0
   604  001462  6E10               	movwf	WriteTimer0@timer0+1,c
   605  001464  0E00               	movlw	0
   606  001466  6E0F               	movwf	WriteTimer0@timer0,c
   607  001468  ECA1  F00F         	call	_WriteTimer0	;wreg free
   608                           
   609                           ;main.c: 38: TMR0IF = 0;
   610  00146C  94F2               	bcf	intcon,2,c	;volatile
   611  00146E  D000               	goto	l2581
   612  001470                     l2581:
   613                           
   614                           ;main.c: 41: {
   615                           ;main.c: 42: check_sensors();
   616  001470  EC72  F00B         	call	_check_sensors	;wreg free
   617                           
   618                           ;main.c: 45: switch(SeeLine.B)
   619  001474  D01F               	goto	l2603
   620  001476                     l2583:
   621                           
   622                           ;main.c: 48: error[1]=1; break;
   623  001476  0E01               	movlw	1
   624  001478  D01B               	goto	L7
   625  00147A                     l2585:
   626                           
   627                           ;main.c: 50: error[1]=2; break;
   628  00147A  0E02               	movlw	2
   629  00147C  D019               	goto	L7
   630  00147E                     l2587:
   631                           
   632                           ;main.c: 52: error[1]=3; break;
   633  00147E  0E03               	movlw	3
   634  001480  D017               	goto	L7
   635  001482                     l2589:
   636                           
   637                           ;main.c: 54: error[1]=4; break;
   638  001482  0E04               	movlw	4
   639  001484  D015               	goto	L7
   640  001486                     l88:
   641                           
   642                           ;main.c: 56: error[1]=-1; break;
   643  001486  682F               	setf	main@error+1,c
   644  001488  D03F               	goto	l2605
   645  00148A                     l2591:
   646                           
   647                           ;main.c: 58: error[1]=-2; break;
   648  00148A  0EFE               	movlw	254
   649  00148C  D011               	goto	L7
   650  00148E                     l2593:
   651                           
   652                           ;main.c: 60: error[1]=-3; break;
   653  00148E  0EFD               	movlw	253
   654  001490  D00F               	goto	L7
   655  001492                     l2595:
   656                           
   657                           ;main.c: 62: error[1]=-4; break;
   658  001492  0EFC               	movlw	252
   659  001494  D00D               	goto	L7
   660                           
   661                           ;main.c: 63: case 0b00111u:
   662  001496  D000               	goto	l2597
   663  001498                     l2597:
   664                           
   665                           ;main.c: 64: case 0b00101u:
   666                           ;main.c: 65: SharpTurn(1);
   667  001498  0E01               	movlw	1
   668  00149A  EC97  F00A         	call	_SharpTurn
   669  00149E  D000               	goto	l95
   670  0014A0                     l95:
   671                           
   672                           ;main.c: 67: case 0b10100u:
   673                           ;main.c: 68: SharpTurn(0);
   674  0014A0  0E00               	movlw	0
   675  0014A2  EC97  F00A         	call	_SharpTurn
   676  0014A6                     l96:
   677                           
   678                           ;main.c: 70: GetBackonTrack(error[1]);
   679  0014A6  502F               	movf	main@error+1,w,c
   680  0014A8  EC0F  F00B         	call	_GetBackonTrack
   681  0014AC  D000               	goto	l2599
   682  0014AE                     l2599:
   683                           
   684                           ;main.c: 72: error[1]=0; break;
   685  0014AE  0E00               	movlw	0
   686  0014B0                     L7:
   687  0014B0  6E2F               	movwf	main@error+1,c
   688                           
   689                           ;main.c: 73: }
   690  0014B2  D02A               	goto	l2605
   691  0014B4                     l2603:
   692  0014B4  503D               	movf	_SeeLine,w,c
   693  0014B6  0B1F               	andlw	31
   694                           
   695                           ; Switch size 1, requested type "space"
   696                           ; Number of cases is 13, Range of values is 0 to 28
   697                           ; switch strategies available:
   698                           ; Name         Instructions Cycles
   699                           ; simple_byte           40    21 (average)
   700                           ;	Chosen strategy is simple_byte
   701  0014B8  0A00               	xorlw	0	; case 0
   702  0014BA  B4D8               	btfsc	status,2,c
   703  0014BC  D7F4               	goto	l96
   704  0014BE  0A01               	xorlw	1	; case 1
   705  0014C0  B4D8               	btfsc	status,2,c
   706  0014C2  D7DF               	goto	l2589
   707  0014C4  0A03               	xorlw	3	; case 2
   708  0014C6  B4D8               	btfsc	status,2,c
   709  0014C8  D7D8               	goto	l2585
   710  0014CA  0A01               	xorlw	1	; case 3
   711  0014CC  B4D8               	btfsc	status,2,c
   712  0014CE  D7D7               	goto	l2587
   713  0014D0  0A06               	xorlw	6	; case 5
   714  0014D2  B4D8               	btfsc	status,2,c
   715  0014D4  D7E1               	goto	l2597
   716  0014D6  0A03               	xorlw	3	; case 6
   717  0014D8  B4D8               	btfsc	status,2,c
   718  0014DA  D7CD               	goto	l2583
   719  0014DC  0A01               	xorlw	1	; case 7
   720  0014DE  B4D8               	btfsc	status,2,c
   721  0014E0  D7DB               	goto	l2597
   722  0014E2  0A0F               	xorlw	15	; case 8
   723  0014E4  B4D8               	btfsc	status,2,c
   724  0014E6  D7D1               	goto	l2591
   725  0014E8  0A04               	xorlw	4	; case 12
   726  0014EA  B4D8               	btfsc	status,2,c
   727  0014EC  D7CC               	goto	l88
   728  0014EE  0A1C               	xorlw	28	; case 16
   729  0014F0  B4D8               	btfsc	status,2,c
   730  0014F2  D7CF               	goto	l2595
   731  0014F4  0A04               	xorlw	4	; case 20
   732  0014F6  B4D8               	btfsc	status,2,c
   733  0014F8  D7D3               	goto	l95
   734  0014FA  0A0C               	xorlw	12	; case 24
   735  0014FC  B4D8               	btfsc	status,2,c
   736  0014FE  D7C7               	goto	l2593
   737  001500  0A04               	xorlw	4	; case 28
   738  001502  B4D8               	btfsc	status,2,c
   739  001504  D7CD               	goto	l95
   740  001506  D7D3               	goto	l2599
   741  001508                     l2605:
   742                           
   743                           ;main.c: 74: set_leds();
   744  001508  ECBD  F00C         	call	_set_leds	;wreg free
   745                           
   746                           ;main.c: 75: PID_LineFollowing(error);
   747  00150C  0E2E               	movlw	low main@error
   748  00150E  6E26               	movwf	PID_LineFollowing@error,c
   749  001510  0E00               	movlw	high main@error
   750  001512  6E27               	movwf	PID_LineFollowing@error+1,c
   751  001514  EC41  F008         	call	_PID_LineFollowing	;wreg free
   752  001518  0004               	clrwdt		;# 
   753                           
   754                           ;main.c: 78: if(lvd_flag_set()) LVtrap();
   755  00151A  ECC0  F00F         	call	_lvd_flag_set	;wreg free
   756  00151E  0900               	iorlw	0
   757  001520  B4D8               	btfsc	status,2,c
   758  001522  D7A6               	goto	l2581
   759  001524  EC24  F00F         	call	_LVtrap	;wreg free
   760  001528  D7A3               	goto	l2581
   761  00152A  EF0C  F000         	goto	start
   762  00152E                     __end_of_main:
   763                           	opt stack 0
   764                           intcon	equ	0xFF2
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _set_leds *****************
   770 ;; Defined at:
   771 ;;		line 255 in file "../Robot Files/sumovore.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;Total ram usage:        1 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text1
   800  00197A                     __ptext1:
   801                           	opt stack 0
   802  00197A                     _set_leds:
   803                           	opt stack 29
   804                           
   805                           ;sumovore.c: 257: PORTDbits.RD0=!SeeLine.b.Left;
   806                           
   807                           ;incstack = 0
   808  00197A  B83D               	btfsc	_SeeLine,4,c
   809  00197C  D003               	goto	u920
   810  00197E  6A0F               	clrf	??_set_leds& (0+255),c
   811  001980  2A0F               	incf	??_set_leds& (0+255),f,c
   812  001982  D001               	goto	u938
   813  001984                     u920:
   814  001984  6A0F               	clrf	??_set_leds& (0+255),c
   815  001986                     u938:
   816  001986  5083               	movf	3971,w,c	;volatile
   817  001988  180F               	xorwf	??_set_leds,w,c
   818  00198A  0BFE               	andlw	-2
   819  00198C  180F               	xorwf	??_set_leds,w,c
   820  00198E  6E83               	movwf	3971,c	;volatile
   821                           
   822                           ;sumovore.c: 258: PORTDbits.RD1=!SeeLine.b.CntLeft;
   823  001990  B63D               	btfsc	_SeeLine,3,c
   824  001992  D003               	goto	u940
   825  001994  6A0F               	clrf	??_set_leds& (0+255),c
   826  001996  2A0F               	incf	??_set_leds& (0+255),f,c
   827  001998  D001               	goto	u958
   828  00199A                     u940:
   829  00199A  6A0F               	clrf	??_set_leds& (0+255),c
   830  00199C                     u958:
   831  00199C  460F               	rlncf	??_set_leds,f,c
   832  00199E  5083               	movf	3971,w,c	;volatile
   833  0019A0  180F               	xorwf	??_set_leds,w,c
   834  0019A2  0BFD               	andlw	-3
   835  0019A4  180F               	xorwf	??_set_leds,w,c
   836  0019A6  6E83               	movwf	3971,c	;volatile
   837                           
   838                           ;sumovore.c: 259: PORTDbits.RD2=!SeeLine.b.Center;
   839  0019A8  B43D               	btfsc	_SeeLine,2,c
   840  0019AA  D003               	goto	u960
   841  0019AC  6A0F               	clrf	??_set_leds& (0+255),c
   842  0019AE  2A0F               	incf	??_set_leds& (0+255),f,c
   843  0019B0  D001               	goto	u978
   844  0019B2                     u960:
   845  0019B2  6A0F               	clrf	??_set_leds& (0+255),c
   846  0019B4                     u978:
   847  0019B4  460F               	rlncf	??_set_leds,f,c
   848  0019B6  460F               	rlncf	??_set_leds,f,c
   849  0019B8  5083               	movf	3971,w,c	;volatile
   850  0019BA  180F               	xorwf	??_set_leds,w,c
   851  0019BC  0BFB               	andlw	-5
   852  0019BE  180F               	xorwf	??_set_leds,w,c
   853  0019C0  6E83               	movwf	3971,c	;volatile
   854                           
   855                           ;sumovore.c: 260: PORTDbits.RD3=!SeeLine.b.CntRight;
   856  0019C2  B23D               	btfsc	_SeeLine,1,c
   857  0019C4  D003               	goto	u980
   858  0019C6  6A0F               	clrf	??_set_leds& (0+255),c
   859  0019C8  2A0F               	incf	??_set_leds& (0+255),f,c
   860  0019CA  D001               	goto	u998
   861  0019CC                     u980:
   862  0019CC  6A0F               	clrf	??_set_leds& (0+255),c
   863  0019CE                     u998:
   864  0019CE  460F               	rlncf	??_set_leds,f,c
   865  0019D0  460F               	rlncf	??_set_leds,f,c
   866  0019D2  460F               	rlncf	??_set_leds,f,c
   867  0019D4  5083               	movf	3971,w,c	;volatile
   868  0019D6  180F               	xorwf	??_set_leds,w,c
   869  0019D8  0BF7               	andlw	-9
   870  0019DA  180F               	xorwf	??_set_leds,w,c
   871  0019DC  6E83               	movwf	3971,c	;volatile
   872                           
   873                           ;sumovore.c: 261: PORTDbits.RD4=!SeeLine.b.Right;
   874  0019DE  B03D               	btfsc	_SeeLine,0,c
   875  0019E0  D003               	goto	u1000
   876  0019E2  6A0F               	clrf	??_set_leds& (0+255),c
   877  0019E4  2A0F               	incf	??_set_leds& (0+255),f,c
   878  0019E6  D001               	goto	u1018
   879  0019E8                     u1000:
   880  0019E8  6A0F               	clrf	??_set_leds& (0+255),c
   881  0019EA                     u1018:
   882  0019EA  3A0F               	swapf	??_set_leds,f,c
   883  0019EC  5083               	movf	3971,w,c	;volatile
   884  0019EE  180F               	xorwf	??_set_leds,w,c
   885  0019F0  0BEF               	andlw	-17
   886  0019F2  180F               	xorwf	??_set_leds,w,c
   887  0019F4  6E83               	movwf	3971,c	;volatile
   888  0019F6  0012               	return		;funcret
   889  0019F8                     __end_of_set_leds:
   890                           	opt stack 0
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _lvd_flag_set *****************
   897 ;; Defined at:
   898 ;;		line 47 in file "../Robot Files/interrupts.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      unsigned char 
   905 ;; Registers used:
   906 ;;		wreg, status,2
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text2
   927  001F80                     __ptext2:
   928                           	opt stack 0
   929  001F80                     _lvd_flag_set:
   930                           	opt stack 29
   931                           
   932                           ;interrupts.c: 49: return lvd_flag;
   933                           
   934                           ;incstack = 0
   935  001F80  503E               	movf	_lvd_flag,w,c
   936  001F82  D000               	goto	l24
   937  001F84                     l24:
   938  001F84  0012               	return		;funcret
   939  001F86                     __end_of_lvd_flag_set:
   940                           	opt stack 0
   941                           intcon	equ	0xFF2
   942                           postinc0	equ	0xFEE
   943                           wreg	equ	0xFE8
   944                           status	equ	0xFD8
   945                           
   946 ;; *************** function _initialization *****************
   947 ;; Defined at:
   948 ;;		line 65 in file "../Robot Files/sumovore.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;		None               void
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    5
   969 ;; This function calls:
   970 ;;		_OpenADC
   971 ;;		_OpenPWM1
   972 ;;		_OpenPWM2
   973 ;;		_OpenTimer2
   974 ;;		_OpenUSART
   975 ;;		_SetDCPWM1
   976 ;;		_SetDCPWM2
   977 ;;		_openLVD
   978 ;;		_openPORTA
   979 ;;		_openPORTB
   980 ;;		_openPORTCforPWM
   981 ;;		_openPORTCforUSART
   982 ;;		_openPORTD
   983 ;;		_openPORTE
   984 ;;		_reset_codes
   985 ;;		_set_osc_32MHz
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text3
   992  0018EA                     __ptext3:
   993                           	opt stack 0
   994  0018EA                     _initialization:
   995                           	opt stack 25
   996                           
   997                           ;sumovore.c: 67: SeeLine.B = 0;
   998                           
   999                           ;incstack = 0
  1000  0018EA  903D               	bcf	_SeeLine,0,c
  1001  0018EC  923D               	bcf	_SeeLine,1,c
  1002  0018EE  943D               	bcf	_SeeLine,2,c
  1003  0018F0  963D               	bcf	_SeeLine,3,c
  1004  0018F2  983D               	bcf	_SeeLine,4,c
  1005                           
  1006                           ;sumovore.c: 68: RCONbits.IPEN = 1;
  1007  0018F4  8ED0               	bsf	4048,7,c	;volatile
  1008                           
  1009                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  1010  0018F6  9EF2               	bcf	intcon,7,c	;volatile
  1011                           
  1012                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  1013  0018F8  9CF2               	bcf	intcon,6,c	;volatile
  1014                           
  1015                           ;sumovore.c: 72: set_osc_32MHz();
  1016  0018FA  EC8F  F00E         	call	_set_osc_32MHz	;wreg free
  1017                           
  1018                           ;sumovore.c: 73: openPORTCforUSART();
  1019  0018FE  ECC9  F00F         	call	_openPORTCforUSART	;wreg free
  1020                           
  1021                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1022                           ;sumovore.c: 76: 16 );
  1023  001902  0E00               	movlw	0
  1024  001904  6E10               	movwf	OpenUSART@spbrg+1,c
  1025  001906  0E10               	movlw	16
  1026  001908  6E0F               	movwf	OpenUSART@spbrg,c
  1027  00190A  0E3C               	movlw	60
  1028  00190C  EC3B  F00D         	call	_OpenUSART
  1029                           
  1030                           ;sumovore.c: 82: openPORTD();
  1031  001910  ECD2  F00F         	call	_openPORTD	;wreg free
  1032                           
  1033                           ;sumovore.c: 83: PORTD = 0;
  1034  001914  0E00               	movlw	0
  1035  001916  6E83               	movwf	3971,c	;volatile
  1036                           
  1037                           ;sumovore.c: 85: reset_codes();
  1038  001918  EC01  F00E         	call	_reset_codes	;wreg free
  1039                           
  1040                           ;sumovore.c: 87: openPORTCforPWM();
  1041  00191C  ECB2  F00F         	call	_openPORTCforPWM	;wreg free
  1042                           
  1043                           ;sumovore.c: 89: openPORTA();
  1044  001920  ECCF  F00F         	call	_openPORTA	;wreg free
  1045                           
  1046                           ;sumovore.c: 90: openPORTB();
  1047  001924  ECCC  F00F         	call	_openPORTB	;wreg free
  1048                           
  1049                           ;sumovore.c: 91: openPORTE();
  1050  001928  ECC6  F00F         	call	_openPORTE	;wreg free
  1051                           
  1052                           ;sumovore.c: 94: openLVD();
  1053  00192C  EC6D  F00F         	call	_openLVD	;wreg free
  1054                           
  1055                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1056  001930  0E0C               	movlw	12
  1057  001932  6E0F               	movwf	OpenADC@config2,c
  1058  001934  0E0A               	movlw	10
  1059  001936  6E10               	movwf	OpenADC@portconfig,c
  1060  001938  0EA7               	movlw	167
  1061  00193A  ECA4  F00D         	call	_OpenADC
  1062                           
  1063                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1064  00193E  9A82               	bcf	3970,5,c	;volatile
  1065                           
  1066                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1067  001940  9084               	bcf	3972,0,c	;volatile
  1068                           
  1069                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1070  001942  9082               	bcf	3970,0,c	;volatile
  1071                           
  1072                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1073  001944  9284               	bcf	3972,1,c	;volatile
  1074                           
  1075                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1076  001946  0E06               	movlw	6
  1077  001948  EC5F  F00F         	call	_OpenTimer2
  1078                           
  1079                           ;sumovore.c: 110: OpenPWM1(199);
  1080  00194C  0EC7               	movlw	199
  1081  00194E  EC98  F00F         	call	_OpenPWM1
  1082                           
  1083                           ;sumovore.c: 112: OpenPWM2(199);
  1084  001952  0EC7               	movlw	199
  1085  001954  EC5C  F00E         	call	_OpenPWM2
  1086                           
  1087                           ;sumovore.c: 113: SetDCPWM1(0);
  1088  001958  0E00               	movlw	0
  1089  00195A  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1090  00195C  0E00               	movlw	0
  1091  00195E  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1092  001960  EC3F  F00E         	call	_SetDCPWM1	;wreg free
  1093                           
  1094                           ;sumovore.c: 116: SetDCPWM2(0);
  1095  001964  0E00               	movlw	0
  1096  001966  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1097  001968  0E00               	movlw	0
  1098  00196A  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1099  00196C  EC22  F00E         	call	_SetDCPWM2	;wreg free
  1100                           
  1101                           ;sumovore.c: 117: threshold = 512u;
  1102  001970  0E02               	movlw	2
  1103  001972  6E39               	movwf	_threshold+1,c
  1104  001974  0E00               	movlw	0
  1105  001976  6E38               	movwf	_threshold,c
  1106  001978  0012               	return		;funcret
  1107  00197A                     __end_of_initialization:
  1108                           	opt stack 0
  1109                           intcon	equ	0xFF2
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _set_osc_32MHz *****************
  1115 ;; Defined at:
  1116 ;;		line 18 in file "../../Common/osc.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  i               2   14[COMRAM] int 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;		None               void
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_initialization
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text4
  1145  001D1E                     __ptext4:
  1146                           	opt stack 0
  1147  001D1E                     _set_osc_32MHz:
  1148                           	opt stack 28
  1149                           
  1150                           ;osc.c: 20: int i;
  1151                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1152                           
  1153                           ;incstack = 0
  1154  001D1E  8CD3               	bsf	4051,6,c	;volatile
  1155                           
  1156                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1157  001D20  8AD3               	bsf	4051,5,c	;volatile
  1158                           
  1159                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1160  001D22  88D3               	bsf	4051,4,c	;volatile
  1161                           
  1162                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1163  001D24  8C9B               	bsf	3995,6,c	;volatile
  1164                           
  1165                           ;osc.c: 28: for(i=0;i<500;i++);
  1166  001D26  0E00               	movlw	0
  1167  001D28  6E10               	movwf	set_osc_32MHz@i+1,c
  1168  001D2A  0E00               	movlw	0
  1169  001D2C  6E0F               	movwf	set_osc_32MHz@i,c
  1170  001D2E                     l1569:
  1171  001D2E  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1172  001D30  D008               	goto	l1573
  1173  001D32  0EF4               	movlw	244
  1174  001D34  5C0F               	subwf	set_osc_32MHz@i,w,c
  1175  001D36  0E01               	movlw	1
  1176  001D38  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1177  001D3A  B0D8               	btfsc	status,0,c
  1178  001D3C  D005               	goto	l387
  1179  001D3E  D001               	goto	l1573
  1180  001D40  D003               	goto	l387
  1181  001D42                     l1573:
  1182  001D42  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1183  001D44  2A10               	incf	set_osc_32MHz@i+1,f,c
  1184  001D46  D7F3               	goto	l1569
  1185  001D48                     l387:
  1186  001D48  0012               	return		;funcret
  1187  001D4A                     __end_of_set_osc_32MHz:
  1188                           	opt stack 0
  1189                           intcon	equ	0xFF2
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function _reset_codes *****************
  1195 ;; Defined at:
  1196 ;;		line 281 in file "../Robot Files/sumovore.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    4
  1217 ;; This function calls:
  1218 ;;		_BORtask
  1219 ;;		_PORtask
  1220 ;;		_RESETtask
  1221 ;;		_STKFULtask
  1222 ;;		_WDTtask
  1223 ;;		_isBOR
  1224 ;;		_isPOR
  1225 ;;		_isWDTTO
  1226 ;; This function is called by:
  1227 ;;		_initialization
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text5
  1232  001C02                     __ptext5:
  1233                           	opt stack 0
  1234  001C02                     _reset_codes:
  1235                           	opt stack 25
  1236                           
  1237                           ;sumovore.c: 283: if( isPOR() ) PORtask();
  1238                           
  1239                           ;incstack = 0
  1240  001C02  ECE0  F00E         	call	_isPOR	;wreg free
  1241  001C06  0900               	iorlw	0
  1242  001C08  B4D8               	btfsc	status,2,c
  1243  001C0A  D003               	goto	l2355
  1244  001C0C  ECD4  F00B         	call	_PORtask	;wreg free
  1245  001C10  D018               	goto	l342
  1246  001C12                     l2355:
  1247                           
  1248                           ;sumovore.c: 286: else if (isBOR() ) BORtask();
  1249  001C12  EC79  F00F         	call	_isBOR	;wreg free
  1250  001C16  0900               	iorlw	0
  1251  001C18  B4D8               	btfsc	status,2,c
  1252  001C1A  D003               	goto	l2359
  1253  001C1C  EC04  F00F         	call	_BORtask	;wreg free
  1254  001C20  D010               	goto	l342
  1255  001C22                     l2359:
  1256                           
  1257                           ;sumovore.c: 288: else if(isWDTTO() ) WDTtask();
  1258  001C22  ECCD  F00E         	call	_isWDTTO	;wreg free
  1259  001C26  0900               	iorlw	0
  1260  001C28  B4D8               	btfsc	status,2,c
  1261  001C2A  D003               	goto	l338
  1262  001C2C  EC43  F00F         	call	_WDTtask	;wreg free
  1263  001C30  D008               	goto	l342
  1264  001C32                     l338:
  1265                           
  1266                           ;sumovore.c: 292: else if(STKPTRbits.STKFUL) STKFULtask();
  1267  001C32  AEFC               	btfss	stkptr,7,c	;volatile
  1268  001C34  D003               	goto	l2365
  1269  001C36  EC34  F00F         	call	_STKFULtask	;wreg free
  1270  001C3A  D003               	goto	l342
  1271  001C3C                     l2365:
  1272                           
  1273                           ;sumovore.c: 296: else RESETtask();
  1274  001C3C  EC51  F00F         	call	_RESETtask	;wreg free
  1275  001C40  D000               	goto	l342
  1276  001C42                     l342:
  1277  001C42  0012               	return		;funcret
  1278  001C44                     __end_of_reset_codes:
  1279                           	opt stack 0
  1280                           stkptr	equ	0xFFC
  1281                           intcon	equ	0xFF2
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           status	equ	0xFD8
  1285                           
  1286 ;; *************** function _isWDTTO *****************
  1287 ;; Defined at:
  1288 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_reset_codes
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text6
  1317  001D9A                     __ptext6:
  1318                           	opt stack 0
  1319  001D9A                     _isWDTTO:
  1320                           	opt stack 27
  1321                           
  1322                           ;incstack = 0
  1323  001D9A  A2D0               	btfss	4048,1,c	;volatile
  1324  001D9C  D00E               	goto	l1469
  1325  001D9E  A4D0               	btfss	4048,2,c	;volatile
  1326  001DA0  D00A               	goto	l1465
  1327  001DA2  A0D0               	btfss	4048,0,c	;volatile
  1328  001DA4  D006               	goto	l1461
  1329  001DA6  A6D0               	btfss	4048,3,c	;volatile
  1330  001DA8  D002               	goto	l1457
  1331  001DAA  D003               	goto	l1461
  1332  001DAC  D008               	goto	l597
  1333  001DAE                     l1457:
  1334  001DAE  0E01               	movlw	1
  1335  001DB0  D006               	goto	l597
  1336  001DB2                     l1461:
  1337  001DB2  0E00               	movlw	0
  1338  001DB4  D004               	goto	l597
  1339  001DB6                     l1465:
  1340  001DB6  0E00               	movlw	0
  1341  001DB8  D002               	goto	l597
  1342  001DBA                     l1469:
  1343  001DBA  0E00               	movlw	0
  1344  001DBC  D000               	goto	l597
  1345  001DBE                     l597:
  1346  001DBE  0012               	return		;funcret
  1347  001DC0                     __end_of_isWDTTO:
  1348                           	opt stack 0
  1349                           stkptr	equ	0xFFC
  1350                           intcon	equ	0xFF2
  1351                           postinc0	equ	0xFEE
  1352                           wreg	equ	0xFE8
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _isPOR *****************
  1356 ;; Defined at:
  1357 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      unsigned char 
  1364 ;; Registers used:
  1365 ;;		wreg
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_reset_codes
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text7
  1386  001DC0                     __ptext7:
  1387                           	opt stack 0
  1388  001DC0                     _isPOR:
  1389                           	opt stack 27
  1390                           
  1391                           ;incstack = 0
  1392  001DC0  B2D0               	btfsc	4048,1,c	;volatile
  1393  001DC2  D00E               	goto	l1377
  1394  001DC4  A4D0               	btfss	4048,2,c	;volatile
  1395  001DC6  D00A               	goto	l1373
  1396  001DC8  B0D0               	btfsc	4048,0,c	;volatile
  1397  001DCA  D006               	goto	l1369
  1398  001DCC  B6D0               	btfsc	4048,3,c	;volatile
  1399  001DCE  D002               	goto	l1365
  1400  001DD0  D003               	goto	l1369
  1401  001DD2  D008               	goto	l588
  1402  001DD4                     l1365:
  1403  001DD4  0E01               	movlw	1
  1404  001DD6  D006               	goto	l588
  1405  001DD8                     l1369:
  1406  001DD8  0E00               	movlw	0
  1407  001DDA  D004               	goto	l588
  1408  001DDC                     l1373:
  1409  001DDC  0E00               	movlw	0
  1410  001DDE  D002               	goto	l588
  1411  001DE0                     l1377:
  1412  001DE0  0E00               	movlw	0
  1413  001DE2  D000               	goto	l588
  1414  001DE4                     l588:
  1415  001DE4  0012               	return		;funcret
  1416  001DE6                     __end_of_isPOR:
  1417                           	opt stack 0
  1418                           stkptr	equ	0xFFC
  1419                           intcon	equ	0xFF2
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _isBOR *****************
  1425 ;; Defined at:
  1426 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      unsigned char 
  1433 ;; Registers used:
  1434 ;;		wreg
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_reset_codes
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text8
  1455  001EF2                     __ptext8:
  1456                           	opt stack 0
  1457  001EF2                     _isBOR:
  1458                           	opt stack 27
  1459                           
  1460                           ;incstack = 0
  1461  001EF2  B0D0               	btfsc	4048,0,c	;volatile
  1462  001EF4  D006               	goto	l1425
  1463  001EF6  B2D0               	btfsc	4048,1,c	;volatile
  1464  001EF8  D002               	goto	l1421
  1465  001EFA  D003               	goto	l1425
  1466  001EFC  D004               	goto	l579
  1467  001EFE                     l1421:
  1468  001EFE  0E01               	movlw	1
  1469  001F00  D002               	goto	l579
  1470  001F02                     l1425:
  1471  001F02  0E00               	movlw	0
  1472  001F04  D000               	goto	l579
  1473  001F06                     l579:
  1474  001F06  0012               	return		;funcret
  1475  001F08                     __end_of_isBOR:
  1476                           	opt stack 0
  1477                           stkptr	equ	0xFFC
  1478                           intcon	equ	0xFF2
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _WDTtask *****************
  1484 ;; Defined at:
  1485 ;;		line 369 in file "../Robot Files/sumovore.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;		None               void
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    3
  1506 ;; This function calls:
  1507 ;;		_gtrap
  1508 ;;		_printf
  1509 ;; This function is called by:
  1510 ;;		_reset_codes
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text9
  1515  001E86                     __ptext9:
  1516                           	opt stack 0
  1517  001E86                     _WDTtask:
  1518                           	opt stack 25
  1519                           
  1520                           ;sumovore.c: 371: printf("<WDT TO>");
  1521                           
  1522                           ;incstack = 0
  1523  001E86  0E65               	movlw	low STR_4
  1524  001E88  6E0F               	movwf	printf@f,c
  1525  001E8A  0E10               	movlw	high STR_4
  1526  001E8C  6E10               	movwf	printf@f+1,c
  1527  001E8E  EC78  F00E         	call	_printf	;wreg free
  1528                           
  1529                           ;sumovore.c: 372: PORTDbits.RD0=!1;
  1530  001E92  9083               	bcf	3971,0,c	;volatile
  1531                           
  1532                           ;sumovore.c: 373: PORTDbits.RD1=!0;
  1533  001E94  8283               	bsf	3971,1,c	;volatile
  1534                           
  1535                           ;sumovore.c: 374: PORTDbits.RD2=!1;
  1536  001E96  9483               	bcf	3971,2,c	;volatile
  1537                           
  1538                           ;sumovore.c: 375: PORTDbits.RD3=!0;
  1539  001E98  8683               	bsf	3971,3,c	;volatile
  1540                           
  1541                           ;sumovore.c: 376: PORTDbits.RD4=!0;
  1542  001E9A  8883               	bsf	3971,4,c	;volatile
  1543                           
  1544                           ;sumovore.c: 377: gtrap();
  1545  001E9C  EC73  F00D         	call	_gtrap	;wreg free
  1546  001EA0  0012               	return		;funcret
  1547  001EA2                     __end_of_WDTtask:
  1548                           	opt stack 0
  1549                           stkptr	equ	0xFFC
  1550                           intcon	equ	0xFF2
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           status	equ	0xFD8
  1554                           
  1555 ;; *************** function _STKFULtask *****************
  1556 ;; Defined at:
  1557 ;;		line 388 in file "../Robot Files/sumovore.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;		None               void
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    3
  1578 ;; This function calls:
  1579 ;;		_gtrap
  1580 ;;		_printf
  1581 ;; This function is called by:
  1582 ;;		_reset_codes
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text10
  1587  001E68                     __ptext10:
  1588                           	opt stack 0
  1589  001E68                     _STKFULtask:
  1590                           	opt stack 25
  1591                           
  1592                           ;sumovore.c: 391: STKPTRbits.STKFUL = 0;
  1593                           
  1594                           ;incstack = 0
  1595  001E68  9EFC               	bcf	stkptr,7,c	;volatile
  1596                           
  1597                           ;sumovore.c: 392: printf("<STKFUL>");
  1598  001E6A  0E5C               	movlw	low STR_5
  1599  001E6C  6E0F               	movwf	printf@f,c
  1600  001E6E  0E10               	movlw	high STR_5
  1601  001E70  6E10               	movwf	printf@f+1,c
  1602  001E72  EC78  F00E         	call	_printf	;wreg free
  1603                           
  1604                           ;sumovore.c: 393: PORTDbits.RD0=!1;
  1605  001E76  9083               	bcf	3971,0,c	;volatile
  1606                           
  1607                           ;sumovore.c: 394: PORTDbits.RD1=!0;
  1608  001E78  8283               	bsf	3971,1,c	;volatile
  1609                           
  1610                           ;sumovore.c: 395: PORTDbits.RD2=!1;
  1611  001E7A  9483               	bcf	3971,2,c	;volatile
  1612                           
  1613                           ;sumovore.c: 396: PORTDbits.RD3=!0;
  1614  001E7C  8683               	bsf	3971,3,c	;volatile
  1615                           
  1616                           ;sumovore.c: 397: PORTDbits.RD4=!1;
  1617  001E7E  9883               	bcf	3971,4,c	;volatile
  1618                           
  1619                           ;sumovore.c: 398: gtrap();
  1620  001E80  EC73  F00D         	call	_gtrap	;wreg free
  1621  001E84  0012               	return		;funcret
  1622  001E86                     __end_of_STKFULtask:
  1623                           	opt stack 0
  1624                           stkptr	equ	0xFFC
  1625                           intcon	equ	0xFF2
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _RESETtask *****************
  1631 ;; Defined at:
  1632 ;;		line 404 in file "../Robot Files/sumovore.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;		None               void
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    3
  1653 ;; This function calls:
  1654 ;;		_gtrap
  1655 ;;		_printf
  1656 ;; This function is called by:
  1657 ;;		_reset_codes
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text11
  1662  001EA2                     __ptext11:
  1663                           	opt stack 0
  1664  001EA2                     _RESETtask:
  1665                           	opt stack 25
  1666                           
  1667                           ;sumovore.c: 407: printf(" <reset> ");
  1668                           
  1669                           ;incstack = 0
  1670  001EA2  0E52               	movlw	low STR_6
  1671  001EA4  6E0F               	movwf	printf@f,c
  1672  001EA6  0E10               	movlw	high STR_6
  1673  001EA8  6E10               	movwf	printf@f+1,c
  1674  001EAA  EC78  F00E         	call	_printf	;wreg free
  1675                           
  1676                           ;sumovore.c: 408: PORTDbits.RD0=!1;
  1677  001EAE  9083               	bcf	3971,0,c	;volatile
  1678                           
  1679                           ;sumovore.c: 409: PORTDbits.RD1=!0;
  1680  001EB0  8283               	bsf	3971,1,c	;volatile
  1681                           
  1682                           ;sumovore.c: 410: PORTDbits.RD2=!1;
  1683  001EB2  9483               	bcf	3971,2,c	;volatile
  1684                           
  1685                           ;sumovore.c: 411: PORTDbits.RD3=!1;
  1686  001EB4  9683               	bcf	3971,3,c	;volatile
  1687                           
  1688                           ;sumovore.c: 412: PORTDbits.RD4=!1;
  1689  001EB6  9883               	bcf	3971,4,c	;volatile
  1690                           
  1691                           ;sumovore.c: 413: gtrap();
  1692  001EB8  EC73  F00D         	call	_gtrap	;wreg free
  1693  001EBC  0012               	return		;funcret
  1694  001EBE                     __end_of_RESETtask:
  1695                           	opt stack 0
  1696                           stkptr	equ	0xFFC
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           status	equ	0xFD8
  1701                           
  1702 ;; *************** function _PORtask *****************
  1703 ;; Defined at:
  1704 ;;		line 306 in file "../Robot Files/sumovore.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  count2          4   23[COMRAM] unsigned long 
  1709 ;;  count1          4   19[COMRAM] unsigned long 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;		None               void
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;Total ram usage:        8 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    3
  1726 ;; This function calls:
  1727 ;;		_StatusReset
  1728 ;;		_printf
  1729 ;; This function is called by:
  1730 ;;		_reset_codes
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text12
  1735  0017A8                     __ptext12:
  1736                           	opt stack 0
  1737  0017A8                     _PORtask:
  1738                           	opt stack 25
  1739                           
  1740                           ;sumovore.c: 308: unsigned long count1=0, count2=0;
  1741                           
  1742                           ;incstack = 0
  1743  0017A8  0E00               	movlw	0
  1744  0017AA  6E14               	movwf	PORtask@count1,c
  1745  0017AC  0E00               	movlw	0
  1746  0017AE  6E15               	movwf	PORtask@count1+1,c
  1747  0017B0  0E00               	movlw	0
  1748  0017B2  6E16               	movwf	PORtask@count1+2,c
  1749  0017B4  0E00               	movlw	0
  1750  0017B6  6E17               	movwf	PORtask@count1+3,c
  1751  0017B8  0E00               	movlw	0
  1752  0017BA  6E18               	movwf	PORtask@count2,c
  1753  0017BC  0E00               	movlw	0
  1754  0017BE  6E19               	movwf	PORtask@count2+1,c
  1755  0017C0  0E00               	movlw	0
  1756  0017C2  6E1A               	movwf	PORtask@count2+2,c
  1757  0017C4  0E00               	movlw	0
  1758  0017C6  6E1B               	movwf	PORtask@count2+3,c
  1759                           
  1760                           ;sumovore.c: 309: StatusReset();
  1761  0017C8  ECC3  F00F         	call	_StatusReset	;wreg free
  1762                           
  1763                           ;sumovore.c: 311: printf("<POR>");
  1764  0017CC  0E7B               	movlw	low STR_2
  1765  0017CE  6E0F               	movwf	printf@f,c
  1766  0017D0  0E10               	movlw	high STR_2
  1767  0017D2  6E10               	movwf	printf@f+1,c
  1768  0017D4  EC78  F00E         	call	_printf	;wreg free
  1769                           
  1770                           ;sumovore.c: 312: PORTDbits.RD0=!1;
  1771  0017D8  9083               	bcf	3971,0,c	;volatile
  1772                           
  1773                           ;sumovore.c: 313: PORTDbits.RD1=!0;
  1774  0017DA  8283               	bsf	3971,1,c	;volatile
  1775                           
  1776                           ;sumovore.c: 314: PORTDbits.RD2=!0;
  1777  0017DC  8483               	bsf	3971,2,c	;volatile
  1778                           
  1779                           ;sumovore.c: 315: PORTDbits.RD3=!0;
  1780  0017DE  8683               	bsf	3971,3,c	;volatile
  1781                           
  1782                           ;sumovore.c: 316: PORTDbits.RD4=!0;
  1783  0017E0  8883               	bsf	3971,4,c	;volatile
  1784                           
  1785                           ;sumovore.c: 317: while(count1<10u)
  1786  0017E2  D02D               	goto	l345
  1787  0017E4                     l346:
  1788  0017E4  0004               	clrwdt		;# 
  1789                           
  1790                           ;sumovore.c: 320: if (count2==30000u)
  1791  0017E6  0E30               	movlw	48
  1792  0017E8  1818               	xorwf	PORtask@count2,w,c
  1793  0017EA  E117               	bnz	l2187
  1794  0017EC  0E75               	movlw	117
  1795  0017EE  1819               	xorwf	PORtask@count2+1,w,c
  1796  0017F0  101A               	iorwf	PORtask@count2+2,w,c
  1797  0017F2  101B               	iorwf	PORtask@count2+3,w,c
  1798  0017F4  A4D8               	btfss	status,2,c
  1799  0017F6  D011               	goto	l2187
  1800                           
  1801                           ;sumovore.c: 321: {
  1802                           ;sumovore.c: 322: count2=0;
  1803  0017F8  0E00               	movlw	0
  1804  0017FA  6E18               	movwf	PORtask@count2,c
  1805  0017FC  0E00               	movlw	0
  1806  0017FE  6E19               	movwf	PORtask@count2+1,c
  1807  001800  0E00               	movlw	0
  1808  001802  6E1A               	movwf	PORtask@count2+2,c
  1809  001804  0E00               	movlw	0
  1810  001806  6E1B               	movwf	PORtask@count2+3,c
  1811                           
  1812                           ;sumovore.c: 323: count1++;
  1813  001808  0E01               	movlw	1
  1814  00180A  2614               	addwf	PORtask@count1,f,c
  1815  00180C  0E00               	movlw	0
  1816  00180E  2215               	addwfc	PORtask@count1+1,f,c
  1817  001810  2216               	addwfc	PORtask@count1+2,f,c
  1818  001812  2217               	addwfc	PORtask@count1+3,f,c
  1819                           
  1820                           ;sumovore.c: 324: PORTDbits.RD0=!1;
  1821  001814  9083               	bcf	3971,0,c	;volatile
  1822                           
  1823                           ;sumovore.c: 325: PORTDbits.RD1=!0;
  1824  001816  8283               	bsf	3971,1,c	;volatile
  1825                           
  1826                           ;sumovore.c: 326: }
  1827  001818  D00C               	goto	l2191
  1828  00181A                     l2187:
  1829                           
  1830                           ;sumovore.c: 327: else if (count2==15000u)
  1831  00181A  0E98               	movlw	152
  1832  00181C  1818               	xorwf	PORtask@count2,w,c
  1833  00181E  E109               	bnz	l2191
  1834  001820  0E3A               	movlw	58
  1835  001822  1819               	xorwf	PORtask@count2+1,w,c
  1836  001824  101A               	iorwf	PORtask@count2+2,w,c
  1837  001826  101B               	iorwf	PORtask@count2+3,w,c
  1838  001828  A4D8               	btfss	status,2,c
  1839  00182A  D003               	goto	l2191
  1840                           
  1841                           ;sumovore.c: 328: {
  1842                           ;sumovore.c: 329: PORTDbits.RD0=!0;
  1843  00182C  8083               	bsf	3971,0,c	;volatile
  1844                           
  1845                           ;sumovore.c: 330: PORTDbits.RD1=!1;
  1846  00182E  9283               	bcf	3971,1,c	;volatile
  1847  001830  D000               	goto	l2191
  1848  001832                     l2191:
  1849                           
  1850                           ;sumovore.c: 331: }
  1851                           ;sumovore.c: 332: count2++;
  1852  001832  0E01               	movlw	1
  1853  001834  2618               	addwf	PORtask@count2,f,c
  1854  001836  0E00               	movlw	0
  1855  001838  2219               	addwfc	PORtask@count2+1,f,c
  1856  00183A  221A               	addwfc	PORtask@count2+2,f,c
  1857  00183C  221B               	addwfc	PORtask@count2+3,f,c
  1858  00183E                     l345:
  1859  00183E  5017               	movf	PORtask@count1+3,w,c
  1860  001840  1016               	iorwf	PORtask@count1+2,w,c
  1861  001842  1015               	iorwf	PORtask@count1+1,w,c
  1862  001844  E106               	bnz	l351
  1863  001846  0E0A               	movlw	10
  1864  001848  5C14               	subwf	PORtask@count1,w,c
  1865  00184A  B0D8               	btfsc	status,0,c
  1866  00184C  D002               	goto	l351
  1867  00184E  D7CA               	goto	l346
  1868  001850  D000               	goto	l351
  1869  001852                     l351:
  1870  001852  0012               	return		;funcret
  1871  001854                     __end_of_PORtask:
  1872                           	opt stack 0
  1873                           stkptr	equ	0xFFC
  1874                           intcon	equ	0xFF2
  1875                           postinc0	equ	0xFEE
  1876                           wreg	equ	0xFE8
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _BORtask *****************
  1880 ;; Defined at:
  1881 ;;		line 348 in file "../Robot Files/sumovore.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    3
  1902 ;; This function calls:
  1903 ;;		_StatusReset
  1904 ;;		_gtrap
  1905 ;;		_printf
  1906 ;; This function is called by:
  1907 ;;		_reset_codes
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text13
  1912  001E08                     __ptext13:
  1913                           	opt stack 0
  1914  001E08                     _BORtask:
  1915                           	opt stack 25
  1916                           
  1917                           ;sumovore.c: 350: StatusReset();
  1918                           
  1919                           ;incstack = 0
  1920  001E08  ECC3  F00F         	call	_StatusReset	;wreg free
  1921                           
  1922                           ;sumovore.c: 352: printf("<BOR>");
  1923  001E0C  0E75               	movlw	low STR_3
  1924  001E0E  6E0F               	movwf	printf@f,c
  1925  001E10  0E10               	movlw	high STR_3
  1926  001E12  6E10               	movwf	printf@f+1,c
  1927  001E14  EC78  F00E         	call	_printf	;wreg free
  1928                           
  1929                           ;sumovore.c: 353: PORTDbits.RD0=!0;
  1930  001E18  8083               	bsf	3971,0,c	;volatile
  1931                           
  1932                           ;sumovore.c: 354: PORTDbits.RD1=!0;
  1933  001E1A  8283               	bsf	3971,1,c	;volatile
  1934                           
  1935                           ;sumovore.c: 355: PORTDbits.RD2=!0;
  1936  001E1C  8483               	bsf	3971,2,c	;volatile
  1937                           
  1938                           ;sumovore.c: 356: PORTDbits.RD3=!0;
  1939  001E1E  8683               	bsf	3971,3,c	;volatile
  1940                           
  1941                           ;sumovore.c: 357: PORTDbits.RD4=!1;
  1942  001E20  9883               	bcf	3971,4,c	;volatile
  1943                           
  1944                           ;sumovore.c: 358: gtrap();
  1945  001E22  EC73  F00D         	call	_gtrap	;wreg free
  1946  001E26  0012               	return		;funcret
  1947  001E28                     __end_of_BORtask:
  1948                           	opt stack 0
  1949                           stkptr	equ	0xFFC
  1950                           intcon	equ	0xFF2
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _StatusReset *****************
  1956 ;; Defined at:
  1957 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;		None               void
  1964 ;; Registers used:
  1965 ;;		None
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_PORtask
  1982 ;;		_BORtask
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text14
  1987  001F86                     __ptext14:
  1988                           	opt stack 0
  1989  001F86                     _StatusReset:
  1990                           	opt stack 26
  1991                           
  1992                           ;incstack = 0
  1993  001F86  82D0               	bsf	4048,1,c	;volatile
  1994  001F88  80D0               	bsf	4048,0,c	;volatile
  1995  001F8A  0012               	return		;funcret
  1996  001F8C                     __end_of_StatusReset:
  1997                           	opt stack 0
  1998                           stkptr	equ	0xFFC
  1999                           intcon	equ	0xFF2
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _openPORTE *****************
  2005 ;; Defined at:
  2006 ;;		line 178 in file "../Robot Files/sumovore.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;		None               void
  2013 ;; Registers used:
  2014 ;;		wreg, status,2
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_initialization
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text15
  2035  001F8C                     __ptext15:
  2036                           	opt stack 0
  2037  001F8C                     _openPORTE:
  2038                           	opt stack 28
  2039                           
  2040                           ;sumovore.c: 180: TRISE = 0b000;
  2041                           
  2042                           ;incstack = 0
  2043  001F8C  0E00               	movlw	0
  2044  001F8E  6E96               	movwf	3990,c	;volatile
  2045  001F90  0012               	return		;funcret
  2046  001F92                     __end_of_openPORTE:
  2047                           	opt stack 0
  2048                           stkptr	equ	0xFFC
  2049                           intcon	equ	0xFF2
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function _openPORTCforUSART *****************
  2055 ;; Defined at:
  2056 ;;		line 124 in file "../Robot Files/sumovore.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;		None               void
  2063 ;; Registers used:
  2064 ;;		None
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_initialization
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text16
  2085  001F92                     __ptext16:
  2086                           	opt stack 0
  2087  001F92                     _openPORTCforUSART:
  2088                           	opt stack 28
  2089                           
  2090                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2091                           
  2092                           ;incstack = 0
  2093  001F92  9C94               	bcf	3988,6,c	;volatile
  2094                           
  2095                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2096  001F94  8E94               	bsf	3988,7,c	;volatile
  2097  001F96  0012               	return		;funcret
  2098  001F98                     __end_of_openPORTCforUSART:
  2099                           	opt stack 0
  2100                           stkptr	equ	0xFFC
  2101                           intcon	equ	0xFF2
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _openPORTCforPWM *****************
  2107 ;; Defined at:
  2108 ;;		line 133 in file "../Robot Files/sumovore.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		None
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_initialization
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text17
  2137  001F64                     __ptext17:
  2138                           	opt stack 0
  2139  001F64                     _openPORTCforPWM:
  2140                           	opt stack 28
  2141                           
  2142                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2143                           
  2144                           ;incstack = 0
  2145  001F64  9094               	bcf	3988,0,c	;volatile
  2146                           
  2147                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2148  001F66  9294               	bcf	3988,1,c	;volatile
  2149                           
  2150                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2151  001F68  9494               	bcf	3988,2,c	;volatile
  2152                           
  2153                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2154  001F6A  9694               	bcf	3988,3,c	;volatile
  2155                           
  2156                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2157  001F6C  9894               	bcf	3988,4,c	;volatile
  2158                           
  2159                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2160  001F6E  9A94               	bcf	3988,5,c	;volatile
  2161  001F70  0012               	return		;funcret
  2162  001F72                     __end_of_openPORTCforPWM:
  2163                           	opt stack 0
  2164                           stkptr	equ	0xFFC
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _openPORTB *****************
  2171 ;; Defined at:
  2172 ;;		line 158 in file "../Robot Files/sumovore.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;		None               void
  2179 ;; Registers used:
  2180 ;;		wreg, status,2
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;Total ram usage:        0 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_initialization
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text18
  2201  001F98                     __ptext18:
  2202                           	opt stack 0
  2203  001F98                     _openPORTB:
  2204                           	opt stack 28
  2205                           
  2206                           ;sumovore.c: 160: TRISB = 0B11000000;
  2207                           
  2208                           ;incstack = 0
  2209  001F98  0EC0               	movlw	192
  2210  001F9A  6E93               	movwf	3987,c	;volatile
  2211  001F9C  0012               	return		;funcret
  2212  001F9E                     __end_of_openPORTB:
  2213                           	opt stack 0
  2214                           stkptr	equ	0xFFC
  2215                           intcon	equ	0xFF2
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _openPORTA *****************
  2221 ;; Defined at:
  2222 ;;		line 147 in file "../Robot Files/sumovore.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, status,2
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_initialization
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text19
  2251  001F9E                     __ptext19:
  2252                           	opt stack 0
  2253  001F9E                     _openPORTA:
  2254                           	opt stack 28
  2255                           
  2256                           ;sumovore.c: 149: TRISA = 0B11101111;
  2257                           
  2258                           ;incstack = 0
  2259  001F9E  0EEF               	movlw	239
  2260  001FA0  6E92               	movwf	3986,c	;volatile
  2261  001FA2  0012               	return		;funcret
  2262  001FA4                     __end_of_openPORTA:
  2263                           	opt stack 0
  2264                           stkptr	equ	0xFFC
  2265                           intcon	equ	0xFF2
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _openLVD *****************
  2271 ;; Defined at:
  2272 ;;		line 427 in file "../Robot Files/sumovore.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		None
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_initialization
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text20
  2301  001EDA                     __ptext20:
  2302                           	opt stack 0
  2303  001EDA                     _openLVD:
  2304                           	opt stack 28
  2305                           
  2306                           ;sumovore.c: 429: RCONbits.IPEN = 1;
  2307                           
  2308                           ;incstack = 0
  2309  001EDA  8ED0               	bsf	4048,7,c	;volatile
  2310                           
  2311                           ;sumovore.c: 430: HLVDCONbits.HLVDEN = 1;
  2312  001EDC  88D2               	bsf	4050,4,c	;volatile
  2313                           
  2314                           ;sumovore.c: 432: IPR2bits.HLVDIP = 1;
  2315  001EDE  84A2               	bsf	4002,2,c	;volatile
  2316                           
  2317                           ;sumovore.c: 433: HLVDCONbits.VDIRMAG = 0;
  2318  001EE0  9ED2               	bcf	4050,7,c	;volatile
  2319                           
  2320                           ;sumovore.c: 435: HLVDCONbits.HLVDL3 = 1;
  2321  001EE2  86D2               	bsf	4050,3,c	;volatile
  2322                           
  2323                           ;sumovore.c: 436: HLVDCONbits.HLVDL2 = 1;
  2324  001EE4  84D2               	bsf	4050,2,c	;volatile
  2325                           
  2326                           ;sumovore.c: 437: HLVDCONbits.HLVDL1 = 1;
  2327  001EE6  82D2               	bsf	4050,1,c	;volatile
  2328                           
  2329                           ;sumovore.c: 438: HLVDCONbits.HLVDL0 = 0;
  2330  001EE8  90D2               	bcf	4050,0,c	;volatile
  2331                           
  2332                           ;sumovore.c: 439: PIR2bits.HLVDIF = 0;
  2333  001EEA  94A1               	bcf	4001,2,c	;volatile
  2334                           
  2335                           ;sumovore.c: 440: PIE2bits.HLVDIE = 1;
  2336  001EEC  84A0               	bsf	4000,2,c	;volatile
  2337                           
  2338                           ;sumovore.c: 441: INTCONbits.GIEH = 1;
  2339  001EEE  8EF2               	bsf	intcon,7,c	;volatile
  2340  001EF0  0012               	return		;funcret
  2341  001EF2                     __end_of_openLVD:
  2342                           	opt stack 0
  2343                           stkptr	equ	0xFFC
  2344                           intcon	equ	0xFF2
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _OpenUSART *****************
  2350 ;; Defined at:
  2351 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  config          1    wreg     unsigned char 
  2354 ;;  spbrg           2   14[COMRAM] unsigned int 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  config          1   16[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;		None               void
  2359 ;; Registers used:
  2360 ;;		wreg, status,2
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        3 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_initialization
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text21
  2381  001A76                     __ptext21:
  2382                           	opt stack 0
  2383  001A76                     _OpenUSART:
  2384                           	opt stack 28
  2385                           
  2386                           ;incstack = 0
  2387                           ;OpenUSART@config stored from wreg
  2388  001A76  6E11               	movwf	OpenUSART@config,c
  2389  001A78  0E00               	movlw	0
  2390  001A7A  6EAC               	movwf	4012,c	;volatile
  2391  001A7C  0E00               	movlw	0
  2392  001A7E  6EAB               	movwf	4011,c	;volatile
  2393  001A80  A011               	btfss	OpenUSART@config,0,c
  2394  001A82  D002               	goto	l2307
  2395  001A84  88AC               	bsf	4012,4,c	;volatile
  2396  001A86  D000               	goto	l2307
  2397  001A88                     l2307:
  2398  001A88  A211               	btfss	OpenUSART@config,1,c
  2399  001A8A  D003               	goto	l2311
  2400  001A8C  8CAC               	bsf	4012,6,c	;volatile
  2401  001A8E  8CAB               	bsf	4011,6,c	;volatile
  2402  001A90  D000               	goto	l2311
  2403  001A92                     l2311:
  2404  001A92  A411               	btfss	OpenUSART@config,2,c
  2405  001A94  D002               	goto	l2315
  2406  001A96  8EAC               	bsf	4012,7,c	;volatile
  2407  001A98  D000               	goto	l2315
  2408  001A9A                     l2315:
  2409  001A9A  A611               	btfss	OpenUSART@config,3,c
  2410  001A9C  D002               	goto	l563
  2411  001A9E  88AB               	bsf	4011,4,c	;volatile
  2412  001AA0  D002               	goto	l2319
  2413  001AA2                     l563:
  2414  001AA2  8AAB               	bsf	4011,5,c	;volatile
  2415  001AA4  D000               	goto	l2319
  2416  001AA6                     l2319:
  2417  001AA6  B811               	btfsc	OpenUSART@config,4,c
  2418  001AA8  84AC               	bsf	4012,2,c	;volatile
  2419  001AAA  989E               	bcf	3998,4,c	;volatile
  2420  001AAC  AA11               	btfss	OpenUSART@config,5,c
  2421  001AAE  D002               	goto	l2327
  2422  001AB0  86AB               	bsf	4011,3,c	;volatile
  2423  001AB2  D000               	goto	l2327
  2424  001AB4                     l2327:
  2425  001AB4  AC11               	btfss	OpenUSART@config,6,c
  2426  001AB6  D002               	goto	l567
  2427  001AB8  8A9D               	bsf	3997,5,c	;volatile
  2428  001ABA  D001               	goto	l568
  2429  001ABC                     l567:
  2430  001ABC  9A9D               	bcf	3997,5,c	;volatile
  2431  001ABE                     l568:
  2432  001ABE  9A9E               	bcf	3998,5,c	;volatile
  2433  001AC0  AE11               	btfss	OpenUSART@config,7,c
  2434  001AC2  D002               	goto	l569
  2435  001AC4  889D               	bsf	3997,4,c	;volatile
  2436  001AC6  D001               	goto	l570
  2437  001AC8                     l569:
  2438  001AC8  989D               	bcf	3997,4,c	;volatile
  2439  001ACA                     l570:
  2440  001ACA  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2441  001ACE  5010               	movf	OpenUSART@spbrg+1,w,c
  2442  001AD0  6EB0               	movwf	4016,c	;volatile
  2443  001AD2  8AAC               	bsf	4012,5,c	;volatile
  2444  001AD4  8EAB               	bsf	4011,7,c	;volatile
  2445  001AD6  9C94               	bcf	3988,6,c	;volatile
  2446  001AD8  8E94               	bsf	3988,7,c	;volatile
  2447  001ADA  B8AC               	btfsc	4012,4,c	;volatile
  2448  001ADC  BEAC               	btfsc	4012,7,c	;volatile
  2449  001ADE  D002               	goto	l572
  2450  001AE0  8C94               	bsf	3988,6,c	;volatile
  2451  001AE2  D000               	goto	l572
  2452  001AE4                     l572:
  2453  001AE4  0012               	return		;funcret
  2454  001AE6                     __end_of_OpenUSART:
  2455                           	opt stack 0
  2456                           stkptr	equ	0xFFC
  2457                           intcon	equ	0xFF2
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           status	equ	0xFD8
  2461                           
  2462 ;; *************** function _OpenTimer2 *****************
  2463 ;; Defined at:
  2464 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  config          1    wreg     unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  config          1   14[COMRAM] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;Total ram usage:        1 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_initialization
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text22
  2493  001EBE                     __ptext22:
  2494                           	opt stack 0
  2495  001EBE                     _OpenTimer2:
  2496                           	opt stack 28
  2497                           
  2498                           ;incstack = 0
  2499                           ;OpenTimer2@config stored from wreg
  2500  001EBE  6E0F               	movwf	OpenTimer2@config,c
  2501  001EC0  500F               	movf	OpenTimer2@config,w,c
  2502  001EC2  0BFB               	andlw	251
  2503  001EC4  6ECA               	movwf	4042,c	;volatile
  2504  001EC6  0E00               	movlw	0
  2505  001EC8  6ECC               	movwf	4044,c	;volatile
  2506  001ECA  929E               	bcf	3998,1,c	;volatile
  2507  001ECC  AE0F               	btfss	OpenTimer2@config,7,c
  2508  001ECE  D002               	goto	l537
  2509  001ED0  829D               	bsf	3997,1,c	;volatile
  2510  001ED2  D001               	goto	l538
  2511  001ED4                     l537:
  2512  001ED4  929D               	bcf	3997,1,c	;volatile
  2513  001ED6                     l538:
  2514  001ED6  84CA               	bsf	4042,2,c	;volatile
  2515  001ED8  0012               	return		;funcret
  2516  001EDA                     __end_of_OpenTimer2:
  2517                           	opt stack 0
  2518                           stkptr	equ	0xFFC
  2519                           intcon	equ	0xFF2
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _OpenPWM2 *****************
  2525 ;; Defined at:
  2526 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  period          1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  period          1   14[COMRAM] unsigned char 
  2531 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2532 ;;  pmmode          1    0        unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;		None               void
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        2 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_initialization
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text23
  2557  001CB8                     __ptext23:
  2558                           	opt stack 0
  2559  001CB8                     _OpenPWM2:
  2560                           	opt stack 28
  2561                           
  2562                           ;incstack = 0
  2563                           ;OpenPWM2@period stored from wreg
  2564  001CB8  6E0F               	movwf	OpenPWM2@period,c
  2565  001CBA  0E0C               	movlw	12
  2566  001CBC  6EBA               	movwf	4026,c	;volatile
  2567  001CBE  0E05               	movlw	5
  2568  001CC0  6EF6               	movwf	tblptrl,c
  2569  001CC2                     	if	1	;There is more than 1 active tblptr byte
  2570  001CC2  0E00               	movlw	0
  2571  001CC4  6EF7               	movwf	tblptrh,c
  2572  001CC6                     	endif
  2573  001CC6                     	if	1	;There are 3 active tblptr bytes
  2574  001CC6  0E30               	movlw	48
  2575  001CC8  6EF8               	movwf	tblptru,c
  2576  001CCA                     	endif
  2577  001CCA  0008               	tblrd		*
  2578  001CCC  0100               	movlb	12288	; () banked
  2579  001CCE  A0F5               	btfss	tablat,0,c
  2580  001CD0  D002               	goto	l1695
  2581                           
  2582                           ; BSR set to: 0
  2583  001CD2  6810               	setf	OpenPWM2@ccp2mx,c
  2584  001CD4  D002               	goto	l492
  2585  001CD6                     l1695:
  2586                           
  2587                           ; BSR set to: 0
  2588  001CD6  0E00               	movlw	0
  2589  001CD8  6E10               	movwf	OpenPWM2@ccp2mx,c
  2590  001CDA                     l492:
  2591                           
  2592                           ; BSR set to: 0
  2593  001CDA  5010               	movf	OpenPWM2@ccp2mx,w,c
  2594  001CDC  B4D8               	btfsc	status,2,c
  2595  001CDE  D002               	goto	l493
  2596                           
  2597                           ; BSR set to: 0
  2598  001CE0  9294               	bcf	3988,1,c	;volatile
  2599  001CE2  D001               	goto	l494
  2600  001CE4                     l493:
  2601                           
  2602                           ; BSR set to: 0
  2603  001CE4  9693               	bcf	3987,3,c	;volatile
  2604  001CE6                     l494:
  2605                           
  2606                           ; BSR set to: 0
  2607  001CE6  94CA               	bcf	4042,2,c	;volatile
  2608  001CE8  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2609  001CEC  84CA               	bsf	4042,2,c	;volatile
  2610                           
  2611                           ; BSR set to: 0
  2612  001CEE  0012               	return		;funcret
  2613  001CF0                     __end_of_OpenPWM2:
  2614                           	opt stack 0
  2615                           stkptr	equ	0xFFC
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           intcon	equ	0xFF2
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _OpenPWM1 *****************
  2626 ;; Defined at:
  2627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  period          1    wreg     unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  period          1   14[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;Total ram usage:        1 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_initialization
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text24
  2656  001F30                     __ptext24:
  2657                           	opt stack 0
  2658  001F30                     _OpenPWM1:
  2659                           	opt stack 28
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;incstack = 0
  2663                           ;OpenPWM1@period stored from wreg
  2664  001F30  6E0F               	movwf	OpenPWM1@period,c
  2665  001F32  0E0C               	movlw	12
  2666  001F34  12BD               	iorwf	4029,f,c	;volatile
  2667  001F36  9494               	bcf	3988,2,c	;volatile
  2668  001F38  94CA               	bcf	4042,2,c	;volatile
  2669  001F3A  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2670  001F3E  84CA               	bsf	4042,2,c	;volatile
  2671  001F40  0012               	return		;funcret
  2672  001F42                     __end_of_OpenPWM1:
  2673                           	opt stack 0
  2674                           stkptr	equ	0xFFC
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           intcon	equ	0xFF2
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _OpenADC *****************
  2685 ;; Defined at:
  2686 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  config          1    wreg     unsigned char 
  2689 ;;  config2         1   14[COMRAM] unsigned char 
  2690 ;;  portconfig      1   15[COMRAM] unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  config          1   18[COMRAM] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;		None               void
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;Total ram usage:        5 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_initialization
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text25
  2717  001B48                     __ptext25:
  2718                           	opt stack 0
  2719  001B48                     _OpenADC:
  2720                           	opt stack 28
  2721                           
  2722                           ;incstack = 0
  2723                           ;OpenADC@config stored from wreg
  2724  001B48  6E13               	movwf	OpenADC@config,c
  2725  001B4A  0E00               	movlw	0
  2726  001B4C  6EC2               	movwf	4034,c	;volatile
  2727  001B4E  0E00               	movlw	0
  2728  001B50  6EC0               	movwf	4032,c	;volatile
  2729  001B52  90D8               	bcf	status,0,c
  2730  001B54  300F               	rrcf	OpenADC@config2,w,c
  2731  001B56  0B3C               	andlw	60
  2732  001B58  6EC2               	movwf	4034,c	;volatile
  2733  001B5A  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2734  001B5E  3A11               	swapf	??_OpenADC,f,c
  2735  001B60  0EF0               	movlw	240
  2736  001B62  1611               	andwf	??_OpenADC,f,c
  2737  001B64  0E30               	movlw	48
  2738  001B66  1611               	andwf	??_OpenADC,f,c
  2739  001B68  5010               	movf	OpenADC@portconfig,w,c
  2740  001B6A  0B0F               	andlw	15
  2741  001B6C  1011               	iorwf	??_OpenADC,w,c
  2742  001B6E  6EC1               	movwf	4033,c	;volatile
  2743  001B70  C013  F011         	movff	OpenADC@config,??_OpenADC
  2744  001B74  90D8               	bcf	status,0,c
  2745  001B76  3611               	rlcf	??_OpenADC,f,c
  2746  001B78  90D8               	bcf	status,0,c
  2747  001B7A  3611               	rlcf	??_OpenADC,f,c
  2748  001B7C  0E38               	movlw	56
  2749  001B7E  1611               	andwf	??_OpenADC,f,c
  2750  001B80  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2751  001B84  3A12               	swapf	??_OpenADC+1,f,c
  2752  001B86  0E0F               	movlw	15
  2753  001B88  1612               	andwf	??_OpenADC+1,f,c
  2754  001B8A  0E07               	movlw	7
  2755  001B8C  1612               	andwf	??_OpenADC+1,f,c
  2756  001B8E  5013               	movf	OpenADC@config,w,c
  2757  001B90  0B80               	andlw	128
  2758  001B92  1012               	iorwf	??_OpenADC+1,w,c
  2759  001B94  1011               	iorwf	??_OpenADC,w,c
  2760  001B96  6EC0               	movwf	4032,c	;volatile
  2761  001B98  AE0F               	btfss	OpenADC@config2,7,c
  2762  001B9A  D003               	goto	l444
  2763  001B9C  9C9E               	bcf	3998,6,c	;volatile
  2764  001B9E  8C9D               	bsf	3997,6,c	;volatile
  2765  001BA0  8CF2               	bsf	intcon,6,c	;volatile
  2766  001BA2                     l444:
  2767  001BA2  80C2               	bsf	4034,0,c	;volatile
  2768  001BA4  0012               	return		;funcret
  2769  001BA6                     __end_of_OpenADC:
  2770                           	opt stack 0
  2771                           stkptr	equ	0xFFC
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           intcon	equ	0xFF2
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _check_sensors *****************
  2782 ;; Defined at:
  2783 ;;		line 241 in file "../Robot Files/sumovore.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    3
  2804 ;; This function calls:
  2805 ;;		_adc
  2806 ;; This function is called by:
  2807 ;;		_main
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text26
  2812  0016E4                     __ptext26:
  2813                           	opt stack 0
  2814  0016E4                     _check_sensors:
  2815                           	opt stack 27
  2816                           
  2817                           ;sumovore.c: 243: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  2818                           
  2819                           ;incstack = 0
  2820  0016E4  0E87               	movlw	135
  2821  0016E6  ECA5  F00E         	call	_adc
  2822  0016EA  5013               	movf	?_adc,w,c
  2823  0016EC  5C38               	subwf	_threshold,w,c
  2824  0016EE  5014               	movf	?_adc+1,w,c
  2825  0016F0  5839               	subwfb	_threshold+1,w,c
  2826  0016F2  B0D8               	btfsc	status,0,c
  2827  0016F4  D003               	goto	u1880
  2828  0016F6  6A16               	clrf	??_check_sensors& (0+255),c
  2829  0016F8  2A16               	incf	??_check_sensors& (0+255),f,c
  2830  0016FA  D001               	goto	u1898
  2831  0016FC                     u1880:
  2832  0016FC  6A16               	clrf	??_check_sensors& (0+255),c
  2833  0016FE                     u1898:
  2834  0016FE  3A16               	swapf	??_check_sensors,f,c
  2835  001700  503D               	movf	_SeeLine,w,c
  2836  001702  1816               	xorwf	??_check_sensors,w,c
  2837  001704  0BEF               	andlw	-17
  2838  001706  1816               	xorwf	??_check_sensors,w,c
  2839  001708  6E3D               	movwf	_SeeLine,c
  2840                           
  2841                           ;sumovore.c: 244: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  2842  00170A  0E8F               	movlw	143
  2843  00170C  ECA5  F00E         	call	_adc
  2844  001710  5013               	movf	?_adc,w,c
  2845  001712  5C38               	subwf	_threshold,w,c
  2846  001714  5014               	movf	?_adc+1,w,c
  2847  001716  5839               	subwfb	_threshold+1,w,c
  2848  001718  B0D8               	btfsc	status,0,c
  2849  00171A  D003               	goto	u1900
  2850  00171C  6A16               	clrf	??_check_sensors& (0+255),c
  2851  00171E  2A16               	incf	??_check_sensors& (0+255),f,c
  2852  001720  D001               	goto	u1918
  2853  001722                     u1900:
  2854  001722  6A16               	clrf	??_check_sensors& (0+255),c
  2855  001724                     u1918:
  2856  001724  4616               	rlncf	??_check_sensors,f,c
  2857  001726  4616               	rlncf	??_check_sensors,f,c
  2858  001728  4616               	rlncf	??_check_sensors,f,c
  2859  00172A  503D               	movf	_SeeLine,w,c
  2860  00172C  1816               	xorwf	??_check_sensors,w,c
  2861  00172E  0BF7               	andlw	-9
  2862  001730  1816               	xorwf	??_check_sensors,w,c
  2863  001732  6E3D               	movwf	_SeeLine,c
  2864                           
  2865                           ;sumovore.c: 245: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  2866  001734  0E97               	movlw	151
  2867  001736  ECA5  F00E         	call	_adc
  2868  00173A  5013               	movf	?_adc,w,c
  2869  00173C  5C38               	subwf	_threshold,w,c
  2870  00173E  5014               	movf	?_adc+1,w,c
  2871  001740  5839               	subwfb	_threshold+1,w,c
  2872  001742  B0D8               	btfsc	status,0,c
  2873  001744  D003               	goto	u1920
  2874  001746  6A16               	clrf	??_check_sensors& (0+255),c
  2875  001748  2A16               	incf	??_check_sensors& (0+255),f,c
  2876  00174A  D001               	goto	u1938
  2877  00174C                     u1920:
  2878  00174C  6A16               	clrf	??_check_sensors& (0+255),c
  2879  00174E                     u1938:
  2880  00174E  4616               	rlncf	??_check_sensors,f,c
  2881  001750  4616               	rlncf	??_check_sensors,f,c
  2882  001752  503D               	movf	_SeeLine,w,c
  2883  001754  1816               	xorwf	??_check_sensors,w,c
  2884  001756  0BFB               	andlw	-5
  2885  001758  1816               	xorwf	??_check_sensors,w,c
  2886  00175A  6E3D               	movwf	_SeeLine,c
  2887                           
  2888                           ;sumovore.c: 246: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  2889  00175C  0E9F               	movlw	159
  2890  00175E  ECA5  F00E         	call	_adc
  2891  001762  5013               	movf	?_adc,w,c
  2892  001764  5C38               	subwf	_threshold,w,c
  2893  001766  5014               	movf	?_adc+1,w,c
  2894  001768  5839               	subwfb	_threshold+1,w,c
  2895  00176A  B0D8               	btfsc	status,0,c
  2896  00176C  D003               	goto	u1940
  2897  00176E  6A16               	clrf	??_check_sensors& (0+255),c
  2898  001770  2A16               	incf	??_check_sensors& (0+255),f,c
  2899  001772  D001               	goto	u1958
  2900  001774                     u1940:
  2901  001774  6A16               	clrf	??_check_sensors& (0+255),c
  2902  001776                     u1958:
  2903  001776  4616               	rlncf	??_check_sensors,f,c
  2904  001778  503D               	movf	_SeeLine,w,c
  2905  00177A  1816               	xorwf	??_check_sensors,w,c
  2906  00177C  0BFD               	andlw	-3
  2907  00177E  1816               	xorwf	??_check_sensors,w,c
  2908  001780  6E3D               	movwf	_SeeLine,c
  2909                           
  2910                           ;sumovore.c: 247: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  2911  001782  0EA7               	movlw	167
  2912  001784  ECA5  F00E         	call	_adc
  2913  001788  5013               	movf	?_adc,w,c
  2914  00178A  5C38               	subwf	_threshold,w,c
  2915  00178C  5014               	movf	?_adc+1,w,c
  2916  00178E  5839               	subwfb	_threshold+1,w,c
  2917  001790  B0D8               	btfsc	status,0,c
  2918  001792  D003               	goto	u1960
  2919  001794  6A16               	clrf	??_check_sensors& (0+255),c
  2920  001796  2A16               	incf	??_check_sensors& (0+255),f,c
  2921  001798  D001               	goto	u1978
  2922  00179A                     u1960:
  2923  00179A  6A16               	clrf	??_check_sensors& (0+255),c
  2924  00179C                     u1978:
  2925  00179C  503D               	movf	_SeeLine,w,c
  2926  00179E  1816               	xorwf	??_check_sensors,w,c
  2927  0017A0  0BFE               	andlw	-2
  2928  0017A2  1816               	xorwf	??_check_sensors,w,c
  2929  0017A4  6E3D               	movwf	_SeeLine,c
  2930  0017A6  0012               	return		;funcret
  2931  0017A8                     __end_of_check_sensors:
  2932                           	opt stack 0
  2933                           stkptr	equ	0xFFC
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           status	equ	0xFD8
  2942                           
  2943 ;; *************** function _adc *****************
  2944 ;; Defined at:
  2945 ;;		line 229 in file "../Robot Files/sumovore.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  channel         1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  channel         1   20[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  2   18[COMRAM] unsigned int 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;Total ram usage:        3 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    2
  2966 ;; This function calls:
  2967 ;;		_BusyADC
  2968 ;;		_ConvertADC
  2969 ;;		_ReadADC
  2970 ;;		_SetChanADC
  2971 ;; This function is called by:
  2972 ;;		_check_sensors
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text27
  2977  001D4A                     __ptext27:
  2978                           	opt stack 0
  2979  001D4A                     _adc:
  2980                           	opt stack 27
  2981                           
  2982                           ;incstack = 0
  2983                           ;adc@channel stored from wreg
  2984  001D4A  6E15               	movwf	adc@channel,c
  2985                           
  2986                           ;sumovore.c: 231: SetChanADC( channel );
  2987  001D4C  5015               	movf	adc@channel,w,c
  2988  001D4E  EC84  F00F         	call	_SetChanADC
  2989                           
  2990                           ;sumovore.c: 232: ConvertADC();
  2991  001D52  ECD5  F00F         	call	_ConvertADC	;wreg free
  2992                           
  2993                           ;sumovore.c: 233: while( BusyADC() );
  2994  001D56  D000               	goto	l2383
  2995  001D58                     l2383:
  2996  001D58  ECB9  F00F         	call	_BusyADC	;wreg free
  2997  001D5C  0900               	iorlw	0
  2998  001D5E  A4D8               	btfss	status,2,c
  2999  001D60  D7FB               	goto	l2383
  3000                           
  3001                           ;sumovore.c: 235: return ReadADC();
  3002  001D62  ECAA  F00F         	call	_ReadADC	;wreg free
  3003  001D66  C00F  F013         	movff	?_ReadADC,?_adc
  3004  001D6A  C010  F014         	movff	?_ReadADC+1,?_adc+1
  3005  001D6E  D000               	goto	l325
  3006  001D70                     l325:
  3007  001D70  0012               	return		;funcret
  3008  001D72                     __end_of_adc:
  3009                           	opt stack 0
  3010                           stkptr	equ	0xFFC
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _SetChanADC *****************
  3021 ;; Defined at:
  3022 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  channel         1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  channel         1   15[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        2 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_adc
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text28
  3051  001F08                     __ptext28:
  3052                           	opt stack 0
  3053  001F08                     _SetChanADC:
  3054                           	opt stack 27
  3055                           
  3056                           ;incstack = 0
  3057                           ;SetChanADC@channel stored from wreg
  3058  001F08  6E10               	movwf	SetChanADC@channel,c
  3059  001F0A  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  3060  001F0E  0EC3               	movlw	195
  3061  001F10  160F               	andwf	??_SetChanADC,f,c
  3062  001F12  90D8               	bcf	status,0,c
  3063  001F14  3010               	rrcf	SetChanADC@channel,w,c
  3064  001F16  0B3C               	andlw	60
  3065  001F18  100F               	iorwf	??_SetChanADC,w,c
  3066  001F1A  6EC2               	movwf	4034,c	;volatile
  3067  001F1C  0012               	return		;funcret
  3068  001F1E                     __end_of_SetChanADC:
  3069                           	opt stack 0
  3070                           stkptr	equ	0xFFC
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           intcon	equ	0xFF2
  3076                           postinc0	equ	0xFEE
  3077                           wreg	equ	0xFE8
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _ReadADC *****************
  3081 ;; Defined at:
  3082 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2   14[COMRAM] int 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;Total ram usage:        4 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_adc
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text29
  3111  001F54                     __ptext29:
  3112                           	opt stack 0
  3113  001F54                     _ReadADC:
  3114                           	opt stack 27
  3115                           
  3116                           ;incstack = 0
  3117  001F54  50C4               	movf	4036,w,c	;volatile
  3118  001F56  6E11               	movwf	??_ReadADC& (0+255),c
  3119  001F58  50C3               	movf	4035,w,c	;volatile
  3120  001F5A  6E0F               	movwf	?_ReadADC,c
  3121  001F5C  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  3122  001F60  D000               	goto	l452
  3123  001F62                     l452:
  3124  001F62  0012               	return		;funcret
  3125  001F64                     __end_of_ReadADC:
  3126                           	opt stack 0
  3127                           stkptr	equ	0xFFC
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           intcon	equ	0xFF2
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           status	equ	0xFD8
  3136                           
  3137 ;; *************** function _ConvertADC *****************
  3138 ;; Defined at:
  3139 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		None
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;Total ram usage:        0 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_adc
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text30
  3168  001FAA                     __ptext30:
  3169                           	opt stack 0
  3170  001FAA                     _ConvertADC:
  3171                           	opt stack 27
  3172                           
  3173                           ;incstack = 0
  3174  001FAA  82C2               	bsf	4034,1,c	;volatile
  3175  001FAC  0012               	return		;funcret
  3176  001FAE                     __end_of_ConvertADC:
  3177                           	opt stack 0
  3178                           stkptr	equ	0xFFC
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           intcon	equ	0xFF2
  3184                           postinc0	equ	0xFEE
  3185                           wreg	equ	0xFE8
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _BusyADC *****************
  3189 ;; Defined at:
  3190 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_adc
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text31
  3219  001F72                     __ptext31:
  3220                           	opt stack 0
  3221  001F72                     _BusyADC:
  3222                           	opt stack 27
  3223                           
  3224                           ;incstack = 0
  3225  001F72  A2C2               	btfss	4034,1,c	;volatile
  3226  001F74  D002               	goto	u230
  3227  001F76  0E01               	movlw	1
  3228  001F78  D002               	goto	l422
  3229  001F7A                     u230:
  3230  001F7A  0E00               	movlw	0
  3231  001F7C  D000               	goto	l422
  3232  001F7E                     l422:
  3233  001F7E  0012               	return		;funcret
  3234  001F80                     __end_of_BusyADC:
  3235                           	opt stack 0
  3236                           stkptr	equ	0xFFC
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           intcon	equ	0xFF2
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _WriteTimer0 *****************
  3247 ;; Defined at:
  3248 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  timer0          2   14[COMRAM] unsigned int 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  timer           2   16[COMRAM] struct Timers
  3253 ;; Return value:  Size  Location     Type
  3254 ;;		None               void
  3255 ;; Registers used:
  3256 ;;		None
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;Total ram usage:        4 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text32
  3277  001F42                     __ptext32:
  3278                           	opt stack 0
  3279  001F42                     _WriteTimer0:
  3280                           	opt stack 29
  3281                           
  3282                           ;incstack = 0
  3283  001F42  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3284  001F46  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3285  001F4A  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3286  001F4E  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3287  001F52  0012               	return		;funcret
  3288  001F54                     __end_of_WriteTimer0:
  3289                           	opt stack 0
  3290                           stkptr	equ	0xFFC
  3291                           tblptru	equ	0xFF8
  3292                           tblptrh	equ	0xFF7
  3293                           tblptrl	equ	0xFF6
  3294                           tablat	equ	0xFF5
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function _PID_LineFollowing *****************
  3301 ;; Defined at:
  3302 ;;		line 83 in file "../Robot Files/main.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  error           2   37[COMRAM] PTR char 
  3305 ;;		 -> main@error(2), 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;		None               void
  3310 ;; Registers used:
  3311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;Total ram usage:        5 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    3
  3324 ;; This function calls:
  3325 ;;		_MotorControl
  3326 ;;		___awdiv
  3327 ;;		___lwdiv
  3328 ;;		___wmul
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text33
  3335  001082                     __ptext33:
  3336                           	opt stack 0
  3337  001082                     _PID_LineFollowing:
  3338                           	opt stack 27
  3339                           
  3340                           ;main.c: 85: static int delta_velocity;
  3341                           ;main.c: 86: static char P = 0;
  3342                           ;main.c: 88: static int D = 0;
  3343                           ;main.c: 91: P = error[1];
  3344                           
  3345                           ;incstack = 0
  3346  001082  EE20 F001          	lfsr	2,1
  3347  001086  5026               	movf	PID_LineFollowing@error,w,c
  3348  001088  26D9               	addwf	fsr2l,f,c
  3349  00108A  5027               	movf	PID_LineFollowing@error+1,w,c
  3350  00108C  22DA               	addwfc	fsr2h,f,c
  3351  00108E  50DF               	movf	indf2,w,c
  3352  001090  6E3C               	movwf	PID_LineFollowing@P,c
  3353                           
  3354                           ;main.c: 94: if (TMR0IF)
  3355  001092  A4F2               	btfss	intcon,2,c	;volatile
  3356  001094  D07A               	goto	l2539
  3357                           
  3358                           ;main.c: 95: {
  3359                           ;main.c: 96: flag_count++;
  3360  001096  4A36               	infsnz	_flag_count,f,c
  3361  001098  2A37               	incf	_flag_count+1,f,c
  3362                           
  3363                           ;main.c: 97: TMR0IF = 0;
  3364  00109A  94F2               	bcf	intcon,2,c	;volatile
  3365                           
  3366                           ;main.c: 98: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=1600
      +                           && error[1]<0) || (delta_velocity<=-1600 && error[1]>0))
  3367  00109C  BE33               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3368  00109E  D006               	goto	l2515
  3369  0010A0  0E40               	movlw	64
  3370  0010A2  5C32               	subwf	PID_LineFollowing@delta_velocity,w,c
  3371  0010A4  0E06               	movlw	6
  3372  0010A6  5833               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3373  0010A8  B0D8               	btfsc	status,0,c
  3374  0010AA  D008               	goto	l2517
  3375  0010AC                     l2515:
  3376  0010AC  BE33               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3377  0010AE  D006               	goto	l2517
  3378  0010B0  0E41               	movlw	65
  3379  0010B2  5C32               	subwf	PID_LineFollowing@delta_velocity,w,c
  3380  0010B4  0E06               	movlw	6
  3381  0010B6  5833               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3382  0010B8  B0D8               	btfsc	status,0,c
  3383  0010BA  D024               	goto	l2525
  3384  0010BC                     l2517:
  3385  0010BC  BE33               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  3386  0010BE  D00F               	goto	l2521
  3387  0010C0  0E40               	movlw	64
  3388  0010C2  5C32               	subwf	PID_LineFollowing@delta_velocity,w,c
  3389  0010C4  0E06               	movlw	6
  3390  0010C6  5833               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3391  0010C8  A0D8               	btfss	status,0,c
  3392  0010CA  D009               	goto	l2521
  3393  0010CC  EE20 F001          	lfsr	2,1
  3394  0010D0  5026               	movf	PID_LineFollowing@error,w,c
  3395  0010D2  26D9               	addwf	fsr2l,f,c
  3396  0010D4  5027               	movf	PID_LineFollowing@error+1,w,c
  3397  0010D6  22DA               	addwfc	fsr2h,f,c
  3398  0010D8  0E00               	movlw	0
  3399  0010DA  BEDB               	btfsc	plusw2,7,c
  3400  0010DC  D013               	goto	l2525
  3401  0010DE                     l2521:
  3402  0010DE  AE33               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  3403  0010E0  D054               	goto	l2539
  3404  0010E2  0EC1               	movlw	193
  3405  0010E4  5C32               	subwf	PID_LineFollowing@delta_velocity,w,c
  3406  0010E6  0EF9               	movlw	249
  3407  0010E8  5833               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  3408  0010EA  B0D8               	btfsc	status,0,c
  3409  0010EC  D04E               	goto	l2539
  3410  0010EE  EE20 F001          	lfsr	2,1
  3411  0010F2  5026               	movf	PID_LineFollowing@error,w,c
  3412  0010F4  26D9               	addwf	fsr2l,f,c
  3413  0010F6  5027               	movf	PID_LineFollowing@error+1,w,c
  3414  0010F8  22DA               	addwfc	fsr2h,f,c
  3415  0010FA  50DF               	movf	indf2,w,c
  3416  0010FC  0A80               	xorlw	128
  3417  0010FE  0F7F               	addlw	-129
  3418  001100  A0D8               	btfss	status,0,c
  3419  001102  D043               	goto	l2539
  3420  001104                     l2525:
  3421                           
  3422                           ;main.c: 100: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[1]<0) || (I<=-3274 && erro
      +                          r[1]>0))
  3423  001104  BE35               	btfsc	_I+1,7,c
  3424  001106  D006               	goto	l2527
  3425  001108  0EC9               	movlw	201
  3426  00110A  5C34               	subwf	_I,w,c
  3427  00110C  0E0C               	movlw	12
  3428  00110E  5835               	subwfb	_I+1,w,c
  3429  001110  B0D8               	btfsc	status,0,c
  3430  001112  D008               	goto	l2529
  3431  001114                     l2527:
  3432  001114  AE35               	btfss	_I+1,7,c
  3433  001116  D02A               	goto	l2537
  3434  001118  0E37               	movlw	55
  3435  00111A  5C34               	subwf	_I,w,c
  3436  00111C  0EF3               	movlw	243
  3437  00111E  5835               	subwfb	_I+1,w,c
  3438  001120  B0D8               	btfsc	status,0,c
  3439  001122  D024               	goto	l2537
  3440  001124                     l2529:
  3441  001124  BE35               	btfsc	_I+1,7,c
  3442  001126  D00F               	goto	l2533
  3443  001128  0EC9               	movlw	201
  3444  00112A  5C34               	subwf	_I,w,c
  3445  00112C  0E0C               	movlw	12
  3446  00112E  5835               	subwfb	_I+1,w,c
  3447  001130  A0D8               	btfss	status,0,c
  3448  001132  D009               	goto	l2533
  3449  001134  EE20 F001          	lfsr	2,1
  3450  001138  5026               	movf	PID_LineFollowing@error,w,c
  3451  00113A  26D9               	addwf	fsr2l,f,c
  3452  00113C  5027               	movf	PID_LineFollowing@error+1,w,c
  3453  00113E  22DA               	addwfc	fsr2h,f,c
  3454  001140  0E00               	movlw	0
  3455  001142  BEDB               	btfsc	plusw2,7,c
  3456  001144  D013               	goto	l2537
  3457  001146                     l2533:
  3458  001146  AE35               	btfss	_I+1,7,c
  3459  001148  D020               	goto	l2539
  3460  00114A  0E37               	movlw	55
  3461  00114C  5C34               	subwf	_I,w,c
  3462  00114E  0EF3               	movlw	243
  3463  001150  5835               	subwfb	_I+1,w,c
  3464  001152  B0D8               	btfsc	status,0,c
  3465  001154  D01A               	goto	l2539
  3466  001156  EE20 F001          	lfsr	2,1
  3467  00115A  5026               	movf	PID_LineFollowing@error,w,c
  3468  00115C  26D9               	addwf	fsr2l,f,c
  3469  00115E  5027               	movf	PID_LineFollowing@error+1,w,c
  3470  001160  22DA               	addwfc	fsr2h,f,c
  3471  001162  50DF               	movf	indf2,w,c
  3472  001164  0A80               	xorlw	128
  3473  001166  0F7F               	addlw	-129
  3474  001168  A0D8               	btfss	status,0,c
  3475  00116A  D00F               	goto	l2539
  3476  00116C                     l2537:
  3477                           
  3478                           ;main.c: 102: I += error[1];
  3479  00116C  EE20 F001          	lfsr	2,1
  3480  001170  5026               	movf	PID_LineFollowing@error,w,c
  3481  001172  26D9               	addwf	fsr2l,f,c
  3482  001174  5027               	movf	PID_LineFollowing@error+1,w,c
  3483  001176  22DA               	addwfc	fsr2h,f,c
  3484  001178  50DF               	movf	indf2,w,c
  3485  00117A  6E28               	movwf	??_PID_LineFollowing& (0+255),c
  3486  00117C  5028               	movf	??_PID_LineFollowing,w,c
  3487  00117E  2634               	addwf	_I,f,c
  3488  001180  0E00               	movlw	0
  3489  001182  BE28               	btfsc	??_PID_LineFollowing,7,c
  3490  001184  0EFF               	movlw	255
  3491  001186  2235               	addwfc	_I+1,f,c
  3492  001188  D000               	goto	l2539
  3493  00118A                     l2539:
  3494                           
  3495                           ;main.c: 103: }
  3496                           ;main.c: 106: if((error[0]!=error[1]) || flag_count >= 7813)
  3497  00118A  EE20 F001          	lfsr	2,1
  3498  00118E  5026               	movf	PID_LineFollowing@error,w,c
  3499  001190  26D9               	addwf	fsr2l,f,c
  3500  001192  5027               	movf	PID_LineFollowing@error+1,w,c
  3501  001194  22DA               	addwfc	fsr2h,f,c
  3502  001196  C026  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3503  00119A  C027  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3504  00119E  50DE               	movf	postinc2,w,c
  3505  0011A0  18E6               	xorwf	postinc1,w,c
  3506  0011A2  A4D8               	btfss	status,2,c
  3507  0011A4  D006               	goto	l2543
  3508  0011A6  0E85               	movlw	133
  3509  0011A8  5C36               	subwf	_flag_count,w,c
  3510  0011AA  0E1E               	movlw	30
  3511  0011AC  5837               	subwfb	_flag_count+1,w,c
  3512  0011AE  A0D8               	btfss	status,0,c
  3513  0011B0  D041               	goto	l2549
  3514  0011B2                     l2543:
  3515                           
  3516                           ;main.c: 107: {
  3517                           ;main.c: 108: D = (error[1]-error[0])*32767/flag_count;
  3518  0011B2  C026  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3519  0011B6  C027  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3520  0011BA  50DF               	movf	indf2,w,c
  3521  0011BC  6E28               	movwf	??_PID_LineFollowing& (0+255),c
  3522  0011BE  6A29               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3523  0011C0  BE28               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3524  0011C2  0629               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3525  0011C4  1E28               	comf	??_PID_LineFollowing,f,c
  3526  0011C6  1E29               	comf	??_PID_LineFollowing+1,f,c
  3527  0011C8  4A28               	infsnz	??_PID_LineFollowing,f,c
  3528  0011CA  2A29               	incf	??_PID_LineFollowing+1,f,c
  3529  0011CC  EE20 F001          	lfsr	2,1
  3530  0011D0  5026               	movf	PID_LineFollowing@error,w,c
  3531  0011D2  26D9               	addwf	fsr2l,f,c
  3532  0011D4  5027               	movf	PID_LineFollowing@error+1,w,c
  3533  0011D6  22DA               	addwfc	fsr2h,f,c
  3534  0011D8  50DF               	movf	indf2,w,c
  3535  0011DA  6E2A               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3536  0011DC  5028               	movf	??_PID_LineFollowing,w,c
  3537  0011DE  242A               	addwf	??_PID_LineFollowing+2,w,c
  3538  0011E0  6E0F               	movwf	___wmul@multiplier,c
  3539  0011E2  0E00               	movlw	0
  3540  0011E4  BE2A               	btfsc	??_PID_LineFollowing+2,7,c
  3541  0011E6  0EFF               	movlw	255
  3542  0011E8  2029               	addwfc	??_PID_LineFollowing+1,w,c
  3543  0011EA  6E10               	movwf	___wmul@multiplier+1,c
  3544  0011EC  0E7F               	movlw	127
  3545  0011EE  6E12               	movwf	___wmul@multiplicand+1,c
  3546  0011F0  6811               	setf	___wmul@multiplicand,c
  3547  0011F2  ECB9  F00E         	call	___wmul	;wreg free
  3548  0011F6  C00F  F015         	movff	?___wmul,___lwdiv@dividend
  3549  0011FA  C010  F016         	movff	?___wmul+1,___lwdiv@dividend+1
  3550  0011FE  C036  F017         	movff	_flag_count,___lwdiv@divisor
  3551  001202  C037  F018         	movff	_flag_count+1,___lwdiv@divisor+1
  3552  001206  ECD3  F00D         	call	___lwdiv	;wreg free
  3553  00120A  C015  F030         	movff	?___lwdiv,PID_LineFollowing@D
  3554  00120E  C016  F031         	movff	?___lwdiv+1,PID_LineFollowing@D+1
  3555                           
  3556                           ;main.c: 109: flag_count = 0;
  3557  001212  0E00               	movlw	0
  3558  001214  6E37               	movwf	_flag_count+1,c
  3559  001216  0E00               	movlw	0
  3560  001218  6E36               	movwf	_flag_count,c
  3561                           
  3562                           ;main.c: 110: error[0]=error[1];
  3563  00121A  EE20 F001          	lfsr	2,1
  3564  00121E  5026               	movf	PID_LineFollowing@error,w,c
  3565  001220  26D9               	addwf	fsr2l,f,c
  3566  001222  5027               	movf	PID_LineFollowing@error+1,w,c
  3567  001224  22DA               	addwfc	fsr2h,f,c
  3568  001226  C026  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3569  00122A  C027  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3570  00122E  CFDF FFE7          	movff	indf2,indf1
  3571  001232  D000               	goto	l2549
  3572  001234                     l2549:
  3573                           
  3574                           ;main.c: 111: }
  3575                           ;main.c: 114: delta_velocity = P_CONSTANT*P + I/I_CONSTANT + D/D_CONSTANT;
  3576  001234  C034  F015         	movff	_I,___awdiv@dividend
  3577  001238  C035  F016         	movff	_I+1,___awdiv@dividend+1
  3578  00123C  0E10               	movlw	low _I_CONSTANT
  3579  00123E  6EF6               	movwf	tblptrl,c
  3580  001240                     	if	1	;There is more than 1 active tblptr byte
  3581  001240  0E10               	movlw	high _I_CONSTANT
  3582  001242  6EF7               	movwf	tblptrh,c
  3583  001244                     	endif
  3584  001244                     	if	1	;There are 3 active tblptr bytes
  3585  001244  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  3586  001246  6EF8               	movwf	tblptru,c
  3587  001248                     	endif
  3588  001248  0008               	tblrd		*
  3589  00124A  50F5               	movf	tablat,w,c
  3590  00124C  6E17               	movwf	___awdiv@divisor,c
  3591  00124E  6A18               	clrf	___awdiv@divisor+1,c
  3592  001250  EC2A  F00C         	call	___awdiv	;wreg free
  3593  001254  0E11               	movlw	low _P_CONSTANT
  3594  001256  6EF6               	movwf	tblptrl,c
  3595  001258                     	if	1	;There is more than 1 active tblptr byte
  3596  001258  0E10               	movlw	high _P_CONSTANT
  3597  00125A  6EF7               	movwf	tblptrh,c
  3598  00125C                     	endif
  3599  00125C                     	if	1	;There are 3 active tblptr bytes
  3600  00125C  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3601  00125E  6EF8               	movwf	tblptru,c
  3602  001260                     	endif
  3603  001260  0008               	tblrd		*
  3604  001262  50F5               	movf	tablat,w,c
  3605  001264  023C               	mulwf	PID_LineFollowing@P,c
  3606  001266  5015               	movf	?___awdiv,w,c
  3607  001268  26F3               	addwf	prodl,f,c
  3608  00126A  5016               	movf	?___awdiv+1,w,c
  3609  00126C  22F4               	addwfc	prodh,f,c
  3610  00126E  C030  F015         	movff	PID_LineFollowing@D,___awdiv@dividend
  3611  001272  C031  F016         	movff	PID_LineFollowing@D+1,___awdiv@dividend+1
  3612  001276  0E0F               	movlw	low _D_CONSTANT
  3613  001278  6EF6               	movwf	tblptrl,c
  3614  00127A                     	if	1	;There is more than 1 active tblptr byte
  3615  00127A  0E10               	movlw	high _D_CONSTANT
  3616  00127C  6EF7               	movwf	tblptrh,c
  3617  00127E                     	endif
  3618  00127E                     	if	1	;There are 3 active tblptr bytes
  3619  00127E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3620  001280  6EF8               	movwf	tblptru,c
  3621  001282                     	endif
  3622  001282  0008               	tblrd		*
  3623  001284  50F5               	movf	tablat,w,c
  3624  001286  6E17               	movwf	___awdiv@divisor,c
  3625  001288  6A18               	clrf	___awdiv@divisor+1,c
  3626  00128A  EC2A  F00C         	call	___awdiv	;wreg free
  3627  00128E  5015               	movf	?___awdiv,w,c
  3628  001290  24F3               	addwf	prodl,w,c
  3629  001292  6E32               	movwf	PID_LineFollowing@delta_velocity,c
  3630  001294  5016               	movf	?___awdiv+1,w,c
  3631  001296  20F4               	addwfc	prodh,w,c
  3632  001298  6E33               	movwf	PID_LineFollowing@delta_velocity+1,c
  3633                           
  3634                           ;main.c: 116: MotorControl(delta_velocity);
  3635  00129A  C032  F01D         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3636  00129E  C033  F01E         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3637  0012A2  EC54  F009         	call	_MotorControl	;wreg free
  3638  0012A6  0012               	return		;funcret
  3639  0012A8                     __end_of_PID_LineFollowing:
  3640                           	opt stack 0
  3641                           stkptr	equ	0xFFC
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           prodh	equ	0xFF4
  3647                           prodl	equ	0xFF3
  3648                           intcon	equ	0xFF2
  3649                           postinc0	equ	0xFEE
  3650                           wreg	equ	0xFE8
  3651                           indf1	equ	0xFE7
  3652                           postinc1	equ	0xFE6
  3653                           fsr1h	equ	0xFE2
  3654                           fsr1l	equ	0xFE1
  3655                           indf2	equ	0xFDF
  3656                           postinc2	equ	0xFDE
  3657                           plusw2	equ	0xFDB
  3658                           fsr2h	equ	0xFDA
  3659                           fsr2l	equ	0xFD9
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function ___lwdiv *****************
  3663 ;; Defined at:
  3664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  dividend        2   20[COMRAM] unsigned int 
  3667 ;;  divisor         2   22[COMRAM] unsigned int 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  quotient        2   24[COMRAM] unsigned int 
  3670 ;;  counter         1   26[COMRAM] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2   20[COMRAM] unsigned int 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;Total ram usage:        7 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_PID_LineFollowing
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text34
  3695  001BA6                     __ptext34:
  3696                           	opt stack 0
  3697  001BA6                     ___lwdiv:
  3698                           	opt stack 28
  3699                           
  3700                           ;incstack = 0
  3701  001BA6  0E00               	movlw	0
  3702  001BA8  6E1A               	movwf	___lwdiv@quotient+1,c
  3703  001BAA  0E00               	movlw	0
  3704  001BAC  6E19               	movwf	___lwdiv@quotient,c
  3705  001BAE  5017               	movf	___lwdiv@divisor,w,c
  3706  001BB0  1018               	iorwf	___lwdiv@divisor+1,w,c
  3707  001BB2  B4D8               	btfsc	status,2,c
  3708  001BB4  D021               	goto	l1123
  3709  001BB6  0E01               	movlw	1
  3710  001BB8  6E1B               	movwf	___lwdiv@counter,c
  3711  001BBA  D005               	goto	l2397
  3712  001BBC                     l2395:
  3713  001BBC  90D8               	bcf	status,0,c
  3714  001BBE  3617               	rlcf	___lwdiv@divisor,f,c
  3715  001BC0  3618               	rlcf	___lwdiv@divisor+1,f,c
  3716  001BC2  2A1B               	incf	___lwdiv@counter,f,c
  3717  001BC4  D000               	goto	l2397
  3718  001BC6                     l2397:
  3719  001BC6  BE18               	btfsc	___lwdiv@divisor+1,7,c
  3720  001BC8  D002               	goto	l2399
  3721  001BCA  D7F8               	goto	l2395
  3722  001BCC  D000               	goto	l2399
  3723  001BCE                     l2399:
  3724  001BCE  90D8               	bcf	status,0,c
  3725  001BD0  3619               	rlcf	___lwdiv@quotient,f,c
  3726  001BD2  361A               	rlcf	___lwdiv@quotient+1,f,c
  3727  001BD4  5017               	movf	___lwdiv@divisor,w,c
  3728  001BD6  5C15               	subwf	___lwdiv@dividend,w,c
  3729  001BD8  5018               	movf	___lwdiv@divisor+1,w,c
  3730  001BDA  5816               	subwfb	___lwdiv@dividend+1,w,c
  3731  001BDC  A0D8               	btfss	status,0,c
  3732  001BDE  D006               	goto	l2407
  3733  001BE0  5017               	movf	___lwdiv@divisor,w,c
  3734  001BE2  5E15               	subwf	___lwdiv@dividend,f,c
  3735  001BE4  5018               	movf	___lwdiv@divisor+1,w,c
  3736  001BE6  5A16               	subwfb	___lwdiv@dividend+1,f,c
  3737  001BE8  8019               	bsf	___lwdiv@quotient,0,c
  3738  001BEA  D000               	goto	l2407
  3739  001BEC                     l2407:
  3740  001BEC  90D8               	bcf	status,0,c
  3741  001BEE  3218               	rrcf	___lwdiv@divisor+1,f,c
  3742  001BF0  3217               	rrcf	___lwdiv@divisor,f,c
  3743  001BF2  2E1B               	decfsz	___lwdiv@counter,f,c
  3744  001BF4  D7EC               	goto	l2399
  3745  001BF6  D000               	goto	l1123
  3746  001BF8                     l1123:
  3747  001BF8  C019  F015         	movff	___lwdiv@quotient,?___lwdiv
  3748  001BFC  C01A  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3749  001C00  0012               	return		;funcret
  3750  001C02                     __end_of___lwdiv:
  3751                           	opt stack 0
  3752                           stkptr	equ	0xFFC
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           prodh	equ	0xFF4
  3758                           prodl	equ	0xFF3
  3759                           intcon	equ	0xFF2
  3760                           postinc0	equ	0xFEE
  3761                           wreg	equ	0xFE8
  3762                           indf1	equ	0xFE7
  3763                           postinc1	equ	0xFE6
  3764                           fsr1h	equ	0xFE2
  3765                           fsr1l	equ	0xFE1
  3766                           indf2	equ	0xFDF
  3767                           postinc2	equ	0xFDE
  3768                           plusw2	equ	0xFDB
  3769                           fsr2h	equ	0xFDA
  3770                           fsr2l	equ	0xFD9
  3771                           status	equ	0xFD8
  3772                           
  3773 ;; *************** function _OpenTimer0 *****************
  3774 ;; Defined at:
  3775 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  config          1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  config          1   14[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;		None               void
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_main
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text35
  3804  001E28                     __ptext35:
  3805                           	opt stack 0
  3806  001E28                     _OpenTimer0:
  3807                           	opt stack 29
  3808                           
  3809                           ;incstack = 0
  3810                           ;OpenTimer0@config stored from wreg
  3811  001E28  6E0F               	movwf	OpenTimer0@config,c
  3812  001E2A  500F               	movf	OpenTimer0@config,w,c
  3813  001E2C  0B7F               	andlw	127
  3814  001E2E  6ED5               	movwf	4053,c	;volatile
  3815  001E30  0E00               	movlw	0
  3816  001E32  6ED7               	movwf	4055,c	;volatile
  3817  001E34  0E00               	movlw	0
  3818  001E36  6ED6               	movwf	4054,c	;volatile
  3819  001E38  94F2               	bcf	intcon,2,c	;volatile
  3820  001E3A  AE0F               	btfss	OpenTimer0@config,7,c
  3821  001E3C  D002               	goto	l515
  3822  001E3E  8AF2               	bsf	intcon,5,c	;volatile
  3823  001E40  D001               	goto	l516
  3824  001E42                     l515:
  3825  001E42  9AF2               	bcf	intcon,5,c	;volatile
  3826  001E44                     l516:
  3827  001E44  8ED5               	bsf	4053,7,c	;volatile
  3828  001E46  0012               	return		;funcret
  3829  001E48                     __end_of_OpenTimer0:
  3830                           	opt stack 0
  3831                           stkptr	equ	0xFFC
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           indf1	equ	0xFE7
  3842                           postinc1	equ	0xFE6
  3843                           fsr1h	equ	0xFE2
  3844                           fsr1l	equ	0xFE1
  3845                           indf2	equ	0xFDF
  3846                           postinc2	equ	0xFDE
  3847                           plusw2	equ	0xFDB
  3848                           fsr2h	equ	0xFDA
  3849                           fsr2l	equ	0xFD9
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _LVtrap *****************
  3853 ;; Defined at:
  3854 ;;		line 448 in file "../Robot Files/sumovore.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;		None               void
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    3
  3875 ;; This function calls:
  3876 ;;		_gtrap
  3877 ;;		_openPORTD
  3878 ;;		_printf
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text36
  3885  001E48                     __ptext36:
  3886                           	opt stack 0
  3887  001E48                     _LVtrap:
  3888                           	opt stack 27
  3889                           
  3890                           ;sumovore.c: 450: printf("\\<LVD>");
  3891                           
  3892                           ;incstack = 0
  3893  001E48  0E6E               	movlw	low STR_7
  3894  001E4A  6E0F               	movwf	printf@f,c
  3895  001E4C  0E10               	movlw	high STR_7
  3896  001E4E  6E10               	movwf	printf@f+1,c
  3897  001E50  EC78  F00E         	call	_printf	;wreg free
  3898                           
  3899                           ;sumovore.c: 451: openPORTD();
  3900  001E54  ECD2  F00F         	call	_openPORTD	;wreg free
  3901                           
  3902                           ;sumovore.c: 452: PORTDbits.RD0=!1;
  3903  001E58  9083               	bcf	3971,0,c	;volatile
  3904                           
  3905                           ;sumovore.c: 453: PORTDbits.RD1=!0;
  3906  001E5A  8283               	bsf	3971,1,c	;volatile
  3907                           
  3908                           ;sumovore.c: 454: PORTDbits.RD2=!0;
  3909  001E5C  8483               	bsf	3971,2,c	;volatile
  3910                           
  3911                           ;sumovore.c: 455: PORTDbits.RD3=!1;
  3912  001E5E  9683               	bcf	3971,3,c	;volatile
  3913                           
  3914                           ;sumovore.c: 456: PORTDbits.RD4=!0;
  3915  001E60  8883               	bsf	3971,4,c	;volatile
  3916                           
  3917                           ;sumovore.c: 457: gtrap();
  3918  001E62  EC73  F00D         	call	_gtrap	;wreg free
  3919  001E66  0012               	return		;funcret
  3920  001E68                     __end_of_LVtrap:
  3921                           	opt stack 0
  3922                           stkptr	equ	0xFFC
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodh	equ	0xFF4
  3928                           prodl	equ	0xFF3
  3929                           intcon	equ	0xFF2
  3930                           postinc0	equ	0xFEE
  3931                           wreg	equ	0xFE8
  3932                           indf1	equ	0xFE7
  3933                           postinc1	equ	0xFE6
  3934                           fsr1h	equ	0xFE2
  3935                           fsr1l	equ	0xFE1
  3936                           indf2	equ	0xFDF
  3937                           postinc2	equ	0xFDE
  3938                           plusw2	equ	0xFDB
  3939                           fsr2h	equ	0xFDA
  3940                           fsr2l	equ	0xFD9
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function _printf *****************
  3944 ;; Defined at:
  3945 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3948 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3949 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  tmpval          4    0        struct .
  3952 ;;  cp              3    0        PTR const unsigned char 
  3953 ;;  ap              2   16[COMRAM] PTR void [1]
  3954 ;;		 -> ?_printf(2), 
  3955 ;;  len             2    0        unsigned int 
  3956 ;;  val             2    0        unsigned int 
  3957 ;;  c               1   18[COMRAM] char 
  3958 ;;  flag            1    0        unsigned char 
  3959 ;;  prec            1    0        char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2   14[COMRAM] int 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;Total ram usage:        5 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    2
  3976 ;; This function calls:
  3977 ;;		_putch
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;;		_PORtask
  3981 ;;		_BORtask
  3982 ;;		_WDTtask
  3983 ;;		_STKFULtask
  3984 ;;		_RESETtask
  3985 ;;		_LVtrap
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text37
  3990  001CF0                     __ptext37:
  3991                           	opt stack 0
  3992  001CF0                     _printf:
  3993                           	opt stack 28
  3994                           
  3995                           ;doprnt.c: 466: va_list ap;
  3996                           ;doprnt.c: 499: signed char c;
  3997                           ;doprnt.c: 506: signed char prec;
  3998                           ;doprnt.c: 508: unsigned char flag;
  3999                           ;doprnt.c: 523: union {
  4000                           ;doprnt.c: 524: unsigned long vd;
  4001                           ;doprnt.c: 525: double integ;
  4002                           ;doprnt.c: 526: } tmpval;
  4003                           ;doprnt.c: 528: unsigned int val;
  4004                           ;doprnt.c: 529: unsigned len;
  4005                           ;doprnt.c: 530: const char * cp;
  4006                           ;doprnt.c: 533: *ap = __va_start();
  4007                           
  4008                           ;incstack = 0
  4009  001CF0  0E11               	movlw	low (?_printf+2)
  4010  001CF2  6E11               	movwf	printf@ap,c
  4011  001CF4  0E00               	movlw	high (?_printf+2)
  4012  001CF6  6E12               	movwf	printf@ap+1,c
  4013                           
  4014                           ;doprnt.c: 536: while(c = *f++) {
  4015  001CF8  D004               	goto	l2041
  4016  001CFA                     l2039:
  4017                           
  4018                           ;doprnt.c: 540: {
  4019                           ;doprnt.c: 541: (putch(c) );
  4020  001CFA  5013               	movf	printf@c,w,c
  4021  001CFC  ECD7  F00F         	call	_putch
  4022                           
  4023                           ;doprnt.c: 542: continue;
  4024  001D00  D000               	goto	l2041
  4025  001D02                     l2041:
  4026  001D02  C00F  FFF6         	movff	printf@f,tblptrl
  4027  001D06  C010  FFF7         	movff	printf@f+1,tblptrh
  4028  001D0A  4A0F               	infsnz	printf@f,f,c
  4029  001D0C  2A10               	incf	printf@f+1,f,c
  4030  001D0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4031  001D0E  6AF8               	clrf	tblptru,c
  4032  001D10                     	endif
  4033  001D10                     	if	0	;tblptru may be non-zero
  4034  001D10                     	endif
  4035  001D10  0008               	tblrd		*
  4036  001D12  CFF5 F013          	movff	tablat,printf@c
  4037  001D16  5013               	movf	printf@c,w,c
  4038  001D18  A4D8               	btfss	status,2,c
  4039  001D1A  D7EF               	goto	l2039
  4040                           
  4041                           ;doprnt.c: 1469: }
  4042                           ;doprnt.c: 1533: }
  4043                           ;doprnt.c: 1540: return 0;
  4044                           ;	Return value of _printf is never used
  4045  001D1C  0012               	return		;funcret
  4046  001D1E                     __end_of_printf:
  4047                           	opt stack 0
  4048                           stkptr	equ	0xFFC
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           postinc0	equ	0xFEE
  4057                           wreg	equ	0xFE8
  4058                           indf1	equ	0xFE7
  4059                           postinc1	equ	0xFE6
  4060                           fsr1h	equ	0xFE2
  4061                           fsr1l	equ	0xFE1
  4062                           indf2	equ	0xFDF
  4063                           postinc2	equ	0xFDE
  4064                           plusw2	equ	0xFDB
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           status	equ	0xFD8
  4068                           
  4069 ;; *************** function _putch *****************
  4070 ;; Defined at:
  4071 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  c               1    wreg     unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  c               1    0[COMRAM] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;		None               void
  4078 ;; Registers used:
  4079 ;;		wreg
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_printf
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text38
  4100  001FAE                     __ptext38:
  4101                           	opt stack 0
  4102  001FAE                     _putch:
  4103                           	opt stack 28
  4104                           
  4105                           ;incstack = 0
  4106  001FAE  0012               	return		;funcret
  4107  001FB0                     __end_of_putch:
  4108                           	opt stack 0
  4109                           stkptr	equ	0xFFC
  4110                           tblptru	equ	0xFF8
  4111                           tblptrh	equ	0xFF7
  4112                           tblptrl	equ	0xFF6
  4113                           tablat	equ	0xFF5
  4114                           prodh	equ	0xFF4
  4115                           prodl	equ	0xFF3
  4116                           intcon	equ	0xFF2
  4117                           postinc0	equ	0xFEE
  4118                           wreg	equ	0xFE8
  4119                           indf1	equ	0xFE7
  4120                           postinc1	equ	0xFE6
  4121                           fsr1h	equ	0xFE2
  4122                           fsr1l	equ	0xFE1
  4123                           indf2	equ	0xFDF
  4124                           postinc2	equ	0xFDE
  4125                           plusw2	equ	0xFDB
  4126                           fsr2h	equ	0xFDA
  4127                           fsr2l	equ	0xFD9
  4128                           status	equ	0xFD8
  4129                           
  4130 ;; *************** function _openPORTD *****************
  4131 ;; Defined at:
  4132 ;;		line 168 in file "../Robot Files/sumovore.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;		None               void
  4139 ;; Registers used:
  4140 ;;		wreg, status,2
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;Total ram usage:        0 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    1
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_initialization
  4157 ;;		_LVtrap
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text39
  4162  001FA4                     __ptext39:
  4163                           	opt stack 0
  4164  001FA4                     _openPORTD:
  4165                           	opt stack 28
  4166                           
  4167                           ;sumovore.c: 170: TRISD = 0b01100000;
  4168                           
  4169                           ;incstack = 0
  4170  001FA4  0E60               	movlw	96
  4171  001FA6  6E95               	movwf	3989,c	;volatile
  4172  001FA8  0012               	return		;funcret
  4173  001FAA                     __end_of_openPORTD:
  4174                           	opt stack 0
  4175                           stkptr	equ	0xFFC
  4176                           tblptru	equ	0xFF8
  4177                           tblptrh	equ	0xFF7
  4178                           tblptrl	equ	0xFF6
  4179                           tablat	equ	0xFF5
  4180                           prodh	equ	0xFF4
  4181                           prodl	equ	0xFF3
  4182                           intcon	equ	0xFF2
  4183                           postinc0	equ	0xFEE
  4184                           wreg	equ	0xFE8
  4185                           indf1	equ	0xFE7
  4186                           postinc1	equ	0xFE6
  4187                           fsr1h	equ	0xFE2
  4188                           fsr1l	equ	0xFE1
  4189                           indf2	equ	0xFDF
  4190                           postinc2	equ	0xFDE
  4191                           plusw2	equ	0xFDB
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _gtrap *****************
  4197 ;; Defined at:
  4198 ;;		line 463 in file "../Robot Files/sumovore.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  count           4   14[COMRAM] unsigned long 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;		None               void
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;Total ram usage:        4 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_BORtask
  4223 ;;		_WDTtask
  4224 ;;		_STKFULtask
  4225 ;;		_RESETtask
  4226 ;;		_LVtrap
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text40
  4231  001AE6                     __ptext40:
  4232                           	opt stack 0
  4233  001AE6                     _gtrap:
  4234                           	opt stack 26
  4235                           
  4236                           ;sumovore.c: 465: unsigned long count=0;
  4237                           
  4238                           ;incstack = 0
  4239  001AE6  0E00               	movlw	0
  4240  001AE8  6E0F               	movwf	gtrap@count,c
  4241  001AEA  0E00               	movlw	0
  4242  001AEC  6E10               	movwf	gtrap@count+1,c
  4243  001AEE  0E00               	movlw	0
  4244  001AF0  6E11               	movwf	gtrap@count+2,c
  4245  001AF2  0E00               	movlw	0
  4246  001AF4  6E12               	movwf	gtrap@count+3,c
  4247  001AF6                     l372:
  4248  001AF6  0004               	clrwdt		;# 
  4249                           
  4250                           ;sumovore.c: 470: if (count==30000u)
  4251  001AF8  0E30               	movlw	48
  4252  001AFA  180F               	xorwf	gtrap@count,w,c
  4253  001AFC  E111               	bnz	l1229
  4254  001AFE  0E75               	movlw	117
  4255  001B00  1810               	xorwf	gtrap@count+1,w,c
  4256  001B02  1011               	iorwf	gtrap@count+2,w,c
  4257  001B04  1012               	iorwf	gtrap@count+3,w,c
  4258  001B06  A4D8               	btfss	status,2,c
  4259  001B08  D00B               	goto	l1229
  4260                           
  4261                           ;sumovore.c: 471: {
  4262                           ;sumovore.c: 472: count=0;
  4263  001B0A  0E00               	movlw	0
  4264  001B0C  6E0F               	movwf	gtrap@count,c
  4265  001B0E  0E00               	movlw	0
  4266  001B10  6E10               	movwf	gtrap@count+1,c
  4267  001B12  0E00               	movlw	0
  4268  001B14  6E11               	movwf	gtrap@count+2,c
  4269  001B16  0E00               	movlw	0
  4270  001B18  6E12               	movwf	gtrap@count+3,c
  4271                           
  4272                           ;sumovore.c: 473: PORTDbits.RD0=!1;
  4273  001B1A  9083               	bcf	3971,0,c	;volatile
  4274                           
  4275                           ;sumovore.c: 474: PORTDbits.RD1=!0;
  4276  001B1C  8283               	bsf	3971,1,c	;volatile
  4277                           
  4278                           ;sumovore.c: 475: }
  4279  001B1E  D00C               	goto	l1233
  4280  001B20                     l1229:
  4281                           
  4282                           ;sumovore.c: 476: else if (count==15000u)
  4283  001B20  0E98               	movlw	152
  4284  001B22  180F               	xorwf	gtrap@count,w,c
  4285  001B24  E109               	bnz	l1233
  4286  001B26  0E3A               	movlw	58
  4287  001B28  1810               	xorwf	gtrap@count+1,w,c
  4288  001B2A  1011               	iorwf	gtrap@count+2,w,c
  4289  001B2C  1012               	iorwf	gtrap@count+3,w,c
  4290  001B2E  A4D8               	btfss	status,2,c
  4291  001B30  D003               	goto	l1233
  4292                           
  4293                           ;sumovore.c: 477: {
  4294                           ;sumovore.c: 478: PORTDbits.RD0=!0;
  4295  001B32  8083               	bsf	3971,0,c	;volatile
  4296                           
  4297                           ;sumovore.c: 479: PORTDbits.RD1=!1;
  4298  001B34  9283               	bcf	3971,1,c	;volatile
  4299  001B36  D000               	goto	l1233
  4300  001B38                     l1233:
  4301                           
  4302                           ;sumovore.c: 480: }
  4303                           ;sumovore.c: 481: count++;
  4304  001B38  0E01               	movlw	1
  4305  001B3A  260F               	addwf	gtrap@count,f,c
  4306  001B3C  0E00               	movlw	0
  4307  001B3E  2210               	addwfc	gtrap@count+1,f,c
  4308  001B40  2211               	addwfc	gtrap@count+2,f,c
  4309  001B42  2212               	addwfc	gtrap@count+3,f,c
  4310  001B44  D7D8               	goto	l372
  4311  001B46  0012               	return		;funcret
  4312  001B48                     __end_of_gtrap:
  4313                           	opt stack 0
  4314                           stkptr	equ	0xFFC
  4315                           tblptru	equ	0xFF8
  4316                           tblptrh	equ	0xFF7
  4317                           tblptrl	equ	0xFF6
  4318                           tablat	equ	0xFF5
  4319                           prodh	equ	0xFF4
  4320                           prodl	equ	0xFF3
  4321                           intcon	equ	0xFF2
  4322                           postinc0	equ	0xFEE
  4323                           wreg	equ	0xFE8
  4324                           indf1	equ	0xFE7
  4325                           postinc1	equ	0xFE6
  4326                           fsr1h	equ	0xFE2
  4327                           fsr1l	equ	0xFE1
  4328                           indf2	equ	0xFDF
  4329                           postinc2	equ	0xFDE
  4330                           plusw2	equ	0xFDB
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _GetBackonTrack *****************
  4336 ;; Defined at:
  4337 ;;		line 215 in file "../Robot Files/main.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  last_error      1    wreg     char 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  last_error      1   43[COMRAM] char 
  4342 ;;  i               1   44[COMRAM] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;		None               void
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;Total ram usage:        3 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    4
  4359 ;; This function calls:
  4360 ;;		_MotorControl
  4361 ;;		_SharpTurn
  4362 ;;		_motors_brake_all
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text41
  4369  00161E                     __ptext41:
  4370                           	opt stack 0
  4371  00161E                     _GetBackonTrack:
  4372                           	opt stack 26
  4373                           
  4374                           ;incstack = 0
  4375                           ;GetBackonTrack@last_error stored from wreg
  4376  00161E  6E2C               	movwf	GetBackonTrack@last_error,c
  4377                           
  4378                           ;main.c: 217: if(last_error>1)
  4379  001620  502C               	movf	GetBackonTrack@last_error,w,c
  4380  001622  0A80               	xorlw	128
  4381  001624  0F7E               	addlw	-130
  4382  001626  A0D8               	btfss	status,0,c
  4383  001628  D004               	goto	l2465
  4384                           
  4385                           ;main.c: 218: SharpTurn(1);
  4386  00162A  0E01               	movlw	1
  4387  00162C  EC97  F00A         	call	_SharpTurn
  4388  001630  D058               	goto	l184
  4389  001632                     l2465:
  4390                           
  4391                           ;main.c: 219: else if(last_error<-1)
  4392  001632  502C               	movf	GetBackonTrack@last_error,w,c
  4393  001634  0A80               	xorlw	128
  4394  001636  0F81               	addlw	129
  4395  001638  B0D8               	btfsc	status,0,c
  4396  00163A  D004               	goto	l2469
  4397                           
  4398                           ;main.c: 220: SharpTurn(0);
  4399  00163C  0E00               	movlw	0
  4400  00163E  EC97  F00A         	call	_SharpTurn
  4401  001642  D04F               	goto	l184
  4402  001644                     l2469:
  4403                           
  4404                           ;main.c: 221: else
  4405                           ;main.c: 222: {
  4406                           ;main.c: 223: flag_count = 0;
  4407  001644  0E00               	movlw	0
  4408  001646  6E37               	movwf	_flag_count+1,c
  4409  001648  0E00               	movlw	0
  4410  00164A  6E36               	movwf	_flag_count,c
  4411                           
  4412                           ;main.c: 224: while (!SeeLine.B && flag_count!=7813)
  4413  00164C  D00C               	goto	l2479
  4414  00164E                     l2471:
  4415                           
  4416                           ;main.c: 225: {
  4417                           ;main.c: 226: MotorControl(0);
  4418  00164E  0E00               	movlw	0
  4419  001650  6E1E               	movwf	MotorControl@delta_velocity+1,c
  4420  001652  0E00               	movlw	0
  4421  001654  6E1D               	movwf	MotorControl@delta_velocity,c
  4422  001656  EC54  F009         	call	_MotorControl	;wreg free
  4423                           
  4424                           ;main.c: 227: if (TMR0IF)
  4425  00165A  A4F2               	btfss	intcon,2,c	;volatile
  4426  00165C  D004               	goto	l2479
  4427                           
  4428                           ;main.c: 228: {
  4429                           ;main.c: 229: flag_count++;
  4430  00165E  4A36               	infsnz	_flag_count,f,c
  4431  001660  2A37               	incf	_flag_count+1,f,c
  4432                           
  4433                           ;main.c: 230: TMR0IF = 0;
  4434  001662  94F2               	bcf	intcon,2,c	;volatile
  4435  001664  D000               	goto	l2479
  4436  001666                     l2479:
  4437  001666  503D               	movf	_SeeLine,w,c
  4438  001668  0B1F               	andlw	31
  4439  00166A  0900               	iorlw	0
  4440  00166C  A4D8               	btfss	status,2,c
  4441  00166E  D009               	goto	l2483
  4442  001670  0E85               	movlw	133
  4443  001672  1836               	xorwf	_flag_count,w,c
  4444  001674  E1EC               	bnz	l2471
  4445  001676  0E1E               	movlw	30
  4446  001678  1837               	xorwf	_flag_count+1,w,c
  4447  00167A  B4D8               	btfsc	status,2,c
  4448  00167C  D002               	goto	l2483
  4449  00167E  D7E7               	goto	l2471
  4450  001680  D000               	goto	l2483
  4451  001682                     l2483:
  4452                           
  4453                           ;main.c: 231: }
  4454                           ;main.c: 232: }
  4455                           ;main.c: 234: if(!SeeLine.B)
  4456  001682  503D               	movf	_SeeLine,w,c
  4457  001684  0B1F               	andlw	31
  4458  001686  0900               	iorlw	0
  4459  001688  A4D8               	btfss	status,2,c
  4460  00168A  D026               	goto	l2503
  4461                           
  4462                           ;main.c: 235: {
  4463                           ;main.c: 236: motors_brake_all();
  4464  00168C  ECF3  F00E         	call	_motors_brake_all	;wreg free
  4465                           
  4466                           ;main.c: 237: MotorControl(1600);
  4467  001690  0E06               	movlw	6
  4468  001692  6E1E               	movwf	MotorControl@delta_velocity+1,c
  4469  001694  0E40               	movlw	64
  4470  001696  6E1D               	movwf	MotorControl@delta_velocity,c
  4471  001698  EC54  F009         	call	_MotorControl	;wreg free
  4472                           
  4473                           ;main.c: 238: for(char i=0; i < 80; i++)
  4474  00169C  0E00               	movlw	0
  4475  00169E  6E2D               	movwf	GetBackonTrack@i,c
  4476  0016A0                     l2491:
  4477  0016A0  0E4F               	movlw	79
  4478  0016A2  642D               	cpfsgt	GetBackonTrack@i,c
  4479  0016A4  D001               	goto	l2495
  4480  0016A6  D011               	goto	l2501
  4481  0016A8                     l2495:
  4482                           
  4483                           ;main.c: 239: _delay(100000);
  4484  0016A8  0E82               	movlw	130
  4485  0016AA  6E2B               	movwf	??_GetBackonTrack& (0+255),c
  4486  0016AC  0EDE               	movlw	222
  4487  0016AE                     u2327:
  4488  0016AE  2EE8               	decfsz	wreg,f,c
  4489  0016B0  D7FE               	goto	u2327
  4490  0016B2  2E2B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4491  0016B4  D7FC               	goto	u2327
  4492  0016B6  2A2D               	incf	GetBackonTrack@i,f,c
  4493  0016B8  D7F3               	goto	l2491
  4494                           
  4495                           ;main.c: 241: while (!SeeLine.B)
  4496  0016BA  D007               	goto	l2501
  4497  0016BC                     l2499:
  4498                           
  4499                           ;main.c: 242: MotorControl(0);
  4500  0016BC  0E00               	movlw	0
  4501  0016BE  6E1E               	movwf	MotorControl@delta_velocity+1,c
  4502  0016C0  0E00               	movlw	0
  4503  0016C2  6E1D               	movwf	MotorControl@delta_velocity,c
  4504  0016C4  EC54  F009         	call	_MotorControl	;wreg free
  4505  0016C8  D000               	goto	l2501
  4506  0016CA                     l2501:
  4507  0016CA  503D               	movf	_SeeLine,w,c
  4508  0016CC  0B1F               	andlw	31
  4509  0016CE  0900               	iorlw	0
  4510  0016D0  A4D8               	btfss	status,2,c
  4511  0016D2  D002               	goto	l2503
  4512  0016D4  D7F3               	goto	l2499
  4513  0016D6  D000               	goto	l2503
  4514  0016D8                     l2503:
  4515                           
  4516                           ;main.c: 243: }
  4517                           ;main.c: 244: flag_count = 0;
  4518  0016D8  0E00               	movlw	0
  4519  0016DA  6E37               	movwf	_flag_count+1,c
  4520  0016DC  0E00               	movlw	0
  4521  0016DE  6E36               	movwf	_flag_count,c
  4522  0016E0  D000               	goto	l184
  4523  0016E2                     l184:
  4524  0016E2  0012               	return		;funcret
  4525  0016E4                     __end_of_GetBackonTrack:
  4526                           	opt stack 0
  4527                           stkptr	equ	0xFFC
  4528                           tblptru	equ	0xFF8
  4529                           tblptrh	equ	0xFF7
  4530                           tblptrl	equ	0xFF6
  4531                           tablat	equ	0xFF5
  4532                           prodh	equ	0xFF4
  4533                           prodl	equ	0xFF3
  4534                           intcon	equ	0xFF2
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           indf1	equ	0xFE7
  4538                           postinc1	equ	0xFE6
  4539                           fsr1h	equ	0xFE2
  4540                           fsr1l	equ	0xFE1
  4541                           indf2	equ	0xFDF
  4542                           postinc2	equ	0xFDE
  4543                           plusw2	equ	0xFDB
  4544                           fsr2h	equ	0xFDA
  4545                           fsr2l	equ	0xFD9
  4546                           status	equ	0xFD8
  4547                           
  4548 ;; *************** function _SharpTurn *****************
  4549 ;; Defined at:
  4550 ;;		line 169 in file "../Robot Files/main.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  direction       1    wreg     unsigned char 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  direction       1   39[COMRAM] unsigned char 
  4555 ;;  delta_veloci    2   40[COMRAM] int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;		None               void
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        5 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    3
  4572 ;; This function calls:
  4573 ;;		_MotorControl
  4574 ;;		___wmul
  4575 ;;		_motors_brake_all
  4576 ;; This function is called by:
  4577 ;;		_main
  4578 ;;		_GetBackonTrack
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text42
  4583  00152E                     __ptext42:
  4584                           	opt stack 0
  4585  00152E                     _SharpTurn:
  4586                           	opt stack 27
  4587                           
  4588                           ;incstack = 0
  4589                           ;SharpTurn@direction stored from wreg
  4590  00152E  6E28               	movwf	SharpTurn@direction,c
  4591                           
  4592                           ;main.c: 171: int delta_velocity;
  4593                           ;main.c: 173: flag_count = 0;
  4594  001530  0E00               	movlw	0
  4595  001532  6E37               	movwf	_flag_count+1,c
  4596  001534  0E00               	movlw	0
  4597  001536  6E36               	movwf	_flag_count,c
  4598                           
  4599                           ;main.c: 174: while (SeeLine.B && flag_count!=7813)
  4600  001538  D020               	goto	l2265
  4601  00153A                     l2255:
  4602                           
  4603                           ;main.c: 175: {
  4604                           ;main.c: 176: MotorControl(I*I_CONSTANT);
  4605  00153A  0E10               	movlw	low _I_CONSTANT
  4606  00153C  6EF6               	movwf	tblptrl,c
  4607  00153E                     	if	1	;There is more than 1 active tblptr byte
  4608  00153E  0E10               	movlw	high _I_CONSTANT
  4609  001540  6EF7               	movwf	tblptrh,c
  4610  001542                     	endif
  4611  001542                     	if	1	;There are 3 active tblptr bytes
  4612  001542  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  4613  001544  6EF8               	movwf	tblptru,c
  4614  001546                     	endif
  4615  001546  0008               	tblrd		*
  4616  001548  50F5               	movf	tablat,w,c
  4617  00154A  6E0F               	movwf	___wmul@multiplier,c
  4618  00154C  6A10               	clrf	___wmul@multiplier+1,c
  4619  00154E  C034  F011         	movff	_I,___wmul@multiplicand
  4620  001552  C035  F012         	movff	_I+1,___wmul@multiplicand+1
  4621  001556  ECB9  F00E         	call	___wmul	;wreg free
  4622  00155A  C00F  F026         	movff	?___wmul,_SharpTurn$3084
  4623  00155E  C010  F027         	movff	?___wmul+1,_SharpTurn$3084+1
  4624                           
  4625                           ;main.c: 175: {
  4626                           ;main.c: 176: MotorControl(I*I_CONSTANT);
  4627  001562  C026  F01D         	movff	_SharpTurn$3084,MotorControl@delta_velocity
  4628  001566  C027  F01E         	movff	_SharpTurn$3084+1,MotorControl@delta_velocity+1
  4629  00156A  EC54  F009         	call	_MotorControl	;wreg free
  4630                           
  4631                           ;main.c: 177: if (TMR0IF)
  4632  00156E  A4F2               	btfss	intcon,2,c	;volatile
  4633  001570  D004               	goto	l2265
  4634                           
  4635                           ;main.c: 178: {
  4636                           ;main.c: 179: flag_count++;
  4637  001572  4A36               	infsnz	_flag_count,f,c
  4638  001574  2A37               	incf	_flag_count+1,f,c
  4639                           
  4640                           ;main.c: 180: TMR0IF = 0;
  4641  001576  94F2               	bcf	intcon,2,c	;volatile
  4642  001578  D000               	goto	l2265
  4643  00157A                     l2265:
  4644  00157A  503D               	movf	_SeeLine,w,c
  4645  00157C  0B1F               	andlw	31
  4646  00157E  0900               	iorlw	0
  4647  001580  B4D8               	btfsc	status,2,c
  4648  001582  D009               	goto	l2269
  4649  001584  0E85               	movlw	133
  4650  001586  1836               	xorwf	_flag_count,w,c
  4651  001588  E1D8               	bnz	l2255
  4652  00158A  0E1E               	movlw	30
  4653  00158C  1837               	xorwf	_flag_count+1,w,c
  4654  00158E  B4D8               	btfsc	status,2,c
  4655  001590  D002               	goto	l2269
  4656  001592  D7D3               	goto	l2255
  4657  001594  D000               	goto	l2269
  4658  001596                     l2269:
  4659                           
  4660                           ;main.c: 181: }
  4661                           ;main.c: 183: }
  4662                           ;main.c: 185: if(!SeeLine.B)
  4663  001596  503D               	movf	_SeeLine,w,c
  4664  001598  0B1F               	andlw	31
  4665  00159A  0900               	iorlw	0
  4666  00159C  A4D8               	btfss	status,2,c
  4667  00159E  D03A               	goto	l150
  4668                           
  4669                           ;main.c: 186: {
  4670                           ;main.c: 187: motors_brake_all();
  4671  0015A0  ECF3  F00E         	call	_motors_brake_all	;wreg free
  4672                           
  4673                           ;main.c: 188: if(direction)
  4674  0015A4  5028               	movf	SharpTurn@direction,w,c
  4675  0015A6  B4D8               	btfsc	status,2,c
  4676  0015A8  D019               	goto	l2287
  4677                           
  4678                           ;main.c: 189: {
  4679                           ;main.c: 190: delta_velocity = 1600;
  4680  0015AA  0E06               	movlw	6
  4681  0015AC  6E2A               	movwf	SharpTurn@delta_velocity+1,c
  4682  0015AE  0E40               	movlw	64
  4683  0015B0  6E29               	movwf	SharpTurn@delta_velocity,c
  4684                           
  4685                           ;main.c: 191: while (!SeeLine.b.CntLeft && delta_velocity)
  4686  0015B2  D00C               	goto	l2283
  4687  0015B4                     l2277:
  4688                           
  4689                           ;main.c: 192: {
  4690                           ;main.c: 193: MotorControl(delta_velocity);
  4691  0015B4  C029  F01D         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4692  0015B8  C02A  F01E         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4693  0015BC  EC54  F009         	call	_MotorControl	;wreg free
  4694                           
  4695                           ;main.c: 194: if (SeeLine.b.Center)
  4696  0015C0  A43D               	btfss	_SeeLine,2,c
  4697  0015C2  D004               	goto	l2283
  4698                           
  4699                           ;main.c: 195: delta_velocity--;
  4700  0015C4  0629               	decf	SharpTurn@delta_velocity,f,c
  4701  0015C6  A0D8               	btfss	status,0,c
  4702  0015C8  062A               	decf	SharpTurn@delta_velocity+1,f,c
  4703  0015CA  D000               	goto	l2283
  4704  0015CC                     l2283:
  4705  0015CC  B63D               	btfsc	_SeeLine,3,c
  4706  0015CE  D01E               	goto	l2299
  4707  0015D0  5029               	movf	SharpTurn@delta_velocity,w,c
  4708  0015D2  102A               	iorwf	SharpTurn@delta_velocity+1,w,c
  4709  0015D4  B4D8               	btfsc	status,2,c
  4710  0015D6  D01A               	goto	l2299
  4711  0015D8  D7ED               	goto	l2277
  4712                           
  4713                           ;main.c: 196: }
  4714                           ;main.c: 197: }
  4715  0015DA  D018               	goto	l2299
  4716  0015DC                     l2287:
  4717                           
  4718                           ;main.c: 198: else
  4719                           ;main.c: 199: {
  4720                           ;main.c: 200: delta_velocity = -1600;
  4721  0015DC  0EF9               	movlw	249
  4722  0015DE  6E2A               	movwf	SharpTurn@delta_velocity+1,c
  4723  0015E0  0EC0               	movlw	192
  4724  0015E2  6E29               	movwf	SharpTurn@delta_velocity,c
  4725                           
  4726                           ;main.c: 201: while (!SeeLine.b.CntRight && delta_velocity)
  4727  0015E4  D00B               	goto	l2295
  4728  0015E6                     l2289:
  4729                           
  4730                           ;main.c: 202: {
  4731                           ;main.c: 203: MotorControl(delta_velocity);
  4732  0015E6  C029  F01D         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4733  0015EA  C02A  F01E         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4734  0015EE  EC54  F009         	call	_MotorControl	;wreg free
  4735                           
  4736                           ;main.c: 204: if (SeeLine.b.Center)
  4737  0015F2  A43D               	btfss	_SeeLine,2,c
  4738  0015F4  D003               	goto	l2295
  4739                           
  4740                           ;main.c: 205: delta_velocity++;
  4741  0015F6  4A29               	infsnz	SharpTurn@delta_velocity,f,c
  4742  0015F8  2A2A               	incf	SharpTurn@delta_velocity+1,f,c
  4743  0015FA  D000               	goto	l2295
  4744  0015FC                     l2295:
  4745  0015FC  B23D               	btfsc	_SeeLine,1,c
  4746  0015FE  D006               	goto	l2299
  4747  001600  5029               	movf	SharpTurn@delta_velocity,w,c
  4748  001602  102A               	iorwf	SharpTurn@delta_velocity+1,w,c
  4749  001604  B4D8               	btfsc	status,2,c
  4750  001606  D002               	goto	l2299
  4751  001608  D7EE               	goto	l2289
  4752  00160A  D000               	goto	l2299
  4753  00160C                     l2299:
  4754                           
  4755                           ;main.c: 206: }
  4756                           ;main.c: 207: }
  4757                           ;main.c: 208: I = 0;
  4758  00160C  0E00               	movlw	0
  4759  00160E  6E35               	movwf	_I+1,c
  4760  001610  0E00               	movlw	0
  4761  001612  6E34               	movwf	_I,c
  4762  001614                     l150:
  4763                           
  4764                           ;main.c: 209: }
  4765                           ;main.c: 211: flag_count = 0;
  4766  001614  0E00               	movlw	0
  4767  001616  6E37               	movwf	_flag_count+1,c
  4768  001618  0E00               	movlw	0
  4769  00161A  6E36               	movwf	_flag_count,c
  4770  00161C  0012               	return		;funcret
  4771  00161E                     __end_of_SharpTurn:
  4772                           	opt stack 0
  4773                           stkptr	equ	0xFFC
  4774                           tblptru	equ	0xFF8
  4775                           tblptrh	equ	0xFF7
  4776                           tblptrl	equ	0xFF6
  4777                           tablat	equ	0xFF5
  4778                           prodh	equ	0xFF4
  4779                           prodl	equ	0xFF3
  4780                           intcon	equ	0xFF2
  4781                           postinc0	equ	0xFEE
  4782                           wreg	equ	0xFE8
  4783                           indf1	equ	0xFE7
  4784                           postinc1	equ	0xFE6
  4785                           fsr1h	equ	0xFE2
  4786                           fsr1l	equ	0xFE1
  4787                           indf2	equ	0xFDF
  4788                           postinc2	equ	0xFDE
  4789                           plusw2	equ	0xFDB
  4790                           fsr2h	equ	0xFDA
  4791                           fsr2l	equ	0xFD9
  4792                           status	equ	0xFD8
  4793                           
  4794 ;; *************** function _motors_brake_all *****************
  4795 ;; Defined at:
  4796 ;;		line 218 in file "../Robot Files/sumovore.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;		None               void
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;Total ram usage:        0 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    2
  4817 ;; This function calls:
  4818 ;;		_SetDCPWM1
  4819 ;;		_SetDCPWM2
  4820 ;; This function is called by:
  4821 ;;		_SharpTurn
  4822 ;;		_GetBackonTrack
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text43
  4827  001DE6                     __ptext43:
  4828                           	opt stack 0
  4829  001DE6                     _motors_brake_all:
  4830                           	opt stack 27
  4831                           
  4832                           ;sumovore.c: 220: SetDCPWM1(800u );
  4833                           
  4834                           ;incstack = 0
  4835  001DE6  0E03               	movlw	3
  4836  001DE8  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  4837  001DEA  0E20               	movlw	32
  4838  001DEC  6E0F               	movwf	SetDCPWM1@dutycycle,c
  4839  001DEE  EC3F  F00E         	call	_SetDCPWM1	;wreg free
  4840                           
  4841                           ;sumovore.c: 221: SetDCPWM2(800u );
  4842  001DF2  0E03               	movlw	3
  4843  001DF4  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  4844  001DF6  0E20               	movlw	32
  4845  001DF8  6E0F               	movwf	SetDCPWM2@dutycycle,c
  4846  001DFA  EC22  F00E         	call	_SetDCPWM2	;wreg free
  4847                           
  4848                           ;sumovore.c: 222: PORTEbits.RE1 = 0b0;
  4849  001DFE  9284               	bcf	3972,1,c	;volatile
  4850                           
  4851                           ;sumovore.c: 223: PORTCbits.RC0 = 0b0;
  4852  001E00  9082               	bcf	3970,0,c	;volatile
  4853                           
  4854                           ;sumovore.c: 224: PORTEbits.RE0 = 0b0;
  4855  001E02  9084               	bcf	3972,0,c	;volatile
  4856                           
  4857                           ;sumovore.c: 225: PORTCbits.RC5 = 0b0;
  4858  001E04  9A82               	bcf	3970,5,c	;volatile
  4859  001E06  0012               	return		;funcret
  4860  001E08                     __end_of_motors_brake_all:
  4861                           	opt stack 0
  4862                           stkptr	equ	0xFFC
  4863                           tblptru	equ	0xFF8
  4864                           tblptrh	equ	0xFF7
  4865                           tblptrl	equ	0xFF6
  4866                           tablat	equ	0xFF5
  4867                           prodh	equ	0xFF4
  4868                           prodl	equ	0xFF3
  4869                           intcon	equ	0xFF2
  4870                           postinc0	equ	0xFEE
  4871                           wreg	equ	0xFE8
  4872                           indf1	equ	0xFE7
  4873                           postinc1	equ	0xFE6
  4874                           fsr1h	equ	0xFE2
  4875                           fsr1l	equ	0xFE1
  4876                           indf2	equ	0xFDF
  4877                           postinc2	equ	0xFDE
  4878                           plusw2	equ	0xFDB
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _MotorControl *****************
  4884 ;; Defined at:
  4885 ;;		line 120 in file "../Robot Files/main.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  delta_veloci    2   28[COMRAM] int 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  right_duty_c    2   35[COMRAM] int 
  4890 ;;  left_duty_cy    2   33[COMRAM] int 
  4891 ;;  right_dir_mo    1   32[COMRAM] enum E4194
  4892 ;;  left_dir_mod    1   31[COMRAM] enum E4194
  4893 ;; Return value:  Size  Location     Type
  4894 ;;		None               void
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;Total ram usage:        9 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    2
  4909 ;; This function calls:
  4910 ;;		_SetDCPWM1
  4911 ;;		_SetDCPWM2
  4912 ;;		___awdiv
  4913 ;;		___wmul
  4914 ;; This function is called by:
  4915 ;;		_PID_LineFollowing
  4916 ;;		_SharpTurn
  4917 ;;		_GetBackonTrack
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text44
  4922  0012A8                     __ptext44:
  4923                           	opt stack 0
  4924  0012A8                     _MotorControl:
  4925                           	opt stack 27
  4926                           
  4927                           ;main.c: 122: int left_duty_cycle = 700, right_duty_cycle = 700;
  4928                           
  4929                           ;incstack = 0
  4930  0012A8  0E02               	movlw	2
  4931  0012AA  6E23               	movwf	MotorControl@left_duty_cycle+1,c
  4932  0012AC  0EBC               	movlw	188
  4933  0012AE  6E22               	movwf	MotorControl@left_duty_cycle,c
  4934  0012B0  0E02               	movlw	2
  4935  0012B2  6E25               	movwf	MotorControl@right_duty_cycle+1,c
  4936  0012B4  0EBC               	movlw	188
  4937  0012B6  6E24               	movwf	MotorControl@right_duty_cycle,c
  4938                           
  4939                           ;main.c: 123: enum e_direction {reverse,forward} left_dir_modifier= forward, right_dir_m
      +                          odifier= forward;
  4940  0012B8  0E01               	movlw	1
  4941  0012BA  6E20               	movwf	MotorControl@left_dir_modifier,c
  4942  0012BC  0E01               	movlw	1
  4943  0012BE  6E21               	movwf	MotorControl@right_dir_modifier,c
  4944                           
  4945                           ;main.c: 126: if ( delta_velocity < 0 )
  4946  0012C0  AE1E               	btfss	MotorControl@delta_velocity+1,7,c
  4947  0012C2  D023               	goto	l2109
  4948                           
  4949                           ;main.c: 127: {
  4950                           ;main.c: 128: left_duty_cycle += delta_velocity*15/16;
  4951  0012C4  C01D  F00F         	movff	MotorControl@delta_velocity,___wmul@multiplier
  4952  0012C8  C01E  F010         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  4953  0012CC  0E00               	movlw	0
  4954  0012CE  6E12               	movwf	___wmul@multiplicand+1,c
  4955  0012D0  0E0F               	movlw	15
  4956  0012D2  6E11               	movwf	___wmul@multiplicand,c
  4957  0012D4  ECB9  F00E         	call	___wmul	;wreg free
  4958  0012D8  C00F  F015         	movff	?___wmul,___awdiv@dividend
  4959  0012DC  C010  F016         	movff	?___wmul+1,___awdiv@dividend+1
  4960  0012E0  0E00               	movlw	0
  4961  0012E2  6E18               	movwf	___awdiv@divisor+1,c
  4962  0012E4  0E10               	movlw	16
  4963  0012E6  6E17               	movwf	___awdiv@divisor,c
  4964  0012E8  EC2A  F00C         	call	___awdiv	;wreg free
  4965  0012EC  5015               	movf	?___awdiv,w,c
  4966  0012EE  2622               	addwf	MotorControl@left_duty_cycle,f,c
  4967  0012F0  5016               	movf	?___awdiv+1,w,c
  4968  0012F2  2223               	addwfc	MotorControl@left_duty_cycle+1,f,c
  4969                           
  4970                           ;main.c: 129: right_duty_cycle -= delta_velocity/16;
  4971  0012F4  C01D  F015         	movff	MotorControl@delta_velocity,___awdiv@dividend
  4972  0012F8  C01E  F016         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  4973  0012FC  0E00               	movlw	0
  4974  0012FE  6E18               	movwf	___awdiv@divisor+1,c
  4975  001300  0E10               	movlw	16
  4976  001302  6E17               	movwf	___awdiv@divisor,c
  4977  001304  EC2A  F00C         	call	___awdiv	;wreg free
  4978  001308  D022               	goto	L8
  4979  00130A                     l2109:
  4980                           
  4981                           ;main.c: 132: else
  4982                           ;main.c: 133: {
  4983                           ;main.c: 134: left_duty_cycle += delta_velocity/16;
  4984  00130A  C01D  F015         	movff	MotorControl@delta_velocity,___awdiv@dividend
  4985  00130E  C01E  F016         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  4986  001312  0E00               	movlw	0
  4987  001314  6E18               	movwf	___awdiv@divisor+1,c
  4988  001316  0E10               	movlw	16
  4989  001318  6E17               	movwf	___awdiv@divisor,c
  4990  00131A  EC2A  F00C         	call	___awdiv	;wreg free
  4991  00131E  5015               	movf	?___awdiv,w,c
  4992  001320  2622               	addwf	MotorControl@left_duty_cycle,f,c
  4993  001322  5016               	movf	?___awdiv+1,w,c
  4994  001324  2223               	addwfc	MotorControl@left_duty_cycle+1,f,c
  4995                           
  4996                           ;main.c: 135: right_duty_cycle -= delta_velocity*15/16;
  4997  001326  C01D  F00F         	movff	MotorControl@delta_velocity,___wmul@multiplier
  4998  00132A  C01E  F010         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  4999  00132E  0E00               	movlw	0
  5000  001330  6E12               	movwf	___wmul@multiplicand+1,c
  5001  001332  0E0F               	movlw	15
  5002  001334  6E11               	movwf	___wmul@multiplicand,c
  5003  001336  ECB9  F00E         	call	___wmul	;wreg free
  5004  00133A  C00F  F015         	movff	?___wmul,___awdiv@dividend
  5005  00133E  C010  F016         	movff	?___wmul+1,___awdiv@dividend+1
  5006  001342  0E00               	movlw	0
  5007  001344  6E18               	movwf	___awdiv@divisor+1,c
  5008  001346  0E10               	movlw	16
  5009  001348  6E17               	movwf	___awdiv@divisor,c
  5010  00134A  EC2A  F00C         	call	___awdiv	;wreg free
  5011  00134E                     L8:
  5012  00134E  5015               	movf	?___awdiv,w,c
  5013  001350  5E24               	subwf	MotorControl@right_duty_cycle,f,c
  5014  001352  5016               	movf	?___awdiv+1,w,c
  5015  001354  5A25               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5016  001356  D000               	goto	l2113
  5017  001358                     l2113:
  5018                           
  5019                           ;main.c: 136: }
  5020                           ;main.c: 142: if ( left_duty_cycle < 0 )
  5021  001358  AE23               	btfss	MotorControl@left_duty_cycle+1,7,c
  5022  00135A  D010               	goto	l2119
  5023                           
  5024                           ;main.c: 143: {
  5025                           ;main.c: 144: left_dir_modifier = reverse;
  5026  00135C  0E00               	movlw	0
  5027  00135E  6E20               	movwf	MotorControl@left_dir_modifier,c
  5028                           
  5029                           ;main.c: 145: left_duty_cycle *= -1;
  5030  001360  C022  F00F         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5031  001364  C023  F010         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5032  001368  0EFF               	movlw	255
  5033  00136A  6E12               	movwf	___wmul@multiplicand+1,c
  5034  00136C  6811               	setf	___wmul@multiplicand,c
  5035  00136E  ECB9  F00E         	call	___wmul	;wreg free
  5036  001372  C00F  F022         	movff	?___wmul,MotorControl@left_duty_cycle
  5037  001376  C010  F023         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5038  00137A  D000               	goto	l2119
  5039  00137C                     l2119:
  5040                           
  5041                           ;main.c: 146: }
  5042                           ;main.c: 147: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5043  00137C  BE23               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5044  00137E  D00B               	goto	l2123
  5045  001380  0E21               	movlw	33
  5046  001382  5C22               	subwf	MotorControl@left_duty_cycle,w,c
  5047  001384  0E03               	movlw	3
  5048  001386  5823               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5049  001388  A0D8               	btfss	status,0,c
  5050  00138A  D005               	goto	l2123
  5051  00138C  0E03               	movlw	3
  5052  00138E  6E23               	movwf	MotorControl@left_duty_cycle+1,c
  5053  001390  0E20               	movlw	32
  5054  001392  6E22               	movwf	MotorControl@left_duty_cycle,c
  5055  001394  D000               	goto	l2123
  5056  001396                     l2123:
  5057                           
  5058                           ;main.c: 149: SetDCPWM2((unsigned int) left_duty_cycle );
  5059  001396  C022  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5060  00139A  C023  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5061  00139E  EC22  F00E         	call	_SetDCPWM2	;wreg free
  5062                           
  5063                           ;main.c: 150: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5064  0013A2  5020               	movf	MotorControl@left_dir_modifier,w,c
  5065  0013A4  A4D8               	btfss	status,2,c
  5066  0013A6  D002               	goto	l135
  5067  0013A8  9082               	bcf	3970,0,c	;volatile
  5068  0013AA  D002               	goto	l2129
  5069  0013AC                     l135:
  5070                           
  5071                           ;main.c: 151: else PORTCbits.RC0 = 0b1;
  5072  0013AC  8082               	bsf	3970,0,c	;volatile
  5073  0013AE  D000               	goto	l2129
  5074  0013B0                     l2129:
  5075                           
  5076                           ;main.c: 152: PORTEbits.RE1 = !PORTCbits.RC0;
  5077  0013B0  B082               	btfsc	3970,0,c	;volatile
  5078  0013B2  D003               	goto	u1480
  5079  0013B4  6A1F               	clrf	??_MotorControl& (0+255),c
  5080  0013B6  2A1F               	incf	??_MotorControl& (0+255),f,c
  5081  0013B8  D001               	goto	u1498
  5082  0013BA                     u1480:
  5083  0013BA  6A1F               	clrf	??_MotorControl& (0+255),c
  5084  0013BC                     u1498:
  5085  0013BC  461F               	rlncf	??_MotorControl,f,c
  5086  0013BE  5084               	movf	3972,w,c	;volatile
  5087  0013C0  181F               	xorwf	??_MotorControl,w,c
  5088  0013C2  0BFD               	andlw	-3
  5089  0013C4  181F               	xorwf	??_MotorControl,w,c
  5090  0013C6  6E84               	movwf	3972,c	;volatile
  5091                           
  5092                           ;main.c: 155: if ( right_duty_cycle < 0 )
  5093  0013C8  AE25               	btfss	MotorControl@right_duty_cycle+1,7,c
  5094  0013CA  D010               	goto	l2135
  5095                           
  5096                           ;main.c: 156: {
  5097                           ;main.c: 157: right_dir_modifier = reverse;
  5098  0013CC  0E00               	movlw	0
  5099  0013CE  6E21               	movwf	MotorControl@right_dir_modifier,c
  5100                           
  5101                           ;main.c: 158: right_duty_cycle *= -1;
  5102  0013D0  C024  F00F         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5103  0013D4  C025  F010         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5104  0013D8  0EFF               	movlw	255
  5105  0013DA  6E12               	movwf	___wmul@multiplicand+1,c
  5106  0013DC  6811               	setf	___wmul@multiplicand,c
  5107  0013DE  ECB9  F00E         	call	___wmul	;wreg free
  5108  0013E2  C00F  F024         	movff	?___wmul,MotorControl@right_duty_cycle
  5109  0013E6  C010  F025         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5110  0013EA  D000               	goto	l2135
  5111  0013EC                     l2135:
  5112                           
  5113                           ;main.c: 159: }
  5114                           ;main.c: 160: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5115  0013EC  BE25               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5116  0013EE  D00B               	goto	l2139
  5117  0013F0  0E21               	movlw	33
  5118  0013F2  5C24               	subwf	MotorControl@right_duty_cycle,w,c
  5119  0013F4  0E03               	movlw	3
  5120  0013F6  5825               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5121  0013F8  A0D8               	btfss	status,0,c
  5122  0013FA  D005               	goto	l2139
  5123  0013FC  0E03               	movlw	3
  5124  0013FE  6E25               	movwf	MotorControl@right_duty_cycle+1,c
  5125  001400  0E20               	movlw	32
  5126  001402  6E24               	movwf	MotorControl@right_duty_cycle,c
  5127  001404  D000               	goto	l2139
  5128  001406                     l2139:
  5129                           
  5130                           ;main.c: 162: SetDCPWM1((unsigned int) right_duty_cycle );
  5131  001406  C024  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5132  00140A  C025  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5133  00140E  EC3F  F00E         	call	_SetDCPWM1	;wreg free
  5134                           
  5135                           ;main.c: 163: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5136  001412  5021               	movf	MotorControl@right_dir_modifier,w,c
  5137  001414  A4D8               	btfss	status,2,c
  5138  001416  D002               	goto	l139
  5139  001418  9A82               	bcf	3970,5,c	;volatile
  5140  00141A  D002               	goto	l2145
  5141  00141C                     l139:
  5142                           
  5143                           ;main.c: 164: else PORTCbits.RC5 = 0b1;
  5144  00141C  8A82               	bsf	3970,5,c	;volatile
  5145  00141E  D000               	goto	l2145
  5146  001420                     l2145:
  5147                           
  5148                           ;main.c: 165: PORTEbits.RE0 = !PORTCbits.RC5;
  5149  001420  BA82               	btfsc	3970,5,c	;volatile
  5150  001422  D003               	goto	u1530
  5151  001424  6A1F               	clrf	??_MotorControl& (0+255),c
  5152  001426  2A1F               	incf	??_MotorControl& (0+255),f,c
  5153  001428  D001               	goto	u1548
  5154  00142A                     u1530:
  5155  00142A  6A1F               	clrf	??_MotorControl& (0+255),c
  5156  00142C                     u1548:
  5157  00142C  5084               	movf	3972,w,c	;volatile
  5158  00142E  181F               	xorwf	??_MotorControl,w,c
  5159  001430  0BFE               	andlw	-2
  5160  001432  181F               	xorwf	??_MotorControl,w,c
  5161  001434  6E84               	movwf	3972,c	;volatile
  5162  001436  0012               	return		;funcret
  5163  001438                     __end_of_MotorControl:
  5164                           	opt stack 0
  5165                           stkptr	equ	0xFFC
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           intcon	equ	0xFF2
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           indf1	equ	0xFE7
  5176                           postinc1	equ	0xFE6
  5177                           fsr1h	equ	0xFE2
  5178                           fsr1l	equ	0xFE1
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           plusw2	equ	0xFDB
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function ___wmul *****************
  5187 ;; Defined at:
  5188 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  multiplier      2   14[COMRAM] unsigned int 
  5191 ;;  multiplicand    2   16[COMRAM] unsigned int 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  product         2   18[COMRAM] unsigned int 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2   14[COMRAM] unsigned int 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, prodl, prodh
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;Total ram usage:        6 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_PID_LineFollowing
  5214 ;;		_MotorControl
  5215 ;;		_SharpTurn
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text45
  5220  001D72                     __ptext45:
  5221                           	opt stack 0
  5222  001D72                     ___wmul:
  5223                           	opt stack 28
  5224                           
  5225                           ;incstack = 0
  5226  001D72  500F               	movf	___wmul@multiplier,w,c
  5227  001D74  0211               	mulwf	___wmul@multiplicand,c
  5228  001D76  CFF3 F013          	movff	prodl,___wmul@product
  5229  001D7A  CFF4 F014          	movff	prodh,___wmul@product+1
  5230  001D7E  500F               	movf	___wmul@multiplier,w,c
  5231  001D80  0212               	mulwf	___wmul@multiplicand+1,c
  5232  001D82  50F3               	movf	prodl,w,c
  5233  001D84  2614               	addwf	___wmul@product+1,f,c
  5234  001D86  5010               	movf	___wmul@multiplier+1,w,c
  5235  001D88  0211               	mulwf	___wmul@multiplicand,c
  5236  001D8A  50F3               	movf	prodl,w,c
  5237  001D8C  2614               	addwf	___wmul@product+1,f,c
  5238  001D8E  C013  F00F         	movff	___wmul@product,?___wmul
  5239  001D92  C014  F010         	movff	___wmul@product+1,?___wmul+1
  5240  001D96  D000               	goto	l605
  5241  001D98                     l605:
  5242  001D98  0012               	return		;funcret
  5243  001D9A                     __end_of___wmul:
  5244                           	opt stack 0
  5245                           stkptr	equ	0xFFC
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           indf1	equ	0xFE7
  5256                           postinc1	equ	0xFE6
  5257                           fsr1h	equ	0xFE2
  5258                           fsr1l	equ	0xFE1
  5259                           indf2	equ	0xFDF
  5260                           postinc2	equ	0xFDE
  5261                           plusw2	equ	0xFDB
  5262                           fsr2h	equ	0xFDA
  5263                           fsr2l	equ	0xFD9
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function ___awdiv *****************
  5267 ;; Defined at:
  5268 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  dividend        2   20[COMRAM] int 
  5271 ;;  divisor         2   22[COMRAM] int 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  quotient        2   26[COMRAM] int 
  5274 ;;  sign            1   25[COMRAM] unsigned char 
  5275 ;;  counter         1   24[COMRAM] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  2   20[COMRAM] int 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;Total ram usage:        8 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_PID_LineFollowing
  5296 ;;		_MotorControl
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text46
  5301  001854                     __ptext46:
  5302                           	opt stack 0
  5303  001854                     ___awdiv:
  5304                           	opt stack 27
  5305                           
  5306                           ;incstack = 0
  5307  001854  0E00               	movlw	0
  5308  001856  6E1A               	movwf	___awdiv@sign,c
  5309  001858  AE18               	btfss	___awdiv@divisor+1,7,c
  5310  00185A  D007               	goto	l2065
  5311  00185C  6C17               	negf	___awdiv@divisor,c
  5312  00185E  1E18               	comf	___awdiv@divisor+1,f,c
  5313  001860  B0D8               	btfsc	status,0,c
  5314  001862  2A18               	incf	___awdiv@divisor+1,f,c
  5315  001864  0E01               	movlw	1
  5316  001866  6E1A               	movwf	___awdiv@sign,c
  5317  001868  D000               	goto	l2065
  5318  00186A                     l2065:
  5319  00186A  AE16               	btfss	___awdiv@dividend+1,7,c
  5320  00186C  D007               	goto	l2071
  5321  00186E  6C15               	negf	___awdiv@dividend,c
  5322  001870  1E16               	comf	___awdiv@dividend+1,f,c
  5323  001872  B0D8               	btfsc	status,0,c
  5324  001874  2A16               	incf	___awdiv@dividend+1,f,c
  5325  001876  0E01               	movlw	1
  5326  001878  1A1A               	xorwf	___awdiv@sign,f,c
  5327  00187A  D000               	goto	l2071
  5328  00187C                     l2071:
  5329  00187C  0E00               	movlw	0
  5330  00187E  6E1C               	movwf	___awdiv@quotient+1,c
  5331  001880  0E00               	movlw	0
  5332  001882  6E1B               	movwf	___awdiv@quotient,c
  5333  001884  5017               	movf	___awdiv@divisor,w,c
  5334  001886  1018               	iorwf	___awdiv@divisor+1,w,c
  5335  001888  B4D8               	btfsc	status,2,c
  5336  00188A  D021               	goto	l2093
  5337  00188C  0E01               	movlw	1
  5338  00188E  6E19               	movwf	___awdiv@counter,c
  5339  001890  D005               	goto	l2079
  5340  001892                     l2077:
  5341  001892  90D8               	bcf	status,0,c
  5342  001894  3617               	rlcf	___awdiv@divisor,f,c
  5343  001896  3618               	rlcf	___awdiv@divisor+1,f,c
  5344  001898  2A19               	incf	___awdiv@counter,f,c
  5345  00189A  D000               	goto	l2079
  5346  00189C                     l2079:
  5347  00189C  BE18               	btfsc	___awdiv@divisor+1,7,c
  5348  00189E  D002               	goto	l2081
  5349  0018A0  D7F8               	goto	l2077
  5350  0018A2  D000               	goto	l2081
  5351  0018A4                     l2081:
  5352  0018A4  90D8               	bcf	status,0,c
  5353  0018A6  361B               	rlcf	___awdiv@quotient,f,c
  5354  0018A8  361C               	rlcf	___awdiv@quotient+1,f,c
  5355  0018AA  5017               	movf	___awdiv@divisor,w,c
  5356  0018AC  5C15               	subwf	___awdiv@dividend,w,c
  5357  0018AE  5018               	movf	___awdiv@divisor+1,w,c
  5358  0018B0  5816               	subwfb	___awdiv@dividend+1,w,c
  5359  0018B2  A0D8               	btfss	status,0,c
  5360  0018B4  D006               	goto	l2089
  5361  0018B6  5017               	movf	___awdiv@divisor,w,c
  5362  0018B8  5E15               	subwf	___awdiv@dividend,f,c
  5363  0018BA  5018               	movf	___awdiv@divisor+1,w,c
  5364  0018BC  5A16               	subwfb	___awdiv@dividend+1,f,c
  5365  0018BE  801B               	bsf	___awdiv@quotient,0,c
  5366  0018C0  D000               	goto	l2089
  5367  0018C2                     l2089:
  5368  0018C2  90D8               	bcf	status,0,c
  5369  0018C4  3218               	rrcf	___awdiv@divisor+1,f,c
  5370  0018C6  3217               	rrcf	___awdiv@divisor,f,c
  5371  0018C8  2E19               	decfsz	___awdiv@counter,f,c
  5372  0018CA  D7EC               	goto	l2081
  5373  0018CC  D000               	goto	l2093
  5374  0018CE                     l2093:
  5375  0018CE  501A               	movf	___awdiv@sign,w,c
  5376  0018D0  B4D8               	btfsc	status,2,c
  5377  0018D2  D005               	goto	l2097
  5378  0018D4  6C1B               	negf	___awdiv@quotient,c
  5379  0018D6  1E1C               	comf	___awdiv@quotient+1,f,c
  5380  0018D8  B0D8               	btfsc	status,0,c
  5381  0018DA  2A1C               	incf	___awdiv@quotient+1,f,c
  5382  0018DC  D000               	goto	l2097
  5383  0018DE                     l2097:
  5384  0018DE  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5385  0018E2  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5386  0018E6  D000               	goto	l798
  5387  0018E8                     l798:
  5388  0018E8  0012               	return		;funcret
  5389  0018EA                     __end_of___awdiv:
  5390                           	opt stack 0
  5391                           stkptr	equ	0xFFC
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           postinc0	equ	0xFEE
  5400                           wreg	equ	0xFE8
  5401                           indf1	equ	0xFE7
  5402                           postinc1	equ	0xFE6
  5403                           fsr1h	equ	0xFE2
  5404                           fsr1l	equ	0xFE1
  5405                           indf2	equ	0xFDF
  5406                           postinc2	equ	0xFDE
  5407                           plusw2	equ	0xFDB
  5408                           fsr2h	equ	0xFDA
  5409                           fsr2l	equ	0xFD9
  5410                           status	equ	0xFD8
  5411                           
  5412 ;; *************** function _SetDCPWM2 *****************
  5413 ;; Defined at:
  5414 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  dutycycle       2   14[COMRAM] unsigned int 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  DCycle          2   18[COMRAM] struct PWMDC
  5419 ;; Return value:  Size  Location     Type
  5420 ;;		None               void
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;Total ram usage:        6 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    1
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_MotorControl
  5439 ;;		_initialization
  5440 ;;		_motors_brake_all
  5441 ;;		_set_motor_speed
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text47
  5446  001C44                     __ptext47:
  5447                           	opt stack 0
  5448  001C44                     _SetDCPWM2:
  5449                           	opt stack 28
  5450                           
  5451                           ;incstack = 0
  5452  001C44  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  5453  001C48  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  5454  001C4C  0E06               	movlw	6
  5455  001C4E                     u1365:
  5456  001C4E  90D8               	bcf	status,0,c
  5457  001C50  3611               	rlcf	??_SetDCPWM2,f,c
  5458  001C52  3612               	rlcf	??_SetDCPWM2+1,f,c
  5459  001C54  2EE8               	decfsz	wreg,f,c
  5460  001C56  D7FB               	goto	u1365
  5461  001C58  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  5462  001C5C  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  5463  001C60  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  5464  001C64  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  5465  001C68  90D8               	bcf	status,0,c
  5466  001C6A  3211               	rrcf	??_SetDCPWM2,f,c
  5467  001C6C  90D8               	bcf	status,0,c
  5468  001C6E  3211               	rrcf	??_SetDCPWM2,f,c
  5469  001C70  0E30               	movlw	48
  5470  001C72  1611               	andwf	??_SetDCPWM2,f,c
  5471  001C74  50BA               	movf	4026,w,c	;volatile
  5472  001C76  0BCF               	andlw	207
  5473  001C78  1011               	iorwf	??_SetDCPWM2,w,c
  5474  001C7A  6EBA               	movwf	4026,c	;volatile
  5475  001C7C  0012               	return		;funcret
  5476  001C7E                     __end_of_SetDCPWM2:
  5477                           	opt stack 0
  5478                           stkptr	equ	0xFFC
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           wreg	equ	0xFE8
  5488                           indf1	equ	0xFE7
  5489                           postinc1	equ	0xFE6
  5490                           fsr1h	equ	0xFE2
  5491                           fsr1l	equ	0xFE1
  5492                           indf2	equ	0xFDF
  5493                           postinc2	equ	0xFDE
  5494                           plusw2	equ	0xFDB
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _SetDCPWM1 *****************
  5500 ;; Defined at:
  5501 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  dutycycle       2   14[COMRAM] unsigned int 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  DCycle          2   18[COMRAM] struct PWMDC
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;Total ram usage:        6 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    1
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_MotorControl
  5526 ;;		_initialization
  5527 ;;		_motors_brake_all
  5528 ;;		_set_motor_speed
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text48
  5533  001C7E                     __ptext48:
  5534                           	opt stack 0
  5535  001C7E                     _SetDCPWM1:
  5536                           	opt stack 28
  5537                           
  5538                           ;incstack = 0
  5539  001C7E  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5540  001C82  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5541  001C86  0E06               	movlw	6
  5542  001C88                     u1375:
  5543  001C88  90D8               	bcf	status,0,c
  5544  001C8A  3611               	rlcf	??_SetDCPWM1,f,c
  5545  001C8C  3612               	rlcf	??_SetDCPWM1+1,f,c
  5546  001C8E  2EE8               	decfsz	wreg,f,c
  5547  001C90  D7FB               	goto	u1375
  5548  001C92  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5549  001C96  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5550  001C9A  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5551  001C9E  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5552  001CA2  90D8               	bcf	status,0,c
  5553  001CA4  3211               	rrcf	??_SetDCPWM1,f,c
  5554  001CA6  90D8               	bcf	status,0,c
  5555  001CA8  3211               	rrcf	??_SetDCPWM1,f,c
  5556  001CAA  0E30               	movlw	48
  5557  001CAC  1611               	andwf	??_SetDCPWM1,f,c
  5558  001CAE  50BD               	movf	4029,w,c	;volatile
  5559  001CB0  0BCF               	andlw	207
  5560  001CB2  1011               	iorwf	??_SetDCPWM1,w,c
  5561  001CB4  6EBD               	movwf	4029,c	;volatile
  5562  001CB6  0012               	return		;funcret
  5563  001CB8                     __end_of_SetDCPWM1:
  5564                           	opt stack 0
  5565                           stkptr	equ	0xFFC
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           postinc0	equ	0xFEE
  5574                           wreg	equ	0xFE8
  5575                           indf1	equ	0xFE7
  5576                           postinc1	equ	0xFE6
  5577                           fsr1h	equ	0xFE2
  5578                           fsr1l	equ	0xFE1
  5579                           indf2	equ	0xFDF
  5580                           postinc2	equ	0xFDE
  5581                           plusw2	equ	0xFDB
  5582                           fsr2h	equ	0xFDA
  5583                           fsr2l	equ	0xFD9
  5584                           status	equ	0xFD8
  5585                           
  5586 ;; *************** function _high_isr *****************
  5587 ;; Defined at:
  5588 ;;		line 24 in file "../Robot Files/interrupts.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;		None               void
  5595 ;; Registers used:
  5596 ;;		wreg, status,2
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;Total ram usage:       14 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		Interrupt level 2
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	intcode
  5616  000008                     __pintcode:
  5617                           	opt stack 0
  5618  000008                     _high_isr:
  5619                           	opt stack 25
  5620                           
  5621                           ;incstack = 0
  5622  000008  CFFA F001          	movff	pclath,??_high_isr
  5623  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  5624  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  5625  000014  EDFC  F00C         	call	int_func,f	;refresh shadow registers
  5626                           stkptr	equ	0xFFC
  5627                           pclatu	equ	0xFFB
  5628                           pclath	equ	0xFFA
  5629                           tblptru	equ	0xFF8
  5630                           tblptrh	equ	0xFF7
  5631                           tblptrl	equ	0xFF6
  5632                           tablat	equ	0xFF5
  5633                           prodh	equ	0xFF4
  5634                           prodl	equ	0xFF3
  5635                           intcon	equ	0xFF2
  5636                           postinc0	equ	0xFEE
  5637                           fsr0l	equ	0xFE9
  5638                           wreg	equ	0xFE8
  5639                           indf1	equ	0xFE7
  5640                           postinc1	equ	0xFE6
  5641                           fsr1h	equ	0xFE2
  5642                           fsr1l	equ	0xFE1
  5643                           indf2	equ	0xFDF
  5644                           postinc2	equ	0xFDE
  5645                           plusw2	equ	0xFDB
  5646                           fsr2h	equ	0xFDA
  5647                           fsr2l	equ	0xFD9
  5648                           status	equ	0xFD8
  5649                           
  5650                           	psect	intcode_body
  5651  0019F8                     __pintcode_body:
  5652                           	opt stack 25
  5653  0019F8                     int_func:
  5654                           	opt stack 25
  5655  0019F8  0006               	pop		; remove dummy address from shadow register refresh
  5656  0019FA  CFEA F004          	movff	fsr0h,??_high_isr+3
  5657  0019FE  CFE1 F005          	movff	fsr1l,??_high_isr+4
  5658  001A02  CFE2 F006          	movff	fsr1h,??_high_isr+5
  5659  001A06  CFD9 F007          	movff	fsr2l,??_high_isr+6
  5660  001A0A  CFDA F008          	movff	fsr2h,??_high_isr+7
  5661  001A0E  CFF3 F009          	movff	prodl,??_high_isr+8
  5662  001A12  CFF4 F00A          	movff	prodh,??_high_isr+9
  5663  001A16  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  5664  001A1A  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  5665  001A1E  CFF8 F00D          	movff	tblptru,??_high_isr+12
  5666  001A22  CFF5 F00E          	movff	tablat,??_high_isr+13
  5667                           
  5668                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  5669  001A26  94A1               	bcf	4001,2,c	;volatile
  5670                           
  5671                           ;interrupts.c: 27: TRISA = 0xff;
  5672  001A28  6892               	setf	3986,c	;volatile
  5673                           
  5674                           ;interrupts.c: 28: TRISB = 0xff;
  5675  001A2A  6893               	setf	3987,c	;volatile
  5676                           
  5677                           ;interrupts.c: 29: TRISC = 0xff;
  5678  001A2C  6894               	setf	3988,c	;volatile
  5679                           
  5680                           ;interrupts.c: 30: TRISD = 0xff;
  5681  001A2E  6895               	setf	3989,c	;volatile
  5682                           
  5683                           ;interrupts.c: 31: TRISE = 0x03;
  5684  001A30  0E03               	movlw	3
  5685  001A32  6E96               	movwf	3990,c	;volatile
  5686                           
  5687                           ;interrupts.c: 32: lvd_flag =1;
  5688  001A34  0E01               	movlw	1
  5689  001A36  6E3E               	movwf	_lvd_flag,c
  5690                           
  5691                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  5692  001A38  94A0               	bcf	4000,2,c	;volatile
  5693                           
  5694                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  5695  001A3A  98D2               	bcf	4050,4,c	;volatile
  5696  001A3C  C00E  FFF5         	movff	??_high_isr+13,tablat
  5697  001A40  C00D  FFF8         	movff	??_high_isr+12,tblptru
  5698  001A44  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  5699  001A48  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  5700  001A4C  C00A  FFF4         	movff	??_high_isr+9,prodh
  5701  001A50  C009  FFF3         	movff	??_high_isr+8,prodl
  5702  001A54  C008  FFDA         	movff	??_high_isr+7,fsr2h
  5703  001A58  C007  FFD9         	movff	??_high_isr+6,fsr2l
  5704  001A5C  C006  FFE2         	movff	??_high_isr+5,fsr1h
  5705  001A60  C005  FFE1         	movff	??_high_isr+4,fsr1l
  5706  001A64  C004  FFEA         	movff	??_high_isr+3,fsr0h
  5707  001A68  C003  FFE9         	movff	??_high_isr+2,fsr0l
  5708  001A6C  C002  FFFB         	movff	??_high_isr+1,pclatu
  5709  001A70  C001  FFFA         	movff	??_high_isr,pclath
  5710  001A74  0011               	retfie		f
  5711  001A76                     __end_of_high_isr:
  5712                           	opt stack 0
  5713                           stkptr	equ	0xFFC
  5714                           pclatu	equ	0xFFB
  5715                           pclath	equ	0xFFA
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           postinc0	equ	0xFEE
  5724                           fsr0h	equ	0xFEA
  5725                           fsr0l	equ	0xFE9
  5726                           wreg	equ	0xFE8
  5727                           indf1	equ	0xFE7
  5728                           postinc1	equ	0xFE6
  5729                           fsr1h	equ	0xFE2
  5730                           fsr1l	equ	0xFE1
  5731                           indf2	equ	0xFDF
  5732                           postinc2	equ	0xFDE
  5733                           plusw2	equ	0xFDB
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8
  5737                           stkptr	equ	0xFFC
  5738                           pclatu	equ	0xFFB
  5739                           pclath	equ	0xFFA
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           postinc0	equ	0xFEE
  5748                           fsr0h	equ	0xFEA
  5749                           fsr0l	equ	0xFE9
  5750                           wreg	equ	0xFE8
  5751                           indf1	equ	0xFE7
  5752                           postinc1	equ	0xFE6
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762                           	psect	rparam
  5763  0000                     stkptr	equ	0xFFC
  5764                           pclatu	equ	0xFFB
  5765                           pclath	equ	0xFFA
  5766                           tblptru	equ	0xFF8
  5767                           tblptrh	equ	0xFF7
  5768                           tblptrl	equ	0xFF6
  5769                           tablat	equ	0xFF5
  5770                           prodh	equ	0xFF4
  5771                           prodl	equ	0xFF3
  5772                           intcon	equ	0xFF2
  5773                           postinc0	equ	0xFEE
  5774                           fsr0h	equ	0xFEA
  5775                           fsr0l	equ	0xFE9
  5776                           wreg	equ	0xFE8
  5777                           indf1	equ	0xFE7
  5778                           postinc1	equ	0xFE6
  5779                           fsr1h	equ	0xFE2
  5780                           fsr1l	equ	0xFE1
  5781                           indf2	equ	0xFDF
  5782                           postinc2	equ	0xFDE
  5783                           plusw2	equ	0xFDB
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    17
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 2
		 -> main@error(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _check_sensors->_adc
    _adc->_ReadADC
    _PID_LineFollowing->_MotorControl
    ___lwdiv->___wmul
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _MotorControl->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   25987
                                             45 COMRAM     2     2      0
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3980
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      37
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      37
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     132
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    5     3      2    6048
                                             37 COMRAM     5     3      2
                       _MotorControl
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             20 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       3     3      0    9320
                                             42 COMRAM     3     3      0
                       _MotorControl
                          _SharpTurn
                   _motors_brake_all
 ---------------------------------------------------------------------------------
 (1) _SharpTurn                                            5     5      0    5147
                                             37 COMRAM     5     5      0
                       _MotorControl
                             ___wmul
                   _motors_brake_all
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     648
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                         9     7      2    3435
                                             28 COMRAM     9     7      2
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     927
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             20 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     324
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     324
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
         ___wmul
       ___wmul
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
       ___wmul
     ___awdiv
       ___wmul (ARG)
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _SharpTurn
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
       ___wmul
     ___wmul
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2F      3E       1       48.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      34        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Mar 31 23:39:57 2020

                         _STKPTRbits 000FFC                                    _I 0034  
                                 l24 1F84                                   l95 14A0  
                                 l96 14A6                                   l88 1486  
                       ___awdiv@sign 001A                  ___wmul@multiplicand 0011  
                        __CFG_BORV$0 000000                                  l150 1614  
                                l135 13AC                                  l139 141C  
                                l325 1D70                                  l422 1F7E  
                                l342 1C42                                  l351 1852  
                                l184 16E2                                  l345 183E  
                                l346 17E4                                  l338 1C32  
                                l515 1E42                                  l372 1AF6  
                                l516 1E44                                  l452 1F62  
                                l444 1BA2                                  l605 1D98  
                                l537 1ED4                                  l538 1ED6  
                                l570 1ACA                                  l563 1AA2  
                                l387 1D48                                  l492 1CDA  
                                l572 1AE4                                  l493 1CE4  
                                l494 1CE6                                  l567 1ABC  
                                l568 1ABE                                  l569 1AC8  
                                l579 1F06                                  l588 1DE4  
                                l597 1DBE                                  l798 18E8  
                                u230 1F7A                                  _PR2 000FCB  
                                u920 1984                                  u940 199A  
                                u960 19B2                                  u938 1986  
                                u980 19CC                                  u958 199C  
                                u978 19B4                                  u998 19CE  
               __size_of_WriteTimer0 0012                                  _adc 1D4A  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                       __CFG_WDT$OFF 000000                                 ?_adc 0013  
                               l1123 1BF8                                 l2113 1358  
                               l1233 1B38                                 l2041 1D02  
                               l2123 1396                                 l2109 130A  
                               l1229 1B20                                 l1421 1EFE  
                               l2071 187C                                 l2135 13EC  
                               l2119 137C                                 l2039 1CFA  
                               l2311 1A92                                 l2081 18A4  
                               l2065 186A                                 l2145 1420  
                               l2129 13B0                                 l1425 1F02  
                               l2139 1406                                 l2315 1A9A  
                               l2307 1A88                                 l2077 1892  
                               l2093 18CE                                 l2501 16CA  
                               l1365 1DD4                                 l1373 1DDC  
                               l1461 1DB2                                 l2079 189C  
                               l2255 153A                                 l2503 16D8  
                               l2407 1BEC                                 l2327 1AB4  
                               l2319 1AA6                                 l2191 1832  
                               l2097 18DE                                 l2089 18C2  
                               l2265 157A                                 l2521 10DE  
                               l1369 1DD8                                 l1377 1DE0  
                               l1457 1DAE                                 l1465 1DB6  
                               l2283 15CC                                 l2515 10AC  
                               l2187 181A                                 l2355 1C12  
                               l2603 14B4                                 l2277 15B4  
                               l2269 1596                                 l2533 1146  
                               l2525 1104                                 l2517 10BC  
                               l1469 1DBA                                 l2365 1C3C  
                               l1573 1D42                                 l2605 1508  
                               l2295 15FC                                 l2287 15DC  
                               l2471 164E                                 l2543 11B2  
                               l2527 1114                                 l2383 1D58  
                               l2359 1C22                                 l2289 15E6  
                               l2465 1632                                 l2537 116C  
                               l2529 1124                                 l1569 1D2E  
                               l2299 160C                                 l2491 16A0  
                               l2483 1682                                 l2395 1BBC  
                               l2539 118A                                 l2469 1644  
                               l2397 1BC6                                 l2549 1234  
                               l2581 1470                                 l2495 16A8  
                               l2479 1666                                 l2399 1BCE  
                               l1695 1CD6                                 l2591 148A  
                               l2583 1476                                 l2593 148E  
                               l2585 147A                                 l2499 16BC  
                               l2595 1492                                 l2587 147E  
                               l2597 1498                                 l2589 1482  
                               l2599 14AE                      __end_of_BORtask 1E28  
                               STR_1 1012                                 STR_2 107B  
                               STR_3 1075                                 STR_4 1065  
                               STR_5 105C                                 STR_6 1052  
                               STR_7 106E                                 u1000 19E8  
                               u1018 19EA                                 u1530 142A  
                               u1365 1C4E                                 u1375 1C88  
                               u2327 16AE                                 u1480 13BA  
                               u1548 142C                                 u1900 1722  
                               u1920 174C                                 u1498 13BC  
                               u1940 1774                                 u1918 1724  
                               u1960 179A                                 u1880 16FC  
                               u1938 174E                                 u1958 1776  
                               u1978 179C                                 u1898 16FE  
                    ?_GetBackonTrack 0001                                 _TMR2 000FCC  
                       __CFG_WDTPS$8 000000                     ??_initialization 001C  
                               _main 1438                __end_of_check_sensors 17A8  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               pclat 000FFA                        __CFG_BOREN$ON 000000  
                    __end_of_PORtask 1854                                 prodh 000FF4  
                               prodl 000FF3           MotorControl@delta_velocity 001D  
                               start 0018                      __end_of_WDTtask 1EA2  
                       ___param_bank 000010                      __end_of_BusyADC 1F80  
                    __end_of_ReadADC 1F64                      __end_of_OpenADC 1BA6  
                              ??_adc 0015               PID_LineFollowing@error 0026  
                              ?_main 0001                      __end_of___awdiv 18EA  
                              _T0CON 000FD5                      ___awdiv@divisor 0017  
                              _T2CON 000FCA                      __end_of___lwdiv 1C02  
                    ___awdiv@counter 0019                   __size_of_RESETtask 001C  
                              _RCSTA 000FAB                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _SPBRG 000FAF  
                              _PORTD 000F83                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _TXSTA 000FAC                      __end_of_isWDTTO 1DC0  
            __end_of_openPORTCforPWM 1F72                                _isBOR 1EF2  
                              _isPOR 1DC0                                _gtrap 1AE6  
                              _putch 1FAE                      __end_of_openLVD 1EF2  
                         _ConvertADC 1FAA                                tablat 000FF5  
         __size_of_openPORTCforUSART 0006                                plusw2 000FDB  
                              status 000FD8                          ?_STKFULtask 0001  
                     __CFG_MCLRE$OFF 000000                      __initialization 1F1E  
                       __end_of_main 152E                     __end_of_OpenPWM1 1F42  
                   __end_of_OpenPWM2 1CF0                               ??_main 002E  
                      __activetblptr 000003                           _SetChanADC 1F08  
                          ??_BORtask 0014                               ?_isBOR 0001  
                             ?_isPOR 0001                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_gtrap 0001                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                     ___awdiv@dividend 0015  
                             ?_putch 0001                            ??_PORtask 0014  
                          ??_WDTtask 0014                           _OpenTimer0 1E28  
                         _OpenTimer2 1EBE                               _TMR0IF 007F92  
                             _SPBRGH 000FB0                   __size_of_SetDCPWM1 003A  
                 __size_of_SetDCPWM2 003A                            ??_BusyADC 000F  
                          ??_ReadADC 0011                               _LVtrap 1E48  
                  __end_of_RESETtask 1EBE                            ??_OpenADC 0011  
                       ?_reset_codes 0001                     __end_of_high_isr 1A76  
                 __size_of_OpenUSART 0070                               ___wmul 1D72  
                          ??___awdiv 0019                       __CFG_STVREN$ON 000000  
                   OpenTimer0@config 000F                            ??___lwdiv 0019  
                 __size_of_SharpTurn 00F0                     OpenTimer2@config 000F  
                             clear_0 1F24                     ___awdiv@quotient 001B  
                          ??_isWDTTO 000F                               _printf 1CF0  
                   __end_of_set_leds 19F8                            ??_openLVD 000F  
                __size_of_STKFULtask 001E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     ?_openPORTCforPWM 0001  
                  ?_motors_brake_all 0001                               putch@c 0001  
                 ??_motors_brake_all 0015                          ?_ConvertADC 0001  
                         __accesstop 0080              __end_of__initialization 1F2A  
                         adc@channel 0015                        ___rparam_used 000001  
              __end_of_set_osc_32MHz 1D4A                       __pcstackCOMRAM 0001  
                      __end_of_isBOR 1F08                        __end_of_isPOR 1DE6  
                      __end_of_gtrap 1B48                        __end_of_putch 1FB0  
                  __end_of_SetDCPWM1 1CB8                    __end_of_SetDCPWM2 1C7E  
                      ??_StatusReset 000F                          ?_SetChanADC 0001  
                   ??_GetBackonTrack 002B                        ?_lvd_flag_set 0001  
                            ??_isBOR 000F                              ??_isPOR 000F  
                  __end_of_OpenUSART 1AE6                              ??_gtrap 000F  
                            ??_putch 000F                          ?_OpenTimer0 0001  
                        ?_OpenTimer2 0001                    __end_of_SharpTurn 161E  
                          ?_OpenPWM1 0001                            ?_OpenPWM2 0001  
                            ?_LVtrap 0001                        ?_MotorControl 001D  
                 __end_of_D_CONSTANT 1010                   __size_of_openPORTA 0006  
                 __size_of_openPORTB 0006                   __size_of_openPORTD 0006  
                 __size_of_openPORTE 0006                              ?___wmul 000F  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                   WriteTimer0@timer 0011                        ??_WriteTimer0 0011  
                __size_of_ConvertADC 0004                           _flag_count 0036  
                            ?_printf 000F                              _BORtask 1E08  
                     ??_lvd_flag_set 000F                            ?_high_isr 0001  
                __end_of_StatusReset 1F8C                              _PORtask 17A8  
                 __end_of_I_CONSTANT 1011                              _WDTtask 1E86  
                            _BusyADC 1F72                              _ReadADC 1F54  
                         ??_OpenPWM1 000F                           ??_OpenPWM2 000F  
                       ??_STKFULtask 0014                              _SeeLine 003D  
                     ??_MotorControl 001F                              _OpenADC 1B48  
                    __size_of_LVtrap 0020                              __Hparam 0000  
                __size_of_SetChanADC 0016                              __Lparam 0000  
                          ?_set_leds 0001                 __size_of_reset_codes 0042  
                            ___awdiv 1854                      __size_of___wmul 0028  
                            ___lwdiv 1BA6                         __psmallconst 1000  
                            __pcinit 1F1E                              _isWDTTO 1D9A  
                            __ramtop 1000                  __size_of_OpenTimer0 0020  
                __size_of_OpenTimer2 001C                              __ptext0 1438  
                            __ptext1 197A                              __ptext2 1F80  
                            __ptext3 18EA                              __ptext4 1D1E  
                            __ptext5 1C02                              __ptext6 1D9A  
                            __ptext7 1DC0                              __ptext8 1EF2  
                            __ptext9 1E86                      __size_of_printf 002E  
                          _T0CONbits 000FD5                         __size_of_adc 0028  
                          _T2CONbits 000FCA               __size_of_check_sensors 00C4  
                            _openLVD 1EDA                  __end_of_WriteTimer0 1F54  
                 __end_of_STKFULtask 1E86                   __end_of_P_CONSTANT 1012  
                  __end_of_openPORTA 1FA4                    __end_of_openPORTB 1F9E  
           GetBackonTrack@last_error 002C                    __end_of_openPORTD 1FAA  
                  __end_of_openPORTE 1F92                       OpenADC@config2 000F  
                         ??_high_isr 0001                       __pintcode_body 19F8  
               end_of_initialization 1F2A                              int_func 19F8  
                         ??_set_leds 000F                            _RCSTAbits 000FAB  
                            printf@c 0013                              printf@f 000F  
                          _RESETtask 1EA2                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
            __size_of_initialization 0090                            _PORTCbits 000F82  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                     set_osc_32MHz@i 000F                          _StatusReset 1F86  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                       ??_ConvertADC 000F          MotorControl@left_duty_cycle 0022  
                  _PID_LineFollowing 1082        MotorControl@left_dir_modifier 0020  
                 ?_PID_LineFollowing 0026                            _TXSTAbits 000FAC  
                      _check_sensors 16E4            __size_of_motors_brake_all 0022  
                     __end_of_LVtrap 1E68                 __end_of_lvd_flag_set 1F86  
     MotorControl@right_dir_modifier 0021                  ??_PID_LineFollowing 0028  
                         ?_RESETtask 0001                       __end_of___wmul 1D9A  
                        _WriteTimer0 1F42                   __end_of_ConvertADC 1FAE  
                       ??_SetChanADC 000F                       __end_of_printf 1D1E  
                start_initialization 1F1E                 __end_of_MotorControl 1438  
                          _SetDCPWM1 1C7E                            _SetDCPWM2 1C44  
                    SetDCPWM1@DCycle 0013                          __end_of_adc 1D72  
                    SetDCPWM2@DCycle 0013            __end_of_PID_LineFollowing 12A8  
                       ??_OpenTimer0 000F                         ??_OpenTimer2 000F  
                          _OpenUSART 1A76             __size_of_openPORTCforPWM 000E  
                     ?_check_sensors 0001                     __CFG_OSC$INTIO67 000000  
                           ??_LVtrap 0014                            _SharpTurn 152E  
                 __end_of_SetChanADC 1F1E                    __size_of_OpenPWM1 0012  
                  __size_of_OpenPWM2 0038                             ??___wmul 0013  
                           ??_printf 0011                           gtrap@count 000F  
                 __end_of_OpenTimer0 1E48                   __end_of_OpenTimer2 1EDA  
                 SharpTurn@direction 0028                          __pbssCOMRAM 0030  
                           ?_BORtask 0001                           ?_SetDCPWM1 000F  
                         ?_SetDCPWM2 000F                        PORtask@count1 0014  
                      PORtask@count2 0018               __size_of_set_osc_32MHz 002C  
                           ?_PORtask 0001                             ?_WDTtask 0001  
                         ?_OpenUSART 000F                    __size_of_high_isr 1A6E  
                           ?_BusyADC 0001                             ?_ReadADC 000F  
                         ?_SharpTurn 0001                    OpenADC@portconfig 0010  
                           ?_OpenADC 000F                     ___lwdiv@dividend 0015  
                          __pintcode 0008                          ??_RESETtask 0014  
                           ?___awdiv 0015                       _initialization 18EA  
                  __size_of_set_leds 007E                             ?___lwdiv 0015  
                           ?_isWDTTO 0001                          __smallconst 1000  
                  WriteTimer0@timer0 000F                   PID_LineFollowing@D 0030  
                 PID_LineFollowing@P 003C                             ?_openLVD 0001  
            SharpTurn@delta_velocity 0029           __size_of_PID_LineFollowing 0226  
                     __size_of_isBOR 0016                     ___lwdiv@quotient 0019  
                     __size_of_isPOR 0026                       __size_of_gtrap 0062  
                     __size_of_putch 0002                      ??_check_sensors 0016  
                          _openPORTA 1F9E                            _openPORTB 1F98  
                          _openPORTD 1FA4                            _openPORTE 1F8C  
                     ___wmul@product 0013                        OpenADC@config 0013  
              __size_of_lvd_flag_set 0006              __size_of_GetBackonTrack 00C6  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                        ??_reset_codes 001C  
                   _motors_brake_all 1DE6                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1               __end_of_initialization 197A  
                           _RCONbits 000FD0                    ??_openPORTCforPWM 000F  
                      _set_osc_32MHz 1D1E                            main@F4186 003A  
__end_ofset_motor_speed@motor_speeds 100F          set_motor_speed@motor_speeds 1001  
                        _HLVDCONbits 000FD2                            _threshold 0038  
              __size_of_MotorControl 0190                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 000F                         ?_StatusReset 0001  
                    GetBackonTrack@i 002D                            main@error 002E  
       MotorControl@right_duty_cycle 0024                          ??_SetDCPWM1 0011  
                        ??_SetDCPWM2 0011                     __size_of_BORtask 0020  
                       _lvd_flag_set 1F80                     __size_of_PORtask 00AC  
                        ??_OpenUSART 0011                   SetDCPWM1@dutycycle 000F  
                         ?_openPORTA 0001                           ?_openPORTB 0001  
                         ?_openPORTD 0001                           ?_openPORTE 0001  
                   __size_of_WDTtask 001C                      OpenUSART@config 0011  
                           _OpenPWM1 1F30                             _OpenPWM2 1CB8  
    PID_LineFollowing@delta_velocity 0032                     __size_of_BusyADC 000E  
                        ??_SharpTurn 0026                     __size_of_ReadADC 0010  
                           __Hrparam 0000                     __size_of_OpenADC 005E  
                       _MotorControl 12A8                      ?_initialization 0001  
                           __Lrparam 0000                   SetDCPWM2@dutycycle 000F  
                     ?_set_osc_32MHz 0001                  __end_of_reset_codes 1C44  
                   __size_of___awdiv 0096                     __size_of___lwdiv 005C  
                       ?_WriteTimer0 000F                       OpenPWM2@ccp2mx 0010  
                   __size_of_isWDTTO 0026                       OpenPWM1@period 000F  
                     OpenPWM2@period 000F                      ___lwdiv@divisor 0017  
                   __size_of_openLVD 0018                      ___lwdiv@counter 001B  
                           __ptext10 1E68                             __ptext11 1EA2  
                           __ptext20 1EDA                             __ptext12 17A8  
                           __ptext21 1A76                             __ptext13 1E08  
                           __ptext30 1FAA                             __ptext22 1EBE  
                           __ptext14 1F86                             __ptext31 1F72  
                           __ptext23 1CB8                             __ptext15 1F8C  
                           __ptext40 1AE6                             __ptext32 1F42  
                           __ptext24 1F30                             __ptext16 1F92  
                           __ptext41 161E                             __ptext33 1082  
                           __ptext25 1B48                             __ptext17 1F64  
                           __ptext42 152E                             __ptext34 1BA6  
                           __ptext26 16E4                             __ptext18 1F98  
                           __ptext43 1DE6                             __ptext35 1E28  
                           __ptext27 1D4A                             __ptext19 1F9E  
                           __ptext44 12A8                             __ptext36 1E48  
                           __ptext28 1F08                             __ptext45 1D72  
                           __ptext37 1CF0                             __ptext29 1F54  
                           __ptext46 1854                             __ptext38 1FAE  
                           __ptext47 1C44                             __ptext39 1FA4  
                           __ptext48 1C7E                             _high_isr 0008  
                      __size_of_main 00F6                             _lvd_flag 003E  
                           _set_leds 197A                          _OSCTUNEbits 000F9B  
                         _INTCONbits 000FF2                           _D_CONSTANT 100F  
                     OpenUSART@spbrg 000F                             intlevel2 0000  
                        ??_openPORTA 000F                          ??_openPORTB 000F  
                        ??_openPORTD 000F                          ??_openPORTE 000F  
                     _GetBackonTrack 161E                    _openPORTCforUSART 1F92  
                  SetChanADC@channel 0010                      ??_set_osc_32MHz 000F  
                        _reset_codes 1C02                           _OSCCONbits 000FD3  
                 ?_openPORTCforUSART 0001                           _I_CONSTANT 1010  
                           printf@ap 0011                  ??_openPORTCforUSART 000F  
           __end_of_motors_brake_all 1E08                 __size_of_StatusReset 0006  
             __end_of_GetBackonTrack 16E4                       _SharpTurn$3084 0026  
                    _openPORTCforPWM 1F64            __end_of_openPORTCforUSART 1F98  
                         _STKFULtask 1E68                           _P_CONSTANT 1011  
