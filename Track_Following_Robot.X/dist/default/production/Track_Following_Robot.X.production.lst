

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 00:54:21 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     _D_CONSTANT:
    72                           	opt stack 0
    73  001001  FFFF               	dw	65535
    74  001003                     __end_of_D_CONSTANT:
    75                           	opt stack 0
    76  001003                     _I_CONSTANT:
    77                           	opt stack 0
    78  001003  04E2               	dw	1250
    79  001005                     __end_of_I_CONSTANT:
    80                           	opt stack 0
    81  001005                     _P_CONSTANT:
    82                           	opt stack 0
    83  001005  0096               	dw	150
    84  001007                     __end_of_P_CONSTANT:
    85                           	opt stack 0
    86  001007                     _TURN_TIME_ms:
    87                           	opt stack 0
    88  001007  0320               	dw	800
    89  001009                     __end_of_TURN_TIME_ms:
    90                           	opt stack 0
    91  001009                     _TURN_SPEED_DIVIDER:
    92                           	opt stack 0
    93  001009  00                 	db	0
    94  00100A                     __end_of_TURN_SPEED_DIVIDER:
    95                           	opt stack 0
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _CCP1CON	set	4029
   103  0000                     _CCP2CON	set	4026
   104  0000                     _CCPR1L	set	4030
   105  0000                     _CCPR2L	set	4027
   106  0000                     _HLVDCONbits	set	4050
   107  0000                     _INTCONbits	set	4082
   108  0000                     _IPR2bits	set	4002
   109  0000                     _OSCCONbits	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIE2bits	set	4000
   113  0000                     _PIR1bits	set	3998
   114  0000                     _PIR2bits	set	4001
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTD	set	3971
   117  0000                     _PORTDbits	set	3971
   118  0000                     _PORTEbits	set	3972
   119  0000                     _PR2	set	4043
   120  0000                     _RCONbits	set	4048
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _STKPTRbits	set	4092
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _T2CON	set	4042
   129  0000                     _T2CONbits	set	4042
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR2	set	4044
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISE	set	3990
   140  0000                     _TXSTA	set	4012
   141  0000                     _TXSTAbits	set	4012
   142  0000                     _TMR0IF	set	32658
   143  00100A                     STR_1:
   144  00100A  0A                 	db	10
   145  00100B  0D                 	db	13
   146  00100C  4B                 	db	75	;'K'
   147  00100D  77                 	db	119	;'w'
   148  00100E  61                 	db	97	;'a'
   149  00100F  6E                 	db	110	;'n'
   150  001010  74                 	db	116	;'t'
   151  001011  6C                 	db	108	;'l'
   152  001012  65                 	db	101	;'e'
   153  001013  6E                 	db	110	;'n'
   154  001014  20                 	db	32
   155  001015  41                 	db	65	;'A'
   156  001016  50                 	db	80	;'P'
   157  001017  53                 	db	83	;'S'
   158  001018  43                 	db	67	;'C'
   159  001019  31                 	db	49	;'1'
   160  00101A  32                 	db	50	;'2'
   161  00101B  39                 	db	57	;'9'
   162  00101C  39                 	db	57	;'9'
   163  00101D  20                 	db	32
   164  00101E  73                 	db	115	;'s'
   165  00101F  69                 	db	105	;'i'
   166  001020  6D                 	db	109	;'m'
   167  001021  70                 	db	112	;'p'
   168  001022  6C                 	db	108	;'l'
   169  001023  65                 	db	101	;'e'
   170  001024  20                 	db	32
   171  001025  63                 	db	99	;'c'
   172  001026  75                 	db	117	;'u'
   173  001027  72                 	db	114	;'r'
   174  001028  76                 	db	118	;'v'
   175  001029  65                 	db	101	;'e'
   176  00102A  20                 	db	32
   177  00102B  66                 	db	102	;'f'
   178  00102C  6F                 	db	111	;'o'
   179  00102D  6C                 	db	108	;'l'
   180  00102E  6C                 	db	108	;'l'
   181  00102F  6F                 	db	111	;'o'
   182  001030  77                 	db	119	;'w'
   183  001031  65                 	db	101	;'e'
   184  001032  72                 	db	114	;'r'
   185  001033  20                 	db	32
   186  001034  2D                 	db	45
   187  001035  2D                 	db	45
   188  001036  20                 	db	32
   189  001037  77                 	db	119	;'w'
   190  001038  69                 	db	105	;'i'
   191  001039  74                 	db	116	;'t'
   192  00103A  68                 	db	104	;'h'
   193  00103B  20                 	db	32
   194  00103C  65                 	db	101	;'e'
   195  00103D  72                 	db	114	;'r'
   196  00103E  72                 	db	114	;'r'
   197  00103F  6F                 	db	111	;'o'
   198  001040  72                 	db	114	;'r'
   199  001041  20                 	db	32
   200  001042  63                 	db	99	;'c'
   201  001043  6F                 	db	111	;'o'
   202  001044  64                 	db	100	;'d'
   203  001045  65                 	db	101	;'e'
   204  001046  73                 	db	115	;'s'
   205  001047  0A                 	db	10
   206  001048  0D                 	db	13
   207  001049  00                 	db	0
   208  00104A                     STR_6:
   209  00104A  20                 	db	32
   210  00104B  3C                 	db	60	;'<'
   211  00104C  72                 	db	114	;'r'
   212  00104D  65                 	db	101	;'e'
   213  00104E  73                 	db	115	;'s'
   214  00104F  65                 	db	101	;'e'
   215  001050  74                 	db	116	;'t'
   216  001051  3E                 	db	62	;'>'
   217  001052  20                 	db	32
   218  001053  00                 	db	0
   219  001054                     STR_5:
   220  001054  3C                 	db	60	;'<'
   221  001055  53                 	db	83	;'S'
   222  001056  54                 	db	84	;'T'
   223  001057  4B                 	db	75	;'K'
   224  001058  46                 	db	70	;'F'
   225  001059  55                 	db	85	;'U'
   226  00105A  4C                 	db	76	;'L'
   227  00105B  3E                 	db	62	;'>'
   228  00105C  00                 	db	0
   229  00105D                     STR_4:
   230  00105D  3C                 	db	60	;'<'
   231  00105E  57                 	db	87	;'W'
   232  00105F  44                 	db	68	;'D'
   233  001060  54                 	db	84	;'T'
   234  001061  20                 	db	32
   235  001062  54                 	db	84	;'T'
   236  001063  4F                 	db	79	;'O'
   237  001064  3E                 	db	62	;'>'
   238  001065  00                 	db	0
   239  001066                     STR_7:
   240  001066  5C                 	db	92	;'\'
   241  001067  3C                 	db	60	;'<'
   242  001068  4C                 	db	76	;'L'
   243  001069  56                 	db	86	;'V'
   244  00106A  44                 	db	68	;'D'
   245  00106B  3E                 	db	62	;'>'
   246  00106C  00                 	db	0
   247  00106D                     STR_3:
   248  00106D  3C                 	db	60	;'<'
   249  00106E  42                 	db	66	;'B'
   250  00106F  4F                 	db	79	;'O'
   251  001070  52                 	db	82	;'R'
   252  001071  3E                 	db	62	;'>'
   253  001072  00                 	db	0
   254  001073                     STR_2:
   255  001073  3C                 	db	60	;'<'
   256  001074  50                 	db	80	;'P'
   257  001075  4F                 	db	79	;'O'
   258  001076  52                 	db	82	;'R'
   259  001077  3E                 	db	62	;'>'
   260  001078  00                 	db	0
   261                           
   262                           ; #config settings
   263  001079  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  002268                     __pcinit:
   267                           	opt stack 0
   268  002268                     start_initialization:
   269                           	opt stack 0
   270  002268                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (15 bytes)
   274  002268  EE00  F041         	lfsr	0,__pbssCOMRAM
   275  00226C  0E0F               	movlw	15
   276  00226E                     clear_0:
   277  00226E  6AEE               	clrf	postinc0,c
   278  002270  06E8               	decf	wreg,f,c
   279  002272  E1FD               	bnz	clear_0
   280  002274                     end_of_initialization:
   281                           	opt stack 0
   282  002274                     __end_of__initialization:
   283                           	opt stack 0
   284  002274  0100               	movlb	0
   285  002276  EF5B  F00B         	goto	_main	;jump to C main() function
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssCOMRAM
   290  000041                     __pbssCOMRAM:
   291                           	opt stack 0
   292  000041                     main@F4194:
   293                           	opt stack 0
   294  000041                     	ds	3
   295  000044                     PID_LineFollowing@D:
   296                           	opt stack 0
   297  000044                     	ds	2
   298  000046                     PID_LineFollowing@delta_velocity:
   299                           	opt stack 0
   300  000046                     	ds	2
   301  000048                     _I:
   302                           	opt stack 0
   303  000048                     	ds	2
   304  00004A                     _threshold:
   305                           	opt stack 0
   306  00004A                     	ds	2
   307  00004C                     _CCW_rotation_flag:
   308                           	opt stack 0
   309  00004C                     	ds	1
   310  00004D                     _CW_rotation_flag:
   311                           	opt stack 0
   312  00004D                     	ds	1
   313  00004E                     _SeeLine:
   314                           	opt stack 0
   315  00004E                     	ds	1
   316  00004F                     _lvd_flag:
   317                           	opt stack 0
   318  00004F                     	ds	1
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000001                     ??_high_isr:
   326  000001                     
   327                           ; 1 bytes @ 0x0
   328  000001                     	ds	14
   329  00000F                     ??_set_leds:
   330  00000F                     ??_SetChanADC:
   331  00000F                     ?_printf:
   332                           	opt stack 0
   333  00000F                     ?_ReadTimer0:
   334                           	opt stack 0
   335  00000F                     ?_ReadADC:
   336                           	opt stack 0
   337  00000F                     ?___aldiv:
   338                           	opt stack 0
   339  00000F                     OpenADC@config2:
   340                           	opt stack 0
   341  00000F                     OpenPWM1@period:
   342                           	opt stack 0
   343  00000F                     OpenPWM2@period:
   344                           	opt stack 0
   345  00000F                     OpenTimer0@config:
   346                           	opt stack 0
   347  00000F                     OpenTimer2@config:
   348                           	opt stack 0
   349  00000F                     set_osc_32MHz@i:
   350                           	opt stack 0
   351  00000F                     printf@f:
   352                           	opt stack 0
   353  00000F                     SetDCPWM1@dutycycle:
   354                           	opt stack 0
   355  00000F                     SetDCPWM2@dutycycle:
   356                           	opt stack 0
   357  00000F                     WriteTimer0@timer0:
   358                           	opt stack 0
   359  00000F                     OpenUSART@spbrg:
   360                           	opt stack 0
   361  00000F                     gtrap@count:
   362                           	opt stack 0
   363  00000F                     ___aldiv@dividend:
   364                           	opt stack 0
   365                           
   366                           ; 4 bytes @ 0xE
   367  00000F                     	ds	1
   368  000010                     OpenADC@portconfig:
   369                           	opt stack 0
   370  000010                     SetChanADC@channel:
   371                           	opt stack 0
   372  000010                     OpenPWM2@ccp2mx:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0xF
   376  000010                     	ds	1
   377  000011                     ??_SetDCPWM2:
   378  000011                     ??_SetDCPWM1:
   379  000011                     ??_OpenADC:
   380  000011                     ??_ReadADC:
   381  000011                     OpenUSART@config:
   382                           	opt stack 0
   383  000011                     printf@ap:
   384                           	opt stack 0
   385  000011                     ReadTimer0@timer:
   386                           	opt stack 0
   387  000011                     WriteTimer0@timer:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x10
   391  000011                     	ds	2
   392  000013                     ?_adc:
   393                           	opt stack 0
   394  000013                     ?___lwdiv:
   395                           	opt stack 0
   396  000013                     ?___lwmod:
   397                           	opt stack 0
   398  000013                     printf@c:
   399                           	opt stack 0
   400  000013                     OpenADC@config:
   401                           	opt stack 0
   402  000013                     SetDCPWM1@DCycle:
   403                           	opt stack 0
   404  000013                     SetDCPWM2@DCycle:
   405                           	opt stack 0
   406  000013                     ___lwdiv@dividend:
   407                           	opt stack 0
   408  000013                     ___lwmod@dividend:
   409                           	opt stack 0
   410  000013                     ___aldiv@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x12
   414  000013                     	ds	1
   415  000014                     PORtask@count1:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x13
   419  000014                     	ds	1
   420  000015                     adc@channel:
   421                           	opt stack 0
   422  000015                     ___lwdiv@divisor:
   423                           	opt stack 0
   424  000015                     ___lwmod@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x14
   428  000015                     	ds	1
   429  000016                     ??_check_sensors:
   430                           
   431                           ; 0 bytes @ 0x15
   432  000016                     	ds	1
   433  000017                     ___aldiv@counter:
   434                           	opt stack 0
   435  000017                     ___lwmod@counter:
   436                           	opt stack 0
   437  000017                     ___lwdiv@quotient:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x16
   441  000017                     	ds	1
   442  000018                     ___aldiv@sign:
   443                           	opt stack 0
   444  000018                     PORtask@count2:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0x17
   448  000018                     	ds	1
   449  000019                     ___lwdiv@counter:
   450                           	opt stack 0
   451  000019                     ___aldiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x18
   455  000019                     	ds	3
   456  00001C                     
   457                           ; 0 bytes @ 0x1B
   458  00001C                     	ds	1
   459  00001D                     ?___wmul:
   460                           	opt stack 0
   461  00001D                     ___wmul@multiplier:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x1C
   465  00001D                     	ds	2
   466  00001F                     ___wmul@multiplicand:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x1E
   470  00001F                     	ds	2
   471  000021                     ___wmul@product:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x20
   475  000021                     	ds	2
   476  000023                     ?___awdiv:
   477                           	opt stack 0
   478  000023                     ___awdiv@dividend:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x22
   482  000023                     	ds	2
   483  000025                     ___awdiv@divisor:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x24
   487  000025                     	ds	2
   488  000027                     ___awdiv@counter:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x26
   492  000027                     	ds	1
   493  000028                     ___awdiv@sign:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x27
   497  000028                     	ds	1
   498  000029                     ___awdiv@quotient:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x28
   502  000029                     	ds	2
   503  00002B                     MotorControl@delta_velocity:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x2A
   507  00002B                     	ds	2
   508  00002D                     MotorControl@speed_divider:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x2C
   512  00002D                     	ds	1
   513  00002E                     ??_MotorControl:
   514                           
   515                           ; 0 bytes @ 0x2D
   516  00002E                     	ds	1
   517  00002F                     MotorControl@left_dir_modifier:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x2E
   521  00002F                     	ds	1
   522  000030                     MotorControl@right_dir_modifier:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x2F
   526  000030                     	ds	1
   527  000031                     MotorControl@left_duty_cycle:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x30
   531  000031                     	ds	2
   532  000033                     MotorControl@right_duty_cycle:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x32
   536  000033                     	ds	2
   537  000035                     ??_SharpTurn:
   538  000035                     _AllSensorsTriggered$472:
   539                           	opt stack 0
   540  000035                     PID_LineFollowing@error:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x34
   544  000035                     	ds	1
   545  000036                     SharpTurn@direction:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x35
   549  000036                     	ds	1
   550  000037                     ??_PID_LineFollowing:
   551  000037                     SharpTurn@delta_velocity:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x36
   555  000037                     	ds	2
   556  000039                     GetBackonTrack@error:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x38
   560  000039                     	ds	2
   561  00003B                     ??_GetBackonTrack:
   562                           
   563                           ; 0 bytes @ 0x3A
   564  00003B                     	ds	1
   565  00003C                     GetBackonTrack@i:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x3B
   569  00003C                     	ds	2
   570  00003E                     main@error:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x3D
   574  00003E                     	ds	3
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           
   578 ;;
   579 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   580 ;;
   581 ;; *************** function _main *****************
   582 ;; Defined at:
   583 ;;		line 26 in file "../Robot Files/main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  error           3   61[COMRAM] char [3]
   588 ;; Return value:  Size  Location     Type
   589 ;;		None               void
   590 ;; Registers used:
   591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;Total ram usage:        3 bytes
   602 ;; Hardware stack levels required when called:    6
   603 ;; This function calls:
   604 ;;		_AllSensorsTriggered
   605 ;;		_GetBackonTrack
   606 ;;		_LVtrap
   607 ;;		_OpenTimer0
   608 ;;		_PID_LineFollowing
   609 ;;		_WriteTimer0
   610 ;;		_check_sensors
   611 ;;		_initialization
   612 ;;		_lvd_flag_set
   613 ;;		_printf
   614 ;;		_set_leds
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text0
   621  0016B6                     __ptext0:
   622                           	opt stack 0
   623  0016B6                     _main:
   624                           	opt stack 25
   625                           
   626                           ;main.c: 28: signed char error[3]={0};
   627                           
   628                           ;incstack = 0
   629  0016B6  C041  F03E         	movff	main@F4194,main@error
   630  0016BA  C042  F03F         	movff	main@F4194+1,main@error+1
   631  0016BE  C043  F040         	movff	main@F4194+2,main@error+2
   632                           
   633                           ;main.c: 31: initialization();
   634  0016C2  ECB9  F00D         	call	_initialization	;wreg free
   635                           
   636                           ;main.c: 36: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   637  0016C6  0E0A               	movlw	low STR_1
   638  0016C8  6E0F               	movwf	printf@f,c
   639  0016CA  0E10               	movlw	high STR_1
   640  0016CC  6E10               	movwf	printf@f+1,c
   641  0016CE  EC1D  F010         	call	_printf	;wreg free
   642  0016D2  0004               	clrwdt		;# 
   643                           
   644                           ;main.c: 38: threshold = 575u;
   645  0016D4  0E02               	movlw	2
   646  0016D6  6E4B               	movwf	_threshold+1,c
   647  0016D8  0E3F               	movlw	63
   648  0016DA  6E4A               	movwf	_threshold,c
   649                           
   650                           ;main.c: 42: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   651  0016DC  0E16               	movlw	22
   652  0016DE  ECB9  F010         	call	_OpenTimer0
   653                           
   654                           ;main.c: 43: WriteTimer0(0);
   655  0016E2  0E00               	movlw	0
   656  0016E4  6E10               	movwf	WriteTimer0@timer0+1,c
   657  0016E6  0E00               	movlw	0
   658  0016E8  6E0F               	movwf	WriteTimer0@timer0,c
   659  0016EA  EC4F  F011         	call	_WriteTimer0	;wreg free
   660                           
   661                           ;main.c: 44: TMR0IF = 0;
   662  0016EE  94F2               	bcf	intcon,2,c	;volatile
   663  0016F0  D000               	goto	l2771
   664  0016F2                     l2771:
   665                           
   666                           ;main.c: 47: {
   667                           ;main.c: 48: check_sensors();
   668  0016F2  EC61  F00C         	call	_check_sensors	;wreg free
   669                           
   670                           ;main.c: 55: switch(SeeLine.B)
   671  0016F6  D035               	goto	l2811
   672  0016F8                     l2773:
   673                           
   674                           ;main.c: 58: error[2]=1; break;
   675  0016F8  0E01               	movlw	1
   676  0016FA  D031               	goto	L7
   677  0016FC                     l2775:
   678                           
   679                           ;main.c: 60: error[2]=2; break;
   680  0016FC  0E02               	movlw	2
   681  0016FE  D02F               	goto	L7
   682  001700                     l2777:
   683                           
   684                           ;main.c: 62: error[2]=3; break;
   685  001700  0E03               	movlw	3
   686  001702  D02D               	goto	L7
   687  001704                     l2779:
   688                           
   689                           ;main.c: 64: error[2]=4; break;
   690  001704  0E04               	movlw	4
   691  001706  D02B               	goto	L7
   692  001708                     l74:
   693                           
   694                           ;main.c: 66: error[2]=-1; break;
   695  001708  6840               	setf	main@error+2,c
   696  00170A  D052               	goto	l70
   697  00170C                     l2781:
   698                           
   699                           ;main.c: 68: error[2]=-2; break;
   700  00170C  0EFE               	movlw	254
   701  00170E  D027               	goto	L7
   702  001710                     l2783:
   703                           
   704                           ;main.c: 70: error[2]=-3; break;
   705  001710  0EFD               	movlw	253
   706  001712  D025               	goto	L7
   707  001714                     l2785:
   708                           
   709                           ;main.c: 72: error[2]=-4; break;
   710  001714  0EFC               	movlw	252
   711  001716  D023               	goto	L7
   712  001718                     l2787:
   713                           
   714                           ;main.c: 74: {
   715                           ;main.c: 75: WriteTimer0(0);
   716  001718  0E00               	movlw	0
   717  00171A  6E10               	movwf	WriteTimer0@timer0+1,c
   718  00171C  0E00               	movlw	0
   719  00171E  6E0F               	movwf	WriteTimer0@timer0,c
   720  001720  EC4F  F011         	call	_WriteTimer0	;wreg free
   721                           
   722                           ;main.c: 76: TMR0IF = 0;
   723  001724  94F2               	bcf	intcon,2,c	;volatile
   724                           
   725                           ;main.c: 77: CW_rotation_flag = 1;
   726  001726  0E01               	movlw	1
   727  001728  6E4D               	movwf	_CW_rotation_flag,c
   728                           
   729                           ;main.c: 78: CCW_rotation_flag = 0;
   730  00172A  0E00               	movlw	0
   731  00172C  6E4C               	movwf	_CCW_rotation_flag,c
   732                           
   733                           ;main.c: 79: }break;
   734  00172E  D040               	goto	l70
   735  001730                     l2795:
   736                           
   737                           ;main.c: 81: {
   738                           ;main.c: 82: WriteTimer0(0);
   739  001730  0E00               	movlw	0
   740  001732  6E10               	movwf	WriteTimer0@timer0+1,c
   741  001734  0E00               	movlw	0
   742  001736  6E0F               	movwf	WriteTimer0@timer0,c
   743  001738  EC4F  F011         	call	_WriteTimer0	;wreg free
   744                           
   745                           ;main.c: 83: TMR0IF = 0;
   746  00173C  94F2               	bcf	intcon,2,c	;volatile
   747                           
   748                           ;main.c: 84: CCW_rotation_flag = 1;
   749  00173E  0E01               	movlw	1
   750  001740  6E4C               	movwf	_CCW_rotation_flag,c
   751                           
   752                           ;main.c: 85: CW_rotation_flag = 0;
   753  001742  0E00               	movlw	0
   754  001744  6E4D               	movwf	_CW_rotation_flag,c
   755                           
   756                           ;main.c: 86: }break;
   757  001746  D034               	goto	l70
   758  001748                     l2803:
   759                           
   760                           ;main.c: 88: GetBackonTrack(error); break;
   761  001748  0E3E               	movlw	low main@error
   762  00174A  6E39               	movwf	GetBackonTrack@error,c
   763  00174C  0E00               	movlw	high main@error
   764  00174E  6E3A               	movwf	GetBackonTrack@error+1,c
   765  001750  ECA8  F00A         	call	_GetBackonTrack	;wreg free
   766  001754  D02D               	goto	l70
   767  001756                     l2805:
   768                           
   769                           ;main.c: 90: AllSensorsTriggered(); break;
   770  001756  EC7F  F00E         	call	_AllSensorsTriggered	;wreg free
   771  00175A  D02A               	goto	l70
   772  00175C                     l2807:
   773                           
   774                           ;main.c: 92: error[2]=0; break;
   775  00175C  0E00               	movlw	0
   776  00175E                     L7:
   777  00175E  6E40               	movwf	main@error+2,c
   778                           
   779                           ;main.c: 93: }
   780  001760  D027               	goto	l70
   781  001762                     l2811:
   782  001762  504E               	movf	_SeeLine,w,c
   783  001764  0B1F               	andlw	31
   784                           
   785                           ; Switch size 1, requested type "space"
   786                           ; Number of cases is 12, Range of values is 0 to 31
   787                           ; switch strategies available:
   788                           ; Name         Instructions Cycles
   789                           ; simple_byte           37    19 (average)
   790                           ;	Chosen strategy is simple_byte
   791  001766  0A00               	xorlw	0	; case 0
   792  001768  B4D8               	btfsc	status,2,c
   793  00176A  D7EE               	goto	l2803
   794  00176C  0A01               	xorlw	1	; case 1
   795  00176E  B4D8               	btfsc	status,2,c
   796  001770  D7C9               	goto	l2779
   797  001772  0A03               	xorlw	3	; case 2
   798  001774  B4D8               	btfsc	status,2,c
   799  001776  D7C2               	goto	l2775
   800  001778  0A01               	xorlw	1	; case 3
   801  00177A  B4D8               	btfsc	status,2,c
   802  00177C  D7C1               	goto	l2777
   803  00177E  0A05               	xorlw	5	; case 6
   804  001780  B4D8               	btfsc	status,2,c
   805  001782  D7BA               	goto	l2773
   806  001784  0A01               	xorlw	1	; case 7
   807  001786  B4D8               	btfsc	status,2,c
   808  001788  D7C7               	goto	l2787
   809  00178A  0A0F               	xorlw	15	; case 8
   810  00178C  B4D8               	btfsc	status,2,c
   811  00178E  D7BE               	goto	l2781
   812  001790  0A04               	xorlw	4	; case 12
   813  001792  B4D8               	btfsc	status,2,c
   814  001794  D7B9               	goto	l74
   815  001796  0A1C               	xorlw	28	; case 16
   816  001798  B4D8               	btfsc	status,2,c
   817  00179A  D7BC               	goto	l2785
   818  00179C  0A08               	xorlw	8	; case 24
   819  00179E  B4D8               	btfsc	status,2,c
   820  0017A0  D7B7               	goto	l2783
   821  0017A2  0A04               	xorlw	4	; case 28
   822  0017A4  B4D8               	btfsc	status,2,c
   823  0017A6  D7C4               	goto	l2795
   824  0017A8  0A03               	xorlw	3	; case 31
   825  0017AA  B4D8               	btfsc	status,2,c
   826  0017AC  D7D4               	goto	l2805
   827  0017AE  D7D6               	goto	l2807
   828  0017B0                     l70:
   829                           
   830                           ;main.c: 95: if(TMR0IF)
   831  0017B0  A4F2               	btfss	intcon,2,c	;volatile
   832  0017B2  D005               	goto	l2815
   833                           
   834                           ;main.c: 96: {
   835                           ;main.c: 97: CW_rotation_flag = 0;
   836  0017B4  0E00               	movlw	0
   837  0017B6  6E4D               	movwf	_CW_rotation_flag,c
   838                           
   839                           ;main.c: 98: CCW_rotation_flag = 0;
   840  0017B8  0E00               	movlw	0
   841  0017BA  6E4C               	movwf	_CCW_rotation_flag,c
   842  0017BC  D000               	goto	l2815
   843  0017BE                     l2815:
   844                           
   845                           ;main.c: 99: }
   846                           ;main.c: 101: set_leds();
   847  0017BE  EC01  F00E         	call	_set_leds	;wreg free
   848                           
   849                           ;main.c: 102: PID_LineFollowing(error);
   850  0017C2  0E3E               	movlw	low main@error
   851  0017C4  6E35               	movwf	PID_LineFollowing@error,c
   852  0017C6  0E00               	movlw	high main@error
   853  0017C8  6E36               	movwf	PID_LineFollowing@error+1,c
   854  0017CA  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   855  0017CE  0004               	clrwdt		;# 
   856                           
   857                           ;main.c: 105: if(lvd_flag_set()) LVtrap();
   858  0017D0  EC6E  F011         	call	_lvd_flag_set	;wreg free
   859  0017D4  0900               	iorlw	0
   860  0017D6  B4D8               	btfsc	status,2,c
   861  0017D8  D78C               	goto	l2771
   862  0017DA  ECC9  F010         	call	_LVtrap	;wreg free
   863  0017DE  D789               	goto	l2771
   864  0017E0  EF0C  F000         	goto	start
   865  0017E4                     __end_of_main:
   866                           	opt stack 0
   867                           intcon	equ	0xFF2
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           status	equ	0xFD8
   871                           
   872 ;; *************** function _lvd_flag_set *****************
   873 ;; Defined at:
   874 ;;		line 47 in file "../Robot Files/interrupts.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      unsigned char 
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text1
   903  0022DC                     __ptext1:
   904                           	opt stack 0
   905  0022DC                     _lvd_flag_set:
   906                           	opt stack 29
   907                           
   908                           ;interrupts.c: 49: return lvd_flag;
   909                           
   910                           ;incstack = 0
   911  0022DC  504F               	movf	_lvd_flag,w,c
   912  0022DE  D000               	goto	l381
   913  0022E0                     l381:
   914  0022E0  0012               	return		;funcret
   915  0022E2                     __end_of_lvd_flag_set:
   916                           	opt stack 0
   917                           intcon	equ	0xFF2
   918                           postinc0	equ	0xFEE
   919                           wreg	equ	0xFE8
   920                           status	equ	0xFD8
   921                           
   922 ;; *************** function _initialization *****************
   923 ;; Defined at:
   924 ;;		line 65 in file "../Robot Files/sumovore.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;		None               void
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    5
   945 ;; This function calls:
   946 ;;		_OpenADC
   947 ;;		_OpenPWM1
   948 ;;		_OpenPWM2
   949 ;;		_OpenTimer2
   950 ;;		_OpenUSART
   951 ;;		_SetDCPWM1
   952 ;;		_SetDCPWM2
   953 ;;		_openLVD
   954 ;;		_openPORTA
   955 ;;		_openPORTB
   956 ;;		_openPORTCforPWM
   957 ;;		_openPORTCforUSART
   958 ;;		_openPORTD
   959 ;;		_openPORTE
   960 ;;		_reset_codes
   961 ;;		_set_osc_32MHz
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text2
   968  001B72                     __ptext2:
   969                           	opt stack 0
   970  001B72                     _initialization:
   971                           	opt stack 25
   972                           
   973                           ;sumovore.c: 67: SeeLine.B = 0;
   974                           
   975                           ;incstack = 0
   976  001B72  904E               	bcf	_SeeLine,0,c
   977  001B74  924E               	bcf	_SeeLine,1,c
   978  001B76  944E               	bcf	_SeeLine,2,c
   979  001B78  964E               	bcf	_SeeLine,3,c
   980  001B7A  984E               	bcf	_SeeLine,4,c
   981                           
   982                           ;sumovore.c: 68: RCONbits.IPEN = 1;
   983  001B7C  8ED0               	bsf	4048,7,c	;volatile
   984                           
   985                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
   986  001B7E  9EF2               	bcf	intcon,7,c	;volatile
   987                           
   988                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
   989  001B80  9CF2               	bcf	intcon,6,c	;volatile
   990                           
   991                           ;sumovore.c: 72: set_osc_32MHz();
   992  001B82  EC34  F010         	call	_set_osc_32MHz	;wreg free
   993                           
   994                           ;sumovore.c: 73: openPORTCforUSART();
   995  001B86  EC77  F011         	call	_openPORTCforUSART	;wreg free
   996                           
   997                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
   998                           ;sumovore.c: 76: 16 );
   999  001B8A  0E00               	movlw	0
  1000  001B8C  6E10               	movwf	OpenUSART@spbrg+1,c
  1001  001B8E  0E10               	movlw	16
  1002  001B90  6E0F               	movwf	OpenUSART@spbrg,c
  1003  001B92  0E3C               	movlw	60
  1004  001B94  ECBA  F00E         	call	_OpenUSART
  1005                           
  1006                           ;sumovore.c: 82: openPORTD();
  1007  001B98  EC80  F011         	call	_openPORTD	;wreg free
  1008                           
  1009                           ;sumovore.c: 83: PORTD = 0;
  1010  001B9C  0E00               	movlw	0
  1011  001B9E  6E83               	movwf	3971,c	;volatile
  1012                           
  1013                           ;sumovore.c: 85: reset_codes();
  1014  001BA0  ECA6  F00F         	call	_reset_codes	;wreg free
  1015                           
  1016                           ;sumovore.c: 87: openPORTCforPWM();
  1017  001BA4  EC60  F011         	call	_openPORTCforPWM	;wreg free
  1018                           
  1019                           ;sumovore.c: 89: openPORTA();
  1020  001BA8  EC7D  F011         	call	_openPORTA	;wreg free
  1021                           
  1022                           ;sumovore.c: 90: openPORTB();
  1023  001BAC  EC7A  F011         	call	_openPORTB	;wreg free
  1024                           
  1025                           ;sumovore.c: 91: openPORTE();
  1026  001BB0  EC74  F011         	call	_openPORTE	;wreg free
  1027                           
  1028                           ;sumovore.c: 94: openLVD();
  1029  001BB4  EC12  F011         	call	_openLVD	;wreg free
  1030                           
  1031                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1032  001BB8  0E0C               	movlw	12
  1033  001BBA  6E0F               	movwf	OpenADC@config2,c
  1034  001BBC  0E0A               	movlw	10
  1035  001BBE  6E10               	movwf	OpenADC@portconfig,c
  1036  001BC0  0EA7               	movlw	167
  1037  001BC2  EC23  F00F         	call	_OpenADC
  1038                           
  1039                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1040  001BC6  9A82               	bcf	3970,5,c	;volatile
  1041                           
  1042                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1043  001BC8  9084               	bcf	3972,0,c	;volatile
  1044                           
  1045                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1046  001BCA  9082               	bcf	3970,0,c	;volatile
  1047                           
  1048                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1049  001BCC  9284               	bcf	3972,1,c	;volatile
  1050                           
  1051                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1052  001BCE  0E06               	movlw	6
  1053  001BD0  EC04  F011         	call	_OpenTimer2
  1054                           
  1055                           ;sumovore.c: 110: OpenPWM1(199);
  1056  001BD4  0EC7               	movlw	199
  1057  001BD6  EC3D  F011         	call	_OpenPWM1
  1058                           
  1059                           ;sumovore.c: 112: OpenPWM2(199);
  1060  001BDA  0EC7               	movlw	199
  1061  001BDC  EC01  F010         	call	_OpenPWM2
  1062                           
  1063                           ;sumovore.c: 113: SetDCPWM1(0);
  1064  001BE0  0E00               	movlw	0
  1065  001BE2  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1066  001BE4  0E00               	movlw	0
  1067  001BE6  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1068  001BE8  ECE4  F00F         	call	_SetDCPWM1	;wreg free
  1069                           
  1070                           ;sumovore.c: 116: SetDCPWM2(0);
  1071  001BEC  0E00               	movlw	0
  1072  001BEE  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1073  001BF0  0E00               	movlw	0
  1074  001BF2  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1075  001BF4  ECC7  F00F         	call	_SetDCPWM2	;wreg free
  1076                           
  1077                           ;sumovore.c: 117: threshold = 512u;
  1078  001BF8  0E02               	movlw	2
  1079  001BFA  6E4B               	movwf	_threshold+1,c
  1080  001BFC  0E00               	movlw	0
  1081  001BFE  6E4A               	movwf	_threshold,c
  1082  001C00  0012               	return		;funcret
  1083  001C02                     __end_of_initialization:
  1084                           	opt stack 0
  1085                           intcon	equ	0xFF2
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _set_osc_32MHz *****************
  1091 ;; Defined at:
  1092 ;;		line 18 in file "../Robot Files/osc.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  i               2   14[COMRAM] int 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;		None               void
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;Total ram usage:        2 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_initialization
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text3
  1121  002068                     __ptext3:
  1122                           	opt stack 0
  1123  002068                     _set_osc_32MHz:
  1124                           	opt stack 28
  1125                           
  1126                           ;osc.c: 20: int i;
  1127                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1128                           
  1129                           ;incstack = 0
  1130  002068  8CD3               	bsf	4051,6,c	;volatile
  1131                           
  1132                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1133  00206A  8AD3               	bsf	4051,5,c	;volatile
  1134                           
  1135                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1136  00206C  88D3               	bsf	4051,4,c	;volatile
  1137                           
  1138                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1139  00206E  8C9B               	bsf	3995,6,c	;volatile
  1140                           
  1141                           ;osc.c: 28: for(i=0;i<500;i++);
  1142  002070  0E00               	movlw	0
  1143  002072  6E10               	movwf	set_osc_32MHz@i+1,c
  1144  002074  0E00               	movlw	0
  1145  002076  6E0F               	movwf	set_osc_32MHz@i,c
  1146  002078                     l1591:
  1147  002078  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1148  00207A  D008               	goto	l1595
  1149  00207C  0EF4               	movlw	244
  1150  00207E  5C0F               	subwf	set_osc_32MHz@i,w,c
  1151  002080  0E01               	movlw	1
  1152  002082  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1153  002084  B0D8               	btfsc	status,0,c
  1154  002086  D005               	goto	l390
  1155  002088  D001               	goto	l1595
  1156  00208A  D003               	goto	l390
  1157  00208C                     l1595:
  1158  00208C  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1159  00208E  2A10               	incf	set_osc_32MHz@i+1,f,c
  1160  002090  D7F3               	goto	l1591
  1161  002092                     l390:
  1162  002092  0012               	return		;funcret
  1163  002094                     __end_of_set_osc_32MHz:
  1164                           	opt stack 0
  1165                           intcon	equ	0xFF2
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function _reset_codes *****************
  1171 ;; Defined at:
  1172 ;;		line 282 in file "../Robot Files/sumovore.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;		None               void
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    4
  1193 ;; This function calls:
  1194 ;;		_BORtask
  1195 ;;		_PORtask
  1196 ;;		_RESETtask
  1197 ;;		_STKFULtask
  1198 ;;		_WDTtask
  1199 ;;		_isBOR
  1200 ;;		_isPOR
  1201 ;;		_isWDTTO
  1202 ;; This function is called by:
  1203 ;;		_initialization
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text4
  1208  001F4C                     __ptext4:
  1209                           	opt stack 0
  1210  001F4C                     _reset_codes:
  1211                           	opt stack 25
  1212                           
  1213                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1214                           
  1215                           ;incstack = 0
  1216  001F4C  EC85  F010         	call	_isPOR	;wreg free
  1217  001F50  0900               	iorlw	0
  1218  001F52  B4D8               	btfsc	status,2,c
  1219  001F54  D003               	goto	l2465
  1220  001F56  ECC3  F00C         	call	_PORtask	;wreg free
  1221  001F5A  D018               	goto	l321
  1222  001F5C                     l2465:
  1223                           
  1224                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1225  001F5C  EC1E  F011         	call	_isBOR	;wreg free
  1226  001F60  0900               	iorlw	0
  1227  001F62  B4D8               	btfsc	status,2,c
  1228  001F64  D003               	goto	l2469
  1229  001F66  ECA9  F010         	call	_BORtask	;wreg free
  1230  001F6A  D010               	goto	l321
  1231  001F6C                     l2469:
  1232                           
  1233                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1234  001F6C  EC72  F010         	call	_isWDTTO	;wreg free
  1235  001F70  0900               	iorlw	0
  1236  001F72  B4D8               	btfsc	status,2,c
  1237  001F74  D003               	goto	l317
  1238  001F76  ECE8  F010         	call	_WDTtask	;wreg free
  1239  001F7A  D008               	goto	l321
  1240  001F7C                     l317:
  1241                           
  1242                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1243  001F7C  AEFC               	btfss	stkptr,7,c	;volatile
  1244  001F7E  D003               	goto	l2475
  1245  001F80  ECD9  F010         	call	_STKFULtask	;wreg free
  1246  001F84  D003               	goto	l321
  1247  001F86                     l2475:
  1248                           
  1249                           ;sumovore.c: 297: else RESETtask();
  1250  001F86  ECF6  F010         	call	_RESETtask	;wreg free
  1251  001F8A  D000               	goto	l321
  1252  001F8C                     l321:
  1253  001F8C  0012               	return		;funcret
  1254  001F8E                     __end_of_reset_codes:
  1255                           	opt stack 0
  1256                           stkptr	equ	0xFFC
  1257                           intcon	equ	0xFF2
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           status	equ	0xFD8
  1261                           
  1262 ;; *************** function _isWDTTO *****************
  1263 ;; Defined at:
  1264 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      unsigned char 
  1271 ;; Registers used:
  1272 ;;		wreg
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_reset_codes
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text5
  1293  0020E4                     __ptext5:
  1294                           	opt stack 0
  1295  0020E4                     _isWDTTO:
  1296                           	opt stack 27
  1297                           
  1298                           ;incstack = 0
  1299  0020E4  A2D0               	btfss	4048,1,c	;volatile
  1300  0020E6  D00E               	goto	l1497
  1301  0020E8  A4D0               	btfss	4048,2,c	;volatile
  1302  0020EA  D00A               	goto	l1493
  1303  0020EC  A0D0               	btfss	4048,0,c	;volatile
  1304  0020EE  D006               	goto	l1489
  1305  0020F0  A6D0               	btfss	4048,3,c	;volatile
  1306  0020F2  D002               	goto	l1485
  1307  0020F4  D003               	goto	l1489
  1308  0020F6  D008               	goto	l607
  1309  0020F8                     l1485:
  1310  0020F8  0E01               	movlw	1
  1311  0020FA  D006               	goto	l607
  1312  0020FC                     l1489:
  1313  0020FC  0E00               	movlw	0
  1314  0020FE  D004               	goto	l607
  1315  002100                     l1493:
  1316  002100  0E00               	movlw	0
  1317  002102  D002               	goto	l607
  1318  002104                     l1497:
  1319  002104  0E00               	movlw	0
  1320  002106  D000               	goto	l607
  1321  002108                     l607:
  1322  002108  0012               	return		;funcret
  1323  00210A                     __end_of_isWDTTO:
  1324                           	opt stack 0
  1325                           stkptr	equ	0xFFC
  1326                           intcon	equ	0xFF2
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _isPOR *****************
  1332 ;; Defined at:
  1333 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_reset_codes
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text6
  1362  00210A                     __ptext6:
  1363                           	opt stack 0
  1364  00210A                     _isPOR:
  1365                           	opt stack 27
  1366                           
  1367                           ;incstack = 0
  1368  00210A  B2D0               	btfsc	4048,1,c	;volatile
  1369  00210C  D00E               	goto	l1405
  1370  00210E  A4D0               	btfss	4048,2,c	;volatile
  1371  002110  D00A               	goto	l1401
  1372  002112  B0D0               	btfsc	4048,0,c	;volatile
  1373  002114  D006               	goto	l1397
  1374  002116  B6D0               	btfsc	4048,3,c	;volatile
  1375  002118  D002               	goto	l1393
  1376  00211A  D003               	goto	l1397
  1377  00211C  D008               	goto	l598
  1378  00211E                     l1393:
  1379  00211E  0E01               	movlw	1
  1380  002120  D006               	goto	l598
  1381  002122                     l1397:
  1382  002122  0E00               	movlw	0
  1383  002124  D004               	goto	l598
  1384  002126                     l1401:
  1385  002126  0E00               	movlw	0
  1386  002128  D002               	goto	l598
  1387  00212A                     l1405:
  1388  00212A  0E00               	movlw	0
  1389  00212C  D000               	goto	l598
  1390  00212E                     l598:
  1391  00212E  0012               	return		;funcret
  1392  002130                     __end_of_isPOR:
  1393                           	opt stack 0
  1394                           stkptr	equ	0xFFC
  1395                           intcon	equ	0xFF2
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _isBOR *****************
  1401 ;; Defined at:
  1402 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      unsigned char 
  1409 ;; Registers used:
  1410 ;;		wreg
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_reset_codes
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text7
  1431  00223C                     __ptext7:
  1432                           	opt stack 0
  1433  00223C                     _isBOR:
  1434                           	opt stack 27
  1435                           
  1436                           ;incstack = 0
  1437  00223C  B0D0               	btfsc	4048,0,c	;volatile
  1438  00223E  D006               	goto	l1453
  1439  002240  B2D0               	btfsc	4048,1,c	;volatile
  1440  002242  D002               	goto	l1449
  1441  002244  D003               	goto	l1453
  1442  002246  D004               	goto	l589
  1443  002248                     l1449:
  1444  002248  0E01               	movlw	1
  1445  00224A  D002               	goto	l589
  1446  00224C                     l1453:
  1447  00224C  0E00               	movlw	0
  1448  00224E  D000               	goto	l589
  1449  002250                     l589:
  1450  002250  0012               	return		;funcret
  1451  002252                     __end_of_isBOR:
  1452                           	opt stack 0
  1453                           stkptr	equ	0xFFC
  1454                           intcon	equ	0xFF2
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _WDTtask *****************
  1460 ;; Defined at:
  1461 ;;		line 370 in file "../Robot Files/sumovore.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		_gtrap
  1484 ;;		_printf
  1485 ;; This function is called by:
  1486 ;;		_reset_codes
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text8
  1491  0021D0                     __ptext8:
  1492                           	opt stack 0
  1493  0021D0                     _WDTtask:
  1494                           	opt stack 25
  1495                           
  1496                           ;sumovore.c: 372: printf("<WDT TO>");
  1497                           
  1498                           ;incstack = 0
  1499  0021D0  0E5D               	movlw	low STR_4
  1500  0021D2  6E0F               	movwf	printf@f,c
  1501  0021D4  0E10               	movlw	high STR_4
  1502  0021D6  6E10               	movwf	printf@f+1,c
  1503  0021D8  EC1D  F010         	call	_printf	;wreg free
  1504                           
  1505                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1506  0021DC  9083               	bcf	3971,0,c	;volatile
  1507                           
  1508                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1509  0021DE  8283               	bsf	3971,1,c	;volatile
  1510                           
  1511                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1512  0021E0  9483               	bcf	3971,2,c	;volatile
  1513                           
  1514                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1515  0021E2  8683               	bsf	3971,3,c	;volatile
  1516                           
  1517                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1518  0021E4  8883               	bsf	3971,4,c	;volatile
  1519                           
  1520                           ;sumovore.c: 378: gtrap();
  1521  0021E6  ECF2  F00E         	call	_gtrap	;wreg free
  1522  0021EA  0012               	return		;funcret
  1523  0021EC                     __end_of_WDTtask:
  1524                           	opt stack 0
  1525                           stkptr	equ	0xFFC
  1526                           intcon	equ	0xFF2
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _STKFULtask *****************
  1532 ;; Defined at:
  1533 ;;		line 389 in file "../Robot Files/sumovore.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;		None               void
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    3
  1554 ;; This function calls:
  1555 ;;		_gtrap
  1556 ;;		_printf
  1557 ;; This function is called by:
  1558 ;;		_reset_codes
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text9
  1563  0021B2                     __ptext9:
  1564                           	opt stack 0
  1565  0021B2                     _STKFULtask:
  1566                           	opt stack 25
  1567                           
  1568                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1569                           
  1570                           ;incstack = 0
  1571  0021B2  9EFC               	bcf	stkptr,7,c	;volatile
  1572                           
  1573                           ;sumovore.c: 393: printf("<STKFUL>");
  1574  0021B4  0E54               	movlw	low STR_5
  1575  0021B6  6E0F               	movwf	printf@f,c
  1576  0021B8  0E10               	movlw	high STR_5
  1577  0021BA  6E10               	movwf	printf@f+1,c
  1578  0021BC  EC1D  F010         	call	_printf	;wreg free
  1579                           
  1580                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1581  0021C0  9083               	bcf	3971,0,c	;volatile
  1582                           
  1583                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1584  0021C2  8283               	bsf	3971,1,c	;volatile
  1585                           
  1586                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1587  0021C4  9483               	bcf	3971,2,c	;volatile
  1588                           
  1589                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1590  0021C6  8683               	bsf	3971,3,c	;volatile
  1591                           
  1592                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1593  0021C8  9883               	bcf	3971,4,c	;volatile
  1594                           
  1595                           ;sumovore.c: 399: gtrap();
  1596  0021CA  ECF2  F00E         	call	_gtrap	;wreg free
  1597  0021CE  0012               	return		;funcret
  1598  0021D0                     __end_of_STKFULtask:
  1599                           	opt stack 0
  1600                           stkptr	equ	0xFFC
  1601                           intcon	equ	0xFF2
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _RESETtask *****************
  1607 ;; Defined at:
  1608 ;;		line 405 in file "../Robot Files/sumovore.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		_gtrap
  1631 ;;		_printf
  1632 ;; This function is called by:
  1633 ;;		_reset_codes
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text10
  1638  0021EC                     __ptext10:
  1639                           	opt stack 0
  1640  0021EC                     _RESETtask:
  1641                           	opt stack 25
  1642                           
  1643                           ;sumovore.c: 408: printf(" <reset> ");
  1644                           
  1645                           ;incstack = 0
  1646  0021EC  0E4A               	movlw	low STR_6
  1647  0021EE  6E0F               	movwf	printf@f,c
  1648  0021F0  0E10               	movlw	high STR_6
  1649  0021F2  6E10               	movwf	printf@f+1,c
  1650  0021F4  EC1D  F010         	call	_printf	;wreg free
  1651                           
  1652                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1653  0021F8  9083               	bcf	3971,0,c	;volatile
  1654                           
  1655                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1656  0021FA  8283               	bsf	3971,1,c	;volatile
  1657                           
  1658                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1659  0021FC  9483               	bcf	3971,2,c	;volatile
  1660                           
  1661                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1662  0021FE  9683               	bcf	3971,3,c	;volatile
  1663                           
  1664                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1665  002200  9883               	bcf	3971,4,c	;volatile
  1666                           
  1667                           ;sumovore.c: 414: gtrap();
  1668  002202  ECF2  F00E         	call	_gtrap	;wreg free
  1669  002206  0012               	return		;funcret
  1670  002208                     __end_of_RESETtask:
  1671                           	opt stack 0
  1672                           stkptr	equ	0xFFC
  1673                           intcon	equ	0xFF2
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _PORtask *****************
  1679 ;; Defined at:
  1680 ;;		line 307 in file "../Robot Files/sumovore.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  count2          4   23[COMRAM] unsigned long 
  1685 ;;  count1          4   19[COMRAM] unsigned long 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;		None               void
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;Total ram usage:        8 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    3
  1702 ;; This function calls:
  1703 ;;		_StatusReset
  1704 ;;		_printf
  1705 ;; This function is called by:
  1706 ;;		_reset_codes
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text11
  1711  001986                     __ptext11:
  1712                           	opt stack 0
  1713  001986                     _PORtask:
  1714                           	opt stack 25
  1715                           
  1716                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1717                           
  1718                           ;incstack = 0
  1719  001986  0E00               	movlw	0
  1720  001988  6E14               	movwf	PORtask@count1,c
  1721  00198A  0E00               	movlw	0
  1722  00198C  6E15               	movwf	PORtask@count1+1,c
  1723  00198E  0E00               	movlw	0
  1724  001990  6E16               	movwf	PORtask@count1+2,c
  1725  001992  0E00               	movlw	0
  1726  001994  6E17               	movwf	PORtask@count1+3,c
  1727  001996  0E00               	movlw	0
  1728  001998  6E18               	movwf	PORtask@count2,c
  1729  00199A  0E00               	movlw	0
  1730  00199C  6E19               	movwf	PORtask@count2+1,c
  1731  00199E  0E00               	movlw	0
  1732  0019A0  6E1A               	movwf	PORtask@count2+2,c
  1733  0019A2  0E00               	movlw	0
  1734  0019A4  6E1B               	movwf	PORtask@count2+3,c
  1735                           
  1736                           ;sumovore.c: 310: StatusReset();
  1737  0019A6  EC71  F011         	call	_StatusReset	;wreg free
  1738                           
  1739                           ;sumovore.c: 312: printf("<POR>");
  1740  0019AA  0E73               	movlw	low STR_2
  1741  0019AC  6E0F               	movwf	printf@f,c
  1742  0019AE  0E10               	movlw	high STR_2
  1743  0019B0  6E10               	movwf	printf@f+1,c
  1744  0019B2  EC1D  F010         	call	_printf	;wreg free
  1745                           
  1746                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1747  0019B6  9083               	bcf	3971,0,c	;volatile
  1748                           
  1749                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1750  0019B8  8283               	bsf	3971,1,c	;volatile
  1751                           
  1752                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1753  0019BA  8483               	bsf	3971,2,c	;volatile
  1754                           
  1755                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1756  0019BC  8683               	bsf	3971,3,c	;volatile
  1757                           
  1758                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1759  0019BE  8883               	bsf	3971,4,c	;volatile
  1760                           
  1761                           ;sumovore.c: 318: while(count1<10u)
  1762  0019C0  D02D               	goto	l324
  1763  0019C2                     l325:
  1764  0019C2  0004               	clrwdt		;# 
  1765                           
  1766                           ;sumovore.c: 321: if (count2==30000u)
  1767  0019C4  0E30               	movlw	48
  1768  0019C6  1818               	xorwf	PORtask@count2,w,c
  1769  0019C8  E117               	bnz	l2303
  1770  0019CA  0E75               	movlw	117
  1771  0019CC  1819               	xorwf	PORtask@count2+1,w,c
  1772  0019CE  101A               	iorwf	PORtask@count2+2,w,c
  1773  0019D0  101B               	iorwf	PORtask@count2+3,w,c
  1774  0019D2  A4D8               	btfss	status,2,c
  1775  0019D4  D011               	goto	l2303
  1776                           
  1777                           ;sumovore.c: 322: {
  1778                           ;sumovore.c: 323: count2=0;
  1779  0019D6  0E00               	movlw	0
  1780  0019D8  6E18               	movwf	PORtask@count2,c
  1781  0019DA  0E00               	movlw	0
  1782  0019DC  6E19               	movwf	PORtask@count2+1,c
  1783  0019DE  0E00               	movlw	0
  1784  0019E0  6E1A               	movwf	PORtask@count2+2,c
  1785  0019E2  0E00               	movlw	0
  1786  0019E4  6E1B               	movwf	PORtask@count2+3,c
  1787                           
  1788                           ;sumovore.c: 324: count1++;
  1789  0019E6  0E01               	movlw	1
  1790  0019E8  2614               	addwf	PORtask@count1,f,c
  1791  0019EA  0E00               	movlw	0
  1792  0019EC  2215               	addwfc	PORtask@count1+1,f,c
  1793  0019EE  2216               	addwfc	PORtask@count1+2,f,c
  1794  0019F0  2217               	addwfc	PORtask@count1+3,f,c
  1795                           
  1796                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1797  0019F2  9083               	bcf	3971,0,c	;volatile
  1798                           
  1799                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1800  0019F4  8283               	bsf	3971,1,c	;volatile
  1801                           
  1802                           ;sumovore.c: 327: }
  1803  0019F6  D00C               	goto	l2307
  1804  0019F8                     l2303:
  1805                           
  1806                           ;sumovore.c: 328: else if (count2==15000u)
  1807  0019F8  0E98               	movlw	152
  1808  0019FA  1818               	xorwf	PORtask@count2,w,c
  1809  0019FC  E109               	bnz	l2307
  1810  0019FE  0E3A               	movlw	58
  1811  001A00  1819               	xorwf	PORtask@count2+1,w,c
  1812  001A02  101A               	iorwf	PORtask@count2+2,w,c
  1813  001A04  101B               	iorwf	PORtask@count2+3,w,c
  1814  001A06  A4D8               	btfss	status,2,c
  1815  001A08  D003               	goto	l2307
  1816                           
  1817                           ;sumovore.c: 329: {
  1818                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1819  001A0A  8083               	bsf	3971,0,c	;volatile
  1820                           
  1821                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1822  001A0C  9283               	bcf	3971,1,c	;volatile
  1823  001A0E  D000               	goto	l2307
  1824  001A10                     l2307:
  1825                           
  1826                           ;sumovore.c: 332: }
  1827                           ;sumovore.c: 333: count2++;
  1828  001A10  0E01               	movlw	1
  1829  001A12  2618               	addwf	PORtask@count2,f,c
  1830  001A14  0E00               	movlw	0
  1831  001A16  2219               	addwfc	PORtask@count2+1,f,c
  1832  001A18  221A               	addwfc	PORtask@count2+2,f,c
  1833  001A1A  221B               	addwfc	PORtask@count2+3,f,c
  1834  001A1C                     l324:
  1835  001A1C  5017               	movf	PORtask@count1+3,w,c
  1836  001A1E  1016               	iorwf	PORtask@count1+2,w,c
  1837  001A20  1015               	iorwf	PORtask@count1+1,w,c
  1838  001A22  E106               	bnz	l330
  1839  001A24  0E0A               	movlw	10
  1840  001A26  5C14               	subwf	PORtask@count1,w,c
  1841  001A28  B0D8               	btfsc	status,0,c
  1842  001A2A  D002               	goto	l330
  1843  001A2C  D7CA               	goto	l325
  1844  001A2E  D000               	goto	l330
  1845  001A30                     l330:
  1846  001A30  0012               	return		;funcret
  1847  001A32                     __end_of_PORtask:
  1848                           	opt stack 0
  1849                           stkptr	equ	0xFFC
  1850                           intcon	equ	0xFF2
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           status	equ	0xFD8
  1854                           
  1855 ;; *************** function _BORtask *****************
  1856 ;; Defined at:
  1857 ;;		line 349 in file "../Robot Files/sumovore.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;		None               void
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    3
  1878 ;; This function calls:
  1879 ;;		_StatusReset
  1880 ;;		_gtrap
  1881 ;;		_printf
  1882 ;; This function is called by:
  1883 ;;		_reset_codes
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text12
  1888  002152                     __ptext12:
  1889                           	opt stack 0
  1890  002152                     _BORtask:
  1891                           	opt stack 25
  1892                           
  1893                           ;sumovore.c: 351: StatusReset();
  1894                           
  1895                           ;incstack = 0
  1896  002152  EC71  F011         	call	_StatusReset	;wreg free
  1897                           
  1898                           ;sumovore.c: 353: printf("<BOR>");
  1899  002156  0E6D               	movlw	low STR_3
  1900  002158  6E0F               	movwf	printf@f,c
  1901  00215A  0E10               	movlw	high STR_3
  1902  00215C  6E10               	movwf	printf@f+1,c
  1903  00215E  EC1D  F010         	call	_printf	;wreg free
  1904                           
  1905                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1906  002162  8083               	bsf	3971,0,c	;volatile
  1907                           
  1908                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1909  002164  8283               	bsf	3971,1,c	;volatile
  1910                           
  1911                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1912  002166  8483               	bsf	3971,2,c	;volatile
  1913                           
  1914                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1915  002168  8683               	bsf	3971,3,c	;volatile
  1916                           
  1917                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1918  00216A  9883               	bcf	3971,4,c	;volatile
  1919                           
  1920                           ;sumovore.c: 359: gtrap();
  1921  00216C  ECF2  F00E         	call	_gtrap	;wreg free
  1922  002170  0012               	return		;funcret
  1923  002172                     __end_of_BORtask:
  1924                           	opt stack 0
  1925                           stkptr	equ	0xFFC
  1926                           intcon	equ	0xFF2
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function _StatusReset *****************
  1932 ;; Defined at:
  1933 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		None
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    1
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_PORtask
  1958 ;;		_BORtask
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text13
  1963  0022E2                     __ptext13:
  1964                           	opt stack 0
  1965  0022E2                     _StatusReset:
  1966                           	opt stack 26
  1967                           
  1968                           ;incstack = 0
  1969  0022E2  82D0               	bsf	4048,1,c	;volatile
  1970  0022E4  80D0               	bsf	4048,0,c	;volatile
  1971  0022E6  0012               	return		;funcret
  1972  0022E8                     __end_of_StatusReset:
  1973                           	opt stack 0
  1974                           stkptr	equ	0xFFC
  1975                           intcon	equ	0xFF2
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _openPORTE *****************
  1981 ;; Defined at:
  1982 ;;		line 178 in file "../Robot Files/sumovore.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;		None               void
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_initialization
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text14
  2011  0022E8                     __ptext14:
  2012                           	opt stack 0
  2013  0022E8                     _openPORTE:
  2014                           	opt stack 28
  2015                           
  2016                           ;sumovore.c: 180: TRISE = 0b000;
  2017                           
  2018                           ;incstack = 0
  2019  0022E8  0E00               	movlw	0
  2020  0022EA  6E96               	movwf	3990,c	;volatile
  2021  0022EC  0012               	return		;funcret
  2022  0022EE                     __end_of_openPORTE:
  2023                           	opt stack 0
  2024                           stkptr	equ	0xFFC
  2025                           intcon	equ	0xFF2
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _openPORTCforUSART *****************
  2031 ;; Defined at:
  2032 ;;		line 124 in file "../Robot Files/sumovore.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		None
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_initialization
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text15
  2061  0022EE                     __ptext15:
  2062                           	opt stack 0
  2063  0022EE                     _openPORTCforUSART:
  2064                           	opt stack 28
  2065                           
  2066                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2067                           
  2068                           ;incstack = 0
  2069  0022EE  9C94               	bcf	3988,6,c	;volatile
  2070                           
  2071                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2072  0022F0  8E94               	bsf	3988,7,c	;volatile
  2073  0022F2  0012               	return		;funcret
  2074  0022F4                     __end_of_openPORTCforUSART:
  2075                           	opt stack 0
  2076                           stkptr	equ	0xFFC
  2077                           intcon	equ	0xFF2
  2078                           postinc0	equ	0xFEE
  2079                           wreg	equ	0xFE8
  2080                           status	equ	0xFD8
  2081                           
  2082 ;; *************** function _openPORTCforPWM *****************
  2083 ;; Defined at:
  2084 ;;		line 133 in file "../Robot Files/sumovore.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;		None               void
  2091 ;; Registers used:
  2092 ;;		None
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_initialization
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text16
  2113  0022C0                     __ptext16:
  2114                           	opt stack 0
  2115  0022C0                     _openPORTCforPWM:
  2116                           	opt stack 28
  2117                           
  2118                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2119                           
  2120                           ;incstack = 0
  2121  0022C0  9094               	bcf	3988,0,c	;volatile
  2122                           
  2123                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2124  0022C2  9294               	bcf	3988,1,c	;volatile
  2125                           
  2126                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2127  0022C4  9494               	bcf	3988,2,c	;volatile
  2128                           
  2129                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2130  0022C6  9694               	bcf	3988,3,c	;volatile
  2131                           
  2132                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2133  0022C8  9894               	bcf	3988,4,c	;volatile
  2134                           
  2135                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2136  0022CA  9A94               	bcf	3988,5,c	;volatile
  2137  0022CC  0012               	return		;funcret
  2138  0022CE                     __end_of_openPORTCforPWM:
  2139                           	opt stack 0
  2140                           stkptr	equ	0xFFC
  2141                           intcon	equ	0xFF2
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           status	equ	0xFD8
  2145                           
  2146 ;; *************** function _openPORTB *****************
  2147 ;; Defined at:
  2148 ;;		line 158 in file "../Robot Files/sumovore.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;		None               void
  2155 ;; Registers used:
  2156 ;;		wreg, status,2
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_initialization
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text17
  2177  0022F4                     __ptext17:
  2178                           	opt stack 0
  2179  0022F4                     _openPORTB:
  2180                           	opt stack 28
  2181                           
  2182                           ;sumovore.c: 160: TRISB = 0B11000000;
  2183                           
  2184                           ;incstack = 0
  2185  0022F4  0EC0               	movlw	192
  2186  0022F6  6E93               	movwf	3987,c	;volatile
  2187  0022F8  0012               	return		;funcret
  2188  0022FA                     __end_of_openPORTB:
  2189                           	opt stack 0
  2190                           stkptr	equ	0xFFC
  2191                           intcon	equ	0xFF2
  2192                           postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           status	equ	0xFD8
  2195                           
  2196 ;; *************** function _openPORTA *****************
  2197 ;; Defined at:
  2198 ;;		line 147 in file "../Robot Files/sumovore.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;		None               void
  2205 ;; Registers used:
  2206 ;;		wreg, status,2
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_initialization
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text18
  2227  0022FA                     __ptext18:
  2228                           	opt stack 0
  2229  0022FA                     _openPORTA:
  2230                           	opt stack 28
  2231                           
  2232                           ;sumovore.c: 149: TRISA = 0B11101111;
  2233                           
  2234                           ;incstack = 0
  2235  0022FA  0EEF               	movlw	239
  2236  0022FC  6E92               	movwf	3986,c	;volatile
  2237  0022FE  0012               	return		;funcret
  2238  002300                     __end_of_openPORTA:
  2239                           	opt stack 0
  2240                           stkptr	equ	0xFFC
  2241                           intcon	equ	0xFF2
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           status	equ	0xFD8
  2245                           
  2246 ;; *************** function _openLVD *****************
  2247 ;; Defined at:
  2248 ;;		line 428 in file "../Robot Files/sumovore.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;		None               void
  2255 ;; Registers used:
  2256 ;;		None
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_initialization
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text19
  2277  002224                     __ptext19:
  2278                           	opt stack 0
  2279  002224                     _openLVD:
  2280                           	opt stack 28
  2281                           
  2282                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2283                           
  2284                           ;incstack = 0
  2285  002224  8ED0               	bsf	4048,7,c	;volatile
  2286                           
  2287                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2288  002226  88D2               	bsf	4050,4,c	;volatile
  2289                           
  2290                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2291  002228  84A2               	bsf	4002,2,c	;volatile
  2292                           
  2293                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2294  00222A  9ED2               	bcf	4050,7,c	;volatile
  2295                           
  2296                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2297  00222C  86D2               	bsf	4050,3,c	;volatile
  2298                           
  2299                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2300  00222E  84D2               	bsf	4050,2,c	;volatile
  2301                           
  2302                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2303  002230  82D2               	bsf	4050,1,c	;volatile
  2304                           
  2305                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2306  002232  90D2               	bcf	4050,0,c	;volatile
  2307                           
  2308                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2309  002234  94A1               	bcf	4001,2,c	;volatile
  2310                           
  2311                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2312  002236  84A0               	bsf	4000,2,c	;volatile
  2313                           
  2314                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2315  002238  8EF2               	bsf	intcon,7,c	;volatile
  2316  00223A  0012               	return		;funcret
  2317  00223C                     __end_of_openLVD:
  2318                           	opt stack 0
  2319                           stkptr	equ	0xFFC
  2320                           intcon	equ	0xFF2
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function _OpenUSART *****************
  2326 ;; Defined at:
  2327 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  config          1    wreg     unsigned char 
  2330 ;;  spbrg           2   14[COMRAM] unsigned int 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  config          1   16[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;		None               void
  2335 ;; Registers used:
  2336 ;;		wreg, status,2
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;Total ram usage:        3 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    1
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_initialization
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text20
  2357  001D74                     __ptext20:
  2358                           	opt stack 0
  2359  001D74                     _OpenUSART:
  2360                           	opt stack 28
  2361                           
  2362                           ;incstack = 0
  2363                           ;OpenUSART@config stored from wreg
  2364  001D74  6E11               	movwf	OpenUSART@config,c
  2365  001D76  0E00               	movlw	0
  2366  001D78  6EAC               	movwf	4012,c	;volatile
  2367  001D7A  0E00               	movlw	0
  2368  001D7C  6EAB               	movwf	4011,c	;volatile
  2369  001D7E  A011               	btfss	OpenUSART@config,0,c
  2370  001D80  D002               	goto	l2417
  2371  001D82  88AC               	bsf	4012,4,c	;volatile
  2372  001D84  D000               	goto	l2417
  2373  001D86                     l2417:
  2374  001D86  A211               	btfss	OpenUSART@config,1,c
  2375  001D88  D003               	goto	l2421
  2376  001D8A  8CAC               	bsf	4012,6,c	;volatile
  2377  001D8C  8CAB               	bsf	4011,6,c	;volatile
  2378  001D8E  D000               	goto	l2421
  2379  001D90                     l2421:
  2380  001D90  A411               	btfss	OpenUSART@config,2,c
  2381  001D92  D002               	goto	l2425
  2382  001D94  8EAC               	bsf	4012,7,c	;volatile
  2383  001D96  D000               	goto	l2425
  2384  001D98                     l2425:
  2385  001D98  A611               	btfss	OpenUSART@config,3,c
  2386  001D9A  D002               	goto	l573
  2387  001D9C  88AB               	bsf	4011,4,c	;volatile
  2388  001D9E  D002               	goto	l2429
  2389  001DA0                     l573:
  2390  001DA0  8AAB               	bsf	4011,5,c	;volatile
  2391  001DA2  D000               	goto	l2429
  2392  001DA4                     l2429:
  2393  001DA4  B811               	btfsc	OpenUSART@config,4,c
  2394  001DA6  84AC               	bsf	4012,2,c	;volatile
  2395  001DA8  989E               	bcf	3998,4,c	;volatile
  2396  001DAA  AA11               	btfss	OpenUSART@config,5,c
  2397  001DAC  D002               	goto	l2437
  2398  001DAE  86AB               	bsf	4011,3,c	;volatile
  2399  001DB0  D000               	goto	l2437
  2400  001DB2                     l2437:
  2401  001DB2  AC11               	btfss	OpenUSART@config,6,c
  2402  001DB4  D002               	goto	l577
  2403  001DB6  8A9D               	bsf	3997,5,c	;volatile
  2404  001DB8  D001               	goto	l578
  2405  001DBA                     l577:
  2406  001DBA  9A9D               	bcf	3997,5,c	;volatile
  2407  001DBC                     l578:
  2408  001DBC  9A9E               	bcf	3998,5,c	;volatile
  2409  001DBE  AE11               	btfss	OpenUSART@config,7,c
  2410  001DC0  D002               	goto	l579
  2411  001DC2  889D               	bsf	3997,4,c	;volatile
  2412  001DC4  D001               	goto	l580
  2413  001DC6                     l579:
  2414  001DC6  989D               	bcf	3997,4,c	;volatile
  2415  001DC8                     l580:
  2416  001DC8  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2417  001DCC  5010               	movf	OpenUSART@spbrg+1,w,c
  2418  001DCE  6EB0               	movwf	4016,c	;volatile
  2419  001DD0  8AAC               	bsf	4012,5,c	;volatile
  2420  001DD2  8EAB               	bsf	4011,7,c	;volatile
  2421  001DD4  9C94               	bcf	3988,6,c	;volatile
  2422  001DD6  8E94               	bsf	3988,7,c	;volatile
  2423  001DD8  B8AC               	btfsc	4012,4,c	;volatile
  2424  001DDA  BEAC               	btfsc	4012,7,c	;volatile
  2425  001DDC  D002               	goto	l582
  2426  001DDE  8C94               	bsf	3988,6,c	;volatile
  2427  001DE0  D000               	goto	l582
  2428  001DE2                     l582:
  2429  001DE2  0012               	return		;funcret
  2430  001DE4                     __end_of_OpenUSART:
  2431                           	opt stack 0
  2432                           stkptr	equ	0xFFC
  2433                           intcon	equ	0xFF2
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _OpenTimer2 *****************
  2439 ;; Defined at:
  2440 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  config          1    wreg     unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  config          1   14[COMRAM] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;Total ram usage:        1 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    1
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_initialization
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text21
  2469  002208                     __ptext21:
  2470                           	opt stack 0
  2471  002208                     _OpenTimer2:
  2472                           	opt stack 28
  2473                           
  2474                           ;incstack = 0
  2475                           ;OpenTimer2@config stored from wreg
  2476  002208  6E0F               	movwf	OpenTimer2@config,c
  2477  00220A  500F               	movf	OpenTimer2@config,w,c
  2478  00220C  0BFB               	andlw	251
  2479  00220E  6ECA               	movwf	4042,c	;volatile
  2480  002210  0E00               	movlw	0
  2481  002212  6ECC               	movwf	4044,c	;volatile
  2482  002214  929E               	bcf	3998,1,c	;volatile
  2483  002216  AE0F               	btfss	OpenTimer2@config,7,c
  2484  002218  D002               	goto	l547
  2485  00221A  829D               	bsf	3997,1,c	;volatile
  2486  00221C  D001               	goto	l548
  2487  00221E                     l547:
  2488  00221E  929D               	bcf	3997,1,c	;volatile
  2489  002220                     l548:
  2490  002220  84CA               	bsf	4042,2,c	;volatile
  2491  002222  0012               	return		;funcret
  2492  002224                     __end_of_OpenTimer2:
  2493                           	opt stack 0
  2494                           stkptr	equ	0xFFC
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           status	equ	0xFD8
  2499                           
  2500 ;; *************** function _OpenPWM2 *****************
  2501 ;; Defined at:
  2502 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  period          1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  period          1   14[COMRAM] unsigned char 
  2507 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2508 ;;  pmmode          1    0        unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        2 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_initialization
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text22
  2533  002002                     __ptext22:
  2534                           	opt stack 0
  2535  002002                     _OpenPWM2:
  2536                           	opt stack 28
  2537                           
  2538                           ;incstack = 0
  2539                           ;OpenPWM2@period stored from wreg
  2540  002002  6E0F               	movwf	OpenPWM2@period,c
  2541  002004  0E0C               	movlw	12
  2542  002006  6EBA               	movwf	4026,c	;volatile
  2543  002008  0E05               	movlw	5
  2544  00200A  6EF6               	movwf	tblptrl,c
  2545  00200C                     	if	1	;There is more than 1 active tblptr byte
  2546  00200C  0E00               	movlw	0
  2547  00200E  6EF7               	movwf	tblptrh,c
  2548  002010                     	endif
  2549  002010                     	if	1	;There are 3 active tblptr bytes
  2550  002010  0E30               	movlw	48
  2551  002012  6EF8               	movwf	tblptru,c
  2552  002014                     	endif
  2553  002014  0008               	tblrd		*
  2554  002016  0100               	movlb	12288	; () banked
  2555  002018  A0F5               	btfss	tablat,0,c
  2556  00201A  D002               	goto	l1717
  2557                           
  2558                           ; BSR set to: 0
  2559  00201C  6810               	setf	OpenPWM2@ccp2mx,c
  2560  00201E  D002               	goto	l495
  2561  002020                     l1717:
  2562                           
  2563                           ; BSR set to: 0
  2564  002020  0E00               	movlw	0
  2565  002022  6E10               	movwf	OpenPWM2@ccp2mx,c
  2566  002024                     l495:
  2567                           
  2568                           ; BSR set to: 0
  2569  002024  5010               	movf	OpenPWM2@ccp2mx,w,c
  2570  002026  B4D8               	btfsc	status,2,c
  2571  002028  D002               	goto	l496
  2572                           
  2573                           ; BSR set to: 0
  2574  00202A  9294               	bcf	3988,1,c	;volatile
  2575  00202C  D001               	goto	l497
  2576  00202E                     l496:
  2577                           
  2578                           ; BSR set to: 0
  2579  00202E  9693               	bcf	3987,3,c	;volatile
  2580  002030                     l497:
  2581                           
  2582                           ; BSR set to: 0
  2583  002030  94CA               	bcf	4042,2,c	;volatile
  2584  002032  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2585  002036  84CA               	bsf	4042,2,c	;volatile
  2586                           
  2587                           ; BSR set to: 0
  2588  002038  0012               	return		;funcret
  2589  00203A                     __end_of_OpenPWM2:
  2590                           	opt stack 0
  2591                           stkptr	equ	0xFFC
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           intcon	equ	0xFF2
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function _OpenPWM1 *****************
  2602 ;; Defined at:
  2603 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  period          1    wreg     unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  period          1   14[COMRAM] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_initialization
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text23
  2632  00227A                     __ptext23:
  2633                           	opt stack 0
  2634  00227A                     _OpenPWM1:
  2635                           	opt stack 28
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;incstack = 0
  2639                           ;OpenPWM1@period stored from wreg
  2640  00227A  6E0F               	movwf	OpenPWM1@period,c
  2641  00227C  0E0C               	movlw	12
  2642  00227E  12BD               	iorwf	4029,f,c	;volatile
  2643  002280  9494               	bcf	3988,2,c	;volatile
  2644  002282  94CA               	bcf	4042,2,c	;volatile
  2645  002284  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2646  002288  84CA               	bsf	4042,2,c	;volatile
  2647  00228A  0012               	return		;funcret
  2648  00228C                     __end_of_OpenPWM1:
  2649                           	opt stack 0
  2650                           stkptr	equ	0xFFC
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           intcon	equ	0xFF2
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _OpenADC *****************
  2661 ;; Defined at:
  2662 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  config          1    wreg     unsigned char 
  2665 ;;  config2         1   14[COMRAM] unsigned char 
  2666 ;;  portconfig      1   15[COMRAM] unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  config          1   18[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;Total ram usage:        5 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_initialization
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text24
  2693  001E46                     __ptext24:
  2694                           	opt stack 0
  2695  001E46                     _OpenADC:
  2696                           	opt stack 28
  2697                           
  2698                           ;incstack = 0
  2699                           ;OpenADC@config stored from wreg
  2700  001E46  6E13               	movwf	OpenADC@config,c
  2701  001E48  0E00               	movlw	0
  2702  001E4A  6EC2               	movwf	4034,c	;volatile
  2703  001E4C  0E00               	movlw	0
  2704  001E4E  6EC0               	movwf	4032,c	;volatile
  2705  001E50  90D8               	bcf	status,0,c
  2706  001E52  300F               	rrcf	OpenADC@config2,w,c
  2707  001E54  0B3C               	andlw	60
  2708  001E56  6EC2               	movwf	4034,c	;volatile
  2709  001E58  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2710  001E5C  3A11               	swapf	??_OpenADC,f,c
  2711  001E5E  0EF0               	movlw	240
  2712  001E60  1611               	andwf	??_OpenADC,f,c
  2713  001E62  0E30               	movlw	48
  2714  001E64  1611               	andwf	??_OpenADC,f,c
  2715  001E66  5010               	movf	OpenADC@portconfig,w,c
  2716  001E68  0B0F               	andlw	15
  2717  001E6A  1011               	iorwf	??_OpenADC,w,c
  2718  001E6C  6EC1               	movwf	4033,c	;volatile
  2719  001E6E  C013  F011         	movff	OpenADC@config,??_OpenADC
  2720  001E72  90D8               	bcf	status,0,c
  2721  001E74  3611               	rlcf	??_OpenADC,f,c
  2722  001E76  90D8               	bcf	status,0,c
  2723  001E78  3611               	rlcf	??_OpenADC,f,c
  2724  001E7A  0E38               	movlw	56
  2725  001E7C  1611               	andwf	??_OpenADC,f,c
  2726  001E7E  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2727  001E82  3A12               	swapf	??_OpenADC+1,f,c
  2728  001E84  0E0F               	movlw	15
  2729  001E86  1612               	andwf	??_OpenADC+1,f,c
  2730  001E88  0E07               	movlw	7
  2731  001E8A  1612               	andwf	??_OpenADC+1,f,c
  2732  001E8C  5013               	movf	OpenADC@config,w,c
  2733  001E8E  0B80               	andlw	128
  2734  001E90  1012               	iorwf	??_OpenADC+1,w,c
  2735  001E92  1011               	iorwf	??_OpenADC,w,c
  2736  001E94  6EC0               	movwf	4032,c	;volatile
  2737  001E96  AE0F               	btfss	OpenADC@config2,7,c
  2738  001E98  D003               	goto	l447
  2739  001E9A  9C9E               	bcf	3998,6,c	;volatile
  2740  001E9C  8C9D               	bsf	3997,6,c	;volatile
  2741  001E9E  8CF2               	bsf	intcon,6,c	;volatile
  2742  001EA0                     l447:
  2743  001EA0  80C2               	bsf	4034,0,c	;volatile
  2744  001EA2  0012               	return		;funcret
  2745  001EA4                     __end_of_OpenADC:
  2746                           	opt stack 0
  2747                           stkptr	equ	0xFFC
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           intcon	equ	0xFF2
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           status	equ	0xFD8
  2756                           
  2757 ;; *************** function _PID_LineFollowing *****************
  2758 ;; Defined at:
  2759 ;;		line 110 in file "../Robot Files/main.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  error           2   52[COMRAM] PTR char 
  2762 ;;		 -> main@error(3), 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;Total ram usage:        7 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    3
  2781 ;; This function calls:
  2782 ;;		_MotorControl
  2783 ;;		_ReadTimer0
  2784 ;;		___aldiv
  2785 ;;		___lwdiv
  2786 ;;		___lwmod
  2787 ;;		___wmul
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text25
  2794  00107A                     __ptext25:
  2795                           	opt stack 0
  2796  00107A                     _PID_LineFollowing:
  2797                           	opt stack 27
  2798                           
  2799                           ;main.c: 112: static int delta_velocity = 0;
  2800                           ;main.c: 114: static int D = 0;
  2801                           ;main.c: 117: if ((ReadTimer0()%I_CONSTANT) < 2)
  2802                           
  2803                           ;incstack = 0
  2804  00107A  EC46  F011         	call	_ReadTimer0	;wreg free
  2805  00107E  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  2806  001082  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  2807  001086  0E03               	movlw	low _I_CONSTANT
  2808  001088  6EF6               	movwf	tblptrl,c
  2809  00108A                     	if	1	;There is more than 1 active tblptr byte
  2810  00108A  0E10               	movlw	high _I_CONSTANT
  2811  00108C  6EF7               	movwf	tblptrh,c
  2812  00108E                     	endif
  2813  00108E                     	if	1	;There are 3 active tblptr bytes
  2814  00108E  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2815  001090  6EF8               	movwf	tblptru,c
  2816  001092                     	endif
  2817  001092  0009               	tblrd		*+
  2818  001094  CFF5 F015          	movff	tablat,___lwmod@divisor
  2819  001098  000A               	tblrd		*-
  2820  00109A  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  2821  00109E  EC80  F00F         	call	___lwmod	;wreg free
  2822  0010A2  5014               	movf	?___lwmod+1,w,c
  2823  0010A4  E17B               	bnz	l2723
  2824  0010A6  0E02               	movlw	2
  2825  0010A8  5C13               	subwf	?___lwmod,w,c
  2826  0010AA  B0D8               	btfsc	status,0,c
  2827  0010AC  D077               	goto	l2723
  2828                           
  2829                           ;main.c: 118: {
  2830                           ;main.c: 119: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=160
      +                          0 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2831  0010AE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2832  0010B0  D006               	goto	l2699
  2833  0010B2  0E40               	movlw	64
  2834  0010B4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2835  0010B6  0E06               	movlw	6
  2836  0010B8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2837  0010BA  B0D8               	btfsc	status,0,c
  2838  0010BC  D008               	goto	l2701
  2839  0010BE                     l2699:
  2840  0010BE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2841  0010C0  D006               	goto	l2701
  2842  0010C2  0E41               	movlw	65
  2843  0010C4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2844  0010C6  0E06               	movlw	6
  2845  0010C8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2846  0010CA  B0D8               	btfsc	status,0,c
  2847  0010CC  D024               	goto	l2709
  2848  0010CE                     l2701:
  2849  0010CE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2850  0010D0  D00F               	goto	l2705
  2851  0010D2  0E40               	movlw	64
  2852  0010D4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2853  0010D6  0E06               	movlw	6
  2854  0010D8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2855  0010DA  A0D8               	btfss	status,0,c
  2856  0010DC  D009               	goto	l2705
  2857  0010DE  EE20 F002          	lfsr	2,2
  2858  0010E2  5035               	movf	PID_LineFollowing@error,w,c
  2859  0010E4  26D9               	addwf	fsr2l,f,c
  2860  0010E6  5036               	movf	PID_LineFollowing@error+1,w,c
  2861  0010E8  22DA               	addwfc	fsr2h,f,c
  2862  0010EA  0E00               	movlw	0
  2863  0010EC  BEDB               	btfsc	plusw2,7,c
  2864  0010EE  D013               	goto	l2709
  2865  0010F0                     l2705:
  2866  0010F0  AE47               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2867  0010F2  D054               	goto	l2723
  2868  0010F4  0EC1               	movlw	193
  2869  0010F6  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2870  0010F8  0EF9               	movlw	249
  2871  0010FA  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2872  0010FC  B0D8               	btfsc	status,0,c
  2873  0010FE  D04E               	goto	l2723
  2874  001100  EE20 F002          	lfsr	2,2
  2875  001104  5035               	movf	PID_LineFollowing@error,w,c
  2876  001106  26D9               	addwf	fsr2l,f,c
  2877  001108  5036               	movf	PID_LineFollowing@error+1,w,c
  2878  00110A  22DA               	addwfc	fsr2h,f,c
  2879  00110C  50DF               	movf	indf2,w,c
  2880  00110E  0A80               	xorlw	128
  2881  001110  0F7F               	addlw	-129
  2882  001112  A0D8               	btfss	status,0,c
  2883  001114  D043               	goto	l2723
  2884  001116                     l2709:
  2885                           
  2886                           ;main.c: 121: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && erro
      +                          r[2]>0))
  2887  001116  BE49               	btfsc	_I+1,7,c
  2888  001118  D006               	goto	l2711
  2889  00111A  0EC9               	movlw	201
  2890  00111C  5C48               	subwf	_I,w,c
  2891  00111E  0E0C               	movlw	12
  2892  001120  5849               	subwfb	_I+1,w,c
  2893  001122  B0D8               	btfsc	status,0,c
  2894  001124  D008               	goto	l2713
  2895  001126                     l2711:
  2896  001126  AE49               	btfss	_I+1,7,c
  2897  001128  D02A               	goto	l2721
  2898  00112A  0E37               	movlw	55
  2899  00112C  5C48               	subwf	_I,w,c
  2900  00112E  0EF3               	movlw	243
  2901  001130  5849               	subwfb	_I+1,w,c
  2902  001132  B0D8               	btfsc	status,0,c
  2903  001134  D024               	goto	l2721
  2904  001136                     l2713:
  2905  001136  BE49               	btfsc	_I+1,7,c
  2906  001138  D00F               	goto	l2717
  2907  00113A  0EC9               	movlw	201
  2908  00113C  5C48               	subwf	_I,w,c
  2909  00113E  0E0C               	movlw	12
  2910  001140  5849               	subwfb	_I+1,w,c
  2911  001142  A0D8               	btfss	status,0,c
  2912  001144  D009               	goto	l2717
  2913  001146  EE20 F002          	lfsr	2,2
  2914  00114A  5035               	movf	PID_LineFollowing@error,w,c
  2915  00114C  26D9               	addwf	fsr2l,f,c
  2916  00114E  5036               	movf	PID_LineFollowing@error+1,w,c
  2917  001150  22DA               	addwfc	fsr2h,f,c
  2918  001152  0E00               	movlw	0
  2919  001154  BEDB               	btfsc	plusw2,7,c
  2920  001156  D013               	goto	l2721
  2921  001158                     l2717:
  2922  001158  AE49               	btfss	_I+1,7,c
  2923  00115A  D020               	goto	l2723
  2924  00115C  0E37               	movlw	55
  2925  00115E  5C48               	subwf	_I,w,c
  2926  001160  0EF3               	movlw	243
  2927  001162  5849               	subwfb	_I+1,w,c
  2928  001164  B0D8               	btfsc	status,0,c
  2929  001166  D01A               	goto	l2723
  2930  001168  EE20 F002          	lfsr	2,2
  2931  00116C  5035               	movf	PID_LineFollowing@error,w,c
  2932  00116E  26D9               	addwf	fsr2l,f,c
  2933  001170  5036               	movf	PID_LineFollowing@error+1,w,c
  2934  001172  22DA               	addwfc	fsr2h,f,c
  2935  001174  50DF               	movf	indf2,w,c
  2936  001176  0A80               	xorlw	128
  2937  001178  0F7F               	addlw	-129
  2938  00117A  A0D8               	btfss	status,0,c
  2939  00117C  D00F               	goto	l2723
  2940  00117E                     l2721:
  2941                           
  2942                           ;main.c: 123: I += error[2];
  2943  00117E  EE20 F002          	lfsr	2,2
  2944  001182  5035               	movf	PID_LineFollowing@error,w,c
  2945  001184  26D9               	addwf	fsr2l,f,c
  2946  001186  5036               	movf	PID_LineFollowing@error+1,w,c
  2947  001188  22DA               	addwfc	fsr2h,f,c
  2948  00118A  50DF               	movf	indf2,w,c
  2949  00118C  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2950  00118E  5037               	movf	??_PID_LineFollowing,w,c
  2951  001190  2648               	addwf	_I,f,c
  2952  001192  0E00               	movlw	0
  2953  001194  BE37               	btfsc	??_PID_LineFollowing,7,c
  2954  001196  0EFF               	movlw	255
  2955  001198  2249               	addwfc	_I+1,f,c
  2956  00119A  D000               	goto	l2723
  2957  00119C                     l2723:
  2958                           
  2959                           ;main.c: 124: }
  2960                           ;main.c: 127: if(error[1]!=error[2])
  2961  00119C  EE20 F002          	lfsr	2,2
  2962  0011A0  5035               	movf	PID_LineFollowing@error,w,c
  2963  0011A2  26D9               	addwf	fsr2l,f,c
  2964  0011A4  5036               	movf	PID_LineFollowing@error+1,w,c
  2965  0011A6  22DA               	addwfc	fsr2h,f,c
  2966  0011A8  EE10 F001          	lfsr	1,1
  2967  0011AC  5035               	movf	PID_LineFollowing@error,w,c
  2968  0011AE  26E1               	addwf	fsr1l,f,c
  2969  0011B0  5036               	movf	PID_LineFollowing@error+1,w,c
  2970  0011B2  22E2               	addwfc	fsr1h,f,c
  2971  0011B4  50DE               	movf	postinc2,w,c
  2972  0011B6  18E6               	xorwf	postinc1,w,c
  2973  0011B8  B4D8               	btfsc	status,2,c
  2974  0011BA  D058               	goto	l2731
  2975                           
  2976                           ;main.c: 128: {
  2977                           ;main.c: 129: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  2978  0011BC  EE20 F001          	lfsr	2,1
  2979  0011C0  5035               	movf	PID_LineFollowing@error,w,c
  2980  0011C2  26D9               	addwf	fsr2l,f,c
  2981  0011C4  5036               	movf	PID_LineFollowing@error+1,w,c
  2982  0011C6  22DA               	addwfc	fsr2h,f,c
  2983  0011C8  50DF               	movf	indf2,w,c
  2984  0011CA  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2985  0011CC  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  2986  0011CE  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  2987  0011D0  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  2988  0011D2  1E37               	comf	??_PID_LineFollowing,f,c
  2989  0011D4  1E38               	comf	??_PID_LineFollowing+1,f,c
  2990  0011D6  4A37               	infsnz	??_PID_LineFollowing,f,c
  2991  0011D8  2A38               	incf	??_PID_LineFollowing+1,f,c
  2992  0011DA  EE20 F002          	lfsr	2,2
  2993  0011DE  5035               	movf	PID_LineFollowing@error,w,c
  2994  0011E0  26D9               	addwf	fsr2l,f,c
  2995  0011E2  5036               	movf	PID_LineFollowing@error+1,w,c
  2996  0011E4  22DA               	addwfc	fsr2h,f,c
  2997  0011E6  50DF               	movf	indf2,w,c
  2998  0011E8  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  2999  0011EA  5037               	movf	??_PID_LineFollowing,w,c
  3000  0011EC  2439               	addwf	??_PID_LineFollowing+2,w,c
  3001  0011EE  6E1D               	movwf	___wmul@multiplier,c
  3002  0011F0  0E00               	movlw	0
  3003  0011F2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3004  0011F4  0EFF               	movlw	255
  3005  0011F6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3006  0011F8  6E1E               	movwf	___wmul@multiplier+1,c
  3007  0011FA  EC46  F011         	call	_ReadTimer0	;wreg free
  3008  0011FE  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  3009  001202  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  3010  001206  0E01               	movlw	low _D_CONSTANT
  3011  001208  6EF6               	movwf	tblptrl,c
  3012  00120A                     	if	1	;There is more than 1 active tblptr byte
  3013  00120A  0E10               	movlw	high _D_CONSTANT
  3014  00120C  6EF7               	movwf	tblptrh,c
  3015  00120E                     	endif
  3016  00120E                     	if	1	;There are 3 active tblptr bytes
  3017  00120E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3018  001210  6EF8               	movwf	tblptru,c
  3019  001212                     	endif
  3020  001212  0009               	tblrd		*+
  3021  001214  CFF5 F013          	movff	tablat,___lwdiv@dividend
  3022  001218  000A               	tblrd		*-
  3023  00121A  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  3024  00121E  EC52  F00F         	call	___lwdiv	;wreg free
  3025  001222  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  3026  001226  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3027  00122A  EC5E  F010         	call	___wmul	;wreg free
  3028  00122E  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3029  001232  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3030                           
  3031                           ;main.c: 132: error[0]=error[1];
  3032  001236  EE20 F001          	lfsr	2,1
  3033  00123A  5035               	movf	PID_LineFollowing@error,w,c
  3034  00123C  26D9               	addwf	fsr2l,f,c
  3035  00123E  5036               	movf	PID_LineFollowing@error+1,w,c
  3036  001240  22DA               	addwfc	fsr2h,f,c
  3037  001242  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3038  001246  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3039  00124A  CFDF FFE7          	movff	indf2,indf1
  3040                           
  3041                           ;main.c: 133: error[1]=error[2];
  3042  00124E  EE20 F002          	lfsr	2,2
  3043  001252  5035               	movf	PID_LineFollowing@error,w,c
  3044  001254  26D9               	addwf	fsr2l,f,c
  3045  001256  5036               	movf	PID_LineFollowing@error+1,w,c
  3046  001258  22DA               	addwfc	fsr2h,f,c
  3047  00125A  EE10 F001          	lfsr	1,1
  3048  00125E  5035               	movf	PID_LineFollowing@error,w,c
  3049  001260  26E1               	addwf	fsr1l,f,c
  3050  001262  5036               	movf	PID_LineFollowing@error+1,w,c
  3051  001264  22E2               	addwfc	fsr1h,f,c
  3052  001266  CFDF FFE7          	movff	indf2,indf1
  3053  00126A  D000               	goto	l2731
  3054  00126C                     l2731:
  3055                           
  3056                           ;main.c: 134: }
  3057                           ;main.c: 136: if(TMR0IF)
  3058  00126C  A4F2               	btfss	intcon,2,c	;volatile
  3059  00126E  D05E               	goto	l110
  3060                           
  3061                           ;main.c: 137: {
  3062                           ;main.c: 138: D = D_CONSTANT/65535*(error[1]-error[0]);
  3063  001270  C035  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3064  001274  C036  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3065  001278  50DF               	movf	indf2,w,c
  3066  00127A  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3067  00127C  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3068  00127E  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3069  001280  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3070  001282  1E37               	comf	??_PID_LineFollowing,f,c
  3071  001284  1E38               	comf	??_PID_LineFollowing+1,f,c
  3072  001286  4A37               	infsnz	??_PID_LineFollowing,f,c
  3073  001288  2A38               	incf	??_PID_LineFollowing+1,f,c
  3074  00128A  EE20 F001          	lfsr	2,1
  3075  00128E  5035               	movf	PID_LineFollowing@error,w,c
  3076  001290  26D9               	addwf	fsr2l,f,c
  3077  001292  5036               	movf	PID_LineFollowing@error+1,w,c
  3078  001294  22DA               	addwfc	fsr2h,f,c
  3079  001296  50DF               	movf	indf2,w,c
  3080  001298  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3081  00129A  5037               	movf	??_PID_LineFollowing,w,c
  3082  00129C  2439               	addwf	??_PID_LineFollowing+2,w,c
  3083  00129E  6E1D               	movwf	___wmul@multiplier,c
  3084  0012A0  0E00               	movlw	0
  3085  0012A2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3086  0012A4  0EFF               	movlw	255
  3087  0012A6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3088  0012A8  6E1E               	movwf	___wmul@multiplier+1,c
  3089  0012AA  0EFF               	movlw	255
  3090  0012AC  6E13               	movwf	___aldiv@divisor,c
  3091  0012AE  0EFF               	movlw	255
  3092  0012B0  6E14               	movwf	___aldiv@divisor+1,c
  3093  0012B2  0E00               	movlw	0
  3094  0012B4  6E15               	movwf	___aldiv@divisor+2,c
  3095  0012B6  0E00               	movlw	0
  3096  0012B8  6E16               	movwf	___aldiv@divisor+3,c
  3097  0012BA  0E01               	movlw	low _D_CONSTANT
  3098  0012BC  6EF6               	movwf	tblptrl,c
  3099  0012BE                     	if	1	;There is more than 1 active tblptr byte
  3100  0012BE  0E10               	movlw	high _D_CONSTANT
  3101  0012C0  6EF7               	movwf	tblptrh,c
  3102  0012C2                     	endif
  3103  0012C2                     	if	1	;There are 3 active tblptr bytes
  3104  0012C2  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3105  0012C4  6EF8               	movwf	tblptru,c
  3106  0012C6                     	endif
  3107  0012C6  0009               	tblrd		*+
  3108  0012C8  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+3
  3109  0012CC  0009               	tblrd		*+
  3110  0012CE  CFF5 F03B          	movff	tablat,??_PID_LineFollowing+4
  3111  0012D2  C03A  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3112  0012D6  C03B  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3113  0012DA  6A11               	clrf	___aldiv@dividend+2,c
  3114  0012DC  6A12               	clrf	___aldiv@dividend+3,c
  3115  0012DE  ECF2  F00B         	call	___aldiv	;wreg free
  3116  0012E2  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3117  0012E6  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3118  0012EA  EC5E  F010         	call	___wmul	;wreg free
  3119  0012EE  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3120  0012F2  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3121                           
  3122                           ;main.c: 141: error[0]=error[1];
  3123  0012F6  EE20 F001          	lfsr	2,1
  3124  0012FA  5035               	movf	PID_LineFollowing@error,w,c
  3125  0012FC  26D9               	addwf	fsr2l,f,c
  3126  0012FE  5036               	movf	PID_LineFollowing@error+1,w,c
  3127  001300  22DA               	addwfc	fsr2h,f,c
  3128  001302  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3129  001306  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3130  00130A  CFDF FFE7          	movff	indf2,indf1
  3131                           
  3132                           ;main.c: 142: error[1]=error[2];
  3133  00130E  EE20 F002          	lfsr	2,2
  3134  001312  5035               	movf	PID_LineFollowing@error,w,c
  3135  001314  26D9               	addwf	fsr2l,f,c
  3136  001316  5036               	movf	PID_LineFollowing@error+1,w,c
  3137  001318  22DA               	addwfc	fsr2h,f,c
  3138  00131A  EE10 F001          	lfsr	1,1
  3139  00131E  5035               	movf	PID_LineFollowing@error,w,c
  3140  001320  26E1               	addwf	fsr1l,f,c
  3141  001322  5036               	movf	PID_LineFollowing@error+1,w,c
  3142  001324  22E2               	addwfc	fsr1h,f,c
  3143  001326  CFDF FFE7          	movff	indf2,indf1
  3144                           
  3145                           ;main.c: 144: TMR0IF = 0;
  3146  00132A  94F2               	bcf	intcon,2,c	;volatile
  3147  00132C                     l110:
  3148                           
  3149                           ;main.c: 145: }
  3150                           ;main.c: 149: delta_velocity = P_CONSTANT*error[2] + I + D;
  3151  00132C  EE20 F002          	lfsr	2,2
  3152  001330  5035               	movf	PID_LineFollowing@error,w,c
  3153  001332  26D9               	addwf	fsr2l,f,c
  3154  001334  5036               	movf	PID_LineFollowing@error+1,w,c
  3155  001336  22DA               	addwfc	fsr2h,f,c
  3156  001338  50DF               	movf	indf2,w,c
  3157  00133A  6E1D               	movwf	___wmul@multiplier,c
  3158  00133C  6A1E               	clrf	___wmul@multiplier+1,c
  3159  00133E  BE1D               	btfsc	___wmul@multiplier,7,c
  3160  001340  061E               	decf	___wmul@multiplier+1,f,c
  3161  001342  0E05               	movlw	low _P_CONSTANT
  3162  001344  6EF6               	movwf	tblptrl,c
  3163  001346                     	if	1	;There is more than 1 active tblptr byte
  3164  001346  0E10               	movlw	high _P_CONSTANT
  3165  001348  6EF7               	movwf	tblptrh,c
  3166  00134A                     	endif
  3167  00134A                     	if	1	;There are 3 active tblptr bytes
  3168  00134A  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3169  00134C  6EF8               	movwf	tblptru,c
  3170  00134E                     	endif
  3171  00134E  0009               	tblrd		*+
  3172  001350  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3173  001354  000A               	tblrd		*-
  3174  001356  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3175  00135A  EC5E  F010         	call	___wmul	;wreg free
  3176  00135E  5048               	movf	_I,w,c
  3177  001360  261D               	addwf	?___wmul,f,c
  3178  001362  5049               	movf	_I+1,w,c
  3179  001364  221E               	addwfc	?___wmul+1,f,c
  3180  001366  5044               	movf	PID_LineFollowing@D,w,c
  3181  001368  241D               	addwf	?___wmul,w,c
  3182  00136A  6E46               	movwf	PID_LineFollowing@delta_velocity,c
  3183  00136C  5045               	movf	PID_LineFollowing@D+1,w,c
  3184  00136E  201E               	addwfc	?___wmul+1,w,c
  3185  001370  6E47               	movwf	PID_LineFollowing@delta_velocity+1,c
  3186                           
  3187                           ;main.c: 152: MotorControl(delta_velocity,0);
  3188  001372  C046  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3189  001376  C047  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3190  00137A  0E00               	movlw	0
  3191  00137C  6E2D               	movwf	MotorControl@speed_divider,c
  3192  00137E  ECC2  F009         	call	_MotorControl	;wreg free
  3193  001382  0012               	return		;funcret
  3194  001384                     __end_of_PID_LineFollowing:
  3195                           	opt stack 0
  3196                           stkptr	equ	0xFFC
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           indf1	equ	0xFE7
  3205                           postinc1	equ	0xFE6
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           indf2	equ	0xFDF
  3209                           postinc2	equ	0xFDE
  3210                           plusw2	equ	0xFDB
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function ___lwmod *****************
  3216 ;; Defined at:
  3217 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  dividend        2   18[COMRAM] unsigned int 
  3220 ;;  divisor         2   20[COMRAM] unsigned int 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  counter         1   22[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  2   18[COMRAM] unsigned int 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;Total ram usage:        5 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    1
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_PID_LineFollowing
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text26
  3247  001F00                     __ptext26:
  3248                           	opt stack 0
  3249  001F00                     ___lwmod:
  3250                           	opt stack 28
  3251                           
  3252                           ;incstack = 0
  3253  001F00  5015               	movf	___lwmod@divisor,w,c
  3254  001F02  1016               	iorwf	___lwmod@divisor+1,w,c
  3255  001F04  B4D8               	btfsc	status,2,c
  3256  001F06  D01D               	goto	l1143
  3257  001F08  0E01               	movlw	1
  3258  001F0A  6E17               	movwf	___lwmod@counter,c
  3259  001F0C  D005               	goto	l2561
  3260  001F0E                     l2559:
  3261  001F0E  90D8               	bcf	status,0,c
  3262  001F10  3615               	rlcf	___lwmod@divisor,f,c
  3263  001F12  3616               	rlcf	___lwmod@divisor+1,f,c
  3264  001F14  2A17               	incf	___lwmod@counter,f,c
  3265  001F16  D000               	goto	l2561
  3266  001F18                     l2561:
  3267  001F18  BE16               	btfsc	___lwmod@divisor+1,7,c
  3268  001F1A  D002               	goto	l2563
  3269  001F1C  D7F8               	goto	l2559
  3270  001F1E  D000               	goto	l2563
  3271  001F20                     l2563:
  3272  001F20  5015               	movf	___lwmod@divisor,w,c
  3273  001F22  5C13               	subwf	___lwmod@dividend,w,c
  3274  001F24  5016               	movf	___lwmod@divisor+1,w,c
  3275  001F26  5814               	subwfb	___lwmod@dividend+1,w,c
  3276  001F28  A0D8               	btfss	status,0,c
  3277  001F2A  D005               	goto	l2567
  3278  001F2C  5015               	movf	___lwmod@divisor,w,c
  3279  001F2E  5E13               	subwf	___lwmod@dividend,f,c
  3280  001F30  5016               	movf	___lwmod@divisor+1,w,c
  3281  001F32  5A14               	subwfb	___lwmod@dividend+1,f,c
  3282  001F34  D000               	goto	l2567
  3283  001F36                     l2567:
  3284  001F36  90D8               	bcf	status,0,c
  3285  001F38  3216               	rrcf	___lwmod@divisor+1,f,c
  3286  001F3A  3215               	rrcf	___lwmod@divisor,f,c
  3287  001F3C  2E17               	decfsz	___lwmod@counter,f,c
  3288  001F3E  D7F0               	goto	l2563
  3289  001F40  D000               	goto	l1143
  3290  001F42                     l1143:
  3291  001F42  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3292  001F46  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3293  001F4A  0012               	return		;funcret
  3294  001F4C                     __end_of___lwmod:
  3295                           	opt stack 0
  3296                           stkptr	equ	0xFFC
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           intcon	equ	0xFF2
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           indf1	equ	0xFE7
  3305                           postinc1	equ	0xFE6
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           plusw2	equ	0xFDB
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function ___lwdiv *****************
  3316 ;; Defined at:
  3317 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  dividend        2   18[COMRAM] unsigned int 
  3320 ;;  divisor         2   20[COMRAM] unsigned int 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  quotient        2   22[COMRAM] unsigned int 
  3323 ;;  counter         1   24[COMRAM] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2   18[COMRAM] unsigned int 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        7 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_PID_LineFollowing
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text27
  3348  001EA4                     __ptext27:
  3349                           	opt stack 0
  3350  001EA4                     ___lwdiv:
  3351                           	opt stack 28
  3352                           
  3353                           ;incstack = 0
  3354  001EA4  0E00               	movlw	0
  3355  001EA6  6E18               	movwf	___lwdiv@quotient+1,c
  3356  001EA8  0E00               	movlw	0
  3357  001EAA  6E17               	movwf	___lwdiv@quotient,c
  3358  001EAC  5015               	movf	___lwdiv@divisor,w,c
  3359  001EAE  1016               	iorwf	___lwdiv@divisor+1,w,c
  3360  001EB0  B4D8               	btfsc	status,2,c
  3361  001EB2  D021               	goto	l1133
  3362  001EB4  0E01               	movlw	1
  3363  001EB6  6E19               	movwf	___lwdiv@counter,c
  3364  001EB8  D005               	goto	l2541
  3365  001EBA                     l2539:
  3366  001EBA  90D8               	bcf	status,0,c
  3367  001EBC  3615               	rlcf	___lwdiv@divisor,f,c
  3368  001EBE  3616               	rlcf	___lwdiv@divisor+1,f,c
  3369  001EC0  2A19               	incf	___lwdiv@counter,f,c
  3370  001EC2  D000               	goto	l2541
  3371  001EC4                     l2541:
  3372  001EC4  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3373  001EC6  D002               	goto	l2543
  3374  001EC8  D7F8               	goto	l2539
  3375  001ECA  D000               	goto	l2543
  3376  001ECC                     l2543:
  3377  001ECC  90D8               	bcf	status,0,c
  3378  001ECE  3617               	rlcf	___lwdiv@quotient,f,c
  3379  001ED0  3618               	rlcf	___lwdiv@quotient+1,f,c
  3380  001ED2  5015               	movf	___lwdiv@divisor,w,c
  3381  001ED4  5C13               	subwf	___lwdiv@dividend,w,c
  3382  001ED6  5016               	movf	___lwdiv@divisor+1,w,c
  3383  001ED8  5814               	subwfb	___lwdiv@dividend+1,w,c
  3384  001EDA  A0D8               	btfss	status,0,c
  3385  001EDC  D006               	goto	l2551
  3386  001EDE  5015               	movf	___lwdiv@divisor,w,c
  3387  001EE0  5E13               	subwf	___lwdiv@dividend,f,c
  3388  001EE2  5016               	movf	___lwdiv@divisor+1,w,c
  3389  001EE4  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3390  001EE6  8017               	bsf	___lwdiv@quotient,0,c
  3391  001EE8  D000               	goto	l2551
  3392  001EEA                     l2551:
  3393  001EEA  90D8               	bcf	status,0,c
  3394  001EEC  3216               	rrcf	___lwdiv@divisor+1,f,c
  3395  001EEE  3215               	rrcf	___lwdiv@divisor,f,c
  3396  001EF0  2E19               	decfsz	___lwdiv@counter,f,c
  3397  001EF2  D7EC               	goto	l2543
  3398  001EF4  D000               	goto	l1133
  3399  001EF6                     l1133:
  3400  001EF6  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3401  001EFA  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3402  001EFE  0012               	return		;funcret
  3403  001F00                     __end_of___lwdiv:
  3404                           	opt stack 0
  3405                           stkptr	equ	0xFFC
  3406                           tblptru	equ	0xFF8
  3407                           tblptrh	equ	0xFF7
  3408                           tblptrl	equ	0xFF6
  3409                           tablat	equ	0xFF5
  3410                           intcon	equ	0xFF2
  3411                           postinc0	equ	0xFEE
  3412                           wreg	equ	0xFE8
  3413                           indf1	equ	0xFE7
  3414                           postinc1	equ	0xFE6
  3415                           fsr1h	equ	0xFE2
  3416                           fsr1l	equ	0xFE1
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           plusw2	equ	0xFDB
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function ___aldiv *****************
  3425 ;; Defined at:
  3426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  dividend        4   14[COMRAM] long 
  3429 ;;  divisor         4   18[COMRAM] long 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  quotient        4   24[COMRAM] long 
  3432 ;;  sign            1   23[COMRAM] unsigned char 
  3433 ;;  counter         1   22[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  4   14[COMRAM] long 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3443 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;Total ram usage:       14 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_PID_LineFollowing
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text28
  3458  0017E4                     __ptext28:
  3459                           	opt stack 0
  3460  0017E4                     ___aldiv:
  3461                           	opt stack 28
  3462                           
  3463                           ;incstack = 0
  3464  0017E4  0E00               	movlw	0
  3465  0017E6  6E18               	movwf	___aldiv@sign,c
  3466  0017E8  AE16               	btfss	___aldiv@divisor+3,7,c
  3467  0017EA  D00B               	goto	l2497
  3468  0017EC  1E16               	comf	___aldiv@divisor+3,f,c
  3469  0017EE  1E15               	comf	___aldiv@divisor+2,f,c
  3470  0017F0  1E14               	comf	___aldiv@divisor+1,f,c
  3471  0017F2  6C13               	negf	___aldiv@divisor,c
  3472  0017F4  0E00               	movlw	0
  3473  0017F6  2214               	addwfc	___aldiv@divisor+1,f,c
  3474  0017F8  2215               	addwfc	___aldiv@divisor+2,f,c
  3475  0017FA  2216               	addwfc	___aldiv@divisor+3,f,c
  3476  0017FC  0E01               	movlw	1
  3477  0017FE  6E18               	movwf	___aldiv@sign,c
  3478  001800  D000               	goto	l2497
  3479  001802                     l2497:
  3480  001802  AE12               	btfss	___aldiv@dividend+3,7,c
  3481  001804  D00B               	goto	l2503
  3482  001806  1E12               	comf	___aldiv@dividend+3,f,c
  3483  001808  1E11               	comf	___aldiv@dividend+2,f,c
  3484  00180A  1E10               	comf	___aldiv@dividend+1,f,c
  3485  00180C  6C0F               	negf	___aldiv@dividend,c
  3486  00180E  0E00               	movlw	0
  3487  001810  2210               	addwfc	___aldiv@dividend+1,f,c
  3488  001812  2211               	addwfc	___aldiv@dividend+2,f,c
  3489  001814  2212               	addwfc	___aldiv@dividend+3,f,c
  3490  001816  0E01               	movlw	1
  3491  001818  1A18               	xorwf	___aldiv@sign,f,c
  3492  00181A  D000               	goto	l2503
  3493  00181C                     l2503:
  3494  00181C  0E00               	movlw	0
  3495  00181E  6E19               	movwf	___aldiv@quotient,c
  3496  001820  0E00               	movlw	0
  3497  001822  6E1A               	movwf	___aldiv@quotient+1,c
  3498  001824  0E00               	movlw	0
  3499  001826  6E1B               	movwf	___aldiv@quotient+2,c
  3500  001828  0E00               	movlw	0
  3501  00182A  6E1C               	movwf	___aldiv@quotient+3,c
  3502  00182C  5013               	movf	___aldiv@divisor,w,c
  3503  00182E  1014               	iorwf	___aldiv@divisor+1,w,c
  3504  001830  1015               	iorwf	___aldiv@divisor+2,w,c
  3505  001832  1016               	iorwf	___aldiv@divisor+3,w,c
  3506  001834  B4D8               	btfsc	status,2,c
  3507  001836  D02F               	goto	l2525
  3508  001838  0E01               	movlw	1
  3509  00183A  6E17               	movwf	___aldiv@counter,c
  3510  00183C  D007               	goto	l2511
  3511  00183E                     l2509:
  3512  00183E  90D8               	bcf	status,0,c
  3513  001840  3613               	rlcf	___aldiv@divisor,f,c
  3514  001842  3614               	rlcf	___aldiv@divisor+1,f,c
  3515  001844  3615               	rlcf	___aldiv@divisor+2,f,c
  3516  001846  3616               	rlcf	___aldiv@divisor+3,f,c
  3517  001848  2A17               	incf	___aldiv@counter,f,c
  3518  00184A  D000               	goto	l2511
  3519  00184C                     l2511:
  3520  00184C  BE16               	btfsc	___aldiv@divisor+3,7,c
  3521  00184E  D002               	goto	l2513
  3522  001850  D7F6               	goto	l2509
  3523  001852  D000               	goto	l2513
  3524  001854                     l2513:
  3525  001854  90D8               	bcf	status,0,c
  3526  001856  3619               	rlcf	___aldiv@quotient,f,c
  3527  001858  361A               	rlcf	___aldiv@quotient+1,f,c
  3528  00185A  361B               	rlcf	___aldiv@quotient+2,f,c
  3529  00185C  361C               	rlcf	___aldiv@quotient+3,f,c
  3530  00185E  5013               	movf	___aldiv@divisor,w,c
  3531  001860  5C0F               	subwf	___aldiv@dividend,w,c
  3532  001862  5014               	movf	___aldiv@divisor+1,w,c
  3533  001864  5810               	subwfb	___aldiv@dividend+1,w,c
  3534  001866  5015               	movf	___aldiv@divisor+2,w,c
  3535  001868  5811               	subwfb	___aldiv@dividend+2,w,c
  3536  00186A  5016               	movf	___aldiv@divisor+3,w,c
  3537  00186C  5812               	subwfb	___aldiv@dividend+3,w,c
  3538  00186E  A0D8               	btfss	status,0,c
  3539  001870  D00A               	goto	l2521
  3540  001872  5013               	movf	___aldiv@divisor,w,c
  3541  001874  5E0F               	subwf	___aldiv@dividend,f,c
  3542  001876  5014               	movf	___aldiv@divisor+1,w,c
  3543  001878  5A10               	subwfb	___aldiv@dividend+1,f,c
  3544  00187A  5015               	movf	___aldiv@divisor+2,w,c
  3545  00187C  5A11               	subwfb	___aldiv@dividend+2,f,c
  3546  00187E  5016               	movf	___aldiv@divisor+3,w,c
  3547  001880  5A12               	subwfb	___aldiv@dividend+3,f,c
  3548  001882  8019               	bsf	___aldiv@quotient,0,c
  3549  001884  D000               	goto	l2521
  3550  001886                     l2521:
  3551  001886  90D8               	bcf	status,0,c
  3552  001888  3216               	rrcf	___aldiv@divisor+3,f,c
  3553  00188A  3215               	rrcf	___aldiv@divisor+2,f,c
  3554  00188C  3214               	rrcf	___aldiv@divisor+1,f,c
  3555  00188E  3213               	rrcf	___aldiv@divisor,f,c
  3556  001890  2E17               	decfsz	___aldiv@counter,f,c
  3557  001892  D7E0               	goto	l2513
  3558  001894  D000               	goto	l2525
  3559  001896                     l2525:
  3560  001896  5018               	movf	___aldiv@sign,w,c
  3561  001898  B4D8               	btfsc	status,2,c
  3562  00189A  D009               	goto	l2529
  3563  00189C  1E1C               	comf	___aldiv@quotient+3,f,c
  3564  00189E  1E1B               	comf	___aldiv@quotient+2,f,c
  3565  0018A0  1E1A               	comf	___aldiv@quotient+1,f,c
  3566  0018A2  6C19               	negf	___aldiv@quotient,c
  3567  0018A4  0E00               	movlw	0
  3568  0018A6  221A               	addwfc	___aldiv@quotient+1,f,c
  3569  0018A8  221B               	addwfc	___aldiv@quotient+2,f,c
  3570  0018AA  221C               	addwfc	___aldiv@quotient+3,f,c
  3571  0018AC  D000               	goto	l2529
  3572  0018AE                     l2529:
  3573  0018AE  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  3574  0018B2  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  3575  0018B6  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  3576  0018BA  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  3577  0018BE  D000               	goto	l684
  3578  0018C0                     l684:
  3579  0018C0  0012               	return		;funcret
  3580  0018C2                     __end_of___aldiv:
  3581                           	opt stack 0
  3582                           stkptr	equ	0xFFC
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           intcon	equ	0xFF2
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           indf1	equ	0xFE7
  3591                           postinc1	equ	0xFE6
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           plusw2	equ	0xFDB
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _OpenTimer0 *****************
  3602 ;; Defined at:
  3603 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  config          1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  config          1   14[COMRAM] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;		None               void
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        1 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text29
  3632  002172                     __ptext29:
  3633                           	opt stack 0
  3634  002172                     _OpenTimer0:
  3635                           	opt stack 29
  3636                           
  3637                           ;incstack = 0
  3638                           ;OpenTimer0@config stored from wreg
  3639  002172  6E0F               	movwf	OpenTimer0@config,c
  3640  002174  500F               	movf	OpenTimer0@config,w,c
  3641  002176  0B7F               	andlw	127
  3642  002178  6ED5               	movwf	4053,c	;volatile
  3643  00217A  0E00               	movlw	0
  3644  00217C  6ED7               	movwf	4055,c	;volatile
  3645  00217E  0E00               	movlw	0
  3646  002180  6ED6               	movwf	4054,c	;volatile
  3647  002182  94F2               	bcf	intcon,2,c	;volatile
  3648  002184  AE0F               	btfss	OpenTimer0@config,7,c
  3649  002186  D002               	goto	l518
  3650  002188  8AF2               	bsf	intcon,5,c	;volatile
  3651  00218A  D001               	goto	l519
  3652  00218C                     l518:
  3653  00218C  9AF2               	bcf	intcon,5,c	;volatile
  3654  00218E                     l519:
  3655  00218E  8ED5               	bsf	4053,7,c	;volatile
  3656  002190  0012               	return		;funcret
  3657  002192                     __end_of_OpenTimer0:
  3658                           	opt stack 0
  3659                           stkptr	equ	0xFFC
  3660                           tblptru	equ	0xFF8
  3661                           tblptrh	equ	0xFF7
  3662                           tblptrl	equ	0xFF6
  3663                           tablat	equ	0xFF5
  3664                           intcon	equ	0xFF2
  3665                           postinc0	equ	0xFEE
  3666                           wreg	equ	0xFE8
  3667                           indf1	equ	0xFE7
  3668                           postinc1	equ	0xFE6
  3669                           fsr1h	equ	0xFE2
  3670                           fsr1l	equ	0xFE1
  3671                           indf2	equ	0xFDF
  3672                           postinc2	equ	0xFDE
  3673                           plusw2	equ	0xFDB
  3674                           fsr2h	equ	0xFDA
  3675                           fsr2l	equ	0xFD9
  3676                           status	equ	0xFD8
  3677                           
  3678 ;; *************** function _LVtrap *****************
  3679 ;; Defined at:
  3680 ;;		line 449 in file "../Robot Files/sumovore.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		_gtrap
  3703 ;;		_openPORTD
  3704 ;;		_printf
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text30
  3711  002192                     __ptext30:
  3712                           	opt stack 0
  3713  002192                     _LVtrap:
  3714                           	opt stack 27
  3715                           
  3716                           ;sumovore.c: 451: printf("\\<LVD>");
  3717                           
  3718                           ;incstack = 0
  3719  002192  0E66               	movlw	low STR_7
  3720  002194  6E0F               	movwf	printf@f,c
  3721  002196  0E10               	movlw	high STR_7
  3722  002198  6E10               	movwf	printf@f+1,c
  3723  00219A  EC1D  F010         	call	_printf	;wreg free
  3724                           
  3725                           ;sumovore.c: 452: openPORTD();
  3726  00219E  EC80  F011         	call	_openPORTD	;wreg free
  3727                           
  3728                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3729  0021A2  9083               	bcf	3971,0,c	;volatile
  3730                           
  3731                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3732  0021A4  8283               	bsf	3971,1,c	;volatile
  3733                           
  3734                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3735  0021A6  8483               	bsf	3971,2,c	;volatile
  3736                           
  3737                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3738  0021A8  9683               	bcf	3971,3,c	;volatile
  3739                           
  3740                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3741  0021AA  8883               	bsf	3971,4,c	;volatile
  3742                           
  3743                           ;sumovore.c: 458: gtrap();
  3744  0021AC  ECF2  F00E         	call	_gtrap	;wreg free
  3745  0021B0  0012               	return		;funcret
  3746  0021B2                     __end_of_LVtrap:
  3747                           	opt stack 0
  3748                           stkptr	equ	0xFFC
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           intcon	equ	0xFF2
  3754                           postinc0	equ	0xFEE
  3755                           wreg	equ	0xFE8
  3756                           indf1	equ	0xFE7
  3757                           postinc1	equ	0xFE6
  3758                           fsr1h	equ	0xFE2
  3759                           fsr1l	equ	0xFE1
  3760                           indf2	equ	0xFDF
  3761                           postinc2	equ	0xFDE
  3762                           plusw2	equ	0xFDB
  3763                           fsr2h	equ	0xFDA
  3764                           fsr2l	equ	0xFD9
  3765                           status	equ	0xFD8
  3766                           
  3767 ;; *************** function _printf *****************
  3768 ;; Defined at:
  3769 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3772 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3773 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  tmpval          4    0        struct .
  3776 ;;  cp              3    0        PTR const unsigned char 
  3777 ;;  ap              2   16[COMRAM] PTR void [1]
  3778 ;;		 -> ?_printf(2), 
  3779 ;;  len             2    0        unsigned int 
  3780 ;;  val             2    0        unsigned int 
  3781 ;;  c               1   18[COMRAM] char 
  3782 ;;  flag            1    0        unsigned char 
  3783 ;;  prec            1    0        char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2   14[COMRAM] int 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        5 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    2
  3800 ;; This function calls:
  3801 ;;		_putch
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;;		_PORtask
  3805 ;;		_BORtask
  3806 ;;		_WDTtask
  3807 ;;		_STKFULtask
  3808 ;;		_RESETtask
  3809 ;;		_LVtrap
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text31
  3814  00203A                     __ptext31:
  3815                           	opt stack 0
  3816  00203A                     _printf:
  3817                           	opt stack 28
  3818                           
  3819                           ;doprnt.c: 466: va_list ap;
  3820                           ;doprnt.c: 499: signed char c;
  3821                           ;doprnt.c: 506: signed char prec;
  3822                           ;doprnt.c: 508: unsigned char flag;
  3823                           ;doprnt.c: 523: union {
  3824                           ;doprnt.c: 524: unsigned long vd;
  3825                           ;doprnt.c: 525: double integ;
  3826                           ;doprnt.c: 526: } tmpval;
  3827                           ;doprnt.c: 528: unsigned int val;
  3828                           ;doprnt.c: 529: unsigned len;
  3829                           ;doprnt.c: 530: const char * cp;
  3830                           ;doprnt.c: 533: *ap = __va_start();
  3831                           
  3832                           ;incstack = 0
  3833  00203A  0E11               	movlw	low (?_printf+2)
  3834  00203C  6E11               	movwf	printf@ap,c
  3835  00203E  0E00               	movlw	high (?_printf+2)
  3836  002040  6E12               	movwf	printf@ap+1,c
  3837                           
  3838                           ;doprnt.c: 536: while(c = *f++) {
  3839  002042  D004               	goto	l2143
  3840  002044                     l2141:
  3841                           
  3842                           ;doprnt.c: 540: {
  3843                           ;doprnt.c: 541: (putch(c) );
  3844  002044  5013               	movf	printf@c,w,c
  3845  002046  EC85  F011         	call	_putch
  3846                           
  3847                           ;doprnt.c: 542: continue;
  3848  00204A  D000               	goto	l2143
  3849  00204C                     l2143:
  3850  00204C  C00F  FFF6         	movff	printf@f,tblptrl
  3851  002050  C010  FFF7         	movff	printf@f+1,tblptrh
  3852  002054  4A0F               	infsnz	printf@f,f,c
  3853  002056  2A10               	incf	printf@f+1,f,c
  3854  002058                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3855  002058  6AF8               	clrf	tblptru,c
  3856  00205A                     	endif
  3857  00205A                     	if	0	;tblptru may be non-zero
  3858  00205A                     	endif
  3859  00205A  0008               	tblrd		*
  3860  00205C  CFF5 F013          	movff	tablat,printf@c
  3861  002060  5013               	movf	printf@c,w,c
  3862  002062  A4D8               	btfss	status,2,c
  3863  002064  D7EF               	goto	l2141
  3864                           
  3865                           ;doprnt.c: 1469: }
  3866                           ;doprnt.c: 1533: }
  3867                           ;doprnt.c: 1540: return 0;
  3868                           ;	Return value of _printf is never used
  3869  002066  0012               	return		;funcret
  3870  002068                     __end_of_printf:
  3871                           	opt stack 0
  3872                           stkptr	equ	0xFFC
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           intcon	equ	0xFF2
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           indf1	equ	0xFE7
  3881                           postinc1	equ	0xFE6
  3882                           fsr1h	equ	0xFE2
  3883                           fsr1l	equ	0xFE1
  3884                           indf2	equ	0xFDF
  3885                           postinc2	equ	0xFDE
  3886                           plusw2	equ	0xFDB
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _putch *****************
  3892 ;; Defined at:
  3893 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  c               1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  c               1    0[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;		None               void
  3900 ;; Registers used:
  3901 ;;		wreg
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    1
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_printf
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text32
  3922  00230A                     __ptext32:
  3923                           	opt stack 0
  3924  00230A                     _putch:
  3925                           	opt stack 28
  3926                           
  3927                           ;incstack = 0
  3928  00230A  0012               	return		;funcret
  3929  00230C                     __end_of_putch:
  3930                           	opt stack 0
  3931                           stkptr	equ	0xFFC
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf1	equ	0xFE7
  3940                           postinc1	equ	0xFE6
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           plusw2	equ	0xFDB
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _openPORTD *****************
  3951 ;; Defined at:
  3952 ;;		line 168 in file "../Robot Files/sumovore.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, status,2
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_initialization
  3977 ;;		_LVtrap
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text33
  3982  002300                     __ptext33:
  3983                           	opt stack 0
  3984  002300                     _openPORTD:
  3985                           	opt stack 28
  3986                           
  3987                           ;sumovore.c: 170: TRISD = 0b01100000;
  3988                           
  3989                           ;incstack = 0
  3990  002300  0E60               	movlw	96
  3991  002302  6E95               	movwf	3989,c	;volatile
  3992  002304  0012               	return		;funcret
  3993  002306                     __end_of_openPORTD:
  3994                           	opt stack 0
  3995                           stkptr	equ	0xFFC
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           intcon	equ	0xFF2
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           indf1	equ	0xFE7
  4004                           postinc1	equ	0xFE6
  4005                           fsr1h	equ	0xFE2
  4006                           fsr1l	equ	0xFE1
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           plusw2	equ	0xFDB
  4010                           fsr2h	equ	0xFDA
  4011                           fsr2l	equ	0xFD9
  4012                           status	equ	0xFD8
  4013                           
  4014 ;; *************** function _gtrap *****************
  4015 ;; Defined at:
  4016 ;;		line 464 in file "../Robot Files/sumovore.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  count           4   14[COMRAM] unsigned long 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;		None               void
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;Total ram usage:        4 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    1
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_BORtask
  4041 ;;		_WDTtask
  4042 ;;		_STKFULtask
  4043 ;;		_RESETtask
  4044 ;;		_LVtrap
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text34
  4049  001DE4                     __ptext34:
  4050                           	opt stack 0
  4051  001DE4                     _gtrap:
  4052                           	opt stack 26
  4053                           
  4054                           ;sumovore.c: 466: unsigned long count=0;
  4055                           
  4056                           ;incstack = 0
  4057  001DE4  0E00               	movlw	0
  4058  001DE6  6E0F               	movwf	gtrap@count,c
  4059  001DE8  0E00               	movlw	0
  4060  001DEA  6E10               	movwf	gtrap@count+1,c
  4061  001DEC  0E00               	movlw	0
  4062  001DEE  6E11               	movwf	gtrap@count+2,c
  4063  001DF0  0E00               	movlw	0
  4064  001DF2  6E12               	movwf	gtrap@count+3,c
  4065  001DF4                     l351:
  4066  001DF4  0004               	clrwdt		;# 
  4067                           
  4068                           ;sumovore.c: 471: if (count==30000u)
  4069  001DF6  0E30               	movlw	48
  4070  001DF8  180F               	xorwf	gtrap@count,w,c
  4071  001DFA  E111               	bnz	l1261
  4072  001DFC  0E75               	movlw	117
  4073  001DFE  1810               	xorwf	gtrap@count+1,w,c
  4074  001E00  1011               	iorwf	gtrap@count+2,w,c
  4075  001E02  1012               	iorwf	gtrap@count+3,w,c
  4076  001E04  A4D8               	btfss	status,2,c
  4077  001E06  D00B               	goto	l1261
  4078                           
  4079                           ;sumovore.c: 472: {
  4080                           ;sumovore.c: 473: count=0;
  4081  001E08  0E00               	movlw	0
  4082  001E0A  6E0F               	movwf	gtrap@count,c
  4083  001E0C  0E00               	movlw	0
  4084  001E0E  6E10               	movwf	gtrap@count+1,c
  4085  001E10  0E00               	movlw	0
  4086  001E12  6E11               	movwf	gtrap@count+2,c
  4087  001E14  0E00               	movlw	0
  4088  001E16  6E12               	movwf	gtrap@count+3,c
  4089                           
  4090                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  4091  001E18  9083               	bcf	3971,0,c	;volatile
  4092                           
  4093                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  4094  001E1A  8283               	bsf	3971,1,c	;volatile
  4095                           
  4096                           ;sumovore.c: 476: }
  4097  001E1C  D00C               	goto	l1265
  4098  001E1E                     l1261:
  4099                           
  4100                           ;sumovore.c: 477: else if (count==15000u)
  4101  001E1E  0E98               	movlw	152
  4102  001E20  180F               	xorwf	gtrap@count,w,c
  4103  001E22  E109               	bnz	l1265
  4104  001E24  0E3A               	movlw	58
  4105  001E26  1810               	xorwf	gtrap@count+1,w,c
  4106  001E28  1011               	iorwf	gtrap@count+2,w,c
  4107  001E2A  1012               	iorwf	gtrap@count+3,w,c
  4108  001E2C  A4D8               	btfss	status,2,c
  4109  001E2E  D003               	goto	l1265
  4110                           
  4111                           ;sumovore.c: 478: {
  4112                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  4113  001E30  8083               	bsf	3971,0,c	;volatile
  4114                           
  4115                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  4116  001E32  9283               	bcf	3971,1,c	;volatile
  4117  001E34  D000               	goto	l1265
  4118  001E36                     l1265:
  4119                           
  4120                           ;sumovore.c: 481: }
  4121                           ;sumovore.c: 482: count++;
  4122  001E36  0E01               	movlw	1
  4123  001E38  260F               	addwf	gtrap@count,f,c
  4124  001E3A  0E00               	movlw	0
  4125  001E3C  2210               	addwfc	gtrap@count+1,f,c
  4126  001E3E  2211               	addwfc	gtrap@count+2,f,c
  4127  001E40  2212               	addwfc	gtrap@count+3,f,c
  4128  001E42  D7D8               	goto	l351
  4129  001E44  0012               	return		;funcret
  4130  001E46                     __end_of_gtrap:
  4131                           	opt stack 0
  4132                           stkptr	equ	0xFFC
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           intcon	equ	0xFF2
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           indf1	equ	0xFE7
  4141                           postinc1	equ	0xFE6
  4142                           fsr1h	equ	0xFE2
  4143                           fsr1l	equ	0xFE1
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           plusw2	equ	0xFDB
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function _GetBackonTrack *****************
  4152 ;; Defined at:
  4153 ;;		line 212 in file "../Robot Files/main.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  error           2   56[COMRAM] PTR char 
  4156 ;;		 -> main@error(3), 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  i               2   59[COMRAM] unsigned int 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;		None               void
  4161 ;; Registers used:
  4162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;Total ram usage:        5 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    5
  4175 ;; This function calls:
  4176 ;;		_MotorControl
  4177 ;;		_ReadTimer0
  4178 ;;		_SharpTurn
  4179 ;;		_WriteTimer0
  4180 ;;		_check_sensors
  4181 ;;		_motors_brake_all
  4182 ;;		_set_leds
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text35
  4189  001550                     __ptext35:
  4190                           	opt stack 0
  4191  001550                     _GetBackonTrack:
  4192                           	opt stack 25
  4193                           
  4194                           ;main.c: 214: if((error[2]>1) || (error[1]>1) || CW_rotation_flag)
  4195                           
  4196                           ;incstack = 0
  4197  001550  EE20 F002          	lfsr	2,2
  4198  001554  5039               	movf	GetBackonTrack@error,w,c
  4199  001556  26D9               	addwf	fsr2l,f,c
  4200  001558  503A               	movf	GetBackonTrack@error+1,w,c
  4201  00155A  22DA               	addwfc	fsr2h,f,c
  4202  00155C  50DF               	movf	indf2,w,c
  4203  00155E  0A80               	xorlw	128
  4204  001560  0F7E               	addlw	-130
  4205  001562  B0D8               	btfsc	status,0,c
  4206  001564  D00E               	goto	l2623
  4207  001566  EE20 F001          	lfsr	2,1
  4208  00156A  5039               	movf	GetBackonTrack@error,w,c
  4209  00156C  26D9               	addwf	fsr2l,f,c
  4210  00156E  503A               	movf	GetBackonTrack@error+1,w,c
  4211  001570  22DA               	addwfc	fsr2h,f,c
  4212  001572  50DF               	movf	indf2,w,c
  4213  001574  0A80               	xorlw	128
  4214  001576  0F7E               	addlw	-130
  4215  001578  B0D8               	btfsc	status,0,c
  4216  00157A  D003               	goto	l2623
  4217  00157C  504D               	movf	_CW_rotation_flag,w,c
  4218  00157E  B4D8               	btfsc	status,2,c
  4219  001580  D004               	goto	l2625
  4220  001582                     l2623:
  4221                           
  4222                           ;main.c: 215: SharpTurn(CW);
  4223  001582  0E01               	movlw	1
  4224  001584  EC19  F00D         	call	_SharpTurn
  4225  001588  D095               	goto	l147
  4226  00158A                     l2625:
  4227                           
  4228                           ;main.c: 216: else if((error[2]<-1) || (error[1]<-1) || CCW_rotation_flag)
  4229  00158A  EE20 F002          	lfsr	2,2
  4230  00158E  5039               	movf	GetBackonTrack@error,w,c
  4231  001590  26D9               	addwf	fsr2l,f,c
  4232  001592  503A               	movf	GetBackonTrack@error+1,w,c
  4233  001594  22DA               	addwfc	fsr2h,f,c
  4234  001596  50DF               	movf	indf2,w,c
  4235  001598  0A80               	xorlw	128
  4236  00159A  0F81               	addlw	129
  4237  00159C  A0D8               	btfss	status,0,c
  4238  00159E  D00E               	goto	l2631
  4239  0015A0  EE20 F001          	lfsr	2,1
  4240  0015A4  5039               	movf	GetBackonTrack@error,w,c
  4241  0015A6  26D9               	addwf	fsr2l,f,c
  4242  0015A8  503A               	movf	GetBackonTrack@error+1,w,c
  4243  0015AA  22DA               	addwfc	fsr2h,f,c
  4244  0015AC  50DF               	movf	indf2,w,c
  4245  0015AE  0A80               	xorlw	128
  4246  0015B0  0F81               	addlw	129
  4247  0015B2  A0D8               	btfss	status,0,c
  4248  0015B4  D003               	goto	l2631
  4249  0015B6  504C               	movf	_CCW_rotation_flag,w,c
  4250  0015B8  B4D8               	btfsc	status,2,c
  4251  0015BA  D004               	goto	l2633
  4252  0015BC                     l2631:
  4253                           
  4254                           ;main.c: 217: SharpTurn(CCW);
  4255  0015BC  0E00               	movlw	0
  4256  0015BE  EC19  F00D         	call	_SharpTurn
  4257  0015C2  D078               	goto	l147
  4258  0015C4                     l2633:
  4259                           
  4260                           ;main.c: 218: else
  4261                           ;main.c: 219: {
  4262                           ;main.c: 220: WriteTimer0(0);
  4263  0015C4  0E00               	movlw	0
  4264  0015C6  6E10               	movwf	WriteTimer0@timer0+1,c
  4265  0015C8  0E00               	movlw	0
  4266  0015CA  6E0F               	movwf	WriteTimer0@timer0,c
  4267  0015CC  EC4F  F011         	call	_WriteTimer0	;wreg free
  4268                           
  4269                           ;main.c: 221: TMR0IF = 0;
  4270  0015D0  94F2               	bcf	intcon,2,c	;volatile
  4271                           
  4272                           ;main.c: 222: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  4273  0015D2  D00D               	goto	l2641
  4274  0015D4                     l2637:
  4275                           
  4276                           ;main.c: 223: {
  4277                           ;main.c: 224: check_sensors();
  4278  0015D4  EC61  F00C         	call	_check_sensors	;wreg free
  4279                           
  4280                           ;main.c: 225: set_leds();
  4281  0015D8  EC01  F00E         	call	_set_leds	;wreg free
  4282                           
  4283                           ;main.c: 226: MotorControl(0,0);
  4284  0015DC  0E00               	movlw	0
  4285  0015DE  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4286  0015E0  0E00               	movlw	0
  4287  0015E2  6E2B               	movwf	MotorControl@delta_velocity,c
  4288  0015E4  0E00               	movlw	0
  4289  0015E6  6E2D               	movwf	MotorControl@speed_divider,c
  4290  0015E8  ECC2  F009         	call	_MotorControl	;wreg free
  4291  0015EC  D000               	goto	l2641
  4292  0015EE                     l2641:
  4293  0015EE  504E               	movf	_SeeLine,w,c
  4294  0015F0  0B1F               	andlw	31
  4295  0015F2  0900               	iorlw	0
  4296  0015F4  A4D8               	btfss	status,2,c
  4297  0015F6  D00C               	goto	l2647
  4298  0015F8  A4F2               	btfss	intcon,2,c	;volatile
  4299  0015FA  D7EC               	goto	l2637
  4300  0015FC  EC46  F011         	call	_ReadTimer0	;wreg free
  4301  001600  0E3B               	movlw	59
  4302  001602  5C0F               	subwf	?_ReadTimer0,w,c
  4303  001604  0EE8               	movlw	232
  4304  001606  5810               	subwfb	?_ReadTimer0+1,w,c
  4305  001608  B0D8               	btfsc	status,0,c
  4306  00160A  D002               	goto	l2647
  4307  00160C  D7E3               	goto	l2637
  4308  00160E  D000               	goto	l2647
  4309  001610                     l2647:
  4310                           
  4311                           ;main.c: 227: }
  4312                           ;main.c: 229: if(!SeeLine.B)
  4313  001610  504E               	movf	_SeeLine,w,c
  4314  001612  0B1F               	andlw	31
  4315  001614  0900               	iorlw	0
  4316  001616  A4D8               	btfss	status,2,c
  4317  001618  D04D               	goto	l147
  4318                           
  4319                           ;main.c: 230: {
  4320                           ;main.c: 231: motors_brake_all();
  4321  00161A  EC98  F010         	call	_motors_brake_all	;wreg free
  4322                           
  4323                           ;main.c: 232: _delay(50000);
  4324  00161E  0E41               	movlw	65
  4325  001620  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4326  001622  0EEE               	movlw	238
  4327  001624                     u2517:
  4328  001624  2EE8               	decfsz	wreg,f,c
  4329  001626  D7FE               	goto	u2517
  4330  001628  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4331  00162A  D7FC               	goto	u2517
  4332  00162C  D000               	nop2	
  4333                           
  4334                           ;main.c: 233: MotorControl(1600, TURN_SPEED_DIVIDER);
  4335  00162E  0E06               	movlw	6
  4336  001630  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4337  001632  0E40               	movlw	64
  4338  001634  6E2B               	movwf	MotorControl@delta_velocity,c
  4339  001636  0E09               	movlw	low _TURN_SPEED_DIVIDER
  4340  001638  6EF6               	movwf	tblptrl,c
  4341  00163A                     	if	1	;There is more than 1 active tblptr byte
  4342  00163A  0E10               	movlw	high _TURN_SPEED_DIVIDER
  4343  00163C  6EF7               	movwf	tblptrh,c
  4344  00163E                     	endif
  4345  00163E                     	if	1	;There are 3 active tblptr bytes
  4346  00163E  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  4347  001640  6EF8               	movwf	tblptru,c
  4348  001642                     	endif
  4349  001642  0008               	tblrd		*
  4350  001644  CFF5 F02D          	movff	tablat,MotorControl@speed_divider
  4351  001648  ECC2  F009         	call	_MotorControl	;wreg free
  4352                           
  4353                           ;main.c: 235: for(unsigned int i=0; i < TURN_TIME_ms; i++)
  4354  00164C  0E00               	movlw	0
  4355  00164E  6E3D               	movwf	GetBackonTrack@i+1,c
  4356  001650  0E00               	movlw	0
  4357  001652  6E3C               	movwf	GetBackonTrack@i,c
  4358  001654                     l2657:
  4359  001654  0E07               	movlw	low _TURN_TIME_ms
  4360  001656  6EF6               	movwf	tblptrl,c
  4361  001658                     	if	1	;There is more than 1 active tblptr byte
  4362  001658  0E10               	movlw	high _TURN_TIME_ms
  4363  00165A  6EF7               	movwf	tblptrh,c
  4364  00165C                     	endif
  4365  00165C                     	if	1	;There are 3 active tblptr bytes
  4366  00165C  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4367  00165E  6EF8               	movwf	tblptru,c
  4368  001660                     	endif
  4369  001660  0009               	tblrd		*+
  4370  001662  50F5               	movf	tablat,w,c
  4371  001664  5C3C               	subwf	GetBackonTrack@i,w,c
  4372  001666  0009               	tblrd		*+
  4373  001668  50F5               	movf	tablat,w,c
  4374  00166A  583D               	subwfb	GetBackonTrack@i+1,w,c
  4375  00166C  B0D8               	btfsc	status,0,c
  4376  00166E  D01B               	goto	l2671
  4377  001670  D001               	goto	l2661
  4378  001672  D019               	goto	l2671
  4379  001674                     l2661:
  4380                           
  4381                           ;main.c: 236: _delay(7991);
  4382  001674  0E0B               	movlw	11
  4383  001676  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4384  001678  0E5F               	movlw	95
  4385  00167A                     u2527:
  4386  00167A  2EE8               	decfsz	wreg,f,c
  4387  00167C  D7FE               	goto	u2527
  4388  00167E  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4389  001680  D7FC               	goto	u2527
  4390  001682  D000               	nop2	
  4391  001684  4A3C               	infsnz	GetBackonTrack@i,f,c
  4392  001686  2A3D               	incf	GetBackonTrack@i+1,f,c
  4393  001688  D7E5               	goto	l2657
  4394                           
  4395                           ;main.c: 238: while (!SeeLine.B)
  4396  00168A  D00D               	goto	l2671
  4397  00168C                     l2667:
  4398                           
  4399                           ;main.c: 239: {
  4400                           ;main.c: 240: check_sensors();
  4401  00168C  EC61  F00C         	call	_check_sensors	;wreg free
  4402                           
  4403                           ;main.c: 241: set_leds();
  4404  001690  EC01  F00E         	call	_set_leds	;wreg free
  4405                           
  4406                           ;main.c: 242: MotorControl(0,0);
  4407  001694  0E00               	movlw	0
  4408  001696  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4409  001698  0E00               	movlw	0
  4410  00169A  6E2B               	movwf	MotorControl@delta_velocity,c
  4411  00169C  0E00               	movlw	0
  4412  00169E  6E2D               	movwf	MotorControl@speed_divider,c
  4413  0016A0  ECC2  F009         	call	_MotorControl	;wreg free
  4414  0016A4  D000               	goto	l2671
  4415  0016A6                     l2671:
  4416  0016A6  504E               	movf	_SeeLine,w,c
  4417  0016A8  0B1F               	andlw	31
  4418  0016AA  0900               	iorlw	0
  4419  0016AC  A4D8               	btfss	status,2,c
  4420  0016AE  D002               	goto	l147
  4421  0016B0  D7ED               	goto	l2667
  4422  0016B2  D000               	goto	l147
  4423  0016B4                     l147:
  4424  0016B4  0012               	return		;funcret
  4425  0016B6                     __end_of_GetBackonTrack:
  4426                           	opt stack 0
  4427                           stkptr	equ	0xFFC
  4428                           tblptru	equ	0xFF8
  4429                           tblptrh	equ	0xFF7
  4430                           tblptrl	equ	0xFF6
  4431                           tablat	equ	0xFF5
  4432                           intcon	equ	0xFF2
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           indf1	equ	0xFE7
  4436                           postinc1	equ	0xFE6
  4437                           fsr1h	equ	0xFE2
  4438                           fsr1l	equ	0xFE1
  4439                           indf2	equ	0xFDF
  4440                           postinc2	equ	0xFDE
  4441                           plusw2	equ	0xFDB
  4442                           fsr2h	equ	0xFDA
  4443                           fsr2l	equ	0xFD9
  4444                           status	equ	0xFD8
  4445                           
  4446 ;; *************** function _SharpTurn *****************
  4447 ;; Defined at:
  4448 ;;		line 249 in file "../Robot Files/main.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  direction       1    wreg     enum E4173
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  direction       1   53[COMRAM] enum E4173
  4453 ;;  delta_veloci    2   54[COMRAM] int 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;		None               void
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        4 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    4
  4470 ;; This function calls:
  4471 ;;		_MotorControl
  4472 ;;		_check_sensors
  4473 ;;		_motors_brake_all
  4474 ;;		_set_leds
  4475 ;; This function is called by:
  4476 ;;		_GetBackonTrack
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text36
  4481  001A32                     __ptext36:
  4482                           	opt stack 0
  4483  001A32                     _SharpTurn:
  4484                           	opt stack 25
  4485                           
  4486                           ;incstack = 0
  4487                           ;SharpTurn@direction stored from wreg
  4488  001A32  6E36               	movwf	SharpTurn@direction,c
  4489                           
  4490                           ;main.c: 251: int delta_velocity;
  4491                           ;main.c: 267: motors_brake_all();
  4492  001A34  EC98  F010         	call	_motors_brake_all	;wreg free
  4493                           
  4494                           ;main.c: 268: _delay(50000);
  4495  001A38  0E41               	movlw	65
  4496  001A3A  6E35               	movwf	??_SharpTurn& (0+255),c
  4497  001A3C  0EEE               	movlw	238
  4498  001A3E                     u2537:
  4499  001A3E  2EE8               	decfsz	wreg,f,c
  4500  001A40  D7FE               	goto	u2537
  4501  001A42  2E35               	decfsz	??_SharpTurn& (0+255),f,c
  4502  001A44  D7FC               	goto	u2537
  4503  001A46  D000               	nop2	
  4504                           
  4505                           ;main.c: 269: if(direction)
  4506  001A48  5036               	movf	SharpTurn@direction,w,c
  4507  001A4A  B4D8               	btfsc	status,2,c
  4508  001A4C  D022               	goto	l2395
  4509                           
  4510                           ;main.c: 270: {
  4511                           ;main.c: 271: delta_velocity = 1600;
  4512  001A4E  0E06               	movlw	6
  4513  001A50  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4514  001A52  0E40               	movlw	64
  4515  001A54  6E37               	movwf	SharpTurn@delta_velocity,c
  4516                           
  4517                           ;main.c: 272: while (!SeeLine.b.CntLeft && delta_velocity)
  4518  001A56  D012               	goto	l2389
  4519  001A58                     l2381:
  4520                           
  4521                           ;main.c: 274: {
  4522                           ;main.c: 275: check_sensors();
  4523  001A58  EC61  F00C         	call	_check_sensors	;wreg free
  4524                           
  4525                           ;main.c: 276: set_leds();
  4526  001A5C  EC01  F00E         	call	_set_leds	;wreg free
  4527                           
  4528                           ;main.c: 277: MotorControl(delta_velocity,0);
  4529  001A60  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4530  001A64  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4531  001A68  0E00               	movlw	0
  4532  001A6A  6E2D               	movwf	MotorControl@speed_divider,c
  4533  001A6C  ECC2  F009         	call	_MotorControl	;wreg free
  4534                           
  4535                           ;main.c: 278: if (SeeLine.b.Center)
  4536  001A70  A44E               	btfss	_SeeLine,2,c
  4537  001A72  D004               	goto	l2389
  4538                           
  4539                           ;main.c: 279: delta_velocity--;
  4540  001A74  0637               	decf	SharpTurn@delta_velocity,f,c
  4541  001A76  A0D8               	btfss	status,0,c
  4542  001A78  0638               	decf	SharpTurn@delta_velocity+1,f,c
  4543  001A7A  D000               	goto	l2389
  4544  001A7C                     l2389:
  4545  001A7C  B64E               	btfsc	_SeeLine,3,c
  4546  001A7E  D006               	goto	l2393
  4547  001A80  5037               	movf	SharpTurn@delta_velocity,w,c
  4548  001A82  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4549  001A84  B4D8               	btfsc	status,2,c
  4550  001A86  D002               	goto	l2393
  4551  001A88  D7E7               	goto	l2381
  4552  001A8A  D000               	goto	l2393
  4553  001A8C                     l2393:
  4554                           
  4555                           ;main.c: 280: }
  4556                           ;main.c: 281: CW_rotation_flag = 0;
  4557  001A8C  0E00               	movlw	0
  4558  001A8E  6E4D               	movwf	_CW_rotation_flag,c
  4559                           
  4560                           ;main.c: 282: }
  4561  001A90  D020               	goto	l157
  4562  001A92                     l2395:
  4563                           
  4564                           ;main.c: 283: else
  4565                           ;main.c: 284: {
  4566                           ;main.c: 285: delta_velocity = -1600;
  4567  001A92  0EF9               	movlw	249
  4568  001A94  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4569  001A96  0EC0               	movlw	192
  4570  001A98  6E37               	movwf	SharpTurn@delta_velocity,c
  4571                           
  4572                           ;main.c: 286: while (!SeeLine.b.CntRight && delta_velocity)
  4573  001A9A  D011               	goto	l2405
  4574  001A9C                     l2397:
  4575                           
  4576                           ;main.c: 288: {
  4577                           ;main.c: 289: check_sensors();
  4578  001A9C  EC61  F00C         	call	_check_sensors	;wreg free
  4579                           
  4580                           ;main.c: 290: set_leds();
  4581  001AA0  EC01  F00E         	call	_set_leds	;wreg free
  4582                           
  4583                           ;main.c: 291: MotorControl(delta_velocity,0);
  4584  001AA4  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4585  001AA8  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4586  001AAC  0E00               	movlw	0
  4587  001AAE  6E2D               	movwf	MotorControl@speed_divider,c
  4588  001AB0  ECC2  F009         	call	_MotorControl	;wreg free
  4589                           
  4590                           ;main.c: 292: if (SeeLine.b.Center)
  4591  001AB4  A44E               	btfss	_SeeLine,2,c
  4592  001AB6  D003               	goto	l2405
  4593                           
  4594                           ;main.c: 293: delta_velocity++;
  4595  001AB8  4A37               	infsnz	SharpTurn@delta_velocity,f,c
  4596  001ABA  2A38               	incf	SharpTurn@delta_velocity+1,f,c
  4597  001ABC  D000               	goto	l2405
  4598  001ABE                     l2405:
  4599  001ABE  B24E               	btfsc	_SeeLine,1,c
  4600  001AC0  D006               	goto	l2409
  4601  001AC2  5037               	movf	SharpTurn@delta_velocity,w,c
  4602  001AC4  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4603  001AC6  B4D8               	btfsc	status,2,c
  4604  001AC8  D002               	goto	l2409
  4605  001ACA  D7E8               	goto	l2397
  4606  001ACC  D000               	goto	l2409
  4607  001ACE                     l2409:
  4608                           
  4609                           ;main.c: 294: }
  4610                           ;main.c: 295: CCW_rotation_flag = 0;
  4611  001ACE  0E00               	movlw	0
  4612  001AD0  6E4C               	movwf	_CCW_rotation_flag,c
  4613  001AD2                     l157:
  4614                           
  4615                           ;main.c: 296: }
  4616                           ;main.c: 297: I = 0;
  4617  001AD2  0E00               	movlw	0
  4618  001AD4  6E49               	movwf	_I+1,c
  4619  001AD6  0E00               	movlw	0
  4620  001AD8  6E48               	movwf	_I,c
  4621  001ADA  0012               	return		;funcret
  4622  001ADC                     __end_of_SharpTurn:
  4623                           	opt stack 0
  4624                           stkptr	equ	0xFFC
  4625                           tblptru	equ	0xFF8
  4626                           tblptrh	equ	0xFF7
  4627                           tblptrl	equ	0xFF6
  4628                           tablat	equ	0xFF5
  4629                           intcon	equ	0xFF2
  4630                           postinc0	equ	0xFEE
  4631                           wreg	equ	0xFE8
  4632                           indf1	equ	0xFE7
  4633                           postinc1	equ	0xFE6
  4634                           fsr1h	equ	0xFE2
  4635                           fsr1l	equ	0xFE1
  4636                           indf2	equ	0xFDF
  4637                           postinc2	equ	0xFDE
  4638                           plusw2	equ	0xFDB
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _ReadTimer0 *****************
  4644 ;; Defined at:
  4645 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  timer           2   16[COMRAM] struct Timers
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  2   14[COMRAM] unsigned int 
  4652 ;; Registers used:
  4653 ;;		None
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;Total ram usage:        4 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_PID_LineFollowing
  4670 ;;		_GetBackonTrack
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text37
  4675  00228C                     __ptext37:
  4676                           	opt stack 0
  4677  00228C                     _ReadTimer0:
  4678                           	opt stack 28
  4679                           
  4680                           ;incstack = 0
  4681  00228C  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4682  002290  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4683  002294  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4684  002298  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4685  00229C  0012               	return		;funcret
  4686  00229E                     __end_of_ReadTimer0:
  4687                           	opt stack 0
  4688                           stkptr	equ	0xFFC
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           intcon	equ	0xFF2
  4694                           postinc0	equ	0xFEE
  4695                           wreg	equ	0xFE8
  4696                           indf1	equ	0xFE7
  4697                           postinc1	equ	0xFE6
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           postinc2	equ	0xFDE
  4702                           plusw2	equ	0xFDB
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _AllSensorsTriggered *****************
  4708 ;; Defined at:
  4709 ;;		line 302 in file "../Robot Files/main.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;		None               void
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:        1 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    4
  4730 ;; This function calls:
  4731 ;;		_MotorControl
  4732 ;;		_WriteTimer0
  4733 ;;		_check_sensors
  4734 ;;		_motors_brake_all
  4735 ;;		_set_leds
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text38
  4742  001CFE                     __ptext38:
  4743                           	opt stack 0
  4744  001CFE                     _AllSensorsTriggered:
  4745                           	opt stack 26
  4746                           
  4747                           ;main.c: 304: WriteTimer0(0);
  4748                           
  4749                           ;incstack = 0
  4750  001CFE  0E00               	movlw	0
  4751  001D00  6E10               	movwf	WriteTimer0@timer0+1,c
  4752  001D02  0E00               	movlw	0
  4753  001D04  6E0F               	movwf	WriteTimer0@timer0,c
  4754  001D06  EC4F  F011         	call	_WriteTimer0	;wreg free
  4755                           
  4756                           ;main.c: 305: TMR0IF = 0;
  4757  001D0A  94F2               	bcf	intcon,2,c	;volatile
  4758                           
  4759                           ;main.c: 306: while (SeeLine.B=0b11111u && !(TMR0IF))
  4760  001D0C  D00D               	goto	l2681
  4761  001D0E                     l2677:
  4762                           
  4763                           ;main.c: 307: {
  4764                           ;main.c: 308: check_sensors();
  4765  001D0E  EC61  F00C         	call	_check_sensors	;wreg free
  4766                           
  4767                           ;main.c: 309: set_leds();
  4768  001D12  EC01  F00E         	call	_set_leds	;wreg free
  4769                           
  4770                           ;main.c: 310: MotorControl(0,0);
  4771  001D16  0E00               	movlw	0
  4772  001D18  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4773  001D1A  0E00               	movlw	0
  4774  001D1C  6E2B               	movwf	MotorControl@delta_velocity,c
  4775  001D1E  0E00               	movlw	0
  4776  001D20  6E2D               	movwf	MotorControl@speed_divider,c
  4777  001D22  ECC2  F009         	call	_MotorControl	;wreg free
  4778  001D26  D000               	goto	l2681
  4779  001D28                     l2681:
  4780  001D28  0E00               	movlw	0
  4781  001D2A  6E35               	movwf	_AllSensorsTriggered$472,c
  4782  001D2C  B4F2               	btfsc	intcon,2,c	;volatile
  4783  001D2E  D003               	goto	l2687
  4784  001D30  0E01               	movlw	1
  4785  001D32  6E35               	movwf	_AllSensorsTriggered$472,c
  4786  001D34  D000               	goto	l2687
  4787  001D36                     l2687:
  4788  001D36  504E               	movf	_SeeLine,w,c
  4789  001D38  1835               	xorwf	_AllSensorsTriggered$472,w,c
  4790  001D3A  0BE0               	andlw	-32
  4791  001D3C  1835               	xorwf	_AllSensorsTriggered$472,w,c
  4792  001D3E  6E4E               	movwf	_SeeLine,c
  4793  001D40  504E               	movf	_SeeLine,w,c
  4794  001D42  0B1F               	andlw	31
  4795  001D44  0900               	iorlw	0
  4796  001D46  A4D8               	btfss	status,2,c
  4797  001D48  D7E2               	goto	l2677
  4798                           
  4799                           ;main.c: 311: }
  4800                           ;main.c: 312: if (SeeLine.B=0b11111u)
  4801  001D4A  804E               	bsf	_SeeLine,0,c
  4802  001D4C  824E               	bsf	_SeeLine,1,c
  4803  001D4E  844E               	bsf	_SeeLine,2,c
  4804  001D50  864E               	bsf	_SeeLine,3,c
  4805  001D52  884E               	bsf	_SeeLine,4,c
  4806                           
  4807                           ;main.c: 313: {
  4808                           ;main.c: 314: motors_brake_all();
  4809  001D54  EC98  F010         	call	_motors_brake_all	;wreg free
  4810                           
  4811                           ;main.c: 315: while (SeeLine.B=0b11111u)
  4812  001D58  D005               	goto	l2693
  4813  001D5A                     l2691:
  4814                           
  4815                           ;main.c: 316: {
  4816                           ;main.c: 317: check_sensors();
  4817  001D5A  EC61  F00C         	call	_check_sensors	;wreg free
  4818                           
  4819                           ;main.c: 318: set_leds();
  4820  001D5E  EC01  F00E         	call	_set_leds	;wreg free
  4821  001D62  D000               	goto	l2693
  4822  001D64                     l2693:
  4823  001D64  804E               	bsf	_SeeLine,0,c
  4824  001D66  824E               	bsf	_SeeLine,1,c
  4825  001D68  844E               	bsf	_SeeLine,2,c
  4826  001D6A  864E               	bsf	_SeeLine,3,c
  4827  001D6C  884E               	bsf	_SeeLine,4,c
  4828  001D6E  D7F5               	goto	l2691
  4829  001D70  D000               	goto	l176
  4830  001D72                     l176:
  4831  001D72  0012               	return		;funcret
  4832  001D74                     __end_of_AllSensorsTriggered:
  4833                           	opt stack 0
  4834                           stkptr	equ	0xFFC
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           intcon	equ	0xFF2
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           indf1	equ	0xFE7
  4843                           postinc1	equ	0xFE6
  4844                           fsr1h	equ	0xFE2
  4845                           fsr1l	equ	0xFE1
  4846                           indf2	equ	0xFDF
  4847                           postinc2	equ	0xFDE
  4848                           plusw2	equ	0xFDB
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _set_leds *****************
  4854 ;; Defined at:
  4855 ;;		line 256 in file "../Robot Files/sumovore.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;		None               void
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;Total ram usage:        1 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;;		_GetBackonTrack
  4881 ;;		_SharpTurn
  4882 ;;		_AllSensorsTriggered
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text39
  4887  001C02                     __ptext39:
  4888                           	opt stack 0
  4889  001C02                     _set_leds:
  4890                           	opt stack 29
  4891                           
  4892                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4893                           
  4894                           ;incstack = 0
  4895  001C02  B84E               	btfsc	_SeeLine,4,c
  4896  001C04  D003               	goto	u1600
  4897  001C06  6A0F               	clrf	??_set_leds& (0+255),c
  4898  001C08  2A0F               	incf	??_set_leds& (0+255),f,c
  4899  001C0A  D001               	goto	u1618
  4900  001C0C                     u1600:
  4901  001C0C  6A0F               	clrf	??_set_leds& (0+255),c
  4902  001C0E                     u1618:
  4903  001C0E  5083               	movf	3971,w,c	;volatile
  4904  001C10  180F               	xorwf	??_set_leds,w,c
  4905  001C12  0BFE               	andlw	-2
  4906  001C14  180F               	xorwf	??_set_leds,w,c
  4907  001C16  6E83               	movwf	3971,c	;volatile
  4908                           
  4909                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  4910  001C18  B64E               	btfsc	_SeeLine,3,c
  4911  001C1A  D003               	goto	u1620
  4912  001C1C  6A0F               	clrf	??_set_leds& (0+255),c
  4913  001C1E  2A0F               	incf	??_set_leds& (0+255),f,c
  4914  001C20  D001               	goto	u1638
  4915  001C22                     u1620:
  4916  001C22  6A0F               	clrf	??_set_leds& (0+255),c
  4917  001C24                     u1638:
  4918  001C24  460F               	rlncf	??_set_leds,f,c
  4919  001C26  5083               	movf	3971,w,c	;volatile
  4920  001C28  180F               	xorwf	??_set_leds,w,c
  4921  001C2A  0BFD               	andlw	-3
  4922  001C2C  180F               	xorwf	??_set_leds,w,c
  4923  001C2E  6E83               	movwf	3971,c	;volatile
  4924                           
  4925                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  4926  001C30  B44E               	btfsc	_SeeLine,2,c
  4927  001C32  D003               	goto	u1640
  4928  001C34  6A0F               	clrf	??_set_leds& (0+255),c
  4929  001C36  2A0F               	incf	??_set_leds& (0+255),f,c
  4930  001C38  D001               	goto	u1658
  4931  001C3A                     u1640:
  4932  001C3A  6A0F               	clrf	??_set_leds& (0+255),c
  4933  001C3C                     u1658:
  4934  001C3C  460F               	rlncf	??_set_leds,f,c
  4935  001C3E  460F               	rlncf	??_set_leds,f,c
  4936  001C40  5083               	movf	3971,w,c	;volatile
  4937  001C42  180F               	xorwf	??_set_leds,w,c
  4938  001C44  0BFB               	andlw	-5
  4939  001C46  180F               	xorwf	??_set_leds,w,c
  4940  001C48  6E83               	movwf	3971,c	;volatile
  4941                           
  4942                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  4943  001C4A  B24E               	btfsc	_SeeLine,1,c
  4944  001C4C  D003               	goto	u1660
  4945  001C4E  6A0F               	clrf	??_set_leds& (0+255),c
  4946  001C50  2A0F               	incf	??_set_leds& (0+255),f,c
  4947  001C52  D001               	goto	u1678
  4948  001C54                     u1660:
  4949  001C54  6A0F               	clrf	??_set_leds& (0+255),c
  4950  001C56                     u1678:
  4951  001C56  460F               	rlncf	??_set_leds,f,c
  4952  001C58  460F               	rlncf	??_set_leds,f,c
  4953  001C5A  460F               	rlncf	??_set_leds,f,c
  4954  001C5C  5083               	movf	3971,w,c	;volatile
  4955  001C5E  180F               	xorwf	??_set_leds,w,c
  4956  001C60  0BF7               	andlw	-9
  4957  001C62  180F               	xorwf	??_set_leds,w,c
  4958  001C64  6E83               	movwf	3971,c	;volatile
  4959                           
  4960                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  4961  001C66  B04E               	btfsc	_SeeLine,0,c
  4962  001C68  D003               	goto	u1680
  4963  001C6A  6A0F               	clrf	??_set_leds& (0+255),c
  4964  001C6C  2A0F               	incf	??_set_leds& (0+255),f,c
  4965  001C6E  D001               	goto	u1698
  4966  001C70                     u1680:
  4967  001C70  6A0F               	clrf	??_set_leds& (0+255),c
  4968  001C72                     u1698:
  4969  001C72  3A0F               	swapf	??_set_leds,f,c
  4970  001C74  5083               	movf	3971,w,c	;volatile
  4971  001C76  180F               	xorwf	??_set_leds,w,c
  4972  001C78  0BEF               	andlw	-17
  4973  001C7A  180F               	xorwf	??_set_leds,w,c
  4974  001C7C  6E83               	movwf	3971,c	;volatile
  4975  001C7E  0012               	return		;funcret
  4976  001C80                     __end_of_set_leds:
  4977                           	opt stack 0
  4978                           stkptr	equ	0xFFC
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           intcon	equ	0xFF2
  4984                           postinc0	equ	0xFEE
  4985                           wreg	equ	0xFE8
  4986                           indf1	equ	0xFE7
  4987                           postinc1	equ	0xFE6
  4988                           fsr1h	equ	0xFE2
  4989                           fsr1l	equ	0xFE1
  4990                           indf2	equ	0xFDF
  4991                           postinc2	equ	0xFDE
  4992                           plusw2	equ	0xFDB
  4993                           fsr2h	equ	0xFDA
  4994                           fsr2l	equ	0xFD9
  4995                           status	equ	0xFD8
  4996                           
  4997 ;; *************** function _motors_brake_all *****************
  4998 ;; Defined at:
  4999 ;;		line 219 in file "../Robot Files/sumovore.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;		None               void
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    2
  5020 ;; This function calls:
  5021 ;;		_SetDCPWM1
  5022 ;;		_SetDCPWM2
  5023 ;; This function is called by:
  5024 ;;		_GetBackonTrack
  5025 ;;		_SharpTurn
  5026 ;;		_AllSensorsTriggered
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text40
  5031  002130                     __ptext40:
  5032                           	opt stack 0
  5033  002130                     _motors_brake_all:
  5034                           	opt stack 27
  5035                           
  5036                           ;sumovore.c: 221: SetDCPWM1(800u );
  5037                           
  5038                           ;incstack = 0
  5039  002130  0E03               	movlw	3
  5040  002132  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  5041  002134  0E20               	movlw	32
  5042  002136  6E0F               	movwf	SetDCPWM1@dutycycle,c
  5043  002138  ECE4  F00F         	call	_SetDCPWM1	;wreg free
  5044                           
  5045                           ;sumovore.c: 222: SetDCPWM2(800u );
  5046  00213C  0E03               	movlw	3
  5047  00213E  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  5048  002140  0E20               	movlw	32
  5049  002142  6E0F               	movwf	SetDCPWM2@dutycycle,c
  5050  002144  ECC7  F00F         	call	_SetDCPWM2	;wreg free
  5051                           
  5052                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  5053  002148  9284               	bcf	3972,1,c	;volatile
  5054                           
  5055                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  5056  00214A  9082               	bcf	3970,0,c	;volatile
  5057                           
  5058                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  5059  00214C  9084               	bcf	3972,0,c	;volatile
  5060                           
  5061                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  5062  00214E  9A82               	bcf	3970,5,c	;volatile
  5063  002150  0012               	return		;funcret
  5064  002152                     __end_of_motors_brake_all:
  5065                           	opt stack 0
  5066                           stkptr	equ	0xFFC
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           intcon	equ	0xFF2
  5072                           postinc0	equ	0xFEE
  5073                           wreg	equ	0xFE8
  5074                           indf1	equ	0xFE7
  5075                           postinc1	equ	0xFE6
  5076                           fsr1h	equ	0xFE2
  5077                           fsr1l	equ	0xFE1
  5078                           indf2	equ	0xFDF
  5079                           postinc2	equ	0xFDE
  5080                           plusw2	equ	0xFDB
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _check_sensors *****************
  5086 ;; Defined at:
  5087 ;;		line 242 in file "../Robot Files/sumovore.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;Total ram usage:        1 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    3
  5108 ;; This function calls:
  5109 ;;		_adc
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;;		_GetBackonTrack
  5113 ;;		_SharpTurn
  5114 ;;		_AllSensorsTriggered
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text41
  5119  0018C2                     __ptext41:
  5120                           	opt stack 0
  5121  0018C2                     _check_sensors:
  5122                           	opt stack 27
  5123                           
  5124                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5125                           
  5126                           ;incstack = 0
  5127  0018C2  0E87               	movlw	135
  5128  0018C4  EC4A  F010         	call	_adc
  5129  0018C8  5013               	movf	?_adc,w,c
  5130  0018CA  5C4A               	subwf	_threshold,w,c
  5131  0018CC  5014               	movf	?_adc+1,w,c
  5132  0018CE  584B               	subwfb	_threshold+1,w,c
  5133  0018D0  B0D8               	btfsc	status,0,c
  5134  0018D2  D003               	goto	u1500
  5135  0018D4  6A16               	clrf	??_check_sensors& (0+255),c
  5136  0018D6  2A16               	incf	??_check_sensors& (0+255),f,c
  5137  0018D8  D001               	goto	u1518
  5138  0018DA                     u1500:
  5139  0018DA  6A16               	clrf	??_check_sensors& (0+255),c
  5140  0018DC                     u1518:
  5141  0018DC  3A16               	swapf	??_check_sensors,f,c
  5142  0018DE  504E               	movf	_SeeLine,w,c
  5143  0018E0  1816               	xorwf	??_check_sensors,w,c
  5144  0018E2  0BEF               	andlw	-17
  5145  0018E4  1816               	xorwf	??_check_sensors,w,c
  5146  0018E6  6E4E               	movwf	_SeeLine,c
  5147                           
  5148                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5149  0018E8  0E8F               	movlw	143
  5150  0018EA  EC4A  F010         	call	_adc
  5151  0018EE  5013               	movf	?_adc,w,c
  5152  0018F0  5C4A               	subwf	_threshold,w,c
  5153  0018F2  5014               	movf	?_adc+1,w,c
  5154  0018F4  584B               	subwfb	_threshold+1,w,c
  5155  0018F6  B0D8               	btfsc	status,0,c
  5156  0018F8  D003               	goto	u1520
  5157  0018FA  6A16               	clrf	??_check_sensors& (0+255),c
  5158  0018FC  2A16               	incf	??_check_sensors& (0+255),f,c
  5159  0018FE  D001               	goto	u1538
  5160  001900                     u1520:
  5161  001900  6A16               	clrf	??_check_sensors& (0+255),c
  5162  001902                     u1538:
  5163  001902  4616               	rlncf	??_check_sensors,f,c
  5164  001904  4616               	rlncf	??_check_sensors,f,c
  5165  001906  4616               	rlncf	??_check_sensors,f,c
  5166  001908  504E               	movf	_SeeLine,w,c
  5167  00190A  1816               	xorwf	??_check_sensors,w,c
  5168  00190C  0BF7               	andlw	-9
  5169  00190E  1816               	xorwf	??_check_sensors,w,c
  5170  001910  6E4E               	movwf	_SeeLine,c
  5171                           
  5172                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5173  001912  0E97               	movlw	151
  5174  001914  EC4A  F010         	call	_adc
  5175  001918  5013               	movf	?_adc,w,c
  5176  00191A  5C4A               	subwf	_threshold,w,c
  5177  00191C  5014               	movf	?_adc+1,w,c
  5178  00191E  584B               	subwfb	_threshold+1,w,c
  5179  001920  B0D8               	btfsc	status,0,c
  5180  001922  D003               	goto	u1540
  5181  001924  6A16               	clrf	??_check_sensors& (0+255),c
  5182  001926  2A16               	incf	??_check_sensors& (0+255),f,c
  5183  001928  D001               	goto	u1558
  5184  00192A                     u1540:
  5185  00192A  6A16               	clrf	??_check_sensors& (0+255),c
  5186  00192C                     u1558:
  5187  00192C  4616               	rlncf	??_check_sensors,f,c
  5188  00192E  4616               	rlncf	??_check_sensors,f,c
  5189  001930  504E               	movf	_SeeLine,w,c
  5190  001932  1816               	xorwf	??_check_sensors,w,c
  5191  001934  0BFB               	andlw	-5
  5192  001936  1816               	xorwf	??_check_sensors,w,c
  5193  001938  6E4E               	movwf	_SeeLine,c
  5194                           
  5195                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5196  00193A  0E9F               	movlw	159
  5197  00193C  EC4A  F010         	call	_adc
  5198  001940  5013               	movf	?_adc,w,c
  5199  001942  5C4A               	subwf	_threshold,w,c
  5200  001944  5014               	movf	?_adc+1,w,c
  5201  001946  584B               	subwfb	_threshold+1,w,c
  5202  001948  B0D8               	btfsc	status,0,c
  5203  00194A  D003               	goto	u1560
  5204  00194C  6A16               	clrf	??_check_sensors& (0+255),c
  5205  00194E  2A16               	incf	??_check_sensors& (0+255),f,c
  5206  001950  D001               	goto	u1578
  5207  001952                     u1560:
  5208  001952  6A16               	clrf	??_check_sensors& (0+255),c
  5209  001954                     u1578:
  5210  001954  4616               	rlncf	??_check_sensors,f,c
  5211  001956  504E               	movf	_SeeLine,w,c
  5212  001958  1816               	xorwf	??_check_sensors,w,c
  5213  00195A  0BFD               	andlw	-3
  5214  00195C  1816               	xorwf	??_check_sensors,w,c
  5215  00195E  6E4E               	movwf	_SeeLine,c
  5216                           
  5217                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5218  001960  0EA7               	movlw	167
  5219  001962  EC4A  F010         	call	_adc
  5220  001966  5013               	movf	?_adc,w,c
  5221  001968  5C4A               	subwf	_threshold,w,c
  5222  00196A  5014               	movf	?_adc+1,w,c
  5223  00196C  584B               	subwfb	_threshold+1,w,c
  5224  00196E  B0D8               	btfsc	status,0,c
  5225  001970  D003               	goto	u1580
  5226  001972  6A16               	clrf	??_check_sensors& (0+255),c
  5227  001974  2A16               	incf	??_check_sensors& (0+255),f,c
  5228  001976  D001               	goto	u1598
  5229  001978                     u1580:
  5230  001978  6A16               	clrf	??_check_sensors& (0+255),c
  5231  00197A                     u1598:
  5232  00197A  504E               	movf	_SeeLine,w,c
  5233  00197C  1816               	xorwf	??_check_sensors,w,c
  5234  00197E  0BFE               	andlw	-2
  5235  001980  1816               	xorwf	??_check_sensors,w,c
  5236  001982  6E4E               	movwf	_SeeLine,c
  5237  001984  0012               	return		;funcret
  5238  001986                     __end_of_check_sensors:
  5239                           	opt stack 0
  5240                           stkptr	equ	0xFFC
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           intcon	equ	0xFF2
  5246                           postinc0	equ	0xFEE
  5247                           wreg	equ	0xFE8
  5248                           indf1	equ	0xFE7
  5249                           postinc1	equ	0xFE6
  5250                           fsr1h	equ	0xFE2
  5251                           fsr1l	equ	0xFE1
  5252                           indf2	equ	0xFDF
  5253                           postinc2	equ	0xFDE
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _adc *****************
  5260 ;; Defined at:
  5261 ;;		line 230 in file "../Robot Files/sumovore.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  channel         1    wreg     unsigned char 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  channel         1   20[COMRAM] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  2   18[COMRAM] unsigned int 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;Total ram usage:        3 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    2
  5282 ;; This function calls:
  5283 ;;		_BusyADC
  5284 ;;		_ConvertADC
  5285 ;;		_ReadADC
  5286 ;;		_SetChanADC
  5287 ;; This function is called by:
  5288 ;;		_check_sensors
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text42
  5293  002094                     __ptext42:
  5294                           	opt stack 0
  5295  002094                     _adc:
  5296                           	opt stack 27
  5297                           
  5298                           ;incstack = 0
  5299                           ;adc@channel stored from wreg
  5300  002094  6E15               	movwf	adc@channel,c
  5301                           
  5302                           ;sumovore.c: 232: SetChanADC( channel );
  5303  002096  5015               	movf	adc@channel,w,c
  5304  002098  EC29  F011         	call	_SetChanADC
  5305                           
  5306                           ;sumovore.c: 233: ConvertADC();
  5307  00209C  EC83  F011         	call	_ConvertADC	;wreg free
  5308                           
  5309                           ;sumovore.c: 234: while( BusyADC() );
  5310  0020A0  D000               	goto	l2157
  5311  0020A2                     l2157:
  5312  0020A2  EC67  F011         	call	_BusyADC	;wreg free
  5313  0020A6  0900               	iorlw	0
  5314  0020A8  A4D8               	btfss	status,2,c
  5315  0020AA  D7FB               	goto	l2157
  5316                           
  5317                           ;sumovore.c: 236: return ReadADC();
  5318  0020AC  EC58  F011         	call	_ReadADC	;wreg free
  5319  0020B0  C00F  F013         	movff	?_ReadADC,?_adc
  5320  0020B4  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5321  0020B8  D000               	goto	l304
  5322  0020BA                     l304:
  5323  0020BA  0012               	return		;funcret
  5324  0020BC                     __end_of_adc:
  5325                           	opt stack 0
  5326                           stkptr	equ	0xFFC
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           intcon	equ	0xFF2
  5332                           postinc0	equ	0xFEE
  5333                           wreg	equ	0xFE8
  5334                           indf1	equ	0xFE7
  5335                           postinc1	equ	0xFE6
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           plusw2	equ	0xFDB
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _SetChanADC *****************
  5346 ;; Defined at:
  5347 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  channel         1    wreg     unsigned char 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  channel         1   15[COMRAM] unsigned char 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;		None               void
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;Total ram usage:        2 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    1
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_adc
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text43
  5376  002252                     __ptext43:
  5377                           	opt stack 0
  5378  002252                     _SetChanADC:
  5379                           	opt stack 27
  5380                           
  5381                           ;incstack = 0
  5382                           ;SetChanADC@channel stored from wreg
  5383  002252  6E10               	movwf	SetChanADC@channel,c
  5384  002254  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5385  002258  0EC3               	movlw	195
  5386  00225A  160F               	andwf	??_SetChanADC,f,c
  5387  00225C  90D8               	bcf	status,0,c
  5388  00225E  3010               	rrcf	SetChanADC@channel,w,c
  5389  002260  0B3C               	andlw	60
  5390  002262  100F               	iorwf	??_SetChanADC,w,c
  5391  002264  6EC2               	movwf	4034,c	;volatile
  5392  002266  0012               	return		;funcret
  5393  002268                     __end_of_SetChanADC:
  5394                           	opt stack 0
  5395                           stkptr	equ	0xFFC
  5396                           tblptru	equ	0xFF8
  5397                           tblptrh	equ	0xFF7
  5398                           tblptrl	equ	0xFF6
  5399                           tablat	equ	0xFF5
  5400                           intcon	equ	0xFF2
  5401                           postinc0	equ	0xFEE
  5402                           wreg	equ	0xFE8
  5403                           indf1	equ	0xFE7
  5404                           postinc1	equ	0xFE6
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           plusw2	equ	0xFDB
  5410                           fsr2h	equ	0xFDA
  5411                           fsr2l	equ	0xFD9
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function _ReadADC *****************
  5415 ;; Defined at:
  5416 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;		None
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  2   14[COMRAM] int 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;Total ram usage:        4 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_adc
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text44
  5445  0022B0                     __ptext44:
  5446                           	opt stack 0
  5447  0022B0                     _ReadADC:
  5448                           	opt stack 27
  5449                           
  5450                           ;incstack = 0
  5451  0022B0  50C4               	movf	4036,w,c	;volatile
  5452  0022B2  6E11               	movwf	??_ReadADC& (0+255),c
  5453  0022B4  50C3               	movf	4035,w,c	;volatile
  5454  0022B6  6E0F               	movwf	?_ReadADC,c
  5455  0022B8  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5456  0022BC  D000               	goto	l455
  5457  0022BE                     l455:
  5458  0022BE  0012               	return		;funcret
  5459  0022C0                     __end_of_ReadADC:
  5460                           	opt stack 0
  5461                           stkptr	equ	0xFFC
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           intcon	equ	0xFF2
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           indf1	equ	0xFE7
  5470                           postinc1	equ	0xFE6
  5471                           fsr1h	equ	0xFE2
  5472                           fsr1l	equ	0xFE1
  5473                           indf2	equ	0xFDF
  5474                           postinc2	equ	0xFDE
  5475                           plusw2	equ	0xFDB
  5476                           fsr2h	equ	0xFDA
  5477                           fsr2l	equ	0xFD9
  5478                           status	equ	0xFD8
  5479                           
  5480 ;; *************** function _ConvertADC *****************
  5481 ;; Defined at:
  5482 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;		None               void
  5489 ;; Registers used:
  5490 ;;		None
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_adc
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text45
  5511  002306                     __ptext45:
  5512                           	opt stack 0
  5513  002306                     _ConvertADC:
  5514                           	opt stack 27
  5515                           
  5516                           ;incstack = 0
  5517  002306  82C2               	bsf	4034,1,c	;volatile
  5518  002308  0012               	return		;funcret
  5519  00230A                     __end_of_ConvertADC:
  5520                           	opt stack 0
  5521                           stkptr	equ	0xFFC
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           intcon	equ	0xFF2
  5527                           postinc0	equ	0xFEE
  5528                           wreg	equ	0xFE8
  5529                           indf1	equ	0xFE7
  5530                           postinc1	equ	0xFE6
  5531                           fsr1h	equ	0xFE2
  5532                           fsr1l	equ	0xFE1
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           plusw2	equ	0xFDB
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _BusyADC *****************
  5541 ;; Defined at:
  5542 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    1
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_adc
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text46
  5571  0022CE                     __ptext46:
  5572                           	opt stack 0
  5573  0022CE                     _BusyADC:
  5574                           	opt stack 27
  5575                           
  5576                           ;incstack = 0
  5577  0022CE  A2C2               	btfss	4034,1,c	;volatile
  5578  0022D0  D002               	goto	u1390
  5579  0022D2  0E01               	movlw	1
  5580  0022D4  D002               	goto	l425
  5581  0022D6                     u1390:
  5582  0022D6  0E00               	movlw	0
  5583  0022D8  D000               	goto	l425
  5584  0022DA                     l425:
  5585  0022DA  0012               	return		;funcret
  5586  0022DC                     __end_of_BusyADC:
  5587                           	opt stack 0
  5588                           stkptr	equ	0xFFC
  5589                           tblptru	equ	0xFF8
  5590                           tblptrh	equ	0xFF7
  5591                           tblptrl	equ	0xFF6
  5592                           tablat	equ	0xFF5
  5593                           intcon	equ	0xFF2
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           postinc1	equ	0xFE6
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           plusw2	equ	0xFDB
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607 ;; *************** function _WriteTimer0 *****************
  5608 ;; Defined at:
  5609 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  timer0          2   14[COMRAM] unsigned int 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  timer           2   16[COMRAM] struct Timers
  5614 ;; Return value:  Size  Location     Type
  5615 ;;		None               void
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;Total ram usage:        4 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_main
  5634 ;;		_GetBackonTrack
  5635 ;;		_AllSensorsTriggered
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text47
  5640  00229E                     __ptext47:
  5641                           	opt stack 0
  5642  00229E                     _WriteTimer0:
  5643                           	opt stack 29
  5644                           
  5645                           ;incstack = 0
  5646  00229E  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5647  0022A2  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5648  0022A6  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5649  0022AA  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5650  0022AE  0012               	return		;funcret
  5651  0022B0                     __end_of_WriteTimer0:
  5652                           	opt stack 0
  5653                           stkptr	equ	0xFFC
  5654                           tblptru	equ	0xFF8
  5655                           tblptrh	equ	0xFF7
  5656                           tblptrl	equ	0xFF6
  5657                           tablat	equ	0xFF5
  5658                           intcon	equ	0xFF2
  5659                           postinc0	equ	0xFEE
  5660                           wreg	equ	0xFE8
  5661                           indf1	equ	0xFE7
  5662                           postinc1	equ	0xFE6
  5663                           fsr1h	equ	0xFE2
  5664                           fsr1l	equ	0xFE1
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           plusw2	equ	0xFDB
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _MotorControl *****************
  5673 ;; Defined at:
  5674 ;;		line 156 in file "../Robot Files/main.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  delta_veloci    2   42[COMRAM] int 
  5677 ;;  speed_divide    1   44[COMRAM] unsigned char 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  right_duty_c    2   50[COMRAM] int 
  5680 ;;  left_duty_cy    2   48[COMRAM] int 
  5681 ;;  right_dir_mo    1   47[COMRAM] enum E4173
  5682 ;;  left_dir_mod    1   46[COMRAM] enum E4173
  5683 ;; Return value:  Size  Location     Type
  5684 ;;		None               void
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5692 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;Total ram usage:       10 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    2
  5699 ;; This function calls:
  5700 ;;		_SetDCPWM1
  5701 ;;		_SetDCPWM2
  5702 ;;		___awdiv
  5703 ;;		___wmul
  5704 ;; This function is called by:
  5705 ;;		_PID_LineFollowing
  5706 ;;		_GetBackonTrack
  5707 ;;		_SharpTurn
  5708 ;;		_AllSensorsTriggered
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text48
  5713  001384                     __ptext48:
  5714                           	opt stack 0
  5715  001384                     _MotorControl:
  5716                           	opt stack 27
  5717                           
  5718                           ;main.c: 158: int left_duty_cycle = 700, right_duty_cycle = 700;
  5719                           
  5720                           ;incstack = 0
  5721  001384  0E02               	movlw	2
  5722  001386  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5723  001388  0EBC               	movlw	188
  5724  00138A  6E31               	movwf	MotorControl@left_duty_cycle,c
  5725  00138C  0E02               	movlw	2
  5726  00138E  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5727  001390  0EBC               	movlw	188
  5728  001392  6E33               	movwf	MotorControl@right_duty_cycle,c
  5729                           
  5730                           ;main.c: 159: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5731  001394  0E01               	movlw	1
  5732  001396  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5733  001398  0E01               	movlw	1
  5734  00139A  6E30               	movwf	MotorControl@right_dir_modifier,c
  5735                           
  5736                           ;main.c: 162: if ( delta_velocity < 0 )
  5737  00139C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5738  00139E  D023               	goto	l2225
  5739                           
  5740                           ;main.c: 163: {
  5741                           ;main.c: 164: left_duty_cycle += delta_velocity*15/16;
  5742  0013A0  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5743  0013A4  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5744  0013A8  0E00               	movlw	0
  5745  0013AA  6E20               	movwf	___wmul@multiplicand+1,c
  5746  0013AC  0E0F               	movlw	15
  5747  0013AE  6E1F               	movwf	___wmul@multiplicand,c
  5748  0013B0  EC5E  F010         	call	___wmul	;wreg free
  5749  0013B4  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5750  0013B8  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5751  0013BC  0E00               	movlw	0
  5752  0013BE  6E26               	movwf	___awdiv@divisor+1,c
  5753  0013C0  0E10               	movlw	16
  5754  0013C2  6E25               	movwf	___awdiv@divisor,c
  5755  0013C4  EC6E  F00D         	call	___awdiv	;wreg free
  5756  0013C8  5023               	movf	?___awdiv,w,c
  5757  0013CA  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5758  0013CC  5024               	movf	?___awdiv+1,w,c
  5759  0013CE  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5760                           
  5761                           ;main.c: 165: right_duty_cycle -= delta_velocity/16;
  5762  0013D0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5763  0013D4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5764  0013D8  0E00               	movlw	0
  5765  0013DA  6E26               	movwf	___awdiv@divisor+1,c
  5766  0013DC  0E10               	movlw	16
  5767  0013DE  6E25               	movwf	___awdiv@divisor,c
  5768  0013E0  EC6E  F00D         	call	___awdiv	;wreg free
  5769  0013E4  D022               	goto	L8
  5770  0013E6                     l2225:
  5771                           
  5772                           ;main.c: 168: else
  5773                           ;main.c: 169: {
  5774                           ;main.c: 170: left_duty_cycle += delta_velocity/16;
  5775  0013E6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5776  0013EA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5777  0013EE  0E00               	movlw	0
  5778  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  5779  0013F2  0E10               	movlw	16
  5780  0013F4  6E25               	movwf	___awdiv@divisor,c
  5781  0013F6  EC6E  F00D         	call	___awdiv	;wreg free
  5782  0013FA  5023               	movf	?___awdiv,w,c
  5783  0013FC  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5784  0013FE  5024               	movf	?___awdiv+1,w,c
  5785  001400  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5786                           
  5787                           ;main.c: 171: right_duty_cycle -= delta_velocity*15/16;
  5788  001402  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5789  001406  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5790  00140A  0E00               	movlw	0
  5791  00140C  6E20               	movwf	___wmul@multiplicand+1,c
  5792  00140E  0E0F               	movlw	15
  5793  001410  6E1F               	movwf	___wmul@multiplicand,c
  5794  001412  EC5E  F010         	call	___wmul	;wreg free
  5795  001416  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5796  00141A  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5797  00141E  0E00               	movlw	0
  5798  001420  6E26               	movwf	___awdiv@divisor+1,c
  5799  001422  0E10               	movlw	16
  5800  001424  6E25               	movwf	___awdiv@divisor,c
  5801  001426  EC6E  F00D         	call	___awdiv	;wreg free
  5802  00142A                     L8:
  5803  00142A  5023               	movf	?___awdiv,w,c
  5804  00142C  5E33               	subwf	MotorControl@right_duty_cycle,f,c
  5805  00142E  5024               	movf	?___awdiv+1,w,c
  5806  001430  5A34               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5807  001432  D000               	goto	l2229
  5808  001434                     l2229:
  5809                           
  5810                           ;main.c: 172: }
  5811                           ;main.c: 178: if (speed_divider)
  5812  001434  502D               	movf	MotorControl@speed_divider,w,c
  5813  001436  B4D8               	btfsc	status,2,c
  5814  001438  D01B               	goto	l2233
  5815                           
  5816                           ;main.c: 179: {
  5817                           ;main.c: 180: left_duty_cycle /= speed_divider;
  5818  00143A  C031  F023         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  5819  00143E  C032  F024         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  5820  001442  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5821  001446  6A26               	clrf	___awdiv@divisor+1,c
  5822  001448  EC6E  F00D         	call	___awdiv	;wreg free
  5823  00144C  C023  F031         	movff	?___awdiv,MotorControl@left_duty_cycle
  5824  001450  C024  F032         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  5825                           
  5826                           ;main.c: 181: right_duty_cycle /= speed_divider;
  5827  001454  C033  F023         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  5828  001458  C034  F024         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  5829  00145C  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5830  001460  6A26               	clrf	___awdiv@divisor+1,c
  5831  001462  EC6E  F00D         	call	___awdiv	;wreg free
  5832  001466  C023  F033         	movff	?___awdiv,MotorControl@right_duty_cycle
  5833  00146A  C024  F034         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  5834  00146E  D000               	goto	l2233
  5835  001470                     l2233:
  5836                           
  5837                           ;main.c: 182: }
  5838                           ;main.c: 185: if ( left_duty_cycle < 0 )
  5839  001470  AE32               	btfss	MotorControl@left_duty_cycle+1,7,c
  5840  001472  D010               	goto	l2239
  5841                           
  5842                           ;main.c: 186: {
  5843                           ;main.c: 187: left_dir_modifier = reverse;
  5844  001474  0E00               	movlw	0
  5845  001476  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5846                           
  5847                           ;main.c: 188: left_duty_cycle *= -1;
  5848  001478  C031  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5849  00147C  C032  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5850  001480  0EFF               	movlw	255
  5851  001482  6E20               	movwf	___wmul@multiplicand+1,c
  5852  001484  681F               	setf	___wmul@multiplicand,c
  5853  001486  EC5E  F010         	call	___wmul	;wreg free
  5854  00148A  C01D  F031         	movff	?___wmul,MotorControl@left_duty_cycle
  5855  00148E  C01E  F032         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5856  001492  D000               	goto	l2239
  5857  001494                     l2239:
  5858                           
  5859                           ;main.c: 189: }
  5860                           ;main.c: 190: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5861  001494  BE32               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5862  001496  D00B               	goto	l2243
  5863  001498  0E21               	movlw	33
  5864  00149A  5C31               	subwf	MotorControl@left_duty_cycle,w,c
  5865  00149C  0E03               	movlw	3
  5866  00149E  5832               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5867  0014A0  A0D8               	btfss	status,0,c
  5868  0014A2  D005               	goto	l2243
  5869  0014A4  0E03               	movlw	3
  5870  0014A6  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5871  0014A8  0E20               	movlw	32
  5872  0014AA  6E31               	movwf	MotorControl@left_duty_cycle,c
  5873  0014AC  D000               	goto	l2243
  5874  0014AE                     l2243:
  5875                           
  5876                           ;main.c: 192: SetDCPWM2((unsigned int) left_duty_cycle );
  5877  0014AE  C031  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5878  0014B2  C032  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5879  0014B6  ECC7  F00F         	call	_SetDCPWM2	;wreg free
  5880                           
  5881                           ;main.c: 193: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5882  0014BA  502F               	movf	MotorControl@left_dir_modifier,w,c
  5883  0014BC  A4D8               	btfss	status,2,c
  5884  0014BE  D002               	goto	l119
  5885  0014C0  9082               	bcf	3970,0,c	;volatile
  5886  0014C2  D002               	goto	l2249
  5887  0014C4                     l119:
  5888                           
  5889                           ;main.c: 194: else PORTCbits.RC0 = 0b1;
  5890  0014C4  8082               	bsf	3970,0,c	;volatile
  5891  0014C6  D000               	goto	l2249
  5892  0014C8                     l2249:
  5893                           
  5894                           ;main.c: 195: PORTEbits.RE1 = !PORTCbits.RC0;
  5895  0014C8  B082               	btfsc	3970,0,c	;volatile
  5896  0014CA  D003               	goto	u1750
  5897  0014CC  6A2E               	clrf	??_MotorControl& (0+255),c
  5898  0014CE  2A2E               	incf	??_MotorControl& (0+255),f,c
  5899  0014D0  D001               	goto	u1768
  5900  0014D2                     u1750:
  5901  0014D2  6A2E               	clrf	??_MotorControl& (0+255),c
  5902  0014D4                     u1768:
  5903  0014D4  462E               	rlncf	??_MotorControl,f,c
  5904  0014D6  5084               	movf	3972,w,c	;volatile
  5905  0014D8  182E               	xorwf	??_MotorControl,w,c
  5906  0014DA  0BFD               	andlw	-3
  5907  0014DC  182E               	xorwf	??_MotorControl,w,c
  5908  0014DE  6E84               	movwf	3972,c	;volatile
  5909                           
  5910                           ;main.c: 198: if ( right_duty_cycle < 0 )
  5911  0014E0  AE34               	btfss	MotorControl@right_duty_cycle+1,7,c
  5912  0014E2  D010               	goto	l2255
  5913                           
  5914                           ;main.c: 199: {
  5915                           ;main.c: 200: right_dir_modifier = reverse;
  5916  0014E4  0E00               	movlw	0
  5917  0014E6  6E30               	movwf	MotorControl@right_dir_modifier,c
  5918                           
  5919                           ;main.c: 201: right_duty_cycle *= -1;
  5920  0014E8  C033  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5921  0014EC  C034  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5922  0014F0  0EFF               	movlw	255
  5923  0014F2  6E20               	movwf	___wmul@multiplicand+1,c
  5924  0014F4  681F               	setf	___wmul@multiplicand,c
  5925  0014F6  EC5E  F010         	call	___wmul	;wreg free
  5926  0014FA  C01D  F033         	movff	?___wmul,MotorControl@right_duty_cycle
  5927  0014FE  C01E  F034         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5928  001502  D000               	goto	l2255
  5929  001504                     l2255:
  5930                           
  5931                           ;main.c: 202: }
  5932                           ;main.c: 203: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5933  001504  BE34               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5934  001506  D00B               	goto	l2259
  5935  001508  0E21               	movlw	33
  5936  00150A  5C33               	subwf	MotorControl@right_duty_cycle,w,c
  5937  00150C  0E03               	movlw	3
  5938  00150E  5834               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5939  001510  A0D8               	btfss	status,0,c
  5940  001512  D005               	goto	l2259
  5941  001514  0E03               	movlw	3
  5942  001516  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5943  001518  0E20               	movlw	32
  5944  00151A  6E33               	movwf	MotorControl@right_duty_cycle,c
  5945  00151C  D000               	goto	l2259
  5946  00151E                     l2259:
  5947                           
  5948                           ;main.c: 205: SetDCPWM1((unsigned int) right_duty_cycle );
  5949  00151E  C033  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5950  001522  C034  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5951  001526  ECE4  F00F         	call	_SetDCPWM1	;wreg free
  5952                           
  5953                           ;main.c: 206: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5954  00152A  5030               	movf	MotorControl@right_dir_modifier,w,c
  5955  00152C  A4D8               	btfss	status,2,c
  5956  00152E  D002               	goto	l123
  5957  001530  9A82               	bcf	3970,5,c	;volatile
  5958  001532  D002               	goto	l2265
  5959  001534                     l123:
  5960                           
  5961                           ;main.c: 207: else PORTCbits.RC5 = 0b1;
  5962  001534  8A82               	bsf	3970,5,c	;volatile
  5963  001536  D000               	goto	l2265
  5964  001538                     l2265:
  5965                           
  5966                           ;main.c: 208: PORTEbits.RE0 = !PORTCbits.RC5;
  5967  001538  BA82               	btfsc	3970,5,c	;volatile
  5968  00153A  D003               	goto	u1800
  5969  00153C  6A2E               	clrf	??_MotorControl& (0+255),c
  5970  00153E  2A2E               	incf	??_MotorControl& (0+255),f,c
  5971  001540  D001               	goto	u1818
  5972  001542                     u1800:
  5973  001542  6A2E               	clrf	??_MotorControl& (0+255),c
  5974  001544                     u1818:
  5975  001544  5084               	movf	3972,w,c	;volatile
  5976  001546  182E               	xorwf	??_MotorControl,w,c
  5977  001548  0BFE               	andlw	-2
  5978  00154A  182E               	xorwf	??_MotorControl,w,c
  5979  00154C  6E84               	movwf	3972,c	;volatile
  5980  00154E  0012               	return		;funcret
  5981  001550                     __end_of_MotorControl:
  5982                           	opt stack 0
  5983                           stkptr	equ	0xFFC
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           intcon	equ	0xFF2
  5989                           postinc0	equ	0xFEE
  5990                           wreg	equ	0xFE8
  5991                           indf1	equ	0xFE7
  5992                           postinc1	equ	0xFE6
  5993                           fsr1h	equ	0xFE2
  5994                           fsr1l	equ	0xFE1
  5995                           indf2	equ	0xFDF
  5996                           postinc2	equ	0xFDE
  5997                           plusw2	equ	0xFDB
  5998                           fsr2h	equ	0xFDA
  5999                           fsr2l	equ	0xFD9
  6000                           status	equ	0xFD8
  6001                           
  6002 ;; *************** function ___wmul *****************
  6003 ;; Defined at:
  6004 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  multiplier      2   28[COMRAM] unsigned int 
  6007 ;;  multiplicand    2   30[COMRAM] unsigned int 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  product         2   32[COMRAM] unsigned int 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  2   28[COMRAM] unsigned int 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, prodl, prodh
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;Total ram usage:        6 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_PID_LineFollowing
  6030 ;;		_MotorControl
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text49
  6035  0020BC                     __ptext49:
  6036                           	opt stack 0
  6037  0020BC                     ___wmul:
  6038                           	opt stack 28
  6039                           
  6040                           ;incstack = 0
  6041  0020BC  501D               	movf	___wmul@multiplier,w,c
  6042  0020BE  021F               	mulwf	___wmul@multiplicand,c
  6043  0020C0  CFF3 F021          	movff	prodl,___wmul@product
  6044  0020C4  CFF4 F022          	movff	prodh,___wmul@product+1
  6045  0020C8  501D               	movf	___wmul@multiplier,w,c
  6046  0020CA  0220               	mulwf	___wmul@multiplicand+1,c
  6047  0020CC  50F3               	movf	prodl,w,c
  6048  0020CE  2622               	addwf	___wmul@product+1,f,c
  6049  0020D0  501E               	movf	___wmul@multiplier+1,w,c
  6050  0020D2  021F               	mulwf	___wmul@multiplicand,c
  6051  0020D4  50F3               	movf	prodl,w,c
  6052  0020D6  2622               	addwf	___wmul@product+1,f,c
  6053  0020D8  C021  F01D         	movff	___wmul@product,?___wmul
  6054  0020DC  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6055  0020E0  D000               	goto	l615
  6056  0020E2                     l615:
  6057  0020E2  0012               	return		;funcret
  6058  0020E4                     __end_of___wmul:
  6059                           	opt stack 0
  6060                           stkptr	equ	0xFFC
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           indf1	equ	0xFE7
  6071                           postinc1	equ	0xFE6
  6072                           fsr1h	equ	0xFE2
  6073                           fsr1l	equ	0xFE1
  6074                           indf2	equ	0xFDF
  6075                           postinc2	equ	0xFDE
  6076                           plusw2	equ	0xFDB
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function ___awdiv *****************
  6082 ;; Defined at:
  6083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  dividend        2   34[COMRAM] int 
  6086 ;;  divisor         2   36[COMRAM] int 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  quotient        2   40[COMRAM] int 
  6089 ;;  sign            1   39[COMRAM] unsigned char 
  6090 ;;  counter         1   38[COMRAM] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  2   34[COMRAM] int 
  6093 ;; Registers used:
  6094 ;;		wreg, status,2, status,0
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;Total ram usage:        8 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_MotorControl
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text50
  6115  001ADC                     __ptext50:
  6116                           	opt stack 0
  6117  001ADC                     ___awdiv:
  6118                           	opt stack 27
  6119                           
  6120                           ;incstack = 0
  6121  001ADC  0E00               	movlw	0
  6122  001ADE  6E28               	movwf	___awdiv@sign,c
  6123  001AE0  AE26               	btfss	___awdiv@divisor+1,7,c
  6124  001AE2  D007               	goto	l2177
  6125  001AE4  6C25               	negf	___awdiv@divisor,c
  6126  001AE6  1E26               	comf	___awdiv@divisor+1,f,c
  6127  001AE8  B0D8               	btfsc	status,0,c
  6128  001AEA  2A26               	incf	___awdiv@divisor+1,f,c
  6129  001AEC  0E01               	movlw	1
  6130  001AEE  6E28               	movwf	___awdiv@sign,c
  6131  001AF0  D000               	goto	l2177
  6132  001AF2                     l2177:
  6133  001AF2  AE24               	btfss	___awdiv@dividend+1,7,c
  6134  001AF4  D007               	goto	l2183
  6135  001AF6  6C23               	negf	___awdiv@dividend,c
  6136  001AF8  1E24               	comf	___awdiv@dividend+1,f,c
  6137  001AFA  B0D8               	btfsc	status,0,c
  6138  001AFC  2A24               	incf	___awdiv@dividend+1,f,c
  6139  001AFE  0E01               	movlw	1
  6140  001B00  1A28               	xorwf	___awdiv@sign,f,c
  6141  001B02  D000               	goto	l2183
  6142  001B04                     l2183:
  6143  001B04  0E00               	movlw	0
  6144  001B06  6E2A               	movwf	___awdiv@quotient+1,c
  6145  001B08  0E00               	movlw	0
  6146  001B0A  6E29               	movwf	___awdiv@quotient,c
  6147  001B0C  5025               	movf	___awdiv@divisor,w,c
  6148  001B0E  1026               	iorwf	___awdiv@divisor+1,w,c
  6149  001B10  B4D8               	btfsc	status,2,c
  6150  001B12  D021               	goto	l2205
  6151  001B14  0E01               	movlw	1
  6152  001B16  6E27               	movwf	___awdiv@counter,c
  6153  001B18  D005               	goto	l2191
  6154  001B1A                     l2189:
  6155  001B1A  90D8               	bcf	status,0,c
  6156  001B1C  3625               	rlcf	___awdiv@divisor,f,c
  6157  001B1E  3626               	rlcf	___awdiv@divisor+1,f,c
  6158  001B20  2A27               	incf	___awdiv@counter,f,c
  6159  001B22  D000               	goto	l2191
  6160  001B24                     l2191:
  6161  001B24  BE26               	btfsc	___awdiv@divisor+1,7,c
  6162  001B26  D002               	goto	l2193
  6163  001B28  D7F8               	goto	l2189
  6164  001B2A  D000               	goto	l2193
  6165  001B2C                     l2193:
  6166  001B2C  90D8               	bcf	status,0,c
  6167  001B2E  3629               	rlcf	___awdiv@quotient,f,c
  6168  001B30  362A               	rlcf	___awdiv@quotient+1,f,c
  6169  001B32  5025               	movf	___awdiv@divisor,w,c
  6170  001B34  5C23               	subwf	___awdiv@dividend,w,c
  6171  001B36  5026               	movf	___awdiv@divisor+1,w,c
  6172  001B38  5824               	subwfb	___awdiv@dividend+1,w,c
  6173  001B3A  A0D8               	btfss	status,0,c
  6174  001B3C  D006               	goto	l2201
  6175  001B3E  5025               	movf	___awdiv@divisor,w,c
  6176  001B40  5E23               	subwf	___awdiv@dividend,f,c
  6177  001B42  5026               	movf	___awdiv@divisor+1,w,c
  6178  001B44  5A24               	subwfb	___awdiv@dividend+1,f,c
  6179  001B46  8029               	bsf	___awdiv@quotient,0,c
  6180  001B48  D000               	goto	l2201
  6181  001B4A                     l2201:
  6182  001B4A  90D8               	bcf	status,0,c
  6183  001B4C  3226               	rrcf	___awdiv@divisor+1,f,c
  6184  001B4E  3225               	rrcf	___awdiv@divisor,f,c
  6185  001B50  2E27               	decfsz	___awdiv@counter,f,c
  6186  001B52  D7EC               	goto	l2193
  6187  001B54  D000               	goto	l2205
  6188  001B56                     l2205:
  6189  001B56  5028               	movf	___awdiv@sign,w,c
  6190  001B58  B4D8               	btfsc	status,2,c
  6191  001B5A  D005               	goto	l2209
  6192  001B5C  6C29               	negf	___awdiv@quotient,c
  6193  001B5E  1E2A               	comf	___awdiv@quotient+1,f,c
  6194  001B60  B0D8               	btfsc	status,0,c
  6195  001B62  2A2A               	incf	___awdiv@quotient+1,f,c
  6196  001B64  D000               	goto	l2209
  6197  001B66                     l2209:
  6198  001B66  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6199  001B6A  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6200  001B6E  D000               	goto	l808
  6201  001B70                     l808:
  6202  001B70  0012               	return		;funcret
  6203  001B72                     __end_of___awdiv:
  6204                           	opt stack 0
  6205                           stkptr	equ	0xFFC
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           prodh	equ	0xFF4
  6211                           prodl	equ	0xFF3
  6212                           intcon	equ	0xFF2
  6213                           postinc0	equ	0xFEE
  6214                           wreg	equ	0xFE8
  6215                           indf1	equ	0xFE7
  6216                           postinc1	equ	0xFE6
  6217                           fsr1h	equ	0xFE2
  6218                           fsr1l	equ	0xFE1
  6219                           indf2	equ	0xFDF
  6220                           postinc2	equ	0xFDE
  6221                           plusw2	equ	0xFDB
  6222                           fsr2h	equ	0xFDA
  6223                           fsr2l	equ	0xFD9
  6224                           status	equ	0xFD8
  6225                           
  6226 ;; *************** function _SetDCPWM2 *****************
  6227 ;; Defined at:
  6228 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6233 ;; Return value:  Size  Location     Type
  6234 ;;		None               void
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:        6 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_MotorControl
  6253 ;;		_initialization
  6254 ;;		_motors_brake_all
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text51
  6259  001F8E                     __ptext51:
  6260                           	opt stack 0
  6261  001F8E                     _SetDCPWM2:
  6262                           	opt stack 28
  6263                           
  6264                           ;incstack = 0
  6265  001F8E  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6266  001F92  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6267  001F96  0E06               	movlw	6
  6268  001F98                     u1415:
  6269  001F98  90D8               	bcf	status,0,c
  6270  001F9A  3611               	rlcf	??_SetDCPWM2,f,c
  6271  001F9C  3612               	rlcf	??_SetDCPWM2+1,f,c
  6272  001F9E  2EE8               	decfsz	wreg,f,c
  6273  001FA0  D7FB               	goto	u1415
  6274  001FA2  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6275  001FA6  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6276  001FAA  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6277  001FAE  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6278  001FB2  90D8               	bcf	status,0,c
  6279  001FB4  3211               	rrcf	??_SetDCPWM2,f,c
  6280  001FB6  90D8               	bcf	status,0,c
  6281  001FB8  3211               	rrcf	??_SetDCPWM2,f,c
  6282  001FBA  0E30               	movlw	48
  6283  001FBC  1611               	andwf	??_SetDCPWM2,f,c
  6284  001FBE  50BA               	movf	4026,w,c	;volatile
  6285  001FC0  0BCF               	andlw	207
  6286  001FC2  1011               	iorwf	??_SetDCPWM2,w,c
  6287  001FC4  6EBA               	movwf	4026,c	;volatile
  6288  001FC6  0012               	return		;funcret
  6289  001FC8                     __end_of_SetDCPWM2:
  6290                           	opt stack 0
  6291                           stkptr	equ	0xFFC
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           postinc0	equ	0xFEE
  6300                           wreg	equ	0xFE8
  6301                           indf1	equ	0xFE7
  6302                           postinc1	equ	0xFE6
  6303                           fsr1h	equ	0xFE2
  6304                           fsr1l	equ	0xFE1
  6305                           indf2	equ	0xFDF
  6306                           postinc2	equ	0xFDE
  6307                           plusw2	equ	0xFDB
  6308                           fsr2h	equ	0xFDA
  6309                           fsr2l	equ	0xFD9
  6310                           status	equ	0xFD8
  6311                           
  6312 ;; *************** function _SetDCPWM1 *****************
  6313 ;; Defined at:
  6314 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6319 ;; Return value:  Size  Location     Type
  6320 ;;		None               void
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        6 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_MotorControl
  6339 ;;		_initialization
  6340 ;;		_motors_brake_all
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text52
  6345  001FC8                     __ptext52:
  6346                           	opt stack 0
  6347  001FC8                     _SetDCPWM1:
  6348                           	opt stack 28
  6349                           
  6350                           ;incstack = 0
  6351  001FC8  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6352  001FCC  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6353  001FD0  0E06               	movlw	6
  6354  001FD2                     u1425:
  6355  001FD2  90D8               	bcf	status,0,c
  6356  001FD4  3611               	rlcf	??_SetDCPWM1,f,c
  6357  001FD6  3612               	rlcf	??_SetDCPWM1+1,f,c
  6358  001FD8  2EE8               	decfsz	wreg,f,c
  6359  001FDA  D7FB               	goto	u1425
  6360  001FDC  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6361  001FE0  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6362  001FE4  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6363  001FE8  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6364  001FEC  90D8               	bcf	status,0,c
  6365  001FEE  3211               	rrcf	??_SetDCPWM1,f,c
  6366  001FF0  90D8               	bcf	status,0,c
  6367  001FF2  3211               	rrcf	??_SetDCPWM1,f,c
  6368  001FF4  0E30               	movlw	48
  6369  001FF6  1611               	andwf	??_SetDCPWM1,f,c
  6370  001FF8  50BD               	movf	4029,w,c	;volatile
  6371  001FFA  0BCF               	andlw	207
  6372  001FFC  1011               	iorwf	??_SetDCPWM1,w,c
  6373  001FFE  6EBD               	movwf	4029,c	;volatile
  6374  002000  0012               	return		;funcret
  6375  002002                     __end_of_SetDCPWM1:
  6376                           	opt stack 0
  6377                           stkptr	equ	0xFFC
  6378                           tblptru	equ	0xFF8
  6379                           tblptrh	equ	0xFF7
  6380                           tblptrl	equ	0xFF6
  6381                           tablat	equ	0xFF5
  6382                           prodh	equ	0xFF4
  6383                           prodl	equ	0xFF3
  6384                           intcon	equ	0xFF2
  6385                           postinc0	equ	0xFEE
  6386                           wreg	equ	0xFE8
  6387                           indf1	equ	0xFE7
  6388                           postinc1	equ	0xFE6
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           plusw2	equ	0xFDB
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _high_isr *****************
  6399 ;; Defined at:
  6400 ;;		line 24 in file "../Robot Files/interrupts.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;		None               void
  6407 ;; Registers used:
  6408 ;;		wreg, status,2
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;Total ram usage:       14 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		Interrupt level 2
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	intcode
  6428  000008                     __pintcode:
  6429                           	opt stack 0
  6430  000008                     _high_isr:
  6431                           	opt stack 25
  6432                           
  6433                           ;incstack = 0
  6434  000008  CFFA F001          	movff	pclath,??_high_isr
  6435  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6436  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6437  000014  ED40  F00E         	call	int_func,f	;refresh shadow registers
  6438                           stkptr	equ	0xFFC
  6439                           pclatu	equ	0xFFB
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           postinc0	equ	0xFEE
  6449                           fsr0l	equ	0xFE9
  6450                           wreg	equ	0xFE8
  6451                           indf1	equ	0xFE7
  6452                           postinc1	equ	0xFE6
  6453                           fsr1h	equ	0xFE2
  6454                           fsr1l	equ	0xFE1
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           plusw2	equ	0xFDB
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462                           	psect	intcode_body
  6463  001C80                     __pintcode_body:
  6464                           	opt stack 25
  6465  001C80                     int_func:
  6466                           	opt stack 25
  6467  001C80  0006               	pop		; remove dummy address from shadow register refresh
  6468  001C82  CFEA F004          	movff	fsr0h,??_high_isr+3
  6469  001C86  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6470  001C8A  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6471  001C8E  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6472  001C92  CFDA F008          	movff	fsr2h,??_high_isr+7
  6473  001C96  CFF3 F009          	movff	prodl,??_high_isr+8
  6474  001C9A  CFF4 F00A          	movff	prodh,??_high_isr+9
  6475  001C9E  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6476  001CA2  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6477  001CA6  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6478  001CAA  CFF5 F00E          	movff	tablat,??_high_isr+13
  6479                           
  6480                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6481  001CAE  94A1               	bcf	4001,2,c	;volatile
  6482                           
  6483                           ;interrupts.c: 27: TRISA = 0xff;
  6484  001CB0  6892               	setf	3986,c	;volatile
  6485                           
  6486                           ;interrupts.c: 28: TRISB = 0xff;
  6487  001CB2  6893               	setf	3987,c	;volatile
  6488                           
  6489                           ;interrupts.c: 29: TRISC = 0xff;
  6490  001CB4  6894               	setf	3988,c	;volatile
  6491                           
  6492                           ;interrupts.c: 30: TRISD = 0xff;
  6493  001CB6  6895               	setf	3989,c	;volatile
  6494                           
  6495                           ;interrupts.c: 31: TRISE = 0x03;
  6496  001CB8  0E03               	movlw	3
  6497  001CBA  6E96               	movwf	3990,c	;volatile
  6498                           
  6499                           ;interrupts.c: 32: lvd_flag =1;
  6500  001CBC  0E01               	movlw	1
  6501  001CBE  6E4F               	movwf	_lvd_flag,c
  6502                           
  6503                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6504  001CC0  94A0               	bcf	4000,2,c	;volatile
  6505                           
  6506                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6507  001CC2  98D2               	bcf	4050,4,c	;volatile
  6508  001CC4  C00E  FFF5         	movff	??_high_isr+13,tablat
  6509  001CC8  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6510  001CCC  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6511  001CD0  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6512  001CD4  C00A  FFF4         	movff	??_high_isr+9,prodh
  6513  001CD8  C009  FFF3         	movff	??_high_isr+8,prodl
  6514  001CDC  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6515  001CE0  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6516  001CE4  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6517  001CE8  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6518  001CEC  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6519  001CF0  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6520  001CF4  C002  FFFB         	movff	??_high_isr+1,pclatu
  6521  001CF8  C001  FFFA         	movff	??_high_isr,pclath
  6522  001CFC  0011               	retfie		f
  6523  001CFE                     __end_of_high_isr:
  6524                           	opt stack 0
  6525                           stkptr	equ	0xFFC
  6526                           pclatu	equ	0xFFB
  6527                           pclath	equ	0xFFA
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           intcon	equ	0xFF2
  6535                           postinc0	equ	0xFEE
  6536                           fsr0h	equ	0xFEA
  6537                           fsr0l	equ	0xFE9
  6538                           wreg	equ	0xFE8
  6539                           indf1	equ	0xFE7
  6540                           postinc1	equ	0xFE6
  6541                           fsr1h	equ	0xFE2
  6542                           fsr1l	equ	0xFE1
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           plusw2	equ	0xFDB
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           stkptr	equ	0xFFC
  6550                           pclatu	equ	0xFFB
  6551                           pclath	equ	0xFFA
  6552                           tblptru	equ	0xFF8
  6553                           tblptrh	equ	0xFF7
  6554                           tblptrl	equ	0xFF6
  6555                           tablat	equ	0xFF5
  6556                           prodh	equ	0xFF4
  6557                           prodl	equ	0xFF3
  6558                           intcon	equ	0xFF2
  6559                           postinc0	equ	0xFEE
  6560                           fsr0h	equ	0xFEA
  6561                           fsr0l	equ	0xFE9
  6562                           wreg	equ	0xFE8
  6563                           indf1	equ	0xFE7
  6564                           postinc1	equ	0xFE6
  6565                           fsr1h	equ	0xFE2
  6566                           fsr1l	equ	0xFE1
  6567                           indf2	equ	0xFDF
  6568                           postinc2	equ	0xFDE
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574                           	psect	rparam
  6575  0000                     stkptr	equ	0xFFC
  6576                           pclatu	equ	0xFFB
  6577                           pclath	equ	0xFFA
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           intcon	equ	0xFF2
  6585                           postinc0	equ	0xFEE
  6586                           fsr0h	equ	0xFEA
  6587                           fsr0l	equ	0xFE9
  6588                           wreg	equ	0xFE8
  6589                           indf1	equ	0xFE7
  6590                           postinc1	equ	0xFE6
  6591                           fsr1h	equ	0xFE2
  6592                           fsr1l	equ	0xFE1
  6593                           indf2	equ	0xFDF
  6594                           postinc2	equ	0xFDE
  6595                           plusw2	equ	0xFDB
  6596                           fsr2h	equ	0xFDA
  6597                           fsr2l	equ	0xFD9
  6598                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   27063
                                             61 COMRAM     3     3      0
                _AllSensorsTriggered
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    6606
                                             52 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9865
                                             56 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4673
                                             52 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  1     1      0    4971
                                             52 COMRAM     1     1      0
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      44
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      44
                                             18 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     388
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3995
                                             42 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _check_sensors
         _adc
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      4F       1       62.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 00:54:21 2020

                     _STKPTRbits 000FFC                                _I 0048  
                             l70 17B0                               l74 1708  
                   ___awdiv@sign 0028              ___wmul@multiplicand 001F  
                    __CFG_BORV$0 000000                              l110 132C  
                            l123 1534                              l119 14C4  
                            l304 20BA                              l321 1F8C  
                            l330 1A30                              l147 16B4  
                            l324 1A1C                              l157 1AD2  
                            l325 19C2                              l317 1F7C  
                            l351 1DF4                              l176 1D72  
                            l425 22DA                              l381 22E0  
                            l518 218C                              l390 2092  
                            l615 20E2                              l455 22BE  
                            l519 218E                              l447 1EA0  
                            l607 2108                              l547 221E  
                            l548 2220                              l580 1DC8  
                            l573 1DA0                              l582 1DE2  
                            l495 2024                              l808 1B70  
                            l496 202E                              l497 2030  
                            l577 1DBA                              l578 1DBC  
                            l579 1DC6                              l684 18C0  
                            l589 2250                              l598 212E  
                            _PR2 000FCB             __size_of_WriteTimer0 0012  
                            _adc 2094                              wreg 000FE8  
                ReadTimer0@timer 0011                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_adc 0013  
                           l1133 1EF6                             l1143 1F42  
                           l2201 1B4A                             l1401 2126  
                           l2205 1B56                             l1261 1E1E  
                           l2141 2044                             l1405 212A  
                           l2143 204C                             l2303 19F8  
                           l2209 1B66                             l2233 1470  
                           l2225 13E6                             l1265 1E36  
                           l2243 14AE                             l2307 1A10  
                           l2229 1434                             l2157 20A2  
                           l2405 1ABE                             l2421 1D90  
                           l1453 224C                             l2191 1B24  
                           l2183 1B04                             l2255 1504  
                           l2239 1494                             l2511 184C  
                           l2503 181C                             l2193 1B2C  
                           l2177 1AF2                             l2265 1538  
                           l2249 14C8                             l2409 1ACE  
                           l2521 1886                             l2513 1854  
                           l2425 1D98                             l2417 1D86  
                           l1449 2248                             l1393 211E  
                           l2259 151E                             l2189 1B1A  
                           l2381 1A58                             l2509 183E  
                           l2525 1896                             l2541 1EC4  
                           l2701 10CE                             l1717 2020  
                           l2437 1DB2                             l2429 1DA4  
                           l1397 2122                             l1485 20F8  
                           l1493 2100                             l2631 15BC  
                           l2623 1582                             l2551 1EEA  
                           l2543 1ECC                             l2711 1126  
                           l1591 2078                             l2393 1A8C  
                           l2641 15EE                             l2633 15C4  
                           l2625 158A                             l2529 18AE  
                           l2561 1F18                             l2721 117E  
                           l2713 1136                             l2705 10F0  
                           l1489 20FC                             l1497 2104  
                           l2465 1F5C                             l2395 1A92  
                           l2539 1EBA                             l2563 1F20  
                           l2731 126C                             l2723 119C  
                           l2475 1F86                             l1595 208C  
                           l2803 1748                             l2811 1762  
                           l2397 1A9C                             l2389 1A7C  
                           l2661 1674                             l2637 15D4  
                           l2717 1158                             l2709 1116  
                           l2469 1F6C                             l2805 1756  
                           l2671 16A6                             l2647 1610  
                           l2567 1F36                             l2559 1F0E  
                           l2815 17BE                             l2807 175C  
                           l2681 1D28                             l2657 1654  
                           l2497 1802                             l2691 1D5A  
                           l2667 168C                             l2771 16F2  
                           l2693 1D64                             l2677 1D0E  
                           l2781 170C                             l2773 16F8  
                           l2687 1D36                             l2783 1710  
                           l2775 16FC                             l2785 1714  
                           l2777 1700                             l2699 10BE  
                           l2795 1730                             l2787 1718  
                           l2779 1704                  __end_of_BORtask 2172  
                           STR_1 100A                             STR_2 1073  
                           STR_3 106D                             STR_4 105D  
                           STR_5 1054                             STR_6 104A  
                           STR_7 1066                             u1500 18DA  
                           u1415 1F98                             u1520 1900  
                           u1600 1C0C                             u1425 1FD2  
                           u1540 192A                             u1620 1C22  
                           u1390 22D6                             u1518 18DC  
                           u1800 1542                             u1560 1952  
                           u1640 1C3A                             u1538 1902  
                           u1618 1C0E                             u1580 1978  
                           u1660 1C54                             u2517 1624  
                           u1750 14D2                             u1558 192C  
                           u1638 1C24                             u2527 167A  
                           u1680 1C70                             u2537 1A3E  
                           u1818 1544                             u1578 1954  
                           u1658 1C3C                             u1598 197A  
                           u1678 1C56                             u1768 14D4  
                           u1698 1C72                  ?_GetBackonTrack 0039  
                           _TMR2 000FCC                     __CFG_WDTPS$8 000000  
               ??_initialization 001C                             _main 16B6  
          __end_of_check_sensors 1986                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             pclat 000FFA  
                  __CFG_BOREN$ON 000000                  __end_of_PORtask 1A32  
                           prodh 000FF4                             prodl 000FF3  
     MotorControl@delta_velocity 002B                             start 0018  
                __end_of_WDTtask 21EC                     ___param_bank 000010  
                __end_of_BusyADC 22DC                  __end_of_ReadADC 22C0  
                __end_of_OpenADC 1EA4                            ??_adc 0015  
         PID_LineFollowing@error 0035                  __end_of___aldiv 18C2  
                          ?_main 0001                  __end_of___awdiv 1B72  
                          _T0CON 000FD5                  ___awdiv@divisor 0025  
                          _T2CON 000FCA                  __end_of___lwdiv 1F00  
                __end_of___lwmod 1F4C                  ___awdiv@counter 0027  
             __size_of_RESETtask 001C                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _SPBRG 000FAF                            _PORTD 000F83  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TXSTA 000FAC  
                __end_of_isWDTTO 210A          __end_of_openPORTCforPWM 22CE  
                          _isBOR 223C                            _isPOR 210A  
                          _gtrap 1DE4                            _putch 230A  
                __end_of_openLVD 223C                     _TURN_TIME_ms 1007  
                     _ConvertADC 2306                            tablat 000FF5  
     __size_of_openPORTCforUSART 0006                            plusw2 000FDB  
                          status 000FD8                      ?_STKFULtask 0001  
                 __CFG_MCLRE$OFF 000000                  __initialization 2268  
                   __end_of_main 17E4                       _ReadTimer0 228C  
               __end_of_OpenPWM1 228C                 __end_of_OpenPWM2 203A  
                         ??_main 003E                    __activetblptr 000003  
                     _SetChanADC 2252                        ??_BORtask 0014  
      MotorControl@speed_divider 002D                           ?_isBOR 0001  
            GetBackonTrack@error 0039                           ?_isPOR 0001  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_gtrap 0001  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1L 000FBE                           _CCPR2L 000FBB  
               ___awdiv@dividend 0023                           ?_putch 0001  
                      ??_PORtask 0014                        ??_WDTtask 0014  
                     _OpenTimer0 2172                       _OpenTimer2 2208  
                         _TMR0IF 007F92                           _SPBRGH 000FB0  
             __size_of_SetDCPWM1 003A               __size_of_SetDCPWM2 003A  
                      ??_BusyADC 000F                        ??_ReadADC 0011  
                         _LVtrap 2192                __end_of_RESETtask 2208  
                      ??_OpenADC 0011                     ?_reset_codes 0001  
               __end_of_high_isr 1CFE               __size_of_OpenUSART 0070  
                      ??___aldiv 0017                           ___wmul 20BC  
                      ??___awdiv 0027                   __CFG_STVREN$ON 000000  
               OpenTimer0@config 000F                        ??___lwdiv 0017  
                      ??___lwmod 0017               __size_of_SharpTurn 00AA  
               OpenTimer2@config 000F                           clear_0 226E  
               ___awdiv@quotient 0029                        ??_isWDTTO 000F  
                         _printf 203A                 __end_of_set_leds 1C80  
                      ??_openLVD 000F              __size_of_STKFULtask 001E  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               ?_openPORTCforPWM 0001                ?_motors_brake_all 0001  
                         putch@c 0001               ??_motors_brake_all 0015  
                    ?_ConvertADC 0001                       __accesstop 0080  
        __end_of__initialization 2274                       adc@channel 0015  
                  ___rparam_used 000001            __end_of_set_osc_32MHz 2094  
                 __pcstackCOMRAM 0001                      ?_ReadTimer0 000F  
                  __end_of_isBOR 2252                    __end_of_isPOR 2130  
                  __end_of_gtrap 1E46          _AllSensorsTriggered$472 0035  
                  __end_of_putch 230C     __size_of_AllSensorsTriggered 0076  
              __end_of_SetDCPWM1 2002                __end_of_SetDCPWM2 1FC8  
                  ??_StatusReset 000F                      ?_SetChanADC 0001  
               ??_GetBackonTrack 003B                    ?_lvd_flag_set 0001  
                        ??_isBOR 000F                          ??_isPOR 000F  
              __end_of_OpenUSART 1DE4                          ??_gtrap 000F  
                        ??_putch 000F                      ?_OpenTimer0 0001  
                    ?_OpenTimer2 0001                __end_of_SharpTurn 1ADC  
                      ?_OpenPWM1 0001                        ?_OpenPWM2 0001  
                        ?_LVtrap 0001                    ?_MotorControl 002B  
             __end_of_D_CONSTANT 1003               __size_of_openPORTA 0006  
             __size_of_openPORTB 0006               __size_of_openPORTD 0006  
             __size_of_openPORTE 0006                          ?___wmul 001D  
                        _CCP1CON 000FBD                          _CCP2CON 000FBA  
               WriteTimer0@timer 0011                    ??_WriteTimer0 0011  
              _CCW_rotation_flag 004C              __size_of_ConvertADC 0004  
                        ?_printf 000F                          _BORtask 2152  
                 ??_lvd_flag_set 000F                        ?_high_isr 0001  
            __end_of_StatusReset 22E8              __size_of_ReadTimer0 0012  
                        _PORtask 1986               __end_of_I_CONSTANT 1005  
                        _WDTtask 21D0                          _BusyADC 22CE  
                        _ReadADC 22B0                       ??_OpenPWM1 000F  
                     ??_OpenPWM2 000F                     ??_STKFULtask 0014  
                        _SeeLine 004E                   ??_MotorControl 002E  
                        _OpenADC 1E46                  __size_of_LVtrap 0020  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        __Lparam 0000                        ?_set_leds 0001  
           __size_of_reset_codes 0042                          ___aldiv 17E4  
                        ___awdiv 1ADC                  __size_of___wmul 0028  
                        ___lwdiv 1EA4                          ___lwmod 1F00  
                   __psmallconst 1000                          __pcinit 2268  
                        _isWDTTO 20E4                          __ramtop 1000  
            __size_of_OpenTimer0 0020              __size_of_OpenTimer2 001C  
                        __ptext0 16B6                          __ptext1 22DC  
                        __ptext2 1B72                          __ptext3 2068  
                        __ptext4 1F4C                          __ptext5 20E4  
                        __ptext6 210A                          __ptext7 223C  
                        __ptext8 21D0                          __ptext9 21B2  
                __size_of_printf 002E                        _T0CONbits 000FD5  
                   __size_of_adc 0028                        _T2CONbits 000FCA  
         __size_of_check_sensors 00C4                          _openLVD 2224  
               ___aldiv@dividend 000F              __end_of_WriteTimer0 22B0  
             __end_of_STKFULtask 21D0               __end_of_P_CONSTANT 1007  
              __end_of_openPORTA 2300                __end_of_openPORTB 22FA  
              __end_of_openPORTD 2306                __end_of_openPORTE 22EE  
                 OpenADC@config2 000F                       ??_high_isr 0001  
                 __pintcode_body 1C80             end_of_initialization 2274  
                        int_func 1C80                       ??_set_leds 000F  
                      _RCSTAbits 000FAB                          printf@c 0013  
                        printf@f 000F                 ___aldiv@quotient 0019  
                      _RESETtask 21EC                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
        __size_of_initialization 0090                        _PORTCbits 000F82  
                      _PORTDbits 000F83                        _PORTEbits 000F84  
                 set_osc_32MHz@i 000F                      _StatusReset 22E2  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                   ??_ConvertADC 000F      MotorControl@left_duty_cycle 0031  
              _PID_LineFollowing 107A    MotorControl@left_dir_modifier 002F  
            _AllSensorsTriggered 1CFE               ?_PID_LineFollowing 0035  
                      _TXSTAbits 000FAC                    _check_sensors 18C2  
      __size_of_motors_brake_all 0022                   __end_of_LVtrap 21B2  
           __end_of_lvd_flag_set 22E2   MotorControl@right_dir_modifier 0030  
            ??_PID_LineFollowing 0037                     ??_ReadTimer0 0011  
                     ?_RESETtask 0001                   __end_of___wmul 20E4  
                    _WriteTimer0 229E             ?_AllSensorsTriggered 0001  
             __end_of_ConvertADC 230A                     ??_SetChanADC 000F  
                 __end_of_printf 2068              start_initialization 2268  
           __end_of_MotorControl 1550                        _SetDCPWM1 1FC8  
                      _SetDCPWM2 1F8E                  SetDCPWM1@DCycle 0013  
                    __end_of_adc 20BC                  SetDCPWM2@DCycle 0013  
      __end_of_PID_LineFollowing 1384                     ??_OpenTimer0 000F  
                   ??_OpenTimer2 000F               __end_of_ReadTimer0 229E  
                      _OpenUSART 1D74         __size_of_openPORTCforPWM 000E  
                 ?_check_sensors 0001                 __CFG_OSC$INTIO67 000000  
                       ??_LVtrap 0014                        _SharpTurn 1A32  
             __end_of_SetChanADC 2268                __size_of_OpenPWM1 0012  
              __size_of_OpenPWM2 0038                         ??___wmul 0021  
     __end_of_TURN_SPEED_DIVIDER 100A            ??_AllSensorsTriggered 0035  
                       ??_printf 0011                       gtrap@count 000F  
             __end_of_OpenTimer0 2192               __end_of_OpenTimer2 2224  
             SharpTurn@direction 0036                      __pbssCOMRAM 0041  
                       ?_BORtask 0001                       ?_SetDCPWM1 000F  
                     ?_SetDCPWM2 000F                    PORtask@count1 0014  
                  PORtask@count2 0018           __size_of_set_osc_32MHz 002C  
                       ?_PORtask 0001                         ?_WDTtask 0001  
                     ?_OpenUSART 000F                __size_of_high_isr 1CF6  
                       ?_BusyADC 0001                         ?_ReadADC 000F  
                     ?_SharpTurn 0001                OpenADC@portconfig 0010  
                       ?_OpenADC 000F                 ___lwdiv@dividend 0013  
                      __pintcode 0008                      ??_RESETtask 0014  
                       ?___aldiv 000F                         ?___awdiv 0023  
                 _initialization 1B72                __size_of_set_leds 007E  
                       ?___lwdiv 0013                         ?___lwmod 0013  
                       ?_isWDTTO 0001                      __smallconst 1000  
              WriteTimer0@timer0 000F               PID_LineFollowing@D 0044  
                       ?_openLVD 0001          SharpTurn@delta_velocity 0037  
     __size_of_PID_LineFollowing 030A                   __size_of_isBOR 0016  
               ___lwdiv@quotient 0017                   __size_of_isPOR 0026  
                 __size_of_gtrap 0062                   __size_of_putch 0002  
                ??_check_sensors 0016                  ___aldiv@divisor 0013  
                      _openPORTA 22FA                        _openPORTB 22F4  
                      _openPORTD 2300                        _openPORTE 22E8  
                ___aldiv@counter 0017                   ___wmul@product 0021  
                  OpenADC@config 0013            __size_of_lvd_flag_set 0006  
        __size_of_GetBackonTrack 0166                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                  ??_reset_codes 001C                 _motors_brake_all 2130  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
         __end_of_initialization 1C02                         _RCONbits 000FD0  
              ??_openPORTCforPWM 000F                    _set_osc_32MHz 2068  
                      main@F4194 0041                      _HLVDCONbits 000FD2  
                      _threshold 004A            __size_of_MotorControl 01CC  
                     _ADCON0bits 000FC2                ___wmul@multiplier 001D  
                   ?_StatusReset 0001                  GetBackonTrack@i 003C  
                      main@error 003E     MotorControl@right_duty_cycle 0033  
                    ??_SetDCPWM1 0011                      ??_SetDCPWM2 0011  
               __size_of_BORtask 0020                     _lvd_flag_set 22DC  
               __size_of_PORtask 00AC                      ??_OpenUSART 0011  
             SetDCPWM1@dutycycle 000F                       ?_openPORTA 0001  
                     ?_openPORTB 0001                       ?_openPORTD 0001  
                     ?_openPORTE 0001                 __size_of_WDTtask 001C  
                OpenUSART@config 0011                         _OpenPWM1 227A  
                       _OpenPWM2 2002  PID_LineFollowing@delta_velocity 0046  
               __size_of_BusyADC 000E                      ??_SharpTurn 0035  
               __size_of_ReadADC 0010                         __Hrparam 0000  
               __size_of_OpenADC 005E                     _MotorControl 1384  
                ?_initialization 0001                         __Lrparam 0000  
             SetDCPWM2@dutycycle 000F                   ?_set_osc_32MHz 0001  
               __size_of___aldiv 00DE              __end_of_reset_codes 1F8E  
               __size_of___awdiv 0096                 __size_of___lwdiv 005C  
               __size_of___lwmod 004C                     ?_WriteTimer0 000F  
                 OpenPWM2@ccp2mx 0010                 __size_of_isWDTTO 0026  
                 OpenPWM1@period 000F                   OpenPWM2@period 000F  
                ___lwdiv@divisor 0015                 __size_of_openLVD 0018  
                ___lwdiv@counter 0019                         __ptext10 21EC  
                       __ptext11 1986                         __ptext20 1D74  
                       __ptext12 2152                         __ptext21 2208  
                       __ptext13 22E2                         __ptext30 2192  
                       __ptext22 2002                         __ptext14 22E8  
                       __ptext31 203A                         __ptext23 227A  
                       __ptext15 22EE                         __ptext40 2130  
                       __ptext32 230A                         __ptext24 1E46  
                       __ptext16 22C0                         __ptext41 18C2  
                       __ptext33 2300                         __ptext25 107A  
                       __ptext17 22F4                         __ptext50 1ADC  
                       __ptext42 2094                         __ptext34 1DE4  
                       __ptext26 1F00                         __ptext18 22FA  
                       __ptext51 1F8E                         __ptext43 2252  
                       __ptext35 1550                         __ptext27 1EA4  
                       __ptext19 2224                         __ptext52 1FC8  
                       __ptext44 22B0                         __ptext36 1A32  
                       __ptext28 17E4                         __ptext45 2306  
                       __ptext37 228C                         __ptext29 2172  
                       __ptext46 22CE                         __ptext38 1CFE  
                       __ptext47 229E                         __ptext39 1C02  
                       __ptext48 1384                         __ptext49 20BC  
                       _high_isr 0008                 _CW_rotation_flag 004D  
                  __size_of_main 012E                         _lvd_flag 004F  
                       _set_leds 1C02             __end_of_TURN_TIME_ms 1009  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                     _D_CONSTANT 1001                   OpenUSART@spbrg 000F  
             _TURN_SPEED_DIVIDER 1009                         intlevel2 0000  
                    ??_openPORTA 000F                      ??_openPORTB 000F  
                    ??_openPORTD 000F                      ??_openPORTE 000F  
               ___lwmod@dividend 0013                   _GetBackonTrack 1550  
              _openPORTCforUSART 22EE                SetChanADC@channel 0010  
                ??_set_osc_32MHz 000F                      _reset_codes 1F4C  
                     _OSCCONbits 000FD3               ?_openPORTCforUSART 0001  
    __end_of_AllSensorsTriggered 1D74                       _I_CONSTANT 1003  
                       printf@ap 0011              ??_openPORTCforUSART 000F  
                ___lwmod@divisor 0015                  ___lwmod@counter 0017  
       __end_of_motors_brake_all 2152                     ___aldiv@sign 0018  
           __size_of_StatusReset 0006           __end_of_GetBackonTrack 16B6  
                _openPORTCforPWM 22C0        __end_of_openPORTCforUSART 22F4  
                     _STKFULtask 21B2                       _P_CONSTANT 1005  
