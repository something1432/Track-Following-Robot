

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Apr 05 10:20:15 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     _D_CONSTANT:
    72                           	opt stack 0
    73  001001  FFFF               	dw	65535
    74  001003                     __end_of_D_CONSTANT:
    75                           	opt stack 0
    76  001003                     _I_CONSTANT:
    77                           	opt stack 0
    78  001003  04E2               	dw	1250
    79  001005                     __end_of_I_CONSTANT:
    80                           	opt stack 0
    81  001005                     _P_CONSTANT:
    82                           	opt stack 0
    83  001005  0096               	dw	150
    84  001007                     __end_of_P_CONSTANT:
    85                           	opt stack 0
    86  001007                     _TURN_TIME_ms:
    87                           	opt stack 0
    88  001007  0320               	dw	800
    89  001009                     __end_of_TURN_TIME_ms:
    90                           	opt stack 0
    91  001009                     _TURN_SPEED_DIVIDER:
    92                           	opt stack 0
    93  001009  00                 	db	0
    94  00100A                     __end_of_TURN_SPEED_DIVIDER:
    95                           	opt stack 0
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _CCP1CON	set	4029
   103  0000                     _CCP2CON	set	4026
   104  0000                     _CCPR1L	set	4030
   105  0000                     _CCPR2L	set	4027
   106  0000                     _HLVDCONbits	set	4050
   107  0000                     _INTCONbits	set	4082
   108  0000                     _IPR2bits	set	4002
   109  0000                     _OSCCONbits	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIE2bits	set	4000
   113  0000                     _PIR1bits	set	3998
   114  0000                     _PIR2bits	set	4001
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTD	set	3971
   117  0000                     _PORTDbits	set	3971
   118  0000                     _PORTEbits	set	3972
   119  0000                     _PR2	set	4043
   120  0000                     _RCONbits	set	4048
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _STKPTRbits	set	4092
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _T2CON	set	4042
   129  0000                     _T2CONbits	set	4042
   130  0000                     _TMR0H	set	4055
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR2	set	4044
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISE	set	3990
   140  0000                     _TXSTA	set	4012
   141  0000                     _TXSTAbits	set	4012
   142  0000                     _TMR0IF	set	32658
   143  00100A                     STR_1:
   144  00100A  0A                 	db	10
   145  00100B  0D                 	db	13
   146  00100C  4B                 	db	75	;'K'
   147  00100D  77                 	db	119	;'w'
   148  00100E  61                 	db	97	;'a'
   149  00100F  6E                 	db	110	;'n'
   150  001010  74                 	db	116	;'t'
   151  001011  6C                 	db	108	;'l'
   152  001012  65                 	db	101	;'e'
   153  001013  6E                 	db	110	;'n'
   154  001014  20                 	db	32
   155  001015  41                 	db	65	;'A'
   156  001016  50                 	db	80	;'P'
   157  001017  53                 	db	83	;'S'
   158  001018  43                 	db	67	;'C'
   159  001019  31                 	db	49	;'1'
   160  00101A  32                 	db	50	;'2'
   161  00101B  39                 	db	57	;'9'
   162  00101C  39                 	db	57	;'9'
   163  00101D  20                 	db	32
   164  00101E  73                 	db	115	;'s'
   165  00101F  69                 	db	105	;'i'
   166  001020  6D                 	db	109	;'m'
   167  001021  70                 	db	112	;'p'
   168  001022  6C                 	db	108	;'l'
   169  001023  65                 	db	101	;'e'
   170  001024  20                 	db	32
   171  001025  63                 	db	99	;'c'
   172  001026  75                 	db	117	;'u'
   173  001027  72                 	db	114	;'r'
   174  001028  76                 	db	118	;'v'
   175  001029  65                 	db	101	;'e'
   176  00102A  20                 	db	32
   177  00102B  66                 	db	102	;'f'
   178  00102C  6F                 	db	111	;'o'
   179  00102D  6C                 	db	108	;'l'
   180  00102E  6C                 	db	108	;'l'
   181  00102F  6F                 	db	111	;'o'
   182  001030  77                 	db	119	;'w'
   183  001031  65                 	db	101	;'e'
   184  001032  72                 	db	114	;'r'
   185  001033  20                 	db	32
   186  001034  2D                 	db	45
   187  001035  2D                 	db	45
   188  001036  20                 	db	32
   189  001037  77                 	db	119	;'w'
   190  001038  69                 	db	105	;'i'
   191  001039  74                 	db	116	;'t'
   192  00103A  68                 	db	104	;'h'
   193  00103B  20                 	db	32
   194  00103C  65                 	db	101	;'e'
   195  00103D  72                 	db	114	;'r'
   196  00103E  72                 	db	114	;'r'
   197  00103F  6F                 	db	111	;'o'
   198  001040  72                 	db	114	;'r'
   199  001041  20                 	db	32
   200  001042  63                 	db	99	;'c'
   201  001043  6F                 	db	111	;'o'
   202  001044  64                 	db	100	;'d'
   203  001045  65                 	db	101	;'e'
   204  001046  73                 	db	115	;'s'
   205  001047  0A                 	db	10
   206  001048  0D                 	db	13
   207  001049  00                 	db	0
   208  00104A                     STR_6:
   209  00104A  20                 	db	32
   210  00104B  3C                 	db	60	;'<'
   211  00104C  72                 	db	114	;'r'
   212  00104D  65                 	db	101	;'e'
   213  00104E  73                 	db	115	;'s'
   214  00104F  65                 	db	101	;'e'
   215  001050  74                 	db	116	;'t'
   216  001051  3E                 	db	62	;'>'
   217  001052  20                 	db	32
   218  001053  00                 	db	0
   219  001054                     STR_5:
   220  001054  3C                 	db	60	;'<'
   221  001055  53                 	db	83	;'S'
   222  001056  54                 	db	84	;'T'
   223  001057  4B                 	db	75	;'K'
   224  001058  46                 	db	70	;'F'
   225  001059  55                 	db	85	;'U'
   226  00105A  4C                 	db	76	;'L'
   227  00105B  3E                 	db	62	;'>'
   228  00105C  00                 	db	0
   229  00105D                     STR_4:
   230  00105D  3C                 	db	60	;'<'
   231  00105E  57                 	db	87	;'W'
   232  00105F  44                 	db	68	;'D'
   233  001060  54                 	db	84	;'T'
   234  001061  20                 	db	32
   235  001062  54                 	db	84	;'T'
   236  001063  4F                 	db	79	;'O'
   237  001064  3E                 	db	62	;'>'
   238  001065  00                 	db	0
   239  001066                     STR_7:
   240  001066  5C                 	db	92	;'\'
   241  001067  3C                 	db	60	;'<'
   242  001068  4C                 	db	76	;'L'
   243  001069  56                 	db	86	;'V'
   244  00106A  44                 	db	68	;'D'
   245  00106B  3E                 	db	62	;'>'
   246  00106C  00                 	db	0
   247  00106D                     STR_3:
   248  00106D  3C                 	db	60	;'<'
   249  00106E  42                 	db	66	;'B'
   250  00106F  4F                 	db	79	;'O'
   251  001070  52                 	db	82	;'R'
   252  001071  3E                 	db	62	;'>'
   253  001072  00                 	db	0
   254  001073                     STR_2:
   255  001073  3C                 	db	60	;'<'
   256  001074  50                 	db	80	;'P'
   257  001075  4F                 	db	79	;'O'
   258  001076  52                 	db	82	;'R'
   259  001077  3E                 	db	62	;'>'
   260  001078  00                 	db	0
   261                           
   262                           ; #config settings
   263  001079  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  00227E                     __pcinit:
   267                           	opt stack 0
   268  00227E                     start_initialization:
   269                           	opt stack 0
   270  00227E                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (15 bytes)
   274  00227E  EE00  F041         	lfsr	0,__pbssCOMRAM
   275  002282  0E0F               	movlw	15
   276  002284                     clear_0:
   277  002284  6AEE               	clrf	postinc0,c
   278  002286  06E8               	decf	wreg,f,c
   279  002288  E1FD               	bnz	clear_0
   280  00228A                     end_of_initialization:
   281                           	opt stack 0
   282  00228A                     __end_of__initialization:
   283                           	opt stack 0
   284  00228A  0100               	movlb	0
   285  00228C  EF5B  F00B         	goto	_main	;jump to C main() function
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssCOMRAM
   290  000041                     __pbssCOMRAM:
   291                           	opt stack 0
   292  000041                     main@F4195:
   293                           	opt stack 0
   294  000041                     	ds	3
   295  000044                     PID_LineFollowing@D:
   296                           	opt stack 0
   297  000044                     	ds	2
   298  000046                     PID_LineFollowing@delta_velocity:
   299                           	opt stack 0
   300  000046                     	ds	2
   301  000048                     _I:
   302                           	opt stack 0
   303  000048                     	ds	2
   304  00004A                     _threshold:
   305                           	opt stack 0
   306  00004A                     	ds	2
   307  00004C                     _CCW_rotation_flag:
   308                           	opt stack 0
   309  00004C                     	ds	1
   310  00004D                     _CW_rotation_flag:
   311                           	opt stack 0
   312  00004D                     	ds	1
   313  00004E                     _SeeLine:
   314                           	opt stack 0
   315  00004E                     	ds	1
   316  00004F                     _lvd_flag:
   317                           	opt stack 0
   318  00004F                     	ds	1
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000001                     ??_high_isr:
   326  000001                     
   327                           ; 1 bytes @ 0x0
   328  000001                     	ds	14
   329  00000F                     ??_set_leds:
   330  00000F                     ??_SetChanADC:
   331  00000F                     ?_printf:
   332                           	opt stack 0
   333  00000F                     ?_ReadTimer0:
   334                           	opt stack 0
   335  00000F                     ?_ReadADC:
   336                           	opt stack 0
   337  00000F                     ?___aldiv:
   338                           	opt stack 0
   339  00000F                     OpenADC@config2:
   340                           	opt stack 0
   341  00000F                     OpenPWM1@period:
   342                           	opt stack 0
   343  00000F                     OpenPWM2@period:
   344                           	opt stack 0
   345  00000F                     OpenTimer0@config:
   346                           	opt stack 0
   347  00000F                     OpenTimer2@config:
   348                           	opt stack 0
   349  00000F                     set_osc_32MHz@i:
   350                           	opt stack 0
   351  00000F                     printf@f:
   352                           	opt stack 0
   353  00000F                     SetDCPWM1@dutycycle:
   354                           	opt stack 0
   355  00000F                     SetDCPWM2@dutycycle:
   356                           	opt stack 0
   357  00000F                     WriteTimer0@timer0:
   358                           	opt stack 0
   359  00000F                     OpenUSART@spbrg:
   360                           	opt stack 0
   361  00000F                     gtrap@count:
   362                           	opt stack 0
   363  00000F                     ___aldiv@dividend:
   364                           	opt stack 0
   365                           
   366                           ; 4 bytes @ 0xE
   367  00000F                     	ds	1
   368  000010                     OpenADC@portconfig:
   369                           	opt stack 0
   370  000010                     SetChanADC@channel:
   371                           	opt stack 0
   372  000010                     OpenPWM2@ccp2mx:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0xF
   376  000010                     	ds	1
   377  000011                     ??_SetDCPWM2:
   378  000011                     ??_SetDCPWM1:
   379  000011                     ??_OpenADC:
   380  000011                     ??_ReadADC:
   381  000011                     OpenUSART@config:
   382                           	opt stack 0
   383  000011                     printf@ap:
   384                           	opt stack 0
   385  000011                     ReadTimer0@timer:
   386                           	opt stack 0
   387  000011                     WriteTimer0@timer:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x10
   391  000011                     	ds	2
   392  000013                     ?_adc:
   393                           	opt stack 0
   394  000013                     ?___lwdiv:
   395                           	opt stack 0
   396  000013                     ?___lwmod:
   397                           	opt stack 0
   398  000013                     printf@c:
   399                           	opt stack 0
   400  000013                     OpenADC@config:
   401                           	opt stack 0
   402  000013                     SetDCPWM1@DCycle:
   403                           	opt stack 0
   404  000013                     SetDCPWM2@DCycle:
   405                           	opt stack 0
   406  000013                     ___lwdiv@dividend:
   407                           	opt stack 0
   408  000013                     ___lwmod@dividend:
   409                           	opt stack 0
   410  000013                     ___aldiv@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x12
   414  000013                     	ds	1
   415  000014                     PORtask@count1:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x13
   419  000014                     	ds	1
   420  000015                     adc@channel:
   421                           	opt stack 0
   422  000015                     ___lwdiv@divisor:
   423                           	opt stack 0
   424  000015                     ___lwmod@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x14
   428  000015                     	ds	1
   429  000016                     ??_check_sensors:
   430                           
   431                           ; 0 bytes @ 0x15
   432  000016                     	ds	1
   433  000017                     ___aldiv@counter:
   434                           	opt stack 0
   435  000017                     ___lwmod@counter:
   436                           	opt stack 0
   437  000017                     ___lwdiv@quotient:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x16
   441  000017                     	ds	1
   442  000018                     ___aldiv@sign:
   443                           	opt stack 0
   444  000018                     PORtask@count2:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0x17
   448  000018                     	ds	1
   449  000019                     ___lwdiv@counter:
   450                           	opt stack 0
   451  000019                     ___aldiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x18
   455  000019                     	ds	3
   456  00001C                     
   457                           ; 0 bytes @ 0x1B
   458  00001C                     	ds	1
   459  00001D                     ?___wmul:
   460                           	opt stack 0
   461  00001D                     ___wmul@multiplier:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x1C
   465  00001D                     	ds	2
   466  00001F                     ___wmul@multiplicand:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x1E
   470  00001F                     	ds	2
   471  000021                     ___wmul@product:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x20
   475  000021                     	ds	2
   476  000023                     ?___awdiv:
   477                           	opt stack 0
   478  000023                     ___awdiv@dividend:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x22
   482  000023                     	ds	2
   483  000025                     ___awdiv@divisor:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x24
   487  000025                     	ds	2
   488  000027                     ___awdiv@counter:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x26
   492  000027                     	ds	1
   493  000028                     ___awdiv@sign:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x27
   497  000028                     	ds	1
   498  000029                     ___awdiv@quotient:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x28
   502  000029                     	ds	2
   503  00002B                     MotorControl@delta_velocity:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x2A
   507  00002B                     	ds	2
   508  00002D                     MotorControl@speed_divider:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x2C
   512  00002D                     	ds	1
   513  00002E                     ??_MotorControl:
   514                           
   515                           ; 0 bytes @ 0x2D
   516  00002E                     	ds	1
   517  00002F                     MotorControl@left_dir_modifier:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x2E
   521  00002F                     	ds	1
   522  000030                     MotorControl@right_dir_modifier:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x2F
   526  000030                     	ds	1
   527  000031                     MotorControl@left_duty_cycle:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x30
   531  000031                     	ds	2
   532  000033                     MotorControl@right_duty_cycle:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x32
   536  000033                     	ds	2
   537  000035                     ??_SharpTurn:
   538  000035                     PID_LineFollowing@error:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x34
   542  000035                     	ds	1
   543  000036                     SharpTurn@direction:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x35
   547  000036                     	ds	1
   548  000037                     ??_PID_LineFollowing:
   549  000037                     SharpTurn@delta_velocity:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x36
   553  000037                     	ds	2
   554  000039                     GetBackonTrack@error:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x38
   558  000039                     	ds	2
   559  00003B                     ??_GetBackonTrack:
   560                           
   561                           ; 0 bytes @ 0x3A
   562  00003B                     	ds	1
   563  00003C                     GetBackonTrack@i:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x3B
   567  00003C                     	ds	2
   568  00003E                     main@error:
   569                           	opt stack 0
   570                           
   571                           ; 3 bytes @ 0x3D
   572  00003E                     	ds	3
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 27 in file "../Robot Files/main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  error           3   61[COMRAM] char [3]
   586 ;; Return value:  Size  Location     Type
   587 ;;		None               void
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;Total ram usage:        3 bytes
   600 ;; Hardware stack levels required when called:    6
   601 ;; This function calls:
   602 ;;		_AllSensorsTriggered
   603 ;;		_FilterNearbyTrack
   604 ;;		_GetBackonTrack
   605 ;;		_LVtrap
   606 ;;		_OpenTimer0
   607 ;;		_PID_LineFollowing
   608 ;;		_WriteTimer0
   609 ;;		_check_sensors
   610 ;;		_initialization
   611 ;;		_lvd_flag_set
   612 ;;		_printf
   613 ;;		_set_leds
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text0
   620  0016B6                     __ptext0:
   621                           	opt stack 0
   622  0016B6                     _main:
   623                           	opt stack 25
   624                           
   625                           ;main.c: 29: signed char error[3]={0};
   626                           
   627                           ;incstack = 0
   628  0016B6  C041  F03E         	movff	main@F4195,main@error
   629  0016BA  C042  F03F         	movff	main@F4195+1,main@error+1
   630  0016BE  C043  F040         	movff	main@F4195+2,main@error+2
   631                           
   632                           ;main.c: 32: initialization();
   633  0016C2  ECC3  F00D         	call	_initialization	;wreg free
   634                           
   635                           ;main.c: 37: printf("\n\rKwantlen APSC1299 simple curve follower -- with error codes\n\r
      +                          ");
   636  0016C6  0E0A               	movlw	low STR_1
   637  0016C8  6E0F               	movwf	printf@f,c
   638  0016CA  0E10               	movlw	high STR_1
   639  0016CC  6E10               	movwf	printf@f+1,c
   640  0016CE  EC1E  F010         	call	_printf	;wreg free
   641  0016D2  0004               	clrwdt		;# 
   642                           
   643                           ;main.c: 39: threshold = 575u;
   644  0016D4  0E02               	movlw	2
   645  0016D6  6E4B               	movwf	_threshold+1,c
   646  0016D8  0E3F               	movlw	63
   647  0016DA  6E4A               	movwf	_threshold,c
   648                           
   649                           ;main.c: 43: OpenTimer0(0b01111111 & 0b11011111 & 0b10111111 & 0b11110110);
   650  0016DC  0E16               	movlw	22
   651  0016DE  ECA6  F010         	call	_OpenTimer0
   652                           
   653                           ;main.c: 44: WriteTimer0(0);
   654  0016E2  0E00               	movlw	0
   655  0016E4  6E10               	movwf	WriteTimer0@timer0+1,c
   656  0016E6  0E00               	movlw	0
   657  0016E8  6E0F               	movwf	WriteTimer0@timer0,c
   658  0016EA  EC5A  F011         	call	_WriteTimer0	;wreg free
   659                           
   660                           ;main.c: 45: TMR0IF = 0;
   661  0016EE  94F2               	bcf	intcon,2,c	;volatile
   662  0016F0  D000               	goto	l2768
   663  0016F2                     l2768:
   664                           
   665                           ;main.c: 48: {
   666                           ;main.c: 49: check_sensors();
   667  0016F2  EC6B  F00C         	call	_check_sensors	;wreg free
   668                           
   669                           ;main.c: 51: FilterNearbyTrack();
   670  0016F6  ECC6  F010         	call	_FilterNearbyTrack	;wreg free
   671                           
   672                           ;main.c: 58: switch(SeeLine.B)
   673  0016FA  D037               	goto	l2810
   674  0016FC                     l2772:
   675                           
   676                           ;main.c: 61: error[2]=1; break;
   677  0016FC  0E01               	movlw	1
   678  0016FE  D033               	goto	L7
   679  001700                     l2774:
   680                           
   681                           ;main.c: 63: error[2]=2; break;
   682  001700  0E02               	movlw	2
   683  001702  D031               	goto	L7
   684  001704                     l2776:
   685                           
   686                           ;main.c: 65: error[2]=3; break;
   687  001704  0E03               	movlw	3
   688  001706  D02F               	goto	L7
   689  001708                     l2778:
   690                           
   691                           ;main.c: 67: error[2]=4; break;
   692  001708  0E04               	movlw	4
   693  00170A  D02D               	goto	L7
   694  00170C                     l76:
   695                           
   696                           ;main.c: 69: error[2]=-1; break;
   697  00170C  6840               	setf	main@error+2,c
   698  00170E  D05A               	goto	l72
   699  001710                     l2780:
   700                           
   701                           ;main.c: 71: error[2]=-2; break;
   702  001710  0EFE               	movlw	254
   703  001712  D029               	goto	L7
   704  001714                     l2782:
   705                           
   706                           ;main.c: 73: error[2]=-3; break;
   707  001714  0EFD               	movlw	253
   708  001716  D027               	goto	L7
   709  001718                     l2784:
   710                           
   711                           ;main.c: 75: error[2]=-4; break;
   712  001718  0EFC               	movlw	252
   713  00171A  D025               	goto	L7
   714                           
   715                           ;main.c: 76: case 0b00111u:
   716  00171C  D000               	goto	l2786
   717  00171E                     l2786:
   718                           
   719                           ;main.c: 77: case 0b01111u:
   720                           ;main.c: 78: {
   721                           ;main.c: 79: WriteTimer0(32768);
   722  00171E  0E80               	movlw	128
   723  001720  6E10               	movwf	WriteTimer0@timer0+1,c
   724  001722  0E00               	movlw	0
   725  001724  6E0F               	movwf	WriteTimer0@timer0,c
   726  001726  EC5A  F011         	call	_WriteTimer0	;wreg free
   727                           
   728                           ;main.c: 80: TMR0IF = 0;
   729  00172A  94F2               	bcf	intcon,2,c	;volatile
   730                           
   731                           ;main.c: 81: CW_rotation_flag = 1;
   732  00172C  0E01               	movlw	1
   733  00172E  6E4D               	movwf	_CW_rotation_flag,c
   734                           
   735                           ;main.c: 82: CCW_rotation_flag = 0;
   736  001730  0E00               	movlw	0
   737  001732  6E4C               	movwf	_CCW_rotation_flag,c
   738                           
   739                           ;main.c: 83: }break;
   740  001734  D047               	goto	l72
   741                           
   742                           ;main.c: 84: case 0b11100u:
   743  001736  D000               	goto	l2794
   744  001738                     l2794:
   745                           
   746                           ;main.c: 85: case 0b11110u:
   747                           ;main.c: 86: {
   748                           ;main.c: 87: WriteTimer0(32768);
   749  001738  0E80               	movlw	128
   750  00173A  6E10               	movwf	WriteTimer0@timer0+1,c
   751  00173C  0E00               	movlw	0
   752  00173E  6E0F               	movwf	WriteTimer0@timer0,c
   753  001740  EC5A  F011         	call	_WriteTimer0	;wreg free
   754                           
   755                           ;main.c: 88: TMR0IF = 0;
   756  001744  94F2               	bcf	intcon,2,c	;volatile
   757                           
   758                           ;main.c: 89: CCW_rotation_flag = 1;
   759  001746  0E01               	movlw	1
   760  001748  6E4C               	movwf	_CCW_rotation_flag,c
   761                           
   762                           ;main.c: 90: CW_rotation_flag = 0;
   763  00174A  0E00               	movlw	0
   764  00174C  6E4D               	movwf	_CW_rotation_flag,c
   765                           
   766                           ;main.c: 91: }break;
   767  00174E  D03A               	goto	l72
   768  001750                     l2802:
   769                           
   770                           ;main.c: 93: GetBackonTrack(error); break;
   771  001750  0E3E               	movlw	low main@error
   772  001752  6E39               	movwf	GetBackonTrack@error,c
   773  001754  0E00               	movlw	high main@error
   774  001756  6E3A               	movwf	GetBackonTrack@error+1,c
   775  001758  ECA8  F00A         	call	_GetBackonTrack	;wreg free
   776  00175C  D033               	goto	l72
   777  00175E                     l2804:
   778                           
   779                           ;main.c: 95: AllSensorsTriggered(); break;
   780  00175E  ECC1  F00E         	call	_AllSensorsTriggered	;wreg free
   781  001762  D030               	goto	l72
   782  001764                     l2806:
   783                           
   784                           ;main.c: 97: error[2]=0; break;
   785  001764  0E00               	movlw	0
   786  001766                     L7:
   787  001766  6E40               	movwf	main@error+2,c
   788                           
   789                           ;main.c: 98: }
   790  001768  D02D               	goto	l72
   791  00176A                     l2810:
   792  00176A  504E               	movf	_SeeLine,w,c
   793  00176C  0B1F               	andlw	31
   794                           
   795                           ; Switch size 1, requested type "space"
   796                           ; Number of cases is 14, Range of values is 0 to 31
   797                           ; switch strategies available:
   798                           ; Name         Instructions Cycles
   799                           ; simple_byte           43    22 (average)
   800                           ;	Chosen strategy is simple_byte
   801  00176E  0A00               	xorlw	0	; case 0
   802  001770  B4D8               	btfsc	status,2,c
   803  001772  D7EE               	goto	l2802
   804  001774  0A01               	xorlw	1	; case 1
   805  001776  B4D8               	btfsc	status,2,c
   806  001778  D7C7               	goto	l2778
   807  00177A  0A03               	xorlw	3	; case 2
   808  00177C  B4D8               	btfsc	status,2,c
   809  00177E  D7C0               	goto	l2774
   810  001780  0A01               	xorlw	1	; case 3
   811  001782  B4D8               	btfsc	status,2,c
   812  001784  D7BF               	goto	l2776
   813  001786  0A05               	xorlw	5	; case 6
   814  001788  B4D8               	btfsc	status,2,c
   815  00178A  D7B8               	goto	l2772
   816  00178C  0A01               	xorlw	1	; case 7
   817  00178E  B4D8               	btfsc	status,2,c
   818  001790  D7C6               	goto	l2786
   819  001792  0A0F               	xorlw	15	; case 8
   820  001794  B4D8               	btfsc	status,2,c
   821  001796  D7BC               	goto	l2780
   822  001798  0A04               	xorlw	4	; case 12
   823  00179A  B4D8               	btfsc	status,2,c
   824  00179C  D7B7               	goto	l76
   825  00179E  0A03               	xorlw	3	; case 15
   826  0017A0  B4D8               	btfsc	status,2,c
   827  0017A2  D7BD               	goto	l2786
   828  0017A4  0A1F               	xorlw	31	; case 16
   829  0017A6  B4D8               	btfsc	status,2,c
   830  0017A8  D7B7               	goto	l2784
   831  0017AA  0A08               	xorlw	8	; case 24
   832  0017AC  B4D8               	btfsc	status,2,c
   833  0017AE  D7B2               	goto	l2782
   834  0017B0  0A04               	xorlw	4	; case 28
   835  0017B2  B4D8               	btfsc	status,2,c
   836  0017B4  D7C1               	goto	l2794
   837  0017B6  0A02               	xorlw	2	; case 30
   838  0017B8  B4D8               	btfsc	status,2,c
   839  0017BA  D7BE               	goto	l2794
   840  0017BC  0A01               	xorlw	1	; case 31
   841  0017BE  B4D8               	btfsc	status,2,c
   842  0017C0  D7CE               	goto	l2804
   843  0017C2  D7D0               	goto	l2806
   844  0017C4                     l72:
   845                           
   846                           ;main.c: 100: if(TMR0IF)
   847  0017C4  A4F2               	btfss	intcon,2,c	;volatile
   848  0017C6  D005               	goto	l2814
   849                           
   850                           ;main.c: 101: {
   851                           ;main.c: 102: CW_rotation_flag = 0;
   852  0017C8  0E00               	movlw	0
   853  0017CA  6E4D               	movwf	_CW_rotation_flag,c
   854                           
   855                           ;main.c: 103: CCW_rotation_flag = 0;
   856  0017CC  0E00               	movlw	0
   857  0017CE  6E4C               	movwf	_CCW_rotation_flag,c
   858  0017D0  D000               	goto	l2814
   859  0017D2                     l2814:
   860                           
   861                           ;main.c: 104: }
   862                           ;main.c: 106: set_leds();
   863  0017D2  EC0B  F00E         	call	_set_leds	;wreg free
   864                           
   865                           ;main.c: 107: PID_LineFollowing(error);
   866  0017D6  0E3E               	movlw	low main@error
   867  0017D8  6E35               	movwf	PID_LineFollowing@error,c
   868  0017DA  0E00               	movlw	high main@error
   869  0017DC  6E36               	movwf	PID_LineFollowing@error+1,c
   870  0017DE  EC3D  F008         	call	_PID_LineFollowing	;wreg free
   871  0017E2  0004               	clrwdt		;# 
   872                           
   873                           ;main.c: 110: if(lvd_flag_set()) LVtrap();
   874  0017E4  EC72  F011         	call	_lvd_flag_set	;wreg free
   875  0017E8  0900               	iorlw	0
   876  0017EA  B4D8               	btfsc	status,2,c
   877  0017EC  D782               	goto	l2768
   878  0017EE  ECB6  F010         	call	_LVtrap	;wreg free
   879  0017F2  D77F               	goto	l2768
   880  0017F4  EF0C  F000         	goto	start
   881  0017F8                     __end_of_main:
   882                           	opt stack 0
   883                           intcon	equ	0xFF2
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _lvd_flag_set *****************
   889 ;; Defined at:
   890 ;;		line 47 in file "../Robot Files/interrupts.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      unsigned char 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text1
   919  0022E4                     __ptext1:
   920                           	opt stack 0
   921  0022E4                     _lvd_flag_set:
   922                           	opt stack 29
   923                           
   924                           ;interrupts.c: 49: return lvd_flag;
   925                           
   926                           ;incstack = 0
   927  0022E4  504F               	movf	_lvd_flag,w,c
   928  0022E6  D000               	goto	l389
   929  0022E8                     l389:
   930  0022E8  0012               	return		;funcret
   931  0022EA                     __end_of_lvd_flag_set:
   932                           	opt stack 0
   933                           intcon	equ	0xFF2
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _initialization *****************
   939 ;; Defined at:
   940 ;;		line 65 in file "../Robot Files/sumovore.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;		None               void
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    5
   961 ;; This function calls:
   962 ;;		_OpenADC
   963 ;;		_OpenPWM1
   964 ;;		_OpenPWM2
   965 ;;		_OpenTimer2
   966 ;;		_OpenUSART
   967 ;;		_SetDCPWM1
   968 ;;		_SetDCPWM2
   969 ;;		_openLVD
   970 ;;		_openPORTA
   971 ;;		_openPORTB
   972 ;;		_openPORTCforPWM
   973 ;;		_openPORTCforUSART
   974 ;;		_openPORTD
   975 ;;		_openPORTE
   976 ;;		_reset_codes
   977 ;;		_set_osc_32MHz
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984  001B86                     __ptext2:
   985                           	opt stack 0
   986  001B86                     _initialization:
   987                           	opt stack 25
   988                           
   989                           ;sumovore.c: 67: SeeLine.B = 0;
   990                           
   991                           ;incstack = 0
   992  001B86  904E               	bcf	_SeeLine,0,c
   993  001B88  924E               	bcf	_SeeLine,1,c
   994  001B8A  944E               	bcf	_SeeLine,2,c
   995  001B8C  964E               	bcf	_SeeLine,3,c
   996  001B8E  984E               	bcf	_SeeLine,4,c
   997                           
   998                           ;sumovore.c: 68: RCONbits.IPEN = 1;
   999  001B90  8ED0               	bsf	4048,7,c	;volatile
  1000                           
  1001                           ;sumovore.c: 69: INTCONbits.GIEH = 0;
  1002  001B92  9EF2               	bcf	intcon,7,c	;volatile
  1003                           
  1004                           ;sumovore.c: 70: INTCONbits.GIEL = 0;
  1005  001B94  9CF2               	bcf	intcon,6,c	;volatile
  1006                           
  1007                           ;sumovore.c: 72: set_osc_32MHz();
  1008  001B96  EC35  F010         	call	_set_osc_32MHz	;wreg free
  1009                           
  1010                           ;sumovore.c: 73: openPORTCforUSART();
  1011  001B9A  EC7B  F011         	call	_openPORTCforUSART	;wreg free
  1012                           
  1013                           ;sumovore.c: 75: OpenUSART( 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111111
      +                          11 & 0b11111111,
  1014                           ;sumovore.c: 76: 16 );
  1015  001B9E  0E00               	movlw	0
  1016  001BA0  6E10               	movwf	OpenUSART@spbrg+1,c
  1017  001BA2  0E10               	movlw	16
  1018  001BA4  6E0F               	movwf	OpenUSART@spbrg,c
  1019  001BA6  0E3C               	movlw	60
  1020  001BA8  EC89  F00E         	call	_OpenUSART
  1021                           
  1022                           ;sumovore.c: 82: openPORTD();
  1023  001BAC  EC84  F011         	call	_openPORTD	;wreg free
  1024                           
  1025                           ;sumovore.c: 83: PORTD = 0;
  1026  001BB0  0E00               	movlw	0
  1027  001BB2  6E83               	movwf	3971,c	;volatile
  1028                           
  1029                           ;sumovore.c: 85: reset_codes();
  1030  001BB4  ECA7  F00F         	call	_reset_codes	;wreg free
  1031                           
  1032                           ;sumovore.c: 87: openPORTCforPWM();
  1033  001BB8  EC6B  F011         	call	_openPORTCforPWM	;wreg free
  1034                           
  1035                           ;sumovore.c: 89: openPORTA();
  1036  001BBC  EC81  F011         	call	_openPORTA	;wreg free
  1037                           
  1038                           ;sumovore.c: 90: openPORTB();
  1039  001BC0  EC7E  F011         	call	_openPORTB	;wreg free
  1040                           
  1041                           ;sumovore.c: 91: openPORTE();
  1042  001BC4  EC78  F011         	call	_openPORTE	;wreg free
  1043                           
  1044                           ;sumovore.c: 94: openLVD();
  1045  001BC8  EC1D  F011         	call	_openLVD	;wreg free
  1046                           
  1047                           ;sumovore.c: 98: OpenADC(0b10101111 & 0b11111111 & 0b11110111 , 0b10001111 & 0b01111111 
      +                          & 0b11111110 & 0b11111101, 0B1010);
  1048  001BCC  0E0C               	movlw	12
  1049  001BCE  6E0F               	movwf	OpenADC@config2,c
  1050  001BD0  0E0A               	movlw	10
  1051  001BD2  6E10               	movwf	OpenADC@portconfig,c
  1052  001BD4  0EA7               	movlw	167
  1053  001BD6  EC24  F00F         	call	_OpenADC
  1054                           
  1055                           ;sumovore.c: 101: PORTCbits.RC5 = 0b0;
  1056  001BDA  9A82               	bcf	3970,5,c	;volatile
  1057                           
  1058                           ;sumovore.c: 102: PORTEbits.RE0 = 0b0;
  1059  001BDC  9084               	bcf	3972,0,c	;volatile
  1060                           
  1061                           ;sumovore.c: 103: PORTCbits.RC0 = 0b0;
  1062  001BDE  9082               	bcf	3970,0,c	;volatile
  1063                           
  1064                           ;sumovore.c: 104: PORTEbits.RE1 = 0b0;
  1065  001BE0  9284               	bcf	3972,1,c	;volatile
  1066                           
  1067                           ;sumovore.c: 109: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
  1068  001BE2  0E06               	movlw	6
  1069  001BE4  EC01  F011         	call	_OpenTimer2
  1070                           
  1071                           ;sumovore.c: 110: OpenPWM1(199);
  1072  001BE8  0EC7               	movlw	199
  1073  001BEA  EC48  F011         	call	_OpenPWM1
  1074                           
  1075                           ;sumovore.c: 112: OpenPWM2(199);
  1076  001BEE  0EC7               	movlw	199
  1077  001BF0  EC02  F010         	call	_OpenPWM2
  1078                           
  1079                           ;sumovore.c: 113: SetDCPWM1(0);
  1080  001BF4  0E00               	movlw	0
  1081  001BF6  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  1082  001BF8  0E00               	movlw	0
  1083  001BFA  6E0F               	movwf	SetDCPWM1@dutycycle,c
  1084  001BFC  ECE5  F00F         	call	_SetDCPWM1	;wreg free
  1085                           
  1086                           ;sumovore.c: 116: SetDCPWM2(0);
  1087  001C00  0E00               	movlw	0
  1088  001C02  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  1089  001C04  0E00               	movlw	0
  1090  001C06  6E0F               	movwf	SetDCPWM2@dutycycle,c
  1091  001C08  ECC8  F00F         	call	_SetDCPWM2	;wreg free
  1092                           
  1093                           ;sumovore.c: 117: threshold = 512u;
  1094  001C0C  0E02               	movlw	2
  1095  001C0E  6E4B               	movwf	_threshold+1,c
  1096  001C10  0E00               	movlw	0
  1097  001C12  6E4A               	movwf	_threshold,c
  1098  001C14  0012               	return		;funcret
  1099  001C16                     __end_of_initialization:
  1100                           	opt stack 0
  1101                           intcon	equ	0xFF2
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _set_osc_32MHz *****************
  1107 ;; Defined at:
  1108 ;;		line 18 in file "../Robot Files/osc.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  i               2   14[COMRAM] int 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;		None               void
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;Total ram usage:        2 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_initialization
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text3
  1137  00206A                     __ptext3:
  1138                           	opt stack 0
  1139  00206A                     _set_osc_32MHz:
  1140                           	opt stack 28
  1141                           
  1142                           ;osc.c: 20: int i;
  1143                           ;osc.c: 22: OSCCONbits.IRCF2 = 1;
  1144                           
  1145                           ;incstack = 0
  1146  00206A  8CD3               	bsf	4051,6,c	;volatile
  1147                           
  1148                           ;osc.c: 23: OSCCONbits.IRCF1 = 1;
  1149  00206C  8AD3               	bsf	4051,5,c	;volatile
  1150                           
  1151                           ;osc.c: 24: OSCCONbits.IRCF0 = 1;
  1152  00206E  88D3               	bsf	4051,4,c	;volatile
  1153                           
  1154                           ;osc.c: 26: OSCTUNEbits.PLLEN = 1;
  1155  002070  8C9B               	bsf	3995,6,c	;volatile
  1156                           
  1157                           ;osc.c: 28: for(i=0;i<500;i++);
  1158  002072  0E00               	movlw	0
  1159  002074  6E10               	movwf	set_osc_32MHz@i+1,c
  1160  002076  0E00               	movlw	0
  1161  002078  6E0F               	movwf	set_osc_32MHz@i,c
  1162  00207A                     l1588:
  1163  00207A  BE10               	btfsc	set_osc_32MHz@i+1,7,c
  1164  00207C  D008               	goto	l1592
  1165  00207E  0EF4               	movlw	244
  1166  002080  5C0F               	subwf	set_osc_32MHz@i,w,c
  1167  002082  0E01               	movlw	1
  1168  002084  5810               	subwfb	set_osc_32MHz@i+1,w,c
  1169  002086  B0D8               	btfsc	status,0,c
  1170  002088  D005               	goto	l398
  1171  00208A  D001               	goto	l1592
  1172  00208C  D003               	goto	l398
  1173  00208E                     l1592:
  1174  00208E  4A0F               	infsnz	set_osc_32MHz@i,f,c
  1175  002090  2A10               	incf	set_osc_32MHz@i+1,f,c
  1176  002092  D7F3               	goto	l1588
  1177  002094                     l398:
  1178  002094  0012               	return		;funcret
  1179  002096                     __end_of_set_osc_32MHz:
  1180                           	opt stack 0
  1181                           intcon	equ	0xFF2
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _reset_codes *****************
  1187 ;; Defined at:
  1188 ;;		line 282 in file "../Robot Files/sumovore.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;		None               void
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    4
  1209 ;; This function calls:
  1210 ;;		_BORtask
  1211 ;;		_PORtask
  1212 ;;		_RESETtask
  1213 ;;		_STKFULtask
  1214 ;;		_WDTtask
  1215 ;;		_isBOR
  1216 ;;		_isPOR
  1217 ;;		_isWDTTO
  1218 ;; This function is called by:
  1219 ;;		_initialization
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text4
  1224  001F4E                     __ptext4:
  1225                           	opt stack 0
  1226  001F4E                     _reset_codes:
  1227                           	opt stack 25
  1228                           
  1229                           ;sumovore.c: 284: if( isPOR() ) PORtask();
  1230                           
  1231                           ;incstack = 0
  1232  001F4E  EC72  F010         	call	_isPOR	;wreg free
  1233  001F52  0900               	iorlw	0
  1234  001F54  B4D8               	btfsc	status,2,c
  1235  001F56  D003               	goto	l2464
  1236  001F58  ECCD  F00C         	call	_PORtask	;wreg free
  1237  001F5C  D018               	goto	l329
  1238  001F5E                     l2464:
  1239                           
  1240                           ;sumovore.c: 287: else if (isBOR() ) BORtask();
  1241  001F5E  EC29  F011         	call	_isBOR	;wreg free
  1242  001F62  0900               	iorlw	0
  1243  001F64  B4D8               	btfsc	status,2,c
  1244  001F66  D003               	goto	l2468
  1245  001F68  EC96  F010         	call	_BORtask	;wreg free
  1246  001F6C  D010               	goto	l329
  1247  001F6E                     l2468:
  1248                           
  1249                           ;sumovore.c: 289: else if(isWDTTO() ) WDTtask();
  1250  001F6E  EC5F  F010         	call	_isWDTTO	;wreg free
  1251  001F72  0900               	iorlw	0
  1252  001F74  B4D8               	btfsc	status,2,c
  1253  001F76  D003               	goto	l325
  1254  001F78  ECE5  F010         	call	_WDTtask	;wreg free
  1255  001F7C  D008               	goto	l329
  1256  001F7E                     l325:
  1257                           
  1258                           ;sumovore.c: 293: else if(STKPTRbits.STKFUL) STKFULtask();
  1259  001F7E  AEFC               	btfss	stkptr,7,c	;volatile
  1260  001F80  D003               	goto	l2474
  1261  001F82  ECD6  F010         	call	_STKFULtask	;wreg free
  1262  001F86  D003               	goto	l329
  1263  001F88                     l2474:
  1264                           
  1265                           ;sumovore.c: 297: else RESETtask();
  1266  001F88  ECF3  F010         	call	_RESETtask	;wreg free
  1267  001F8C  D000               	goto	l329
  1268  001F8E                     l329:
  1269  001F8E  0012               	return		;funcret
  1270  001F90                     __end_of_reset_codes:
  1271                           	opt stack 0
  1272                           stkptr	equ	0xFFC
  1273                           intcon	equ	0xFF2
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           status	equ	0xFD8
  1277                           
  1278 ;; *************** function _isWDTTO *****************
  1279 ;; Defined at:
  1280 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\iswdtto.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_reset_codes
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text5
  1309  0020BE                     __ptext5:
  1310                           	opt stack 0
  1311  0020BE                     _isWDTTO:
  1312                           	opt stack 27
  1313                           
  1314                           ;incstack = 0
  1315  0020BE  A2D0               	btfss	4048,1,c	;volatile
  1316  0020C0  D00E               	goto	l1494
  1317  0020C2  A4D0               	btfss	4048,2,c	;volatile
  1318  0020C4  D00A               	goto	l1490
  1319  0020C6  A0D0               	btfss	4048,0,c	;volatile
  1320  0020C8  D006               	goto	l1486
  1321  0020CA  A6D0               	btfss	4048,3,c	;volatile
  1322  0020CC  D002               	goto	l1482
  1323  0020CE  D003               	goto	l1486
  1324  0020D0  D008               	goto	l610
  1325  0020D2                     l1482:
  1326  0020D2  0E01               	movlw	1
  1327  0020D4  D006               	goto	l610
  1328  0020D6                     l1486:
  1329  0020D6  0E00               	movlw	0
  1330  0020D8  D004               	goto	l610
  1331  0020DA                     l1490:
  1332  0020DA  0E00               	movlw	0
  1333  0020DC  D002               	goto	l610
  1334  0020DE                     l1494:
  1335  0020DE  0E00               	movlw	0
  1336  0020E0  D000               	goto	l610
  1337  0020E2                     l610:
  1338  0020E2  0012               	return		;funcret
  1339  0020E4                     __end_of_isWDTTO:
  1340                           	opt stack 0
  1341                           stkptr	equ	0xFFC
  1342                           intcon	equ	0xFF2
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function _isPOR *****************
  1348 ;; Defined at:
  1349 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\ispor.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      unsigned char 
  1356 ;; Registers used:
  1357 ;;		wreg
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;Total ram usage:        0 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_reset_codes
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text6
  1378  0020E4                     __ptext6:
  1379                           	opt stack 0
  1380  0020E4                     _isPOR:
  1381                           	opt stack 27
  1382                           
  1383                           ;incstack = 0
  1384  0020E4  B2D0               	btfsc	4048,1,c	;volatile
  1385  0020E6  D00E               	goto	l1402
  1386  0020E8  A4D0               	btfss	4048,2,c	;volatile
  1387  0020EA  D00A               	goto	l1398
  1388  0020EC  B0D0               	btfsc	4048,0,c	;volatile
  1389  0020EE  D006               	goto	l1394
  1390  0020F0  B6D0               	btfsc	4048,3,c	;volatile
  1391  0020F2  D002               	goto	l1390
  1392  0020F4  D003               	goto	l1394
  1393  0020F6  D008               	goto	l601
  1394  0020F8                     l1390:
  1395  0020F8  0E01               	movlw	1
  1396  0020FA  D006               	goto	l601
  1397  0020FC                     l1394:
  1398  0020FC  0E00               	movlw	0
  1399  0020FE  D004               	goto	l601
  1400  002100                     l1398:
  1401  002100  0E00               	movlw	0
  1402  002102  D002               	goto	l601
  1403  002104                     l1402:
  1404  002104  0E00               	movlw	0
  1405  002106  D000               	goto	l601
  1406  002108                     l601:
  1407  002108  0012               	return		;funcret
  1408  00210A                     __end_of_isPOR:
  1409                           	opt stack 0
  1410                           stkptr	equ	0xFFC
  1411                           intcon	equ	0xFF2
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           status	equ	0xFD8
  1415                           
  1416 ;; *************** function _isBOR *****************
  1417 ;; Defined at:
  1418 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\isbor.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      unsigned char 
  1425 ;; Registers used:
  1426 ;;		wreg
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_reset_codes
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  002252                     __ptext7:
  1448                           	opt stack 0
  1449  002252                     _isBOR:
  1450                           	opt stack 27
  1451                           
  1452                           ;incstack = 0
  1453  002252  B0D0               	btfsc	4048,0,c	;volatile
  1454  002254  D006               	goto	l1450
  1455  002256  B2D0               	btfsc	4048,1,c	;volatile
  1456  002258  D002               	goto	l1446
  1457  00225A  D003               	goto	l1450
  1458  00225C  D004               	goto	l592
  1459  00225E                     l1446:
  1460  00225E  0E01               	movlw	1
  1461  002260  D002               	goto	l592
  1462  002262                     l1450:
  1463  002262  0E00               	movlw	0
  1464  002264  D000               	goto	l592
  1465  002266                     l592:
  1466  002266  0012               	return		;funcret
  1467  002268                     __end_of_isBOR:
  1468                           	opt stack 0
  1469                           stkptr	equ	0xFFC
  1470                           intcon	equ	0xFF2
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function _WDTtask *****************
  1476 ;; Defined at:
  1477 ;;		line 370 in file "../Robot Files/sumovore.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;		None               void
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    3
  1498 ;; This function calls:
  1499 ;;		_gtrap
  1500 ;;		_printf
  1501 ;; This function is called by:
  1502 ;;		_reset_codes
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text8
  1507  0021CA                     __ptext8:
  1508                           	opt stack 0
  1509  0021CA                     _WDTtask:
  1510                           	opt stack 25
  1511                           
  1512                           ;sumovore.c: 372: printf("<WDT TO>");
  1513                           
  1514                           ;incstack = 0
  1515  0021CA  0E5D               	movlw	low STR_4
  1516  0021CC  6E0F               	movwf	printf@f,c
  1517  0021CE  0E10               	movlw	high STR_4
  1518  0021D0  6E10               	movwf	printf@f+1,c
  1519  0021D2  EC1E  F010         	call	_printf	;wreg free
  1520                           
  1521                           ;sumovore.c: 373: PORTDbits.RD0=!1;
  1522  0021D6  9083               	bcf	3971,0,c	;volatile
  1523                           
  1524                           ;sumovore.c: 374: PORTDbits.RD1=!0;
  1525  0021D8  8283               	bsf	3971,1,c	;volatile
  1526                           
  1527                           ;sumovore.c: 375: PORTDbits.RD2=!1;
  1528  0021DA  9483               	bcf	3971,2,c	;volatile
  1529                           
  1530                           ;sumovore.c: 376: PORTDbits.RD3=!0;
  1531  0021DC  8683               	bsf	3971,3,c	;volatile
  1532                           
  1533                           ;sumovore.c: 377: PORTDbits.RD4=!0;
  1534  0021DE  8883               	bsf	3971,4,c	;volatile
  1535                           
  1536                           ;sumovore.c: 378: gtrap();
  1537  0021E0  ECF3  F00E         	call	_gtrap	;wreg free
  1538  0021E4  0012               	return		;funcret
  1539  0021E6                     __end_of_WDTtask:
  1540                           	opt stack 0
  1541                           stkptr	equ	0xFFC
  1542                           intcon	equ	0xFF2
  1543                           postinc0	equ	0xFEE
  1544                           wreg	equ	0xFE8
  1545                           status	equ	0xFD8
  1546                           
  1547 ;; *************** function _STKFULtask *****************
  1548 ;; Defined at:
  1549 ;;		line 389 in file "../Robot Files/sumovore.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;		None               void
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		_gtrap
  1572 ;;		_printf
  1573 ;; This function is called by:
  1574 ;;		_reset_codes
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text9
  1579  0021AC                     __ptext9:
  1580                           	opt stack 0
  1581  0021AC                     _STKFULtask:
  1582                           	opt stack 25
  1583                           
  1584                           ;sumovore.c: 392: STKPTRbits.STKFUL = 0;
  1585                           
  1586                           ;incstack = 0
  1587  0021AC  9EFC               	bcf	stkptr,7,c	;volatile
  1588                           
  1589                           ;sumovore.c: 393: printf("<STKFUL>");
  1590  0021AE  0E54               	movlw	low STR_5
  1591  0021B0  6E0F               	movwf	printf@f,c
  1592  0021B2  0E10               	movlw	high STR_5
  1593  0021B4  6E10               	movwf	printf@f+1,c
  1594  0021B6  EC1E  F010         	call	_printf	;wreg free
  1595                           
  1596                           ;sumovore.c: 394: PORTDbits.RD0=!1;
  1597  0021BA  9083               	bcf	3971,0,c	;volatile
  1598                           
  1599                           ;sumovore.c: 395: PORTDbits.RD1=!0;
  1600  0021BC  8283               	bsf	3971,1,c	;volatile
  1601                           
  1602                           ;sumovore.c: 396: PORTDbits.RD2=!1;
  1603  0021BE  9483               	bcf	3971,2,c	;volatile
  1604                           
  1605                           ;sumovore.c: 397: PORTDbits.RD3=!0;
  1606  0021C0  8683               	bsf	3971,3,c	;volatile
  1607                           
  1608                           ;sumovore.c: 398: PORTDbits.RD4=!1;
  1609  0021C2  9883               	bcf	3971,4,c	;volatile
  1610                           
  1611                           ;sumovore.c: 399: gtrap();
  1612  0021C4  ECF3  F00E         	call	_gtrap	;wreg free
  1613  0021C8  0012               	return		;funcret
  1614  0021CA                     __end_of_STKFULtask:
  1615                           	opt stack 0
  1616                           stkptr	equ	0xFFC
  1617                           intcon	equ	0xFF2
  1618                           postinc0	equ	0xFEE
  1619                           wreg	equ	0xFE8
  1620                           status	equ	0xFD8
  1621                           
  1622 ;; *************** function _RESETtask *****************
  1623 ;; Defined at:
  1624 ;;		line 405 in file "../Robot Files/sumovore.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;		None               void
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		_gtrap
  1647 ;;		_printf
  1648 ;; This function is called by:
  1649 ;;		_reset_codes
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text10
  1654  0021E6                     __ptext10:
  1655                           	opt stack 0
  1656  0021E6                     _RESETtask:
  1657                           	opt stack 25
  1658                           
  1659                           ;sumovore.c: 408: printf(" <reset> ");
  1660                           
  1661                           ;incstack = 0
  1662  0021E6  0E4A               	movlw	low STR_6
  1663  0021E8  6E0F               	movwf	printf@f,c
  1664  0021EA  0E10               	movlw	high STR_6
  1665  0021EC  6E10               	movwf	printf@f+1,c
  1666  0021EE  EC1E  F010         	call	_printf	;wreg free
  1667                           
  1668                           ;sumovore.c: 409: PORTDbits.RD0=!1;
  1669  0021F2  9083               	bcf	3971,0,c	;volatile
  1670                           
  1671                           ;sumovore.c: 410: PORTDbits.RD1=!0;
  1672  0021F4  8283               	bsf	3971,1,c	;volatile
  1673                           
  1674                           ;sumovore.c: 411: PORTDbits.RD2=!1;
  1675  0021F6  9483               	bcf	3971,2,c	;volatile
  1676                           
  1677                           ;sumovore.c: 412: PORTDbits.RD3=!1;
  1678  0021F8  9683               	bcf	3971,3,c	;volatile
  1679                           
  1680                           ;sumovore.c: 413: PORTDbits.RD4=!1;
  1681  0021FA  9883               	bcf	3971,4,c	;volatile
  1682                           
  1683                           ;sumovore.c: 414: gtrap();
  1684  0021FC  ECF3  F00E         	call	_gtrap	;wreg free
  1685  002200  0012               	return		;funcret
  1686  002202                     __end_of_RESETtask:
  1687                           	opt stack 0
  1688                           stkptr	equ	0xFFC
  1689                           intcon	equ	0xFF2
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function _PORtask *****************
  1695 ;; Defined at:
  1696 ;;		line 307 in file "../Robot Files/sumovore.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  count2          4   23[COMRAM] unsigned long 
  1701 ;;  count1          4   19[COMRAM] unsigned long 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;		None               void
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        8 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    3
  1718 ;; This function calls:
  1719 ;;		_StatusReset
  1720 ;;		_printf
  1721 ;; This function is called by:
  1722 ;;		_reset_codes
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text11
  1727  00199A                     __ptext11:
  1728                           	opt stack 0
  1729  00199A                     _PORtask:
  1730                           	opt stack 25
  1731                           
  1732                           ;sumovore.c: 309: unsigned long count1=0, count2=0;
  1733                           
  1734                           ;incstack = 0
  1735  00199A  0E00               	movlw	0
  1736  00199C  6E14               	movwf	PORtask@count1,c
  1737  00199E  0E00               	movlw	0
  1738  0019A0  6E15               	movwf	PORtask@count1+1,c
  1739  0019A2  0E00               	movlw	0
  1740  0019A4  6E16               	movwf	PORtask@count1+2,c
  1741  0019A6  0E00               	movlw	0
  1742  0019A8  6E17               	movwf	PORtask@count1+3,c
  1743  0019AA  0E00               	movlw	0
  1744  0019AC  6E18               	movwf	PORtask@count2,c
  1745  0019AE  0E00               	movlw	0
  1746  0019B0  6E19               	movwf	PORtask@count2+1,c
  1747  0019B2  0E00               	movlw	0
  1748  0019B4  6E1A               	movwf	PORtask@count2+2,c
  1749  0019B6  0E00               	movlw	0
  1750  0019B8  6E1B               	movwf	PORtask@count2+3,c
  1751                           
  1752                           ;sumovore.c: 310: StatusReset();
  1753  0019BA  EC75  F011         	call	_StatusReset	;wreg free
  1754                           
  1755                           ;sumovore.c: 312: printf("<POR>");
  1756  0019BE  0E73               	movlw	low STR_2
  1757  0019C0  6E0F               	movwf	printf@f,c
  1758  0019C2  0E10               	movlw	high STR_2
  1759  0019C4  6E10               	movwf	printf@f+1,c
  1760  0019C6  EC1E  F010         	call	_printf	;wreg free
  1761                           
  1762                           ;sumovore.c: 313: PORTDbits.RD0=!1;
  1763  0019CA  9083               	bcf	3971,0,c	;volatile
  1764                           
  1765                           ;sumovore.c: 314: PORTDbits.RD1=!0;
  1766  0019CC  8283               	bsf	3971,1,c	;volatile
  1767                           
  1768                           ;sumovore.c: 315: PORTDbits.RD2=!0;
  1769  0019CE  8483               	bsf	3971,2,c	;volatile
  1770                           
  1771                           ;sumovore.c: 316: PORTDbits.RD3=!0;
  1772  0019D0  8683               	bsf	3971,3,c	;volatile
  1773                           
  1774                           ;sumovore.c: 317: PORTDbits.RD4=!0;
  1775  0019D2  8883               	bsf	3971,4,c	;volatile
  1776                           
  1777                           ;sumovore.c: 318: while(count1<10u)
  1778  0019D4  D02D               	goto	l332
  1779  0019D6                     l333:
  1780  0019D6  0004               	clrwdt		;# 
  1781                           
  1782                           ;sumovore.c: 321: if (count2==30000u)
  1783  0019D8  0E30               	movlw	48
  1784  0019DA  1818               	xorwf	PORtask@count2,w,c
  1785  0019DC  E117               	bnz	l2302
  1786  0019DE  0E75               	movlw	117
  1787  0019E0  1819               	xorwf	PORtask@count2+1,w,c
  1788  0019E2  101A               	iorwf	PORtask@count2+2,w,c
  1789  0019E4  101B               	iorwf	PORtask@count2+3,w,c
  1790  0019E6  A4D8               	btfss	status,2,c
  1791  0019E8  D011               	goto	l2302
  1792                           
  1793                           ;sumovore.c: 322: {
  1794                           ;sumovore.c: 323: count2=0;
  1795  0019EA  0E00               	movlw	0
  1796  0019EC  6E18               	movwf	PORtask@count2,c
  1797  0019EE  0E00               	movlw	0
  1798  0019F0  6E19               	movwf	PORtask@count2+1,c
  1799  0019F2  0E00               	movlw	0
  1800  0019F4  6E1A               	movwf	PORtask@count2+2,c
  1801  0019F6  0E00               	movlw	0
  1802  0019F8  6E1B               	movwf	PORtask@count2+3,c
  1803                           
  1804                           ;sumovore.c: 324: count1++;
  1805  0019FA  0E01               	movlw	1
  1806  0019FC  2614               	addwf	PORtask@count1,f,c
  1807  0019FE  0E00               	movlw	0
  1808  001A00  2215               	addwfc	PORtask@count1+1,f,c
  1809  001A02  2216               	addwfc	PORtask@count1+2,f,c
  1810  001A04  2217               	addwfc	PORtask@count1+3,f,c
  1811                           
  1812                           ;sumovore.c: 325: PORTDbits.RD0=!1;
  1813  001A06  9083               	bcf	3971,0,c	;volatile
  1814                           
  1815                           ;sumovore.c: 326: PORTDbits.RD1=!0;
  1816  001A08  8283               	bsf	3971,1,c	;volatile
  1817                           
  1818                           ;sumovore.c: 327: }
  1819  001A0A  D00C               	goto	l2306
  1820  001A0C                     l2302:
  1821                           
  1822                           ;sumovore.c: 328: else if (count2==15000u)
  1823  001A0C  0E98               	movlw	152
  1824  001A0E  1818               	xorwf	PORtask@count2,w,c
  1825  001A10  E109               	bnz	l2306
  1826  001A12  0E3A               	movlw	58
  1827  001A14  1819               	xorwf	PORtask@count2+1,w,c
  1828  001A16  101A               	iorwf	PORtask@count2+2,w,c
  1829  001A18  101B               	iorwf	PORtask@count2+3,w,c
  1830  001A1A  A4D8               	btfss	status,2,c
  1831  001A1C  D003               	goto	l2306
  1832                           
  1833                           ;sumovore.c: 329: {
  1834                           ;sumovore.c: 330: PORTDbits.RD0=!0;
  1835  001A1E  8083               	bsf	3971,0,c	;volatile
  1836                           
  1837                           ;sumovore.c: 331: PORTDbits.RD1=!1;
  1838  001A20  9283               	bcf	3971,1,c	;volatile
  1839  001A22  D000               	goto	l2306
  1840  001A24                     l2306:
  1841                           
  1842                           ;sumovore.c: 332: }
  1843                           ;sumovore.c: 333: count2++;
  1844  001A24  0E01               	movlw	1
  1845  001A26  2618               	addwf	PORtask@count2,f,c
  1846  001A28  0E00               	movlw	0
  1847  001A2A  2219               	addwfc	PORtask@count2+1,f,c
  1848  001A2C  221A               	addwfc	PORtask@count2+2,f,c
  1849  001A2E  221B               	addwfc	PORtask@count2+3,f,c
  1850  001A30                     l332:
  1851  001A30  5017               	movf	PORtask@count1+3,w,c
  1852  001A32  1016               	iorwf	PORtask@count1+2,w,c
  1853  001A34  1015               	iorwf	PORtask@count1+1,w,c
  1854  001A36  E106               	bnz	l338
  1855  001A38  0E0A               	movlw	10
  1856  001A3A  5C14               	subwf	PORtask@count1,w,c
  1857  001A3C  B0D8               	btfsc	status,0,c
  1858  001A3E  D002               	goto	l338
  1859  001A40  D7CA               	goto	l333
  1860  001A42  D000               	goto	l338
  1861  001A44                     l338:
  1862  001A44  0012               	return		;funcret
  1863  001A46                     __end_of_PORtask:
  1864                           	opt stack 0
  1865                           stkptr	equ	0xFFC
  1866                           intcon	equ	0xFF2
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _BORtask *****************
  1872 ;; Defined at:
  1873 ;;		line 349 in file "../Robot Files/sumovore.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;		None               void
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		_StatusReset
  1896 ;;		_gtrap
  1897 ;;		_printf
  1898 ;; This function is called by:
  1899 ;;		_reset_codes
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text12
  1904  00212C                     __ptext12:
  1905                           	opt stack 0
  1906  00212C                     _BORtask:
  1907                           	opt stack 25
  1908                           
  1909                           ;sumovore.c: 351: StatusReset();
  1910                           
  1911                           ;incstack = 0
  1912  00212C  EC75  F011         	call	_StatusReset	;wreg free
  1913                           
  1914                           ;sumovore.c: 353: printf("<BOR>");
  1915  002130  0E6D               	movlw	low STR_3
  1916  002132  6E0F               	movwf	printf@f,c
  1917  002134  0E10               	movlw	high STR_3
  1918  002136  6E10               	movwf	printf@f+1,c
  1919  002138  EC1E  F010         	call	_printf	;wreg free
  1920                           
  1921                           ;sumovore.c: 354: PORTDbits.RD0=!0;
  1922  00213C  8083               	bsf	3971,0,c	;volatile
  1923                           
  1924                           ;sumovore.c: 355: PORTDbits.RD1=!0;
  1925  00213E  8283               	bsf	3971,1,c	;volatile
  1926                           
  1927                           ;sumovore.c: 356: PORTDbits.RD2=!0;
  1928  002140  8483               	bsf	3971,2,c	;volatile
  1929                           
  1930                           ;sumovore.c: 357: PORTDbits.RD3=!0;
  1931  002142  8683               	bsf	3971,3,c	;volatile
  1932                           
  1933                           ;sumovore.c: 358: PORTDbits.RD4=!1;
  1934  002144  9883               	bcf	3971,4,c	;volatile
  1935                           
  1936                           ;sumovore.c: 359: gtrap();
  1937  002146  ECF3  F00E         	call	_gtrap	;wreg free
  1938  00214A  0012               	return		;funcret
  1939  00214C                     __end_of_BORtask:
  1940                           	opt stack 0
  1941                           stkptr	equ	0xFFC
  1942                           intcon	equ	0xFF2
  1943                           postinc0	equ	0xFEE
  1944                           wreg	equ	0xFE8
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _StatusReset *****************
  1948 ;; Defined at:
  1949 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\reset\statrst.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;		None               void
  1956 ;; Registers used:
  1957 ;;		None
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        0 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_PORtask
  1974 ;;		_BORtask
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text13
  1979  0022EA                     __ptext13:
  1980                           	opt stack 0
  1981  0022EA                     _StatusReset:
  1982                           	opt stack 26
  1983                           
  1984                           ;incstack = 0
  1985  0022EA  82D0               	bsf	4048,1,c	;volatile
  1986  0022EC  80D0               	bsf	4048,0,c	;volatile
  1987  0022EE  0012               	return		;funcret
  1988  0022F0                     __end_of_StatusReset:
  1989                           	opt stack 0
  1990                           stkptr	equ	0xFFC
  1991                           intcon	equ	0xFF2
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           status	equ	0xFD8
  1995                           
  1996 ;; *************** function _openPORTE *****************
  1997 ;; Defined at:
  1998 ;;		line 178 in file "../Robot Files/sumovore.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;		None               void
  2005 ;; Registers used:
  2006 ;;		wreg, status,2
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_initialization
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text14
  2027  0022F0                     __ptext14:
  2028                           	opt stack 0
  2029  0022F0                     _openPORTE:
  2030                           	opt stack 28
  2031                           
  2032                           ;sumovore.c: 180: TRISE = 0b000;
  2033                           
  2034                           ;incstack = 0
  2035  0022F0  0E00               	movlw	0
  2036  0022F2  6E96               	movwf	3990,c	;volatile
  2037  0022F4  0012               	return		;funcret
  2038  0022F6                     __end_of_openPORTE:
  2039                           	opt stack 0
  2040                           stkptr	equ	0xFFC
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _openPORTCforUSART *****************
  2047 ;; Defined at:
  2048 ;;		line 124 in file "../Robot Files/sumovore.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;		None               void
  2055 ;; Registers used:
  2056 ;;		None
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_initialization
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text15
  2077  0022F6                     __ptext15:
  2078                           	opt stack 0
  2079  0022F6                     _openPORTCforUSART:
  2080                           	opt stack 28
  2081                           
  2082                           ;sumovore.c: 126: TRISCbits.TRISC6 = 0;
  2083                           
  2084                           ;incstack = 0
  2085  0022F6  9C94               	bcf	3988,6,c	;volatile
  2086                           
  2087                           ;sumovore.c: 127: TRISCbits.TRISC7 = 1;
  2088  0022F8  8E94               	bsf	3988,7,c	;volatile
  2089  0022FA  0012               	return		;funcret
  2090  0022FC                     __end_of_openPORTCforUSART:
  2091                           	opt stack 0
  2092                           stkptr	equ	0xFFC
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _openPORTCforPWM *****************
  2099 ;; Defined at:
  2100 ;;		line 133 in file "../Robot Files/sumovore.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		None
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_initialization
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text16
  2129  0022D6                     __ptext16:
  2130                           	opt stack 0
  2131  0022D6                     _openPORTCforPWM:
  2132                           	opt stack 28
  2133                           
  2134                           ;sumovore.c: 135: TRISCbits.TRISC0 = 0;
  2135                           
  2136                           ;incstack = 0
  2137  0022D6  9094               	bcf	3988,0,c	;volatile
  2138                           
  2139                           ;sumovore.c: 136: TRISCbits.TRISC1 = 0;
  2140  0022D8  9294               	bcf	3988,1,c	;volatile
  2141                           
  2142                           ;sumovore.c: 137: TRISCbits.TRISC2 = 0;
  2143  0022DA  9494               	bcf	3988,2,c	;volatile
  2144                           
  2145                           ;sumovore.c: 138: TRISCbits.TRISC3 = 0;
  2146  0022DC  9694               	bcf	3988,3,c	;volatile
  2147                           
  2148                           ;sumovore.c: 139: TRISCbits.TRISC4 = 0;
  2149  0022DE  9894               	bcf	3988,4,c	;volatile
  2150                           
  2151                           ;sumovore.c: 140: TRISCbits.TRISC5 = 0;
  2152  0022E0  9A94               	bcf	3988,5,c	;volatile
  2153  0022E2  0012               	return		;funcret
  2154  0022E4                     __end_of_openPORTCforPWM:
  2155                           	opt stack 0
  2156                           stkptr	equ	0xFFC
  2157                           intcon	equ	0xFF2
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           status	equ	0xFD8
  2161                           
  2162 ;; *************** function _openPORTB *****************
  2163 ;; Defined at:
  2164 ;;		line 158 in file "../Robot Files/sumovore.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;		None               void
  2171 ;; Registers used:
  2172 ;;		wreg, status,2
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    1
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_initialization
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text17
  2193  0022FC                     __ptext17:
  2194                           	opt stack 0
  2195  0022FC                     _openPORTB:
  2196                           	opt stack 28
  2197                           
  2198                           ;sumovore.c: 160: TRISB = 0B11000000;
  2199                           
  2200                           ;incstack = 0
  2201  0022FC  0EC0               	movlw	192
  2202  0022FE  6E93               	movwf	3987,c	;volatile
  2203  002300  0012               	return		;funcret
  2204  002302                     __end_of_openPORTB:
  2205                           	opt stack 0
  2206                           stkptr	equ	0xFFC
  2207                           intcon	equ	0xFF2
  2208                           postinc0	equ	0xFEE
  2209                           wreg	equ	0xFE8
  2210                           status	equ	0xFD8
  2211                           
  2212 ;; *************** function _openPORTA *****************
  2213 ;; Defined at:
  2214 ;;		line 147 in file "../Robot Files/sumovore.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;		None               void
  2221 ;; Registers used:
  2222 ;;		wreg, status,2
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_initialization
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text18
  2243  002302                     __ptext18:
  2244                           	opt stack 0
  2245  002302                     _openPORTA:
  2246                           	opt stack 28
  2247                           
  2248                           ;sumovore.c: 149: TRISA = 0B11101111;
  2249                           
  2250                           ;incstack = 0
  2251  002302  0EEF               	movlw	239
  2252  002304  6E92               	movwf	3986,c	;volatile
  2253  002306  0012               	return		;funcret
  2254  002308                     __end_of_openPORTA:
  2255                           	opt stack 0
  2256                           stkptr	equ	0xFFC
  2257                           intcon	equ	0xFF2
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _openLVD *****************
  2263 ;; Defined at:
  2264 ;;		line 428 in file "../Robot Files/sumovore.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;		None               void
  2271 ;; Registers used:
  2272 ;;		None
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_initialization
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text19
  2293  00223A                     __ptext19:
  2294                           	opt stack 0
  2295  00223A                     _openLVD:
  2296                           	opt stack 28
  2297                           
  2298                           ;sumovore.c: 430: RCONbits.IPEN = 1;
  2299                           
  2300                           ;incstack = 0
  2301  00223A  8ED0               	bsf	4048,7,c	;volatile
  2302                           
  2303                           ;sumovore.c: 431: HLVDCONbits.HLVDEN = 1;
  2304  00223C  88D2               	bsf	4050,4,c	;volatile
  2305                           
  2306                           ;sumovore.c: 433: IPR2bits.HLVDIP = 1;
  2307  00223E  84A2               	bsf	4002,2,c	;volatile
  2308                           
  2309                           ;sumovore.c: 434: HLVDCONbits.VDIRMAG = 0;
  2310  002240  9ED2               	bcf	4050,7,c	;volatile
  2311                           
  2312                           ;sumovore.c: 436: HLVDCONbits.HLVDL3 = 1;
  2313  002242  86D2               	bsf	4050,3,c	;volatile
  2314                           
  2315                           ;sumovore.c: 437: HLVDCONbits.HLVDL2 = 1;
  2316  002244  84D2               	bsf	4050,2,c	;volatile
  2317                           
  2318                           ;sumovore.c: 438: HLVDCONbits.HLVDL1 = 1;
  2319  002246  82D2               	bsf	4050,1,c	;volatile
  2320                           
  2321                           ;sumovore.c: 439: HLVDCONbits.HLVDL0 = 0;
  2322  002248  90D2               	bcf	4050,0,c	;volatile
  2323                           
  2324                           ;sumovore.c: 440: PIR2bits.HLVDIF = 0;
  2325  00224A  94A1               	bcf	4001,2,c	;volatile
  2326                           
  2327                           ;sumovore.c: 441: PIE2bits.HLVDIE = 1;
  2328  00224C  84A0               	bsf	4000,2,c	;volatile
  2329                           
  2330                           ;sumovore.c: 442: INTCONbits.GIEH = 1;
  2331  00224E  8EF2               	bsf	intcon,7,c	;volatile
  2332  002250  0012               	return		;funcret
  2333  002252                     __end_of_openLVD:
  2334                           	opt stack 0
  2335                           stkptr	equ	0xFFC
  2336                           intcon	equ	0xFF2
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _OpenUSART *****************
  2342 ;; Defined at:
  2343 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  config          1    wreg     unsigned char 
  2346 ;;  spbrg           2   14[COMRAM] unsigned int 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  config          1   16[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, status,2
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        3 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_initialization
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text20
  2373  001D12                     __ptext20:
  2374                           	opt stack 0
  2375  001D12                     _OpenUSART:
  2376                           	opt stack 28
  2377                           
  2378                           ;incstack = 0
  2379                           ;OpenUSART@config stored from wreg
  2380  001D12  6E11               	movwf	OpenUSART@config,c
  2381  001D14  0E00               	movlw	0
  2382  001D16  6EAC               	movwf	4012,c	;volatile
  2383  001D18  0E00               	movlw	0
  2384  001D1A  6EAB               	movwf	4011,c	;volatile
  2385  001D1C  A011               	btfss	OpenUSART@config,0,c
  2386  001D1E  D002               	goto	l2416
  2387  001D20  88AC               	bsf	4012,4,c	;volatile
  2388  001D22  D000               	goto	l2416
  2389  001D24                     l2416:
  2390  001D24  A211               	btfss	OpenUSART@config,1,c
  2391  001D26  D003               	goto	l2420
  2392  001D28  8CAC               	bsf	4012,6,c	;volatile
  2393  001D2A  8CAB               	bsf	4011,6,c	;volatile
  2394  001D2C  D000               	goto	l2420
  2395  001D2E                     l2420:
  2396  001D2E  A411               	btfss	OpenUSART@config,2,c
  2397  001D30  D002               	goto	l2424
  2398  001D32  8EAC               	bsf	4012,7,c	;volatile
  2399  001D34  D000               	goto	l2424
  2400  001D36                     l2424:
  2401  001D36  A611               	btfss	OpenUSART@config,3,c
  2402  001D38  D002               	goto	l576
  2403  001D3A  88AB               	bsf	4011,4,c	;volatile
  2404  001D3C  D002               	goto	l2428
  2405  001D3E                     l576:
  2406  001D3E  8AAB               	bsf	4011,5,c	;volatile
  2407  001D40  D000               	goto	l2428
  2408  001D42                     l2428:
  2409  001D42  B811               	btfsc	OpenUSART@config,4,c
  2410  001D44  84AC               	bsf	4012,2,c	;volatile
  2411  001D46  989E               	bcf	3998,4,c	;volatile
  2412  001D48  AA11               	btfss	OpenUSART@config,5,c
  2413  001D4A  D002               	goto	l2436
  2414  001D4C  86AB               	bsf	4011,3,c	;volatile
  2415  001D4E  D000               	goto	l2436
  2416  001D50                     l2436:
  2417  001D50  AC11               	btfss	OpenUSART@config,6,c
  2418  001D52  D002               	goto	l580
  2419  001D54  8A9D               	bsf	3997,5,c	;volatile
  2420  001D56  D001               	goto	l581
  2421  001D58                     l580:
  2422  001D58  9A9D               	bcf	3997,5,c	;volatile
  2423  001D5A                     l581:
  2424  001D5A  9A9E               	bcf	3998,5,c	;volatile
  2425  001D5C  AE11               	btfss	OpenUSART@config,7,c
  2426  001D5E  D002               	goto	l582
  2427  001D60  889D               	bsf	3997,4,c	;volatile
  2428  001D62  D001               	goto	l583
  2429  001D64                     l582:
  2430  001D64  989D               	bcf	3997,4,c	;volatile
  2431  001D66                     l583:
  2432  001D66  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2433  001D6A  5010               	movf	OpenUSART@spbrg+1,w,c
  2434  001D6C  6EB0               	movwf	4016,c	;volatile
  2435  001D6E  8AAC               	bsf	4012,5,c	;volatile
  2436  001D70  8EAB               	bsf	4011,7,c	;volatile
  2437  001D72  9C94               	bcf	3988,6,c	;volatile
  2438  001D74  8E94               	bsf	3988,7,c	;volatile
  2439  001D76  B8AC               	btfsc	4012,4,c	;volatile
  2440  001D78  BEAC               	btfsc	4012,7,c	;volatile
  2441  001D7A  D002               	goto	l585
  2442  001D7C  8C94               	bsf	3988,6,c	;volatile
  2443  001D7E  D000               	goto	l585
  2444  001D80                     l585:
  2445  001D80  0012               	return		;funcret
  2446  001D82                     __end_of_OpenUSART:
  2447                           	opt stack 0
  2448                           stkptr	equ	0xFFC
  2449                           intcon	equ	0xFF2
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _OpenTimer2 *****************
  2455 ;; Defined at:
  2456 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  config          1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  config          1   14[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_initialization
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text21
  2485  002202                     __ptext21:
  2486                           	opt stack 0
  2487  002202                     _OpenTimer2:
  2488                           	opt stack 28
  2489                           
  2490                           ;incstack = 0
  2491                           ;OpenTimer2@config stored from wreg
  2492  002202  6E0F               	movwf	OpenTimer2@config,c
  2493  002204  500F               	movf	OpenTimer2@config,w,c
  2494  002206  0BFB               	andlw	251
  2495  002208  6ECA               	movwf	4042,c	;volatile
  2496  00220A  0E00               	movlw	0
  2497  00220C  6ECC               	movwf	4044,c	;volatile
  2498  00220E  929E               	bcf	3998,1,c	;volatile
  2499  002210  AE0F               	btfss	OpenTimer2@config,7,c
  2500  002212  D002               	goto	l550
  2501  002214  829D               	bsf	3997,1,c	;volatile
  2502  002216  D001               	goto	l551
  2503  002218                     l550:
  2504  002218  929D               	bcf	3997,1,c	;volatile
  2505  00221A                     l551:
  2506  00221A  84CA               	bsf	4042,2,c	;volatile
  2507  00221C  0012               	return		;funcret
  2508  00221E                     __end_of_OpenTimer2:
  2509                           	opt stack 0
  2510                           stkptr	equ	0xFFC
  2511                           intcon	equ	0xFF2
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           status	equ	0xFD8
  2515                           
  2516 ;; *************** function _OpenPWM2 *****************
  2517 ;; Defined at:
  2518 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2open.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  period          1    wreg     unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  period          1   14[COMRAM] unsigned char 
  2523 ;;  ccp2mx          1   15[COMRAM] unsigned char 
  2524 ;;  pmmode          1    0        unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;		None               void
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;Total ram usage:        2 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_initialization
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text22
  2549  002004                     __ptext22:
  2550                           	opt stack 0
  2551  002004                     _OpenPWM2:
  2552                           	opt stack 28
  2553                           
  2554                           ;incstack = 0
  2555                           ;OpenPWM2@period stored from wreg
  2556  002004  6E0F               	movwf	OpenPWM2@period,c
  2557  002006  0E0C               	movlw	12
  2558  002008  6EBA               	movwf	4026,c	;volatile
  2559  00200A  0E05               	movlw	5
  2560  00200C  6EF6               	movwf	tblptrl,c
  2561  00200E                     	if	1	;There is more than 1 active tblptr byte
  2562  00200E  0E00               	movlw	0
  2563  002010  6EF7               	movwf	tblptrh,c
  2564  002012                     	endif
  2565  002012                     	if	1	;There are 3 active tblptr bytes
  2566  002012  0E30               	movlw	48
  2567  002014  6EF8               	movwf	tblptru,c
  2568  002016                     	endif
  2569  002016  0008               	tblrd		*
  2570  002018  0100               	movlb	12288	; () banked
  2571  00201A  A0F5               	btfss	tablat,0,c
  2572  00201C  D002               	goto	l1714
  2573                           
  2574                           ; BSR set to: 0
  2575  00201E  6810               	setf	OpenPWM2@ccp2mx,c
  2576  002020  D002               	goto	l498
  2577  002022                     l1714:
  2578                           
  2579                           ; BSR set to: 0
  2580  002022  0E00               	movlw	0
  2581  002024  6E10               	movwf	OpenPWM2@ccp2mx,c
  2582  002026                     l498:
  2583                           
  2584                           ; BSR set to: 0
  2585  002026  5010               	movf	OpenPWM2@ccp2mx,w,c
  2586  002028  B4D8               	btfsc	status,2,c
  2587  00202A  D002               	goto	l499
  2588                           
  2589                           ; BSR set to: 0
  2590  00202C  9294               	bcf	3988,1,c	;volatile
  2591  00202E  D001               	goto	l500
  2592  002030                     l499:
  2593                           
  2594                           ; BSR set to: 0
  2595  002030  9693               	bcf	3987,3,c	;volatile
  2596  002032                     l500:
  2597                           
  2598                           ; BSR set to: 0
  2599  002032  94CA               	bcf	4042,2,c	;volatile
  2600  002034  C00F  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2601  002038  84CA               	bsf	4042,2,c	;volatile
  2602                           
  2603                           ; BSR set to: 0
  2604  00203A  0012               	return		;funcret
  2605  00203C                     __end_of_OpenPWM2:
  2606                           	opt stack 0
  2607                           stkptr	equ	0xFFC
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           intcon	equ	0xFF2
  2613                           postinc0	equ	0xFEE
  2614                           wreg	equ	0xFE8
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _OpenPWM1 *****************
  2618 ;; Defined at:
  2619 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1open.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  period          1    wreg     unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  period          1   14[COMRAM] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;Total ram usage:        1 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_initialization
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text23
  2648  002290                     __ptext23:
  2649                           	opt stack 0
  2650  002290                     _OpenPWM1:
  2651                           	opt stack 28
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;incstack = 0
  2655                           ;OpenPWM1@period stored from wreg
  2656  002290  6E0F               	movwf	OpenPWM1@period,c
  2657  002292  0E0C               	movlw	12
  2658  002294  12BD               	iorwf	4029,f,c	;volatile
  2659  002296  9494               	bcf	3988,2,c	;volatile
  2660  002298  94CA               	bcf	4042,2,c	;volatile
  2661  00229A  C00F  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2662  00229E  84CA               	bsf	4042,2,c	;volatile
  2663  0022A0  0012               	return		;funcret
  2664  0022A2                     __end_of_OpenPWM1:
  2665                           	opt stack 0
  2666                           stkptr	equ	0xFFC
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _OpenADC *****************
  2677 ;; Defined at:
  2678 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  config          1    wreg     unsigned char 
  2681 ;;  config2         1   14[COMRAM] unsigned char 
  2682 ;;  portconfig      1   15[COMRAM] unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  config          1   18[COMRAM] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        5 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_initialization
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text24
  2709  001E48                     __ptext24:
  2710                           	opt stack 0
  2711  001E48                     _OpenADC:
  2712                           	opt stack 28
  2713                           
  2714                           ;incstack = 0
  2715                           ;OpenADC@config stored from wreg
  2716  001E48  6E13               	movwf	OpenADC@config,c
  2717  001E4A  0E00               	movlw	0
  2718  001E4C  6EC2               	movwf	4034,c	;volatile
  2719  001E4E  0E00               	movlw	0
  2720  001E50  6EC0               	movwf	4032,c	;volatile
  2721  001E52  90D8               	bcf	status,0,c
  2722  001E54  300F               	rrcf	OpenADC@config2,w,c
  2723  001E56  0B3C               	andlw	60
  2724  001E58  6EC2               	movwf	4034,c	;volatile
  2725  001E5A  C00F  F011         	movff	OpenADC@config2,??_OpenADC
  2726  001E5E  3A11               	swapf	??_OpenADC,f,c
  2727  001E60  0EF0               	movlw	240
  2728  001E62  1611               	andwf	??_OpenADC,f,c
  2729  001E64  0E30               	movlw	48
  2730  001E66  1611               	andwf	??_OpenADC,f,c
  2731  001E68  5010               	movf	OpenADC@portconfig,w,c
  2732  001E6A  0B0F               	andlw	15
  2733  001E6C  1011               	iorwf	??_OpenADC,w,c
  2734  001E6E  6EC1               	movwf	4033,c	;volatile
  2735  001E70  C013  F011         	movff	OpenADC@config,??_OpenADC
  2736  001E74  90D8               	bcf	status,0,c
  2737  001E76  3611               	rlcf	??_OpenADC,f,c
  2738  001E78  90D8               	bcf	status,0,c
  2739  001E7A  3611               	rlcf	??_OpenADC,f,c
  2740  001E7C  0E38               	movlw	56
  2741  001E7E  1611               	andwf	??_OpenADC,f,c
  2742  001E80  C013  F012         	movff	OpenADC@config,??_OpenADC+1
  2743  001E84  3A12               	swapf	??_OpenADC+1,f,c
  2744  001E86  0E0F               	movlw	15
  2745  001E88  1612               	andwf	??_OpenADC+1,f,c
  2746  001E8A  0E07               	movlw	7
  2747  001E8C  1612               	andwf	??_OpenADC+1,f,c
  2748  001E8E  5013               	movf	OpenADC@config,w,c
  2749  001E90  0B80               	andlw	128
  2750  001E92  1012               	iorwf	??_OpenADC+1,w,c
  2751  001E94  1011               	iorwf	??_OpenADC,w,c
  2752  001E96  6EC0               	movwf	4032,c	;volatile
  2753  001E98  AE0F               	btfss	OpenADC@config2,7,c
  2754  001E9A  D003               	goto	l450
  2755  001E9C  9C9E               	bcf	3998,6,c	;volatile
  2756  001E9E  8C9D               	bsf	3997,6,c	;volatile
  2757  001EA0  8CF2               	bsf	intcon,6,c	;volatile
  2758  001EA2                     l450:
  2759  001EA2  80C2               	bsf	4034,0,c	;volatile
  2760  001EA4  0012               	return		;funcret
  2761  001EA6                     __end_of_OpenADC:
  2762                           	opt stack 0
  2763                           stkptr	equ	0xFFC
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           intcon	equ	0xFF2
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function _PID_LineFollowing *****************
  2774 ;; Defined at:
  2775 ;;		line 115 in file "../Robot Files/main.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  error           2   52[COMRAM] PTR char 
  2778 ;;		 -> main@error(3), 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;		None               void
  2783 ;; Registers used:
  2784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        7 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    3
  2797 ;; This function calls:
  2798 ;;		_MotorControl
  2799 ;;		_ReadTimer0
  2800 ;;		___aldiv
  2801 ;;		___lwdiv
  2802 ;;		___lwmod
  2803 ;;		___wmul
  2804 ;; This function is called by:
  2805 ;;		_main
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text25
  2810  00107A                     __ptext25:
  2811                           	opt stack 0
  2812  00107A                     _PID_LineFollowing:
  2813                           	opt stack 27
  2814                           
  2815                           ;main.c: 117: static int delta_velocity = 0;
  2816                           ;main.c: 119: static int D = 0;
  2817                           ;main.c: 122: if ((ReadTimer0()%I_CONSTANT) < 2)
  2818                           
  2819                           ;incstack = 0
  2820  00107A  EC51  F011         	call	_ReadTimer0	;wreg free
  2821  00107E  C00F  F013         	movff	?_ReadTimer0,___lwmod@dividend
  2822  001082  C010  F014         	movff	?_ReadTimer0+1,___lwmod@dividend+1
  2823  001086  0E03               	movlw	low _I_CONSTANT
  2824  001088  6EF6               	movwf	tblptrl,c
  2825  00108A                     	if	1	;There is more than 1 active tblptr byte
  2826  00108A  0E10               	movlw	high _I_CONSTANT
  2827  00108C  6EF7               	movwf	tblptrh,c
  2828  00108E                     	endif
  2829  00108E                     	if	1	;There are 3 active tblptr bytes
  2830  00108E  0E00               	movlw	low (_I_CONSTANT shr (0+16))
  2831  001090  6EF8               	movwf	tblptru,c
  2832  001092                     	endif
  2833  001092  0009               	tblrd		*+
  2834  001094  CFF5 F015          	movff	tablat,___lwmod@divisor
  2835  001098  000A               	tblrd		*-
  2836  00109A  CFF5 F016          	movff	tablat,___lwmod@divisor+1
  2837  00109E  EC81  F00F         	call	___lwmod	;wreg free
  2838  0010A2  5014               	movf	?___lwmod+1,w,c
  2839  0010A4  E17B               	bnz	l2720
  2840  0010A6  0E02               	movlw	2
  2841  0010A8  5C13               	subwf	?___lwmod,w,c
  2842  0010AA  B0D8               	btfsc	status,0,c
  2843  0010AC  D077               	goto	l2720
  2844                           
  2845                           ;main.c: 123: {
  2846                           ;main.c: 124: if(!(delta_velocity>=1600 || delta_velocity<=1600) || (delta_velocity>=160
      +                          0 && error[2]<0) || (delta_velocity<=-1600 && error[2]>0))
  2847  0010AE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2848  0010B0  D006               	goto	l2696
  2849  0010B2  0E40               	movlw	64
  2850  0010B4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2851  0010B6  0E06               	movlw	6
  2852  0010B8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2853  0010BA  B0D8               	btfsc	status,0,c
  2854  0010BC  D008               	goto	l2698
  2855  0010BE                     l2696:
  2856  0010BE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2857  0010C0  D006               	goto	l2698
  2858  0010C2  0E41               	movlw	65
  2859  0010C4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2860  0010C6  0E06               	movlw	6
  2861  0010C8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2862  0010CA  B0D8               	btfsc	status,0,c
  2863  0010CC  D024               	goto	l2706
  2864  0010CE                     l2698:
  2865  0010CE  BE47               	btfsc	PID_LineFollowing@delta_velocity+1,7,c
  2866  0010D0  D00F               	goto	l2702
  2867  0010D2  0E40               	movlw	64
  2868  0010D4  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2869  0010D6  0E06               	movlw	6
  2870  0010D8  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2871  0010DA  A0D8               	btfss	status,0,c
  2872  0010DC  D009               	goto	l2702
  2873  0010DE  EE20 F002          	lfsr	2,2
  2874  0010E2  5035               	movf	PID_LineFollowing@error,w,c
  2875  0010E4  26D9               	addwf	fsr2l,f,c
  2876  0010E6  5036               	movf	PID_LineFollowing@error+1,w,c
  2877  0010E8  22DA               	addwfc	fsr2h,f,c
  2878  0010EA  0E00               	movlw	0
  2879  0010EC  BEDB               	btfsc	plusw2,7,c
  2880  0010EE  D013               	goto	l2706
  2881  0010F0                     l2702:
  2882  0010F0  AE47               	btfss	PID_LineFollowing@delta_velocity+1,7,c
  2883  0010F2  D054               	goto	l2720
  2884  0010F4  0EC1               	movlw	193
  2885  0010F6  5C46               	subwf	PID_LineFollowing@delta_velocity,w,c
  2886  0010F8  0EF9               	movlw	249
  2887  0010FA  5847               	subwfb	PID_LineFollowing@delta_velocity+1,w,c
  2888  0010FC  B0D8               	btfsc	status,0,c
  2889  0010FE  D04E               	goto	l2720
  2890  001100  EE20 F002          	lfsr	2,2
  2891  001104  5035               	movf	PID_LineFollowing@error,w,c
  2892  001106  26D9               	addwf	fsr2l,f,c
  2893  001108  5036               	movf	PID_LineFollowing@error+1,w,c
  2894  00110A  22DA               	addwfc	fsr2h,f,c
  2895  00110C  50DF               	movf	indf2,w,c
  2896  00110E  0A80               	xorlw	128
  2897  001110  0F7F               	addlw	-129
  2898  001112  A0D8               	btfss	status,0,c
  2899  001114  D043               	goto	l2720
  2900  001116                     l2706:
  2901                           
  2902                           ;main.c: 126: if( !(I>=3273 || I<=-3274) || (I>=3273 && error[2]<0) || (I<=-3274 && erro
      +                          r[2]>0))
  2903  001116  BE49               	btfsc	_I+1,7,c
  2904  001118  D006               	goto	l2708
  2905  00111A  0EC9               	movlw	201
  2906  00111C  5C48               	subwf	_I,w,c
  2907  00111E  0E0C               	movlw	12
  2908  001120  5849               	subwfb	_I+1,w,c
  2909  001122  B0D8               	btfsc	status,0,c
  2910  001124  D008               	goto	l2710
  2911  001126                     l2708:
  2912  001126  AE49               	btfss	_I+1,7,c
  2913  001128  D02A               	goto	l2718
  2914  00112A  0E37               	movlw	55
  2915  00112C  5C48               	subwf	_I,w,c
  2916  00112E  0EF3               	movlw	243
  2917  001130  5849               	subwfb	_I+1,w,c
  2918  001132  B0D8               	btfsc	status,0,c
  2919  001134  D024               	goto	l2718
  2920  001136                     l2710:
  2921  001136  BE49               	btfsc	_I+1,7,c
  2922  001138  D00F               	goto	l2714
  2923  00113A  0EC9               	movlw	201
  2924  00113C  5C48               	subwf	_I,w,c
  2925  00113E  0E0C               	movlw	12
  2926  001140  5849               	subwfb	_I+1,w,c
  2927  001142  A0D8               	btfss	status,0,c
  2928  001144  D009               	goto	l2714
  2929  001146  EE20 F002          	lfsr	2,2
  2930  00114A  5035               	movf	PID_LineFollowing@error,w,c
  2931  00114C  26D9               	addwf	fsr2l,f,c
  2932  00114E  5036               	movf	PID_LineFollowing@error+1,w,c
  2933  001150  22DA               	addwfc	fsr2h,f,c
  2934  001152  0E00               	movlw	0
  2935  001154  BEDB               	btfsc	plusw2,7,c
  2936  001156  D013               	goto	l2718
  2937  001158                     l2714:
  2938  001158  AE49               	btfss	_I+1,7,c
  2939  00115A  D020               	goto	l2720
  2940  00115C  0E37               	movlw	55
  2941  00115E  5C48               	subwf	_I,w,c
  2942  001160  0EF3               	movlw	243
  2943  001162  5849               	subwfb	_I+1,w,c
  2944  001164  B0D8               	btfsc	status,0,c
  2945  001166  D01A               	goto	l2720
  2946  001168  EE20 F002          	lfsr	2,2
  2947  00116C  5035               	movf	PID_LineFollowing@error,w,c
  2948  00116E  26D9               	addwf	fsr2l,f,c
  2949  001170  5036               	movf	PID_LineFollowing@error+1,w,c
  2950  001172  22DA               	addwfc	fsr2h,f,c
  2951  001174  50DF               	movf	indf2,w,c
  2952  001176  0A80               	xorlw	128
  2953  001178  0F7F               	addlw	-129
  2954  00117A  A0D8               	btfss	status,0,c
  2955  00117C  D00F               	goto	l2720
  2956  00117E                     l2718:
  2957                           
  2958                           ;main.c: 128: I += error[2];
  2959  00117E  EE20 F002          	lfsr	2,2
  2960  001182  5035               	movf	PID_LineFollowing@error,w,c
  2961  001184  26D9               	addwf	fsr2l,f,c
  2962  001186  5036               	movf	PID_LineFollowing@error+1,w,c
  2963  001188  22DA               	addwfc	fsr2h,f,c
  2964  00118A  50DF               	movf	indf2,w,c
  2965  00118C  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  2966  00118E  5037               	movf	??_PID_LineFollowing,w,c
  2967  001190  2648               	addwf	_I,f,c
  2968  001192  0E00               	movlw	0
  2969  001194  BE37               	btfsc	??_PID_LineFollowing,7,c
  2970  001196  0EFF               	movlw	255
  2971  001198  2249               	addwfc	_I+1,f,c
  2972  00119A  D000               	goto	l2720
  2973  00119C                     l2720:
  2974                           
  2975                           ;main.c: 129: }
  2976                           ;main.c: 132: if(error[1]!=error[2])
  2977  00119C  EE20 F002          	lfsr	2,2
  2978  0011A0  5035               	movf	PID_LineFollowing@error,w,c
  2979  0011A2  26D9               	addwf	fsr2l,f,c
  2980  0011A4  5036               	movf	PID_LineFollowing@error+1,w,c
  2981  0011A6  22DA               	addwfc	fsr2h,f,c
  2982  0011A8  EE10 F001          	lfsr	1,1
  2983  0011AC  5035               	movf	PID_LineFollowing@error,w,c
  2984  0011AE  26E1               	addwf	fsr1l,f,c
  2985  0011B0  5036               	movf	PID_LineFollowing@error+1,w,c
  2986  0011B2  22E2               	addwfc	fsr1h,f,c
  2987  0011B4  50DE               	movf	postinc2,w,c
  2988  0011B6  18E6               	xorwf	postinc1,w,c
  2989  0011B8  B4D8               	btfsc	status,2,c
  2990  0011BA  D058               	goto	l2728
  2991                           
  2992                           ;main.c: 133: {
  2993                           ;main.c: 134: D = D_CONSTANT/ReadTimer0()*(error[2]-error[1]);
  2994  0011BC  EE20 F001          	lfsr	2,1
  2995  0011C0  5035               	movf	PID_LineFollowing@error,w,c
  2996  0011C2  26D9               	addwf	fsr2l,f,c
  2997  0011C4  5036               	movf	PID_LineFollowing@error+1,w,c
  2998  0011C6  22DA               	addwfc	fsr2h,f,c
  2999  0011C8  50DF               	movf	indf2,w,c
  3000  0011CA  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3001  0011CC  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3002  0011CE  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3003  0011D0  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3004  0011D2  1E37               	comf	??_PID_LineFollowing,f,c
  3005  0011D4  1E38               	comf	??_PID_LineFollowing+1,f,c
  3006  0011D6  4A37               	infsnz	??_PID_LineFollowing,f,c
  3007  0011D8  2A38               	incf	??_PID_LineFollowing+1,f,c
  3008  0011DA  EE20 F002          	lfsr	2,2
  3009  0011DE  5035               	movf	PID_LineFollowing@error,w,c
  3010  0011E0  26D9               	addwf	fsr2l,f,c
  3011  0011E2  5036               	movf	PID_LineFollowing@error+1,w,c
  3012  0011E4  22DA               	addwfc	fsr2h,f,c
  3013  0011E6  50DF               	movf	indf2,w,c
  3014  0011E8  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3015  0011EA  5037               	movf	??_PID_LineFollowing,w,c
  3016  0011EC  2439               	addwf	??_PID_LineFollowing+2,w,c
  3017  0011EE  6E1D               	movwf	___wmul@multiplier,c
  3018  0011F0  0E00               	movlw	0
  3019  0011F2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3020  0011F4  0EFF               	movlw	255
  3021  0011F6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3022  0011F8  6E1E               	movwf	___wmul@multiplier+1,c
  3023  0011FA  EC51  F011         	call	_ReadTimer0	;wreg free
  3024  0011FE  C00F  F015         	movff	?_ReadTimer0,___lwdiv@divisor
  3025  001202  C010  F016         	movff	?_ReadTimer0+1,___lwdiv@divisor+1
  3026  001206  0E01               	movlw	low _D_CONSTANT
  3027  001208  6EF6               	movwf	tblptrl,c
  3028  00120A                     	if	1	;There is more than 1 active tblptr byte
  3029  00120A  0E10               	movlw	high _D_CONSTANT
  3030  00120C  6EF7               	movwf	tblptrh,c
  3031  00120E                     	endif
  3032  00120E                     	if	1	;There are 3 active tblptr bytes
  3033  00120E  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3034  001210  6EF8               	movwf	tblptru,c
  3035  001212                     	endif
  3036  001212  0009               	tblrd		*+
  3037  001214  CFF5 F013          	movff	tablat,___lwdiv@dividend
  3038  001218  000A               	tblrd		*-
  3039  00121A  CFF5 F014          	movff	tablat,___lwdiv@dividend+1
  3040  00121E  EC53  F00F         	call	___lwdiv	;wreg free
  3041  001222  C013  F01F         	movff	?___lwdiv,___wmul@multiplicand
  3042  001226  C014  F020         	movff	?___lwdiv+1,___wmul@multiplicand+1
  3043  00122A  EC4B  F010         	call	___wmul	;wreg free
  3044  00122E  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3045  001232  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3046                           
  3047                           ;main.c: 137: error[0]=error[1];
  3048  001236  EE20 F001          	lfsr	2,1
  3049  00123A  5035               	movf	PID_LineFollowing@error,w,c
  3050  00123C  26D9               	addwf	fsr2l,f,c
  3051  00123E  5036               	movf	PID_LineFollowing@error+1,w,c
  3052  001240  22DA               	addwfc	fsr2h,f,c
  3053  001242  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3054  001246  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3055  00124A  CFDF FFE7          	movff	indf2,indf1
  3056                           
  3057                           ;main.c: 138: error[1]=error[2];
  3058  00124E  EE20 F002          	lfsr	2,2
  3059  001252  5035               	movf	PID_LineFollowing@error,w,c
  3060  001254  26D9               	addwf	fsr2l,f,c
  3061  001256  5036               	movf	PID_LineFollowing@error+1,w,c
  3062  001258  22DA               	addwfc	fsr2h,f,c
  3063  00125A  EE10 F001          	lfsr	1,1
  3064  00125E  5035               	movf	PID_LineFollowing@error,w,c
  3065  001260  26E1               	addwf	fsr1l,f,c
  3066  001262  5036               	movf	PID_LineFollowing@error+1,w,c
  3067  001264  22E2               	addwfc	fsr1h,f,c
  3068  001266  CFDF FFE7          	movff	indf2,indf1
  3069  00126A  D000               	goto	l2728
  3070  00126C                     l2728:
  3071                           
  3072                           ;main.c: 139: }
  3073                           ;main.c: 141: if(TMR0IF)
  3074  00126C  A4F2               	btfss	intcon,2,c	;volatile
  3075  00126E  D05E               	goto	l114
  3076                           
  3077                           ;main.c: 142: {
  3078                           ;main.c: 143: D = D_CONSTANT/65535*(error[1]-error[0]);
  3079  001270  C035  FFD9         	movff	PID_LineFollowing@error,fsr2l
  3080  001274  C036  FFDA         	movff	PID_LineFollowing@error+1,fsr2h
  3081  001278  50DF               	movf	indf2,w,c
  3082  00127A  6E37               	movwf	??_PID_LineFollowing& (0+255),c
  3083  00127C  6A38               	clrf	(??_PID_LineFollowing+1)& (0+255),c
  3084  00127E  BE37               	btfsc	??_PID_LineFollowing& (0+255),7,c
  3085  001280  0638               	decf	(??_PID_LineFollowing+1)& (0+255),f,c
  3086  001282  1E37               	comf	??_PID_LineFollowing,f,c
  3087  001284  1E38               	comf	??_PID_LineFollowing+1,f,c
  3088  001286  4A37               	infsnz	??_PID_LineFollowing,f,c
  3089  001288  2A38               	incf	??_PID_LineFollowing+1,f,c
  3090  00128A  EE20 F001          	lfsr	2,1
  3091  00128E  5035               	movf	PID_LineFollowing@error,w,c
  3092  001290  26D9               	addwf	fsr2l,f,c
  3093  001292  5036               	movf	PID_LineFollowing@error+1,w,c
  3094  001294  22DA               	addwfc	fsr2h,f,c
  3095  001296  50DF               	movf	indf2,w,c
  3096  001298  6E39               	movwf	(??_PID_LineFollowing+2)& (0+255),c
  3097  00129A  5037               	movf	??_PID_LineFollowing,w,c
  3098  00129C  2439               	addwf	??_PID_LineFollowing+2,w,c
  3099  00129E  6E1D               	movwf	___wmul@multiplier,c
  3100  0012A0  0E00               	movlw	0
  3101  0012A2  BE39               	btfsc	??_PID_LineFollowing+2,7,c
  3102  0012A4  0EFF               	movlw	255
  3103  0012A6  2038               	addwfc	??_PID_LineFollowing+1,w,c
  3104  0012A8  6E1E               	movwf	___wmul@multiplier+1,c
  3105  0012AA  0EFF               	movlw	255
  3106  0012AC  6E13               	movwf	___aldiv@divisor,c
  3107  0012AE  0EFF               	movlw	255
  3108  0012B0  6E14               	movwf	___aldiv@divisor+1,c
  3109  0012B2  0E00               	movlw	0
  3110  0012B4  6E15               	movwf	___aldiv@divisor+2,c
  3111  0012B6  0E00               	movlw	0
  3112  0012B8  6E16               	movwf	___aldiv@divisor+3,c
  3113  0012BA  0E01               	movlw	low _D_CONSTANT
  3114  0012BC  6EF6               	movwf	tblptrl,c
  3115  0012BE                     	if	1	;There is more than 1 active tblptr byte
  3116  0012BE  0E10               	movlw	high _D_CONSTANT
  3117  0012C0  6EF7               	movwf	tblptrh,c
  3118  0012C2                     	endif
  3119  0012C2                     	if	1	;There are 3 active tblptr bytes
  3120  0012C2  0E00               	movlw	low (_D_CONSTANT shr (0+16))
  3121  0012C4  6EF8               	movwf	tblptru,c
  3122  0012C6                     	endif
  3123  0012C6  0009               	tblrd		*+
  3124  0012C8  CFF5 F03A          	movff	tablat,??_PID_LineFollowing+3
  3125  0012CC  0009               	tblrd		*+
  3126  0012CE  CFF5 F03B          	movff	tablat,??_PID_LineFollowing+4
  3127  0012D2  C03A  F00F         	movff	??_PID_LineFollowing+3,___aldiv@dividend
  3128  0012D6  C03B  F010         	movff	??_PID_LineFollowing+4,___aldiv@dividend+1
  3129  0012DA  6A11               	clrf	___aldiv@dividend+2,c
  3130  0012DC  6A12               	clrf	___aldiv@dividend+3,c
  3131  0012DE  ECFC  F00B         	call	___aldiv	;wreg free
  3132  0012E2  C00F  F01F         	movff	?___aldiv,___wmul@multiplicand
  3133  0012E6  C010  F020         	movff	?___aldiv+1,___wmul@multiplicand+1
  3134  0012EA  EC4B  F010         	call	___wmul	;wreg free
  3135  0012EE  C01D  F044         	movff	?___wmul,PID_LineFollowing@D
  3136  0012F2  C01E  F045         	movff	?___wmul+1,PID_LineFollowing@D+1
  3137                           
  3138                           ;main.c: 146: error[0]=error[1];
  3139  0012F6  EE20 F001          	lfsr	2,1
  3140  0012FA  5035               	movf	PID_LineFollowing@error,w,c
  3141  0012FC  26D9               	addwf	fsr2l,f,c
  3142  0012FE  5036               	movf	PID_LineFollowing@error+1,w,c
  3143  001300  22DA               	addwfc	fsr2h,f,c
  3144  001302  C035  FFE1         	movff	PID_LineFollowing@error,fsr1l
  3145  001306  C036  FFE2         	movff	PID_LineFollowing@error+1,fsr1h
  3146  00130A  CFDF FFE7          	movff	indf2,indf1
  3147                           
  3148                           ;main.c: 147: error[1]=error[2];
  3149  00130E  EE20 F002          	lfsr	2,2
  3150  001312  5035               	movf	PID_LineFollowing@error,w,c
  3151  001314  26D9               	addwf	fsr2l,f,c
  3152  001316  5036               	movf	PID_LineFollowing@error+1,w,c
  3153  001318  22DA               	addwfc	fsr2h,f,c
  3154  00131A  EE10 F001          	lfsr	1,1
  3155  00131E  5035               	movf	PID_LineFollowing@error,w,c
  3156  001320  26E1               	addwf	fsr1l,f,c
  3157  001322  5036               	movf	PID_LineFollowing@error+1,w,c
  3158  001324  22E2               	addwfc	fsr1h,f,c
  3159  001326  CFDF FFE7          	movff	indf2,indf1
  3160                           
  3161                           ;main.c: 149: TMR0IF = 0;
  3162  00132A  94F2               	bcf	intcon,2,c	;volatile
  3163  00132C                     l114:
  3164                           
  3165                           ;main.c: 150: }
  3166                           ;main.c: 154: delta_velocity = P_CONSTANT*error[2] + I + D;
  3167  00132C  EE20 F002          	lfsr	2,2
  3168  001330  5035               	movf	PID_LineFollowing@error,w,c
  3169  001332  26D9               	addwf	fsr2l,f,c
  3170  001334  5036               	movf	PID_LineFollowing@error+1,w,c
  3171  001336  22DA               	addwfc	fsr2h,f,c
  3172  001338  50DF               	movf	indf2,w,c
  3173  00133A  6E1D               	movwf	___wmul@multiplier,c
  3174  00133C  6A1E               	clrf	___wmul@multiplier+1,c
  3175  00133E  BE1D               	btfsc	___wmul@multiplier,7,c
  3176  001340  061E               	decf	___wmul@multiplier+1,f,c
  3177  001342  0E05               	movlw	low _P_CONSTANT
  3178  001344  6EF6               	movwf	tblptrl,c
  3179  001346                     	if	1	;There is more than 1 active tblptr byte
  3180  001346  0E10               	movlw	high _P_CONSTANT
  3181  001348  6EF7               	movwf	tblptrh,c
  3182  00134A                     	endif
  3183  00134A                     	if	1	;There are 3 active tblptr bytes
  3184  00134A  0E00               	movlw	low (_P_CONSTANT shr (0+16))
  3185  00134C  6EF8               	movwf	tblptru,c
  3186  00134E                     	endif
  3187  00134E  0009               	tblrd		*+
  3188  001350  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  3189  001354  000A               	tblrd		*-
  3190  001356  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  3191  00135A  EC4B  F010         	call	___wmul	;wreg free
  3192  00135E  5048               	movf	_I,w,c
  3193  001360  261D               	addwf	?___wmul,f,c
  3194  001362  5049               	movf	_I+1,w,c
  3195  001364  221E               	addwfc	?___wmul+1,f,c
  3196  001366  5044               	movf	PID_LineFollowing@D,w,c
  3197  001368  241D               	addwf	?___wmul,w,c
  3198  00136A  6E46               	movwf	PID_LineFollowing@delta_velocity,c
  3199  00136C  5045               	movf	PID_LineFollowing@D+1,w,c
  3200  00136E  201E               	addwfc	?___wmul+1,w,c
  3201  001370  6E47               	movwf	PID_LineFollowing@delta_velocity+1,c
  3202                           
  3203                           ;main.c: 157: MotorControl(delta_velocity,0);
  3204  001372  C046  F02B         	movff	PID_LineFollowing@delta_velocity,MotorControl@delta_velocity
  3205  001376  C047  F02C         	movff	PID_LineFollowing@delta_velocity+1,MotorControl@delta_velocity+1
  3206  00137A  0E00               	movlw	0
  3207  00137C  6E2D               	movwf	MotorControl@speed_divider,c
  3208  00137E  ECC2  F009         	call	_MotorControl	;wreg free
  3209  001382  0012               	return		;funcret
  3210  001384                     __end_of_PID_LineFollowing:
  3211                           	opt stack 0
  3212                           stkptr	equ	0xFFC
  3213                           tblptru	equ	0xFF8
  3214                           tblptrh	equ	0xFF7
  3215                           tblptrl	equ	0xFF6
  3216                           tablat	equ	0xFF5
  3217                           intcon	equ	0xFF2
  3218                           postinc0	equ	0xFEE
  3219                           wreg	equ	0xFE8
  3220                           indf1	equ	0xFE7
  3221                           postinc1	equ	0xFE6
  3222                           fsr1h	equ	0xFE2
  3223                           fsr1l	equ	0xFE1
  3224                           indf2	equ	0xFDF
  3225                           postinc2	equ	0xFDE
  3226                           plusw2	equ	0xFDB
  3227                           fsr2h	equ	0xFDA
  3228                           fsr2l	equ	0xFD9
  3229                           status	equ	0xFD8
  3230                           
  3231 ;; *************** function ___lwmod *****************
  3232 ;; Defined at:
  3233 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  dividend        2   18[COMRAM] unsigned int 
  3236 ;;  divisor         2   20[COMRAM] unsigned int 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  counter         1   22[COMRAM] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  2   18[COMRAM] unsigned int 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;Total ram usage:        5 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    1
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_PID_LineFollowing
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text26
  3263  001F02                     __ptext26:
  3264                           	opt stack 0
  3265  001F02                     ___lwmod:
  3266                           	opt stack 28
  3267                           
  3268                           ;incstack = 0
  3269  001F02  5015               	movf	___lwmod@divisor,w,c
  3270  001F04  1016               	iorwf	___lwmod@divisor+1,w,c
  3271  001F06  B4D8               	btfsc	status,2,c
  3272  001F08  D01D               	goto	l1146
  3273  001F0A  0E01               	movlw	1
  3274  001F0C  6E17               	movwf	___lwmod@counter,c
  3275  001F0E  D005               	goto	l2560
  3276  001F10                     l2558:
  3277  001F10  90D8               	bcf	status,0,c
  3278  001F12  3615               	rlcf	___lwmod@divisor,f,c
  3279  001F14  3616               	rlcf	___lwmod@divisor+1,f,c
  3280  001F16  2A17               	incf	___lwmod@counter,f,c
  3281  001F18  D000               	goto	l2560
  3282  001F1A                     l2560:
  3283  001F1A  BE16               	btfsc	___lwmod@divisor+1,7,c
  3284  001F1C  D002               	goto	l2562
  3285  001F1E  D7F8               	goto	l2558
  3286  001F20  D000               	goto	l2562
  3287  001F22                     l2562:
  3288  001F22  5015               	movf	___lwmod@divisor,w,c
  3289  001F24  5C13               	subwf	___lwmod@dividend,w,c
  3290  001F26  5016               	movf	___lwmod@divisor+1,w,c
  3291  001F28  5814               	subwfb	___lwmod@dividend+1,w,c
  3292  001F2A  A0D8               	btfss	status,0,c
  3293  001F2C  D005               	goto	l2566
  3294  001F2E  5015               	movf	___lwmod@divisor,w,c
  3295  001F30  5E13               	subwf	___lwmod@dividend,f,c
  3296  001F32  5016               	movf	___lwmod@divisor+1,w,c
  3297  001F34  5A14               	subwfb	___lwmod@dividend+1,f,c
  3298  001F36  D000               	goto	l2566
  3299  001F38                     l2566:
  3300  001F38  90D8               	bcf	status,0,c
  3301  001F3A  3216               	rrcf	___lwmod@divisor+1,f,c
  3302  001F3C  3215               	rrcf	___lwmod@divisor,f,c
  3303  001F3E  2E17               	decfsz	___lwmod@counter,f,c
  3304  001F40  D7F0               	goto	l2562
  3305  001F42  D000               	goto	l1146
  3306  001F44                     l1146:
  3307  001F44  C013  F013         	movff	___lwmod@dividend,?___lwmod
  3308  001F48  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  3309  001F4C  0012               	return		;funcret
  3310  001F4E                     __end_of___lwmod:
  3311                           	opt stack 0
  3312                           stkptr	equ	0xFFC
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           intcon	equ	0xFF2
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           indf1	equ	0xFE7
  3321                           postinc1	equ	0xFE6
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           plusw2	equ	0xFDB
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function ___lwdiv *****************
  3332 ;; Defined at:
  3333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  dividend        2   18[COMRAM] unsigned int 
  3336 ;;  divisor         2   20[COMRAM] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  quotient        2   22[COMRAM] unsigned int 
  3339 ;;  counter         1   24[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   18[COMRAM] unsigned int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        7 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_PID_LineFollowing
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text27
  3364  001EA6                     __ptext27:
  3365                           	opt stack 0
  3366  001EA6                     ___lwdiv:
  3367                           	opt stack 28
  3368                           
  3369                           ;incstack = 0
  3370  001EA6  0E00               	movlw	0
  3371  001EA8  6E18               	movwf	___lwdiv@quotient+1,c
  3372  001EAA  0E00               	movlw	0
  3373  001EAC  6E17               	movwf	___lwdiv@quotient,c
  3374  001EAE  5015               	movf	___lwdiv@divisor,w,c
  3375  001EB0  1016               	iorwf	___lwdiv@divisor+1,w,c
  3376  001EB2  B4D8               	btfsc	status,2,c
  3377  001EB4  D021               	goto	l1136
  3378  001EB6  0E01               	movlw	1
  3379  001EB8  6E19               	movwf	___lwdiv@counter,c
  3380  001EBA  D005               	goto	l2540
  3381  001EBC                     l2538:
  3382  001EBC  90D8               	bcf	status,0,c
  3383  001EBE  3615               	rlcf	___lwdiv@divisor,f,c
  3384  001EC0  3616               	rlcf	___lwdiv@divisor+1,f,c
  3385  001EC2  2A19               	incf	___lwdiv@counter,f,c
  3386  001EC4  D000               	goto	l2540
  3387  001EC6                     l2540:
  3388  001EC6  BE16               	btfsc	___lwdiv@divisor+1,7,c
  3389  001EC8  D002               	goto	l2542
  3390  001ECA  D7F8               	goto	l2538
  3391  001ECC  D000               	goto	l2542
  3392  001ECE                     l2542:
  3393  001ECE  90D8               	bcf	status,0,c
  3394  001ED0  3617               	rlcf	___lwdiv@quotient,f,c
  3395  001ED2  3618               	rlcf	___lwdiv@quotient+1,f,c
  3396  001ED4  5015               	movf	___lwdiv@divisor,w,c
  3397  001ED6  5C13               	subwf	___lwdiv@dividend,w,c
  3398  001ED8  5016               	movf	___lwdiv@divisor+1,w,c
  3399  001EDA  5814               	subwfb	___lwdiv@dividend+1,w,c
  3400  001EDC  A0D8               	btfss	status,0,c
  3401  001EDE  D006               	goto	l2550
  3402  001EE0  5015               	movf	___lwdiv@divisor,w,c
  3403  001EE2  5E13               	subwf	___lwdiv@dividend,f,c
  3404  001EE4  5016               	movf	___lwdiv@divisor+1,w,c
  3405  001EE6  5A14               	subwfb	___lwdiv@dividend+1,f,c
  3406  001EE8  8017               	bsf	___lwdiv@quotient,0,c
  3407  001EEA  D000               	goto	l2550
  3408  001EEC                     l2550:
  3409  001EEC  90D8               	bcf	status,0,c
  3410  001EEE  3216               	rrcf	___lwdiv@divisor+1,f,c
  3411  001EF0  3215               	rrcf	___lwdiv@divisor,f,c
  3412  001EF2  2E19               	decfsz	___lwdiv@counter,f,c
  3413  001EF4  D7EC               	goto	l2542
  3414  001EF6  D000               	goto	l1136
  3415  001EF8                     l1136:
  3416  001EF8  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  3417  001EFC  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3418  001F00  0012               	return		;funcret
  3419  001F02                     __end_of___lwdiv:
  3420                           	opt stack 0
  3421                           stkptr	equ	0xFFC
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           intcon	equ	0xFF2
  3427                           postinc0	equ	0xFEE
  3428                           wreg	equ	0xFE8
  3429                           indf1	equ	0xFE7
  3430                           postinc1	equ	0xFE6
  3431                           fsr1h	equ	0xFE2
  3432                           fsr1l	equ	0xFE1
  3433                           indf2	equ	0xFDF
  3434                           postinc2	equ	0xFDE
  3435                           plusw2	equ	0xFDB
  3436                           fsr2h	equ	0xFDA
  3437                           fsr2l	equ	0xFD9
  3438                           status	equ	0xFD8
  3439                           
  3440 ;; *************** function ___aldiv *****************
  3441 ;; Defined at:
  3442 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  dividend        4   14[COMRAM] long 
  3445 ;;  divisor         4   18[COMRAM] long 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  quotient        4   24[COMRAM] long 
  3448 ;;  sign            1   23[COMRAM] unsigned char 
  3449 ;;  counter         1   22[COMRAM] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  4   14[COMRAM] long 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3459 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;Total ram usage:       14 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_PID_LineFollowing
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text28
  3474  0017F8                     __ptext28:
  3475                           	opt stack 0
  3476  0017F8                     ___aldiv:
  3477                           	opt stack 28
  3478                           
  3479                           ;incstack = 0
  3480  0017F8  0E00               	movlw	0
  3481  0017FA  6E18               	movwf	___aldiv@sign,c
  3482  0017FC  AE16               	btfss	___aldiv@divisor+3,7,c
  3483  0017FE  D00B               	goto	l2496
  3484  001800  1E16               	comf	___aldiv@divisor+3,f,c
  3485  001802  1E15               	comf	___aldiv@divisor+2,f,c
  3486  001804  1E14               	comf	___aldiv@divisor+1,f,c
  3487  001806  6C13               	negf	___aldiv@divisor,c
  3488  001808  0E00               	movlw	0
  3489  00180A  2214               	addwfc	___aldiv@divisor+1,f,c
  3490  00180C  2215               	addwfc	___aldiv@divisor+2,f,c
  3491  00180E  2216               	addwfc	___aldiv@divisor+3,f,c
  3492  001810  0E01               	movlw	1
  3493  001812  6E18               	movwf	___aldiv@sign,c
  3494  001814  D000               	goto	l2496
  3495  001816                     l2496:
  3496  001816  AE12               	btfss	___aldiv@dividend+3,7,c
  3497  001818  D00B               	goto	l2502
  3498  00181A  1E12               	comf	___aldiv@dividend+3,f,c
  3499  00181C  1E11               	comf	___aldiv@dividend+2,f,c
  3500  00181E  1E10               	comf	___aldiv@dividend+1,f,c
  3501  001820  6C0F               	negf	___aldiv@dividend,c
  3502  001822  0E00               	movlw	0
  3503  001824  2210               	addwfc	___aldiv@dividend+1,f,c
  3504  001826  2211               	addwfc	___aldiv@dividend+2,f,c
  3505  001828  2212               	addwfc	___aldiv@dividend+3,f,c
  3506  00182A  0E01               	movlw	1
  3507  00182C  1A18               	xorwf	___aldiv@sign,f,c
  3508  00182E  D000               	goto	l2502
  3509  001830                     l2502:
  3510  001830  0E00               	movlw	0
  3511  001832  6E19               	movwf	___aldiv@quotient,c
  3512  001834  0E00               	movlw	0
  3513  001836  6E1A               	movwf	___aldiv@quotient+1,c
  3514  001838  0E00               	movlw	0
  3515  00183A  6E1B               	movwf	___aldiv@quotient+2,c
  3516  00183C  0E00               	movlw	0
  3517  00183E  6E1C               	movwf	___aldiv@quotient+3,c
  3518  001840  5013               	movf	___aldiv@divisor,w,c
  3519  001842  1014               	iorwf	___aldiv@divisor+1,w,c
  3520  001844  1015               	iorwf	___aldiv@divisor+2,w,c
  3521  001846  1016               	iorwf	___aldiv@divisor+3,w,c
  3522  001848  B4D8               	btfsc	status,2,c
  3523  00184A  D02F               	goto	l2524
  3524  00184C  0E01               	movlw	1
  3525  00184E  6E17               	movwf	___aldiv@counter,c
  3526  001850  D007               	goto	l2510
  3527  001852                     l2508:
  3528  001852  90D8               	bcf	status,0,c
  3529  001854  3613               	rlcf	___aldiv@divisor,f,c
  3530  001856  3614               	rlcf	___aldiv@divisor+1,f,c
  3531  001858  3615               	rlcf	___aldiv@divisor+2,f,c
  3532  00185A  3616               	rlcf	___aldiv@divisor+3,f,c
  3533  00185C  2A17               	incf	___aldiv@counter,f,c
  3534  00185E  D000               	goto	l2510
  3535  001860                     l2510:
  3536  001860  BE16               	btfsc	___aldiv@divisor+3,7,c
  3537  001862  D002               	goto	l2512
  3538  001864  D7F6               	goto	l2508
  3539  001866  D000               	goto	l2512
  3540  001868                     l2512:
  3541  001868  90D8               	bcf	status,0,c
  3542  00186A  3619               	rlcf	___aldiv@quotient,f,c
  3543  00186C  361A               	rlcf	___aldiv@quotient+1,f,c
  3544  00186E  361B               	rlcf	___aldiv@quotient+2,f,c
  3545  001870  361C               	rlcf	___aldiv@quotient+3,f,c
  3546  001872  5013               	movf	___aldiv@divisor,w,c
  3547  001874  5C0F               	subwf	___aldiv@dividend,w,c
  3548  001876  5014               	movf	___aldiv@divisor+1,w,c
  3549  001878  5810               	subwfb	___aldiv@dividend+1,w,c
  3550  00187A  5015               	movf	___aldiv@divisor+2,w,c
  3551  00187C  5811               	subwfb	___aldiv@dividend+2,w,c
  3552  00187E  5016               	movf	___aldiv@divisor+3,w,c
  3553  001880  5812               	subwfb	___aldiv@dividend+3,w,c
  3554  001882  A0D8               	btfss	status,0,c
  3555  001884  D00A               	goto	l2520
  3556  001886  5013               	movf	___aldiv@divisor,w,c
  3557  001888  5E0F               	subwf	___aldiv@dividend,f,c
  3558  00188A  5014               	movf	___aldiv@divisor+1,w,c
  3559  00188C  5A10               	subwfb	___aldiv@dividend+1,f,c
  3560  00188E  5015               	movf	___aldiv@divisor+2,w,c
  3561  001890  5A11               	subwfb	___aldiv@dividend+2,f,c
  3562  001892  5016               	movf	___aldiv@divisor+3,w,c
  3563  001894  5A12               	subwfb	___aldiv@dividend+3,f,c
  3564  001896  8019               	bsf	___aldiv@quotient,0,c
  3565  001898  D000               	goto	l2520
  3566  00189A                     l2520:
  3567  00189A  90D8               	bcf	status,0,c
  3568  00189C  3216               	rrcf	___aldiv@divisor+3,f,c
  3569  00189E  3215               	rrcf	___aldiv@divisor+2,f,c
  3570  0018A0  3214               	rrcf	___aldiv@divisor+1,f,c
  3571  0018A2  3213               	rrcf	___aldiv@divisor,f,c
  3572  0018A4  2E17               	decfsz	___aldiv@counter,f,c
  3573  0018A6  D7E0               	goto	l2512
  3574  0018A8  D000               	goto	l2524
  3575  0018AA                     l2524:
  3576  0018AA  5018               	movf	___aldiv@sign,w,c
  3577  0018AC  B4D8               	btfsc	status,2,c
  3578  0018AE  D009               	goto	l2528
  3579  0018B0  1E1C               	comf	___aldiv@quotient+3,f,c
  3580  0018B2  1E1B               	comf	___aldiv@quotient+2,f,c
  3581  0018B4  1E1A               	comf	___aldiv@quotient+1,f,c
  3582  0018B6  6C19               	negf	___aldiv@quotient,c
  3583  0018B8  0E00               	movlw	0
  3584  0018BA  221A               	addwfc	___aldiv@quotient+1,f,c
  3585  0018BC  221B               	addwfc	___aldiv@quotient+2,f,c
  3586  0018BE  221C               	addwfc	___aldiv@quotient+3,f,c
  3587  0018C0  D000               	goto	l2528
  3588  0018C2                     l2528:
  3589  0018C2  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  3590  0018C6  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  3591  0018CA  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  3592  0018CE  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  3593  0018D2  D000               	goto	l687
  3594  0018D4                     l687:
  3595  0018D4  0012               	return		;funcret
  3596  0018D6                     __end_of___aldiv:
  3597                           	opt stack 0
  3598                           stkptr	equ	0xFFC
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           intcon	equ	0xFF2
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           indf1	equ	0xFE7
  3607                           postinc1	equ	0xFE6
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           plusw2	equ	0xFDB
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _OpenTimer0 *****************
  3618 ;; Defined at:
  3619 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  config          1    wreg     unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  config          1   14[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;		None               void
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        1 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text29
  3648  00214C                     __ptext29:
  3649                           	opt stack 0
  3650  00214C                     _OpenTimer0:
  3651                           	opt stack 29
  3652                           
  3653                           ;incstack = 0
  3654                           ;OpenTimer0@config stored from wreg
  3655  00214C  6E0F               	movwf	OpenTimer0@config,c
  3656  00214E  500F               	movf	OpenTimer0@config,w,c
  3657  002150  0B7F               	andlw	127
  3658  002152  6ED5               	movwf	4053,c	;volatile
  3659  002154  0E00               	movlw	0
  3660  002156  6ED7               	movwf	4055,c	;volatile
  3661  002158  0E00               	movlw	0
  3662  00215A  6ED6               	movwf	4054,c	;volatile
  3663  00215C  94F2               	bcf	intcon,2,c	;volatile
  3664  00215E  AE0F               	btfss	OpenTimer0@config,7,c
  3665  002160  D002               	goto	l521
  3666  002162  8AF2               	bsf	intcon,5,c	;volatile
  3667  002164  D001               	goto	l522
  3668  002166                     l521:
  3669  002166  9AF2               	bcf	intcon,5,c	;volatile
  3670  002168                     l522:
  3671  002168  8ED5               	bsf	4053,7,c	;volatile
  3672  00216A  0012               	return		;funcret
  3673  00216C                     __end_of_OpenTimer0:
  3674                           	opt stack 0
  3675                           stkptr	equ	0xFFC
  3676                           tblptru	equ	0xFF8
  3677                           tblptrh	equ	0xFF7
  3678                           tblptrl	equ	0xFF6
  3679                           tablat	equ	0xFF5
  3680                           intcon	equ	0xFF2
  3681                           postinc0	equ	0xFEE
  3682                           wreg	equ	0xFE8
  3683                           indf1	equ	0xFE7
  3684                           postinc1	equ	0xFE6
  3685                           fsr1h	equ	0xFE2
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           plusw2	equ	0xFDB
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _LVtrap *****************
  3695 ;; Defined at:
  3696 ;;		line 449 in file "../Robot Files/sumovore.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;		None               void
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		_gtrap
  3719 ;;		_openPORTD
  3720 ;;		_printf
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text30
  3727  00216C                     __ptext30:
  3728                           	opt stack 0
  3729  00216C                     _LVtrap:
  3730                           	opt stack 27
  3731                           
  3732                           ;sumovore.c: 451: printf("\\<LVD>");
  3733                           
  3734                           ;incstack = 0
  3735  00216C  0E66               	movlw	low STR_7
  3736  00216E  6E0F               	movwf	printf@f,c
  3737  002170  0E10               	movlw	high STR_7
  3738  002172  6E10               	movwf	printf@f+1,c
  3739  002174  EC1E  F010         	call	_printf	;wreg free
  3740                           
  3741                           ;sumovore.c: 452: openPORTD();
  3742  002178  EC84  F011         	call	_openPORTD	;wreg free
  3743                           
  3744                           ;sumovore.c: 453: PORTDbits.RD0=!1;
  3745  00217C  9083               	bcf	3971,0,c	;volatile
  3746                           
  3747                           ;sumovore.c: 454: PORTDbits.RD1=!0;
  3748  00217E  8283               	bsf	3971,1,c	;volatile
  3749                           
  3750                           ;sumovore.c: 455: PORTDbits.RD2=!0;
  3751  002180  8483               	bsf	3971,2,c	;volatile
  3752                           
  3753                           ;sumovore.c: 456: PORTDbits.RD3=!1;
  3754  002182  9683               	bcf	3971,3,c	;volatile
  3755                           
  3756                           ;sumovore.c: 457: PORTDbits.RD4=!0;
  3757  002184  8883               	bsf	3971,4,c	;volatile
  3758                           
  3759                           ;sumovore.c: 458: gtrap();
  3760  002186  ECF3  F00E         	call	_gtrap	;wreg free
  3761  00218A  0012               	return		;funcret
  3762  00218C                     __end_of_LVtrap:
  3763                           	opt stack 0
  3764                           stkptr	equ	0xFFC
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           intcon	equ	0xFF2
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           indf1	equ	0xFE7
  3773                           postinc1	equ	0xFE6
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           plusw2	equ	0xFDB
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function _printf *****************
  3784 ;; Defined at:
  3785 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3788 ;;		 -> STR_7(7), STR_6(10), STR_5(9), STR_4(9), 
  3789 ;;		 -> STR_3(6), STR_2(6), STR_1(64), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  tmpval          4    0        struct .
  3792 ;;  cp              3    0        PTR const unsigned char 
  3793 ;;  ap              2   16[COMRAM] PTR void [1]
  3794 ;;		 -> ?_printf(2), 
  3795 ;;  len             2    0        unsigned int 
  3796 ;;  val             2    0        unsigned int 
  3797 ;;  c               1   18[COMRAM] char 
  3798 ;;  flag            1    0        unsigned char 
  3799 ;;  prec            1    0        char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  2   14[COMRAM] int 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        5 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		_putch
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;;		_PORtask
  3821 ;;		_BORtask
  3822 ;;		_WDTtask
  3823 ;;		_STKFULtask
  3824 ;;		_RESETtask
  3825 ;;		_LVtrap
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text31
  3830  00203C                     __ptext31:
  3831                           	opt stack 0
  3832  00203C                     _printf:
  3833                           	opt stack 28
  3834                           
  3835                           ;doprnt.c: 466: va_list ap;
  3836                           ;doprnt.c: 499: signed char c;
  3837                           ;doprnt.c: 506: signed char prec;
  3838                           ;doprnt.c: 508: unsigned char flag;
  3839                           ;doprnt.c: 523: union {
  3840                           ;doprnt.c: 524: unsigned long vd;
  3841                           ;doprnt.c: 525: double integ;
  3842                           ;doprnt.c: 526: } tmpval;
  3843                           ;doprnt.c: 528: unsigned int val;
  3844                           ;doprnt.c: 529: unsigned len;
  3845                           ;doprnt.c: 530: const char * cp;
  3846                           ;doprnt.c: 533: *ap = __va_start();
  3847                           
  3848                           ;incstack = 0
  3849  00203C  0E11               	movlw	low (?_printf+2)
  3850  00203E  6E11               	movwf	printf@ap,c
  3851  002040  0E00               	movlw	high (?_printf+2)
  3852  002042  6E12               	movwf	printf@ap+1,c
  3853                           
  3854                           ;doprnt.c: 536: while(c = *f++) {
  3855  002044  D004               	goto	l2146
  3856  002046                     l2144:
  3857                           
  3858                           ;doprnt.c: 540: {
  3859                           ;doprnt.c: 541: (putch(c) );
  3860  002046  5013               	movf	printf@c,w,c
  3861  002048  EC89  F011         	call	_putch
  3862                           
  3863                           ;doprnt.c: 542: continue;
  3864  00204C  D000               	goto	l2146
  3865  00204E                     l2146:
  3866  00204E  C00F  FFF6         	movff	printf@f,tblptrl
  3867  002052  C010  FFF7         	movff	printf@f+1,tblptrh
  3868  002056  4A0F               	infsnz	printf@f,f,c
  3869  002058  2A10               	incf	printf@f+1,f,c
  3870  00205A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3871  00205A  6AF8               	clrf	tblptru,c
  3872  00205C                     	endif
  3873  00205C                     	if	0	;tblptru may be non-zero
  3874  00205C                     	endif
  3875  00205C  0008               	tblrd		*
  3876  00205E  CFF5 F013          	movff	tablat,printf@c
  3877  002062  5013               	movf	printf@c,w,c
  3878  002064  A4D8               	btfss	status,2,c
  3879  002066  D7EF               	goto	l2144
  3880                           
  3881                           ;doprnt.c: 1469: }
  3882                           ;doprnt.c: 1533: }
  3883                           ;doprnt.c: 1540: return 0;
  3884                           ;	Return value of _printf is never used
  3885  002068  0012               	return		;funcret
  3886  00206A                     __end_of_printf:
  3887                           	opt stack 0
  3888                           stkptr	equ	0xFFC
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           intcon	equ	0xFF2
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           indf1	equ	0xFE7
  3897                           postinc1	equ	0xFE6
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           indf2	equ	0xFDF
  3901                           postinc2	equ	0xFDE
  3902                           plusw2	equ	0xFDB
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _putch *****************
  3908 ;; Defined at:
  3909 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  c               1    wreg     unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  c               1    0[COMRAM] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;		None               void
  3916 ;; Registers used:
  3917 ;;		wreg
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_printf
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text32
  3938  002312                     __ptext32:
  3939                           	opt stack 0
  3940  002312                     _putch:
  3941                           	opt stack 28
  3942                           
  3943                           ;incstack = 0
  3944  002312  0012               	return		;funcret
  3945  002314                     __end_of_putch:
  3946                           	opt stack 0
  3947                           stkptr	equ	0xFFC
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           indf1	equ	0xFE7
  3956                           postinc1	equ	0xFE6
  3957                           fsr1h	equ	0xFE2
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           postinc2	equ	0xFDE
  3961                           plusw2	equ	0xFDB
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function _openPORTD *****************
  3967 ;; Defined at:
  3968 ;;		line 168 in file "../Robot Files/sumovore.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg, status,2
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    1
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_initialization
  3993 ;;		_LVtrap
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text33
  3998  002308                     __ptext33:
  3999                           	opt stack 0
  4000  002308                     _openPORTD:
  4001                           	opt stack 28
  4002                           
  4003                           ;sumovore.c: 170: TRISD = 0b01100000;
  4004                           
  4005                           ;incstack = 0
  4006  002308  0E60               	movlw	96
  4007  00230A  6E95               	movwf	3989,c	;volatile
  4008  00230C  0012               	return		;funcret
  4009  00230E                     __end_of_openPORTD:
  4010                           	opt stack 0
  4011                           stkptr	equ	0xFFC
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           intcon	equ	0xFF2
  4017                           postinc0	equ	0xFEE
  4018                           wreg	equ	0xFE8
  4019                           indf1	equ	0xFE7
  4020                           postinc1	equ	0xFE6
  4021                           fsr1h	equ	0xFE2
  4022                           fsr1l	equ	0xFE1
  4023                           indf2	equ	0xFDF
  4024                           postinc2	equ	0xFDE
  4025                           plusw2	equ	0xFDB
  4026                           fsr2h	equ	0xFDA
  4027                           fsr2l	equ	0xFD9
  4028                           status	equ	0xFD8
  4029                           
  4030 ;; *************** function _gtrap *****************
  4031 ;; Defined at:
  4032 ;;		line 464 in file "../Robot Files/sumovore.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  count           4   14[COMRAM] unsigned long 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;		None               void
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:        4 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_BORtask
  4057 ;;		_WDTtask
  4058 ;;		_STKFULtask
  4059 ;;		_RESETtask
  4060 ;;		_LVtrap
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text34
  4065  001DE6                     __ptext34:
  4066                           	opt stack 0
  4067  001DE6                     _gtrap:
  4068                           	opt stack 26
  4069                           
  4070                           ;sumovore.c: 466: unsigned long count=0;
  4071                           
  4072                           ;incstack = 0
  4073  001DE6  0E00               	movlw	0
  4074  001DE8  6E0F               	movwf	gtrap@count,c
  4075  001DEA  0E00               	movlw	0
  4076  001DEC  6E10               	movwf	gtrap@count+1,c
  4077  001DEE  0E00               	movlw	0
  4078  001DF0  6E11               	movwf	gtrap@count+2,c
  4079  001DF2  0E00               	movlw	0
  4080  001DF4  6E12               	movwf	gtrap@count+3,c
  4081  001DF6                     l359:
  4082  001DF6  0004               	clrwdt		;# 
  4083                           
  4084                           ;sumovore.c: 471: if (count==30000u)
  4085  001DF8  0E30               	movlw	48
  4086  001DFA  180F               	xorwf	gtrap@count,w,c
  4087  001DFC  E111               	bnz	l1258
  4088  001DFE  0E75               	movlw	117
  4089  001E00  1810               	xorwf	gtrap@count+1,w,c
  4090  001E02  1011               	iorwf	gtrap@count+2,w,c
  4091  001E04  1012               	iorwf	gtrap@count+3,w,c
  4092  001E06  A4D8               	btfss	status,2,c
  4093  001E08  D00B               	goto	l1258
  4094                           
  4095                           ;sumovore.c: 472: {
  4096                           ;sumovore.c: 473: count=0;
  4097  001E0A  0E00               	movlw	0
  4098  001E0C  6E0F               	movwf	gtrap@count,c
  4099  001E0E  0E00               	movlw	0
  4100  001E10  6E10               	movwf	gtrap@count+1,c
  4101  001E12  0E00               	movlw	0
  4102  001E14  6E11               	movwf	gtrap@count+2,c
  4103  001E16  0E00               	movlw	0
  4104  001E18  6E12               	movwf	gtrap@count+3,c
  4105                           
  4106                           ;sumovore.c: 474: PORTDbits.RD0=!1;
  4107  001E1A  9083               	bcf	3971,0,c	;volatile
  4108                           
  4109                           ;sumovore.c: 475: PORTDbits.RD1=!0;
  4110  001E1C  8283               	bsf	3971,1,c	;volatile
  4111                           
  4112                           ;sumovore.c: 476: }
  4113  001E1E  D00C               	goto	l1262
  4114  001E20                     l1258:
  4115                           
  4116                           ;sumovore.c: 477: else if (count==15000u)
  4117  001E20  0E98               	movlw	152
  4118  001E22  180F               	xorwf	gtrap@count,w,c
  4119  001E24  E109               	bnz	l1262
  4120  001E26  0E3A               	movlw	58
  4121  001E28  1810               	xorwf	gtrap@count+1,w,c
  4122  001E2A  1011               	iorwf	gtrap@count+2,w,c
  4123  001E2C  1012               	iorwf	gtrap@count+3,w,c
  4124  001E2E  A4D8               	btfss	status,2,c
  4125  001E30  D003               	goto	l1262
  4126                           
  4127                           ;sumovore.c: 478: {
  4128                           ;sumovore.c: 479: PORTDbits.RD0=!0;
  4129  001E32  8083               	bsf	3971,0,c	;volatile
  4130                           
  4131                           ;sumovore.c: 480: PORTDbits.RD1=!1;
  4132  001E34  9283               	bcf	3971,1,c	;volatile
  4133  001E36  D000               	goto	l1262
  4134  001E38                     l1262:
  4135                           
  4136                           ;sumovore.c: 481: }
  4137                           ;sumovore.c: 482: count++;
  4138  001E38  0E01               	movlw	1
  4139  001E3A  260F               	addwf	gtrap@count,f,c
  4140  001E3C  0E00               	movlw	0
  4141  001E3E  2210               	addwfc	gtrap@count+1,f,c
  4142  001E40  2211               	addwfc	gtrap@count+2,f,c
  4143  001E42  2212               	addwfc	gtrap@count+3,f,c
  4144  001E44  D7D8               	goto	l359
  4145  001E46  0012               	return		;funcret
  4146  001E48                     __end_of_gtrap:
  4147                           	opt stack 0
  4148                           stkptr	equ	0xFFC
  4149                           tblptru	equ	0xFF8
  4150                           tblptrh	equ	0xFF7
  4151                           tblptrl	equ	0xFF6
  4152                           tablat	equ	0xFF5
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           indf1	equ	0xFE7
  4157                           postinc1	equ	0xFE6
  4158                           fsr1h	equ	0xFE2
  4159                           fsr1l	equ	0xFE1
  4160                           indf2	equ	0xFDF
  4161                           postinc2	equ	0xFDE
  4162                           plusw2	equ	0xFDB
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _GetBackonTrack *****************
  4168 ;; Defined at:
  4169 ;;		line 217 in file "../Robot Files/main.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  error           2   56[COMRAM] PTR char 
  4172 ;;		 -> main@error(3), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  i               2   59[COMRAM] unsigned int 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;		None               void
  4177 ;; Registers used:
  4178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;Total ram usage:        5 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    5
  4191 ;; This function calls:
  4192 ;;		_MotorControl
  4193 ;;		_ReadTimer0
  4194 ;;		_SharpTurn
  4195 ;;		_WriteTimer0
  4196 ;;		_check_sensors
  4197 ;;		_motors_brake_all
  4198 ;;		_set_leds
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text35
  4205  001550                     __ptext35:
  4206                           	opt stack 0
  4207  001550                     _GetBackonTrack:
  4208                           	opt stack 25
  4209                           
  4210                           ;main.c: 219: if((error[2]>2) || (error[1]>2) || CW_rotation_flag)
  4211                           
  4212                           ;incstack = 0
  4213  001550  EE20 F002          	lfsr	2,2
  4214  001554  5039               	movf	GetBackonTrack@error,w,c
  4215  001556  26D9               	addwf	fsr2l,f,c
  4216  001558  503A               	movf	GetBackonTrack@error+1,w,c
  4217  00155A  22DA               	addwfc	fsr2h,f,c
  4218  00155C  50DF               	movf	indf2,w,c
  4219  00155E  0A80               	xorlw	128
  4220  001560  0F7D               	addlw	-131
  4221  001562  B0D8               	btfsc	status,0,c
  4222  001564  D00E               	goto	l2622
  4223  001566  EE20 F001          	lfsr	2,1
  4224  00156A  5039               	movf	GetBackonTrack@error,w,c
  4225  00156C  26D9               	addwf	fsr2l,f,c
  4226  00156E  503A               	movf	GetBackonTrack@error+1,w,c
  4227  001570  22DA               	addwfc	fsr2h,f,c
  4228  001572  50DF               	movf	indf2,w,c
  4229  001574  0A80               	xorlw	128
  4230  001576  0F7D               	addlw	-131
  4231  001578  B0D8               	btfsc	status,0,c
  4232  00157A  D003               	goto	l2622
  4233  00157C  504D               	movf	_CW_rotation_flag,w,c
  4234  00157E  B4D8               	btfsc	status,2,c
  4235  001580  D004               	goto	l2624
  4236  001582                     l2622:
  4237                           
  4238                           ;main.c: 220: SharpTurn(CW);
  4239  001582  0E01               	movlw	1
  4240  001584  EC23  F00D         	call	_SharpTurn
  4241  001588  D095               	goto	l151
  4242  00158A                     l2624:
  4243                           
  4244                           ;main.c: 221: else if((error[2]<-2) || (error[1]<-2) || CCW_rotation_flag)
  4245  00158A  EE20 F002          	lfsr	2,2
  4246  00158E  5039               	movf	GetBackonTrack@error,w,c
  4247  001590  26D9               	addwf	fsr2l,f,c
  4248  001592  503A               	movf	GetBackonTrack@error+1,w,c
  4249  001594  22DA               	addwfc	fsr2h,f,c
  4250  001596  50DF               	movf	indf2,w,c
  4251  001598  0A80               	xorlw	128
  4252  00159A  0F82               	addlw	130
  4253  00159C  A0D8               	btfss	status,0,c
  4254  00159E  D00E               	goto	l2630
  4255  0015A0  EE20 F001          	lfsr	2,1
  4256  0015A4  5039               	movf	GetBackonTrack@error,w,c
  4257  0015A6  26D9               	addwf	fsr2l,f,c
  4258  0015A8  503A               	movf	GetBackonTrack@error+1,w,c
  4259  0015AA  22DA               	addwfc	fsr2h,f,c
  4260  0015AC  50DF               	movf	indf2,w,c
  4261  0015AE  0A80               	xorlw	128
  4262  0015B0  0F82               	addlw	130
  4263  0015B2  A0D8               	btfss	status,0,c
  4264  0015B4  D003               	goto	l2630
  4265  0015B6  504C               	movf	_CCW_rotation_flag,w,c
  4266  0015B8  B4D8               	btfsc	status,2,c
  4267  0015BA  D004               	goto	l2632
  4268  0015BC                     l2630:
  4269                           
  4270                           ;main.c: 222: SharpTurn(CCW);
  4271  0015BC  0E00               	movlw	0
  4272  0015BE  EC23  F00D         	call	_SharpTurn
  4273  0015C2  D078               	goto	l151
  4274  0015C4                     l2632:
  4275                           
  4276                           ;main.c: 223: else
  4277                           ;main.c: 224: {
  4278                           ;main.c: 225: WriteTimer0(0);
  4279  0015C4  0E00               	movlw	0
  4280  0015C6  6E10               	movwf	WriteTimer0@timer0+1,c
  4281  0015C8  0E00               	movlw	0
  4282  0015CA  6E0F               	movwf	WriteTimer0@timer0,c
  4283  0015CC  EC5A  F011         	call	_WriteTimer0	;wreg free
  4284                           
  4285                           ;main.c: 226: TMR0IF = 0;
  4286  0015D0  94F2               	bcf	intcon,2,c	;volatile
  4287                           
  4288                           ;main.c: 227: while (!SeeLine.B && !(TMR0IF && (ReadTimer0()>59450)))
  4289  0015D2  D00D               	goto	l2640
  4290  0015D4                     l2636:
  4291                           
  4292                           ;main.c: 228: {
  4293                           ;main.c: 229: check_sensors();
  4294  0015D4  EC6B  F00C         	call	_check_sensors	;wreg free
  4295                           
  4296                           ;main.c: 230: set_leds();
  4297  0015D8  EC0B  F00E         	call	_set_leds	;wreg free
  4298                           
  4299                           ;main.c: 231: MotorControl(0,0);
  4300  0015DC  0E00               	movlw	0
  4301  0015DE  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4302  0015E0  0E00               	movlw	0
  4303  0015E2  6E2B               	movwf	MotorControl@delta_velocity,c
  4304  0015E4  0E00               	movlw	0
  4305  0015E6  6E2D               	movwf	MotorControl@speed_divider,c
  4306  0015E8  ECC2  F009         	call	_MotorControl	;wreg free
  4307  0015EC  D000               	goto	l2640
  4308  0015EE                     l2640:
  4309  0015EE  504E               	movf	_SeeLine,w,c
  4310  0015F0  0B1F               	andlw	31
  4311  0015F2  0900               	iorlw	0
  4312  0015F4  A4D8               	btfss	status,2,c
  4313  0015F6  D00C               	goto	l2646
  4314  0015F8  A4F2               	btfss	intcon,2,c	;volatile
  4315  0015FA  D7EC               	goto	l2636
  4316  0015FC  EC51  F011         	call	_ReadTimer0	;wreg free
  4317  001600  0E3B               	movlw	59
  4318  001602  5C0F               	subwf	?_ReadTimer0,w,c
  4319  001604  0EE8               	movlw	232
  4320  001606  5810               	subwfb	?_ReadTimer0+1,w,c
  4321  001608  B0D8               	btfsc	status,0,c
  4322  00160A  D002               	goto	l2646
  4323  00160C  D7E3               	goto	l2636
  4324  00160E  D000               	goto	l2646
  4325  001610                     l2646:
  4326                           
  4327                           ;main.c: 232: }
  4328                           ;main.c: 234: if(!SeeLine.B)
  4329  001610  504E               	movf	_SeeLine,w,c
  4330  001612  0B1F               	andlw	31
  4331  001614  0900               	iorlw	0
  4332  001616  A4D8               	btfss	status,2,c
  4333  001618  D04D               	goto	l151
  4334                           
  4335                           ;main.c: 235: {
  4336                           ;main.c: 236: motors_brake_all();
  4337  00161A  EC85  F010         	call	_motors_brake_all	;wreg free
  4338                           
  4339                           ;main.c: 237: _delay(50000);
  4340  00161E  0E41               	movlw	65
  4341  001620  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4342  001622  0EEE               	movlw	238
  4343  001624                     u2497:
  4344  001624  2EE8               	decfsz	wreg,f,c
  4345  001626  D7FE               	goto	u2497
  4346  001628  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4347  00162A  D7FC               	goto	u2497
  4348  00162C  D000               	nop2	
  4349                           
  4350                           ;main.c: 238: MotorControl(1600, TURN_SPEED_DIVIDER);
  4351  00162E  0E06               	movlw	6
  4352  001630  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4353  001632  0E40               	movlw	64
  4354  001634  6E2B               	movwf	MotorControl@delta_velocity,c
  4355  001636  0E09               	movlw	low _TURN_SPEED_DIVIDER
  4356  001638  6EF6               	movwf	tblptrl,c
  4357  00163A                     	if	1	;There is more than 1 active tblptr byte
  4358  00163A  0E10               	movlw	high _TURN_SPEED_DIVIDER
  4359  00163C  6EF7               	movwf	tblptrh,c
  4360  00163E                     	endif
  4361  00163E                     	if	1	;There are 3 active tblptr bytes
  4362  00163E  0E00               	movlw	low (_TURN_SPEED_DIVIDER shr (0+16))
  4363  001640  6EF8               	movwf	tblptru,c
  4364  001642                     	endif
  4365  001642  0008               	tblrd		*
  4366  001644  CFF5 F02D          	movff	tablat,MotorControl@speed_divider
  4367  001648  ECC2  F009         	call	_MotorControl	;wreg free
  4368                           
  4369                           ;main.c: 240: for(unsigned int i=0; i < TURN_TIME_ms; i++)
  4370  00164C  0E00               	movlw	0
  4371  00164E  6E3D               	movwf	GetBackonTrack@i+1,c
  4372  001650  0E00               	movlw	0
  4373  001652  6E3C               	movwf	GetBackonTrack@i,c
  4374  001654                     l2656:
  4375  001654  0E07               	movlw	low _TURN_TIME_ms
  4376  001656  6EF6               	movwf	tblptrl,c
  4377  001658                     	if	1	;There is more than 1 active tblptr byte
  4378  001658  0E10               	movlw	high _TURN_TIME_ms
  4379  00165A  6EF7               	movwf	tblptrh,c
  4380  00165C                     	endif
  4381  00165C                     	if	1	;There are 3 active tblptr bytes
  4382  00165C  0E00               	movlw	low (_TURN_TIME_ms shr (0+16))
  4383  00165E  6EF8               	movwf	tblptru,c
  4384  001660                     	endif
  4385  001660  0009               	tblrd		*+
  4386  001662  50F5               	movf	tablat,w,c
  4387  001664  5C3C               	subwf	GetBackonTrack@i,w,c
  4388  001666  0009               	tblrd		*+
  4389  001668  50F5               	movf	tablat,w,c
  4390  00166A  583D               	subwfb	GetBackonTrack@i+1,w,c
  4391  00166C  B0D8               	btfsc	status,0,c
  4392  00166E  D01B               	goto	l2670
  4393  001670  D001               	goto	l2660
  4394  001672  D019               	goto	l2670
  4395  001674                     l2660:
  4396                           
  4397                           ;main.c: 241: _delay(7991);
  4398  001674  0E0B               	movlw	11
  4399  001676  6E3B               	movwf	??_GetBackonTrack& (0+255),c
  4400  001678  0E5F               	movlw	95
  4401  00167A                     u2507:
  4402  00167A  2EE8               	decfsz	wreg,f,c
  4403  00167C  D7FE               	goto	u2507
  4404  00167E  2E3B               	decfsz	??_GetBackonTrack& (0+255),f,c
  4405  001680  D7FC               	goto	u2507
  4406  001682  D000               	nop2	
  4407  001684  4A3C               	infsnz	GetBackonTrack@i,f,c
  4408  001686  2A3D               	incf	GetBackonTrack@i+1,f,c
  4409  001688  D7E5               	goto	l2656
  4410                           
  4411                           ;main.c: 243: while (!SeeLine.B)
  4412  00168A  D00D               	goto	l2670
  4413  00168C                     l2666:
  4414                           
  4415                           ;main.c: 244: {
  4416                           ;main.c: 245: check_sensors();
  4417  00168C  EC6B  F00C         	call	_check_sensors	;wreg free
  4418                           
  4419                           ;main.c: 246: set_leds();
  4420  001690  EC0B  F00E         	call	_set_leds	;wreg free
  4421                           
  4422                           ;main.c: 247: MotorControl(0,0);
  4423  001694  0E00               	movlw	0
  4424  001696  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4425  001698  0E00               	movlw	0
  4426  00169A  6E2B               	movwf	MotorControl@delta_velocity,c
  4427  00169C  0E00               	movlw	0
  4428  00169E  6E2D               	movwf	MotorControl@speed_divider,c
  4429  0016A0  ECC2  F009         	call	_MotorControl	;wreg free
  4430  0016A4  D000               	goto	l2670
  4431  0016A6                     l2670:
  4432  0016A6  504E               	movf	_SeeLine,w,c
  4433  0016A8  0B1F               	andlw	31
  4434  0016AA  0900               	iorlw	0
  4435  0016AC  A4D8               	btfss	status,2,c
  4436  0016AE  D002               	goto	l151
  4437  0016B0  D7ED               	goto	l2666
  4438  0016B2  D000               	goto	l151
  4439  0016B4                     l151:
  4440  0016B4  0012               	return		;funcret
  4441  0016B6                     __end_of_GetBackonTrack:
  4442                           	opt stack 0
  4443                           stkptr	equ	0xFFC
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           intcon	equ	0xFF2
  4449                           postinc0	equ	0xFEE
  4450                           wreg	equ	0xFE8
  4451                           indf1	equ	0xFE7
  4452                           postinc1	equ	0xFE6
  4453                           fsr1h	equ	0xFE2
  4454                           fsr1l	equ	0xFE1
  4455                           indf2	equ	0xFDF
  4456                           postinc2	equ	0xFDE
  4457                           plusw2	equ	0xFDB
  4458                           fsr2h	equ	0xFDA
  4459                           fsr2l	equ	0xFD9
  4460                           status	equ	0xFD8
  4461                           
  4462 ;; *************** function _SharpTurn *****************
  4463 ;; Defined at:
  4464 ;;		line 254 in file "../Robot Files/main.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  direction       1    wreg     enum E4173
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  direction       1   53[COMRAM] enum E4173
  4469 ;;  delta_veloci    2   54[COMRAM] int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;		None               void
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;Total ram usage:        4 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    4
  4486 ;; This function calls:
  4487 ;;		_MotorControl
  4488 ;;		_check_sensors
  4489 ;;		_motors_brake_all
  4490 ;;		_set_leds
  4491 ;; This function is called by:
  4492 ;;		_GetBackonTrack
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text36
  4497  001A46                     __ptext36:
  4498                           	opt stack 0
  4499  001A46                     _SharpTurn:
  4500                           	opt stack 25
  4501                           
  4502                           ;incstack = 0
  4503                           ;SharpTurn@direction stored from wreg
  4504  001A46  6E36               	movwf	SharpTurn@direction,c
  4505                           
  4506                           ;main.c: 256: int delta_velocity;
  4507                           ;main.c: 258: motors_brake_all();
  4508  001A48  EC85  F010         	call	_motors_brake_all	;wreg free
  4509                           
  4510                           ;main.c: 259: _delay(50000);
  4511  001A4C  0E41               	movlw	65
  4512  001A4E  6E35               	movwf	??_SharpTurn& (0+255),c
  4513  001A50  0EEE               	movlw	238
  4514  001A52                     u2517:
  4515  001A52  2EE8               	decfsz	wreg,f,c
  4516  001A54  D7FE               	goto	u2517
  4517  001A56  2E35               	decfsz	??_SharpTurn& (0+255),f,c
  4518  001A58  D7FC               	goto	u2517
  4519  001A5A  D000               	nop2	
  4520                           
  4521                           ;main.c: 260: if(direction)
  4522  001A5C  5036               	movf	SharpTurn@direction,w,c
  4523  001A5E  B4D8               	btfsc	status,2,c
  4524  001A60  D022               	goto	l2394
  4525                           
  4526                           ;main.c: 261: {
  4527                           ;main.c: 262: delta_velocity = 1600;
  4528  001A62  0E06               	movlw	6
  4529  001A64  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4530  001A66  0E40               	movlw	64
  4531  001A68  6E37               	movwf	SharpTurn@delta_velocity,c
  4532                           
  4533                           ;main.c: 263: while (!SeeLine.b.CntLeft && delta_velocity)
  4534  001A6A  D012               	goto	l2388
  4535  001A6C                     l2380:
  4536                           
  4537                           ;main.c: 265: {
  4538                           ;main.c: 266: check_sensors();
  4539  001A6C  EC6B  F00C         	call	_check_sensors	;wreg free
  4540                           
  4541                           ;main.c: 267: set_leds();
  4542  001A70  EC0B  F00E         	call	_set_leds	;wreg free
  4543                           
  4544                           ;main.c: 268: MotorControl(delta_velocity,0);
  4545  001A74  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4546  001A78  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4547  001A7C  0E00               	movlw	0
  4548  001A7E  6E2D               	movwf	MotorControl@speed_divider,c
  4549  001A80  ECC2  F009         	call	_MotorControl	;wreg free
  4550                           
  4551                           ;main.c: 269: if (SeeLine.b.Center)
  4552  001A84  A44E               	btfss	_SeeLine,2,c
  4553  001A86  D004               	goto	l2388
  4554                           
  4555                           ;main.c: 270: delta_velocity--;
  4556  001A88  0637               	decf	SharpTurn@delta_velocity,f,c
  4557  001A8A  A0D8               	btfss	status,0,c
  4558  001A8C  0638               	decf	SharpTurn@delta_velocity+1,f,c
  4559  001A8E  D000               	goto	l2388
  4560  001A90                     l2388:
  4561  001A90  B64E               	btfsc	_SeeLine,3,c
  4562  001A92  D006               	goto	l2392
  4563  001A94  5037               	movf	SharpTurn@delta_velocity,w,c
  4564  001A96  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4565  001A98  B4D8               	btfsc	status,2,c
  4566  001A9A  D002               	goto	l2392
  4567  001A9C  D7E7               	goto	l2380
  4568  001A9E  D000               	goto	l2392
  4569  001AA0                     l2392:
  4570                           
  4571                           ;main.c: 271: }
  4572                           ;main.c: 272: CW_rotation_flag = 0;
  4573  001AA0  0E00               	movlw	0
  4574  001AA2  6E4D               	movwf	_CW_rotation_flag,c
  4575                           
  4576                           ;main.c: 273: }
  4577  001AA4  D020               	goto	l161
  4578  001AA6                     l2394:
  4579                           
  4580                           ;main.c: 274: else
  4581                           ;main.c: 275: {
  4582                           ;main.c: 276: delta_velocity = -1600;
  4583  001AA6  0EF9               	movlw	249
  4584  001AA8  6E38               	movwf	SharpTurn@delta_velocity+1,c
  4585  001AAA  0EC0               	movlw	192
  4586  001AAC  6E37               	movwf	SharpTurn@delta_velocity,c
  4587                           
  4588                           ;main.c: 277: while (!SeeLine.b.CntRight && delta_velocity)
  4589  001AAE  D011               	goto	l2404
  4590  001AB0                     l2396:
  4591                           
  4592                           ;main.c: 279: {
  4593                           ;main.c: 280: check_sensors();
  4594  001AB0  EC6B  F00C         	call	_check_sensors	;wreg free
  4595                           
  4596                           ;main.c: 281: set_leds();
  4597  001AB4  EC0B  F00E         	call	_set_leds	;wreg free
  4598                           
  4599                           ;main.c: 282: MotorControl(delta_velocity,0);
  4600  001AB8  C037  F02B         	movff	SharpTurn@delta_velocity,MotorControl@delta_velocity
  4601  001ABC  C038  F02C         	movff	SharpTurn@delta_velocity+1,MotorControl@delta_velocity+1
  4602  001AC0  0E00               	movlw	0
  4603  001AC2  6E2D               	movwf	MotorControl@speed_divider,c
  4604  001AC4  ECC2  F009         	call	_MotorControl	;wreg free
  4605                           
  4606                           ;main.c: 283: if (SeeLine.b.Center)
  4607  001AC8  A44E               	btfss	_SeeLine,2,c
  4608  001ACA  D003               	goto	l2404
  4609                           
  4610                           ;main.c: 284: delta_velocity++;
  4611  001ACC  4A37               	infsnz	SharpTurn@delta_velocity,f,c
  4612  001ACE  2A38               	incf	SharpTurn@delta_velocity+1,f,c
  4613  001AD0  D000               	goto	l2404
  4614  001AD2                     l2404:
  4615  001AD2  B24E               	btfsc	_SeeLine,1,c
  4616  001AD4  D006               	goto	l2408
  4617  001AD6  5037               	movf	SharpTurn@delta_velocity,w,c
  4618  001AD8  1038               	iorwf	SharpTurn@delta_velocity+1,w,c
  4619  001ADA  B4D8               	btfsc	status,2,c
  4620  001ADC  D002               	goto	l2408
  4621  001ADE  D7E8               	goto	l2396
  4622  001AE0  D000               	goto	l2408
  4623  001AE2                     l2408:
  4624                           
  4625                           ;main.c: 285: }
  4626                           ;main.c: 286: CCW_rotation_flag = 0;
  4627  001AE2  0E00               	movlw	0
  4628  001AE4  6E4C               	movwf	_CCW_rotation_flag,c
  4629  001AE6                     l161:
  4630                           
  4631                           ;main.c: 287: }
  4632                           ;main.c: 288: I = 0;
  4633  001AE6  0E00               	movlw	0
  4634  001AE8  6E49               	movwf	_I+1,c
  4635  001AEA  0E00               	movlw	0
  4636  001AEC  6E48               	movwf	_I,c
  4637  001AEE  0012               	return		;funcret
  4638  001AF0                     __end_of_SharpTurn:
  4639                           	opt stack 0
  4640                           stkptr	equ	0xFFC
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           intcon	equ	0xFF2
  4646                           postinc0	equ	0xFEE
  4647                           wreg	equ	0xFE8
  4648                           indf1	equ	0xFE7
  4649                           postinc1	equ	0xFE6
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           indf2	equ	0xFDF
  4653                           postinc2	equ	0xFDE
  4654                           plusw2	equ	0xFDB
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function _ReadTimer0 *****************
  4660 ;; Defined at:
  4661 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  timer           2   16[COMRAM] struct Timers
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  2   14[COMRAM] unsigned int 
  4668 ;; Registers used:
  4669 ;;		None
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;Total ram usage:        4 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_PID_LineFollowing
  4686 ;;		_GetBackonTrack
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text37
  4691  0022A2                     __ptext37:
  4692                           	opt stack 0
  4693  0022A2                     _ReadTimer0:
  4694                           	opt stack 28
  4695                           
  4696                           ;incstack = 0
  4697  0022A2  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4698  0022A6  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4699  0022AA  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4700  0022AE  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4701  0022B2  0012               	return		;funcret
  4702  0022B4                     __end_of_ReadTimer0:
  4703                           	opt stack 0
  4704                           stkptr	equ	0xFFC
  4705                           tblptru	equ	0xFF8
  4706                           tblptrh	equ	0xFF7
  4707                           tblptrl	equ	0xFF6
  4708                           tablat	equ	0xFF5
  4709                           intcon	equ	0xFF2
  4710                           postinc0	equ	0xFEE
  4711                           wreg	equ	0xFE8
  4712                           indf1	equ	0xFE7
  4713                           postinc1	equ	0xFE6
  4714                           fsr1h	equ	0xFE2
  4715                           fsr1l	equ	0xFE1
  4716                           indf2	equ	0xFDF
  4717                           postinc2	equ	0xFDE
  4718                           plusw2	equ	0xFDB
  4719                           fsr2h	equ	0xFDA
  4720                           fsr2l	equ	0xFD9
  4721                           status	equ	0xFD8
  4722                           
  4723 ;; *************** function _FilterNearbyTrack *****************
  4724 ;; Defined at:
  4725 ;;		line 314 in file "../Robot Files/main.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;		None               void
  4732 ;; Registers used:
  4733 ;;		None
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_main
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text38
  4754  00218C                     __ptext38:
  4755                           	opt stack 0
  4756  00218C                     _FilterNearbyTrack:
  4757                           	opt stack 29
  4758                           
  4759                           ;main.c: 318: if((SeeLine.b.Left && !SeeLine.b.CntLeft) && (SeeLine.b.Center || SeeLine.
      +                          b.CntRight))
  4760                           
  4761                           ;incstack = 0
  4762  00218C  B84E               	btfsc	_SeeLine,4,c
  4763  00218E  B64E               	btfsc	_SeeLine,3,c
  4764  002190  D003               	goto	l183
  4765  002192  A44E               	btfss	_SeeLine,2,c
  4766  002194  B24E               	btfsc	_SeeLine,1,c
  4767                           
  4768                           ;main.c: 319: SeeLine.b.Left = 0;
  4769  002196  984E               	bcf	_SeeLine,4,c
  4770  002198                     l183:
  4771                           
  4772                           ;main.c: 323: if((SeeLine.b.Right && !SeeLine.b.CntRight) && (SeeLine.b.Center || SeeLin
      +                          e.b.CntLeft))
  4773  002198  B04E               	btfsc	_SeeLine,0,c
  4774  00219A  B24E               	btfsc	_SeeLine,1,c
  4775  00219C  D006               	goto	l189
  4776  00219E  B44E               	btfsc	_SeeLine,2,c
  4777  0021A0  D002               	goto	l188
  4778  0021A2  A64E               	btfss	_SeeLine,3,c
  4779  0021A4  D002               	goto	l189
  4780  0021A6                     l188:
  4781                           
  4782                           ;main.c: 324: SeeLine.b.Right = 0;
  4783  0021A6  904E               	bcf	_SeeLine,0,c
  4784  0021A8  D000               	goto	l189
  4785  0021AA                     l189:
  4786  0021AA  0012               	return		;funcret
  4787  0021AC                     __end_of_FilterNearbyTrack:
  4788                           	opt stack 0
  4789                           stkptr	equ	0xFFC
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           intcon	equ	0xFF2
  4795                           postinc0	equ	0xFEE
  4796                           wreg	equ	0xFE8
  4797                           indf1	equ	0xFE7
  4798                           postinc1	equ	0xFE6
  4799                           fsr1h	equ	0xFE2
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           postinc2	equ	0xFDE
  4803                           plusw2	equ	0xFDB
  4804                           fsr2h	equ	0xFDA
  4805                           fsr2l	equ	0xFD9
  4806                           status	equ	0xFD8
  4807                           
  4808 ;; *************** function _AllSensorsTriggered *****************
  4809 ;; Defined at:
  4810 ;;		line 292 in file "../Robot Files/main.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;		None               void
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    4
  4831 ;; This function calls:
  4832 ;;		_MotorControl
  4833 ;;		_WriteTimer0
  4834 ;;		_check_sensors
  4835 ;;		_motors_brake_all
  4836 ;;		_set_leds
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text39
  4843  001D82                     __ptext39:
  4844                           	opt stack 0
  4845  001D82                     _AllSensorsTriggered:
  4846                           	opt stack 26
  4847                           
  4848                           ;main.c: 294: WriteTimer0(0);
  4849                           
  4850                           ;incstack = 0
  4851  001D82  0E00               	movlw	0
  4852  001D84  6E10               	movwf	WriteTimer0@timer0+1,c
  4853  001D86  0E00               	movlw	0
  4854  001D88  6E0F               	movwf	WriteTimer0@timer0,c
  4855  001D8A  EC5A  F011         	call	_WriteTimer0	;wreg free
  4856                           
  4857                           ;main.c: 295: TMR0IF = 0;
  4858  001D8E  94F2               	bcf	intcon,2,c	;volatile
  4859                           
  4860                           ;main.c: 296: while (SeeLine.B==0b11111u && !(TMR0IF))
  4861  001D90  D00D               	goto	l2680
  4862  001D92                     l2676:
  4863                           
  4864                           ;main.c: 297: {
  4865                           ;main.c: 298: check_sensors();
  4866  001D92  EC6B  F00C         	call	_check_sensors	;wreg free
  4867                           
  4868                           ;main.c: 299: set_leds();
  4869  001D96  EC0B  F00E         	call	_set_leds	;wreg free
  4870                           
  4871                           ;main.c: 300: MotorControl(0,0);
  4872  001D9A  0E00               	movlw	0
  4873  001D9C  6E2C               	movwf	MotorControl@delta_velocity+1,c
  4874  001D9E  0E00               	movlw	0
  4875  001DA0  6E2B               	movwf	MotorControl@delta_velocity,c
  4876  001DA2  0E00               	movlw	0
  4877  001DA4  6E2D               	movwf	MotorControl@speed_divider,c
  4878  001DA6  ECC2  F009         	call	_MotorControl	;wreg free
  4879  001DAA  D000               	goto	l2680
  4880  001DAC                     l2680:
  4881  001DAC  504E               	movf	_SeeLine,w,c
  4882  001DAE  0B1F               	andlw	31
  4883  001DB0  0A1F               	xorlw	31
  4884  001DB2  B4D8               	btfsc	status,2,c
  4885  001DB4  B4F2               	btfsc	intcon,2,c	;volatile
  4886  001DB6  D002               	goto	l2684
  4887  001DB8  D7EC               	goto	l2676
  4888  001DBA  D000               	goto	l2684
  4889  001DBC                     l2684:
  4890                           
  4891                           ;main.c: 301: }
  4892                           ;main.c: 302: if (SeeLine.B==0b11111u)
  4893  001DBC  504E               	movf	_SeeLine,w,c
  4894  001DBE  0B1F               	andlw	31
  4895  001DC0  0A1F               	xorlw	31
  4896  001DC2  A4D8               	btfss	status,2,c
  4897  001DC4  D00F               	goto	l180
  4898                           
  4899                           ;main.c: 303: {
  4900                           ;main.c: 304: motors_brake_all();
  4901  001DC6  EC85  F010         	call	_motors_brake_all	;wreg free
  4902                           
  4903                           ;main.c: 305: while (SeeLine.B==0b11111u)
  4904  001DCA  D005               	goto	l2690
  4905  001DCC                     l2688:
  4906                           
  4907                           ;main.c: 306: {
  4908                           ;main.c: 307: check_sensors();
  4909  001DCC  EC6B  F00C         	call	_check_sensors	;wreg free
  4910                           
  4911                           ;main.c: 308: set_leds();
  4912  001DD0  EC0B  F00E         	call	_set_leds	;wreg free
  4913  001DD4  D000               	goto	l2690
  4914  001DD6                     l2690:
  4915  001DD6  504E               	movf	_SeeLine,w,c
  4916  001DD8  0B1F               	andlw	31
  4917  001DDA  0A1F               	xorlw	31
  4918  001DDC  A4D8               	btfss	status,2,c
  4919  001DDE  D002               	goto	l180
  4920  001DE0  D7F5               	goto	l2688
  4921  001DE2  D000               	goto	l180
  4922  001DE4                     l180:
  4923  001DE4  0012               	return		;funcret
  4924  001DE6                     __end_of_AllSensorsTriggered:
  4925                           	opt stack 0
  4926                           stkptr	equ	0xFFC
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           intcon	equ	0xFF2
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           postinc1	equ	0xFE6
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           plusw2	equ	0xFDB
  4941                           fsr2h	equ	0xFDA
  4942                           fsr2l	equ	0xFD9
  4943                           status	equ	0xFD8
  4944                           
  4945 ;; *************** function _set_leds *****************
  4946 ;; Defined at:
  4947 ;;		line 256 in file "../Robot Files/sumovore.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;		None               void
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;Total ram usage:        1 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;;		_GetBackonTrack
  4973 ;;		_SharpTurn
  4974 ;;		_AllSensorsTriggered
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text40
  4979  001C16                     __ptext40:
  4980                           	opt stack 0
  4981  001C16                     _set_leds:
  4982                           	opt stack 29
  4983                           
  4984                           ;sumovore.c: 258: PORTDbits.RD0=!SeeLine.b.Left;
  4985                           
  4986                           ;incstack = 0
  4987  001C16  B84E               	btfsc	_SeeLine,4,c
  4988  001C18  D003               	goto	u220
  4989  001C1A  6A0F               	clrf	??_set_leds& (0+255),c
  4990  001C1C  2A0F               	incf	??_set_leds& (0+255),f,c
  4991  001C1E  D001               	goto	u238
  4992  001C20                     u220:
  4993  001C20  6A0F               	clrf	??_set_leds& (0+255),c
  4994  001C22                     u238:
  4995  001C22  5083               	movf	3971,w,c	;volatile
  4996  001C24  180F               	xorwf	??_set_leds,w,c
  4997  001C26  0BFE               	andlw	-2
  4998  001C28  180F               	xorwf	??_set_leds,w,c
  4999  001C2A  6E83               	movwf	3971,c	;volatile
  5000                           
  5001                           ;sumovore.c: 259: PORTDbits.RD1=!SeeLine.b.CntLeft;
  5002  001C2C  B64E               	btfsc	_SeeLine,3,c
  5003  001C2E  D003               	goto	u240
  5004  001C30  6A0F               	clrf	??_set_leds& (0+255),c
  5005  001C32  2A0F               	incf	??_set_leds& (0+255),f,c
  5006  001C34  D001               	goto	u258
  5007  001C36                     u240:
  5008  001C36  6A0F               	clrf	??_set_leds& (0+255),c
  5009  001C38                     u258:
  5010  001C38  460F               	rlncf	??_set_leds,f,c
  5011  001C3A  5083               	movf	3971,w,c	;volatile
  5012  001C3C  180F               	xorwf	??_set_leds,w,c
  5013  001C3E  0BFD               	andlw	-3
  5014  001C40  180F               	xorwf	??_set_leds,w,c
  5015  001C42  6E83               	movwf	3971,c	;volatile
  5016                           
  5017                           ;sumovore.c: 260: PORTDbits.RD2=!SeeLine.b.Center;
  5018  001C44  B44E               	btfsc	_SeeLine,2,c
  5019  001C46  D003               	goto	u260
  5020  001C48  6A0F               	clrf	??_set_leds& (0+255),c
  5021  001C4A  2A0F               	incf	??_set_leds& (0+255),f,c
  5022  001C4C  D001               	goto	u278
  5023  001C4E                     u260:
  5024  001C4E  6A0F               	clrf	??_set_leds& (0+255),c
  5025  001C50                     u278:
  5026  001C50  460F               	rlncf	??_set_leds,f,c
  5027  001C52  460F               	rlncf	??_set_leds,f,c
  5028  001C54  5083               	movf	3971,w,c	;volatile
  5029  001C56  180F               	xorwf	??_set_leds,w,c
  5030  001C58  0BFB               	andlw	-5
  5031  001C5A  180F               	xorwf	??_set_leds,w,c
  5032  001C5C  6E83               	movwf	3971,c	;volatile
  5033                           
  5034                           ;sumovore.c: 261: PORTDbits.RD3=!SeeLine.b.CntRight;
  5035  001C5E  B24E               	btfsc	_SeeLine,1,c
  5036  001C60  D003               	goto	u280
  5037  001C62  6A0F               	clrf	??_set_leds& (0+255),c
  5038  001C64  2A0F               	incf	??_set_leds& (0+255),f,c
  5039  001C66  D001               	goto	u298
  5040  001C68                     u280:
  5041  001C68  6A0F               	clrf	??_set_leds& (0+255),c
  5042  001C6A                     u298:
  5043  001C6A  460F               	rlncf	??_set_leds,f,c
  5044  001C6C  460F               	rlncf	??_set_leds,f,c
  5045  001C6E  460F               	rlncf	??_set_leds,f,c
  5046  001C70  5083               	movf	3971,w,c	;volatile
  5047  001C72  180F               	xorwf	??_set_leds,w,c
  5048  001C74  0BF7               	andlw	-9
  5049  001C76  180F               	xorwf	??_set_leds,w,c
  5050  001C78  6E83               	movwf	3971,c	;volatile
  5051                           
  5052                           ;sumovore.c: 262: PORTDbits.RD4=!SeeLine.b.Right;
  5053  001C7A  B04E               	btfsc	_SeeLine,0,c
  5054  001C7C  D003               	goto	u300
  5055  001C7E  6A0F               	clrf	??_set_leds& (0+255),c
  5056  001C80  2A0F               	incf	??_set_leds& (0+255),f,c
  5057  001C82  D001               	goto	u318
  5058  001C84                     u300:
  5059  001C84  6A0F               	clrf	??_set_leds& (0+255),c
  5060  001C86                     u318:
  5061  001C86  3A0F               	swapf	??_set_leds,f,c
  5062  001C88  5083               	movf	3971,w,c	;volatile
  5063  001C8A  180F               	xorwf	??_set_leds,w,c
  5064  001C8C  0BEF               	andlw	-17
  5065  001C8E  180F               	xorwf	??_set_leds,w,c
  5066  001C90  6E83               	movwf	3971,c	;volatile
  5067  001C92  0012               	return		;funcret
  5068  001C94                     __end_of_set_leds:
  5069                           	opt stack 0
  5070                           stkptr	equ	0xFFC
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           wreg	equ	0xFE8
  5078                           indf1	equ	0xFE7
  5079                           postinc1	equ	0xFE6
  5080                           fsr1h	equ	0xFE2
  5081                           fsr1l	equ	0xFE1
  5082                           indf2	equ	0xFDF
  5083                           postinc2	equ	0xFDE
  5084                           plusw2	equ	0xFDB
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _motors_brake_all *****************
  5090 ;; Defined at:
  5091 ;;		line 219 in file "../Robot Files/sumovore.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;		None               void
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;Total ram usage:        0 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    2
  5112 ;; This function calls:
  5113 ;;		_SetDCPWM1
  5114 ;;		_SetDCPWM2
  5115 ;; This function is called by:
  5116 ;;		_GetBackonTrack
  5117 ;;		_SharpTurn
  5118 ;;		_AllSensorsTriggered
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text41
  5123  00210A                     __ptext41:
  5124                           	opt stack 0
  5125  00210A                     _motors_brake_all:
  5126                           	opt stack 27
  5127                           
  5128                           ;sumovore.c: 221: SetDCPWM1(800u );
  5129                           
  5130                           ;incstack = 0
  5131  00210A  0E03               	movlw	3
  5132  00210C  6E10               	movwf	SetDCPWM1@dutycycle+1,c
  5133  00210E  0E20               	movlw	32
  5134  002110  6E0F               	movwf	SetDCPWM1@dutycycle,c
  5135  002112  ECE5  F00F         	call	_SetDCPWM1	;wreg free
  5136                           
  5137                           ;sumovore.c: 222: SetDCPWM2(800u );
  5138  002116  0E03               	movlw	3
  5139  002118  6E10               	movwf	SetDCPWM2@dutycycle+1,c
  5140  00211A  0E20               	movlw	32
  5141  00211C  6E0F               	movwf	SetDCPWM2@dutycycle,c
  5142  00211E  ECC8  F00F         	call	_SetDCPWM2	;wreg free
  5143                           
  5144                           ;sumovore.c: 223: PORTEbits.RE1 = 0b0;
  5145  002122  9284               	bcf	3972,1,c	;volatile
  5146                           
  5147                           ;sumovore.c: 224: PORTCbits.RC0 = 0b0;
  5148  002124  9082               	bcf	3970,0,c	;volatile
  5149                           
  5150                           ;sumovore.c: 225: PORTEbits.RE0 = 0b0;
  5151  002126  9084               	bcf	3972,0,c	;volatile
  5152                           
  5153                           ;sumovore.c: 226: PORTCbits.RC5 = 0b0;
  5154  002128  9A82               	bcf	3970,5,c	;volatile
  5155  00212A  0012               	return		;funcret
  5156  00212C                     __end_of_motors_brake_all:
  5157                           	opt stack 0
  5158                           stkptr	equ	0xFFC
  5159                           tblptru	equ	0xFF8
  5160                           tblptrh	equ	0xFF7
  5161                           tblptrl	equ	0xFF6
  5162                           tablat	equ	0xFF5
  5163                           intcon	equ	0xFF2
  5164                           postinc0	equ	0xFEE
  5165                           wreg	equ	0xFE8
  5166                           indf1	equ	0xFE7
  5167                           postinc1	equ	0xFE6
  5168                           fsr1h	equ	0xFE2
  5169                           fsr1l	equ	0xFE1
  5170                           indf2	equ	0xFDF
  5171                           postinc2	equ	0xFDE
  5172                           plusw2	equ	0xFDB
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _check_sensors *****************
  5178 ;; Defined at:
  5179 ;;		line 242 in file "../Robot Files/sumovore.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;		None               void
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        1 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    3
  5200 ;; This function calls:
  5201 ;;		_adc
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;;		_GetBackonTrack
  5205 ;;		_SharpTurn
  5206 ;;		_AllSensorsTriggered
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text42
  5211  0018D6                     __ptext42:
  5212                           	opt stack 0
  5213  0018D6                     _check_sensors:
  5214                           	opt stack 27
  5215                           
  5216                           ;sumovore.c: 244: SeeLine.b.Left = ( adc(0b10000111) > threshold );
  5217                           
  5218                           ;incstack = 0
  5219  0018D6  0E87               	movlw	135
  5220  0018D8  EC0F  F011         	call	_adc
  5221  0018DC  5013               	movf	?_adc,w,c
  5222  0018DE  5C4A               	subwf	_threshold,w,c
  5223  0018E0  5014               	movf	?_adc+1,w,c
  5224  0018E2  584B               	subwfb	_threshold+1,w,c
  5225  0018E4  B0D8               	btfsc	status,0,c
  5226  0018E6  D003               	goto	u1560
  5227  0018E8  6A16               	clrf	??_check_sensors& (0+255),c
  5228  0018EA  2A16               	incf	??_check_sensors& (0+255),f,c
  5229  0018EC  D001               	goto	u1578
  5230  0018EE                     u1560:
  5231  0018EE  6A16               	clrf	??_check_sensors& (0+255),c
  5232  0018F0                     u1578:
  5233  0018F0  3A16               	swapf	??_check_sensors,f,c
  5234  0018F2  504E               	movf	_SeeLine,w,c
  5235  0018F4  1816               	xorwf	??_check_sensors,w,c
  5236  0018F6  0BEF               	andlw	-17
  5237  0018F8  1816               	xorwf	??_check_sensors,w,c
  5238  0018FA  6E4E               	movwf	_SeeLine,c
  5239                           
  5240                           ;sumovore.c: 245: SeeLine.b.CntLeft = ( adc(0b10001111) > threshold );
  5241  0018FC  0E8F               	movlw	143
  5242  0018FE  EC0F  F011         	call	_adc
  5243  001902  5013               	movf	?_adc,w,c
  5244  001904  5C4A               	subwf	_threshold,w,c
  5245  001906  5014               	movf	?_adc+1,w,c
  5246  001908  584B               	subwfb	_threshold+1,w,c
  5247  00190A  B0D8               	btfsc	status,0,c
  5248  00190C  D003               	goto	u1580
  5249  00190E  6A16               	clrf	??_check_sensors& (0+255),c
  5250  001910  2A16               	incf	??_check_sensors& (0+255),f,c
  5251  001912  D001               	goto	u1598
  5252  001914                     u1580:
  5253  001914  6A16               	clrf	??_check_sensors& (0+255),c
  5254  001916                     u1598:
  5255  001916  4616               	rlncf	??_check_sensors,f,c
  5256  001918  4616               	rlncf	??_check_sensors,f,c
  5257  00191A  4616               	rlncf	??_check_sensors,f,c
  5258  00191C  504E               	movf	_SeeLine,w,c
  5259  00191E  1816               	xorwf	??_check_sensors,w,c
  5260  001920  0BF7               	andlw	-9
  5261  001922  1816               	xorwf	??_check_sensors,w,c
  5262  001924  6E4E               	movwf	_SeeLine,c
  5263                           
  5264                           ;sumovore.c: 246: SeeLine.b.Center = ( adc(0b10010111) > threshold );
  5265  001926  0E97               	movlw	151
  5266  001928  EC0F  F011         	call	_adc
  5267  00192C  5013               	movf	?_adc,w,c
  5268  00192E  5C4A               	subwf	_threshold,w,c
  5269  001930  5014               	movf	?_adc+1,w,c
  5270  001932  584B               	subwfb	_threshold+1,w,c
  5271  001934  B0D8               	btfsc	status,0,c
  5272  001936  D003               	goto	u1600
  5273  001938  6A16               	clrf	??_check_sensors& (0+255),c
  5274  00193A  2A16               	incf	??_check_sensors& (0+255),f,c
  5275  00193C  D001               	goto	u1618
  5276  00193E                     u1600:
  5277  00193E  6A16               	clrf	??_check_sensors& (0+255),c
  5278  001940                     u1618:
  5279  001940  4616               	rlncf	??_check_sensors,f,c
  5280  001942  4616               	rlncf	??_check_sensors,f,c
  5281  001944  504E               	movf	_SeeLine,w,c
  5282  001946  1816               	xorwf	??_check_sensors,w,c
  5283  001948  0BFB               	andlw	-5
  5284  00194A  1816               	xorwf	??_check_sensors,w,c
  5285  00194C  6E4E               	movwf	_SeeLine,c
  5286                           
  5287                           ;sumovore.c: 247: SeeLine.b.CntRight = ( adc(0b10011111) > threshold );
  5288  00194E  0E9F               	movlw	159
  5289  001950  EC0F  F011         	call	_adc
  5290  001954  5013               	movf	?_adc,w,c
  5291  001956  5C4A               	subwf	_threshold,w,c
  5292  001958  5014               	movf	?_adc+1,w,c
  5293  00195A  584B               	subwfb	_threshold+1,w,c
  5294  00195C  B0D8               	btfsc	status,0,c
  5295  00195E  D003               	goto	u1620
  5296  001960  6A16               	clrf	??_check_sensors& (0+255),c
  5297  001962  2A16               	incf	??_check_sensors& (0+255),f,c
  5298  001964  D001               	goto	u1638
  5299  001966                     u1620:
  5300  001966  6A16               	clrf	??_check_sensors& (0+255),c
  5301  001968                     u1638:
  5302  001968  4616               	rlncf	??_check_sensors,f,c
  5303  00196A  504E               	movf	_SeeLine,w,c
  5304  00196C  1816               	xorwf	??_check_sensors,w,c
  5305  00196E  0BFD               	andlw	-3
  5306  001970  1816               	xorwf	??_check_sensors,w,c
  5307  001972  6E4E               	movwf	_SeeLine,c
  5308                           
  5309                           ;sumovore.c: 248: SeeLine.b.Right = ( adc(0b10100111) > threshold );
  5310  001974  0EA7               	movlw	167
  5311  001976  EC0F  F011         	call	_adc
  5312  00197A  5013               	movf	?_adc,w,c
  5313  00197C  5C4A               	subwf	_threshold,w,c
  5314  00197E  5014               	movf	?_adc+1,w,c
  5315  001980  584B               	subwfb	_threshold+1,w,c
  5316  001982  B0D8               	btfsc	status,0,c
  5317  001984  D003               	goto	u1640
  5318  001986  6A16               	clrf	??_check_sensors& (0+255),c
  5319  001988  2A16               	incf	??_check_sensors& (0+255),f,c
  5320  00198A  D001               	goto	u1658
  5321  00198C                     u1640:
  5322  00198C  6A16               	clrf	??_check_sensors& (0+255),c
  5323  00198E                     u1658:
  5324  00198E  504E               	movf	_SeeLine,w,c
  5325  001990  1816               	xorwf	??_check_sensors,w,c
  5326  001992  0BFE               	andlw	-2
  5327  001994  1816               	xorwf	??_check_sensors,w,c
  5328  001996  6E4E               	movwf	_SeeLine,c
  5329  001998  0012               	return		;funcret
  5330  00199A                     __end_of_check_sensors:
  5331                           	opt stack 0
  5332                           stkptr	equ	0xFFC
  5333                           tblptru	equ	0xFF8
  5334                           tblptrh	equ	0xFF7
  5335                           tblptrl	equ	0xFF6
  5336                           tablat	equ	0xFF5
  5337                           intcon	equ	0xFF2
  5338                           postinc0	equ	0xFEE
  5339                           wreg	equ	0xFE8
  5340                           indf1	equ	0xFE7
  5341                           postinc1	equ	0xFE6
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           plusw2	equ	0xFDB
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _adc *****************
  5352 ;; Defined at:
  5353 ;;		line 230 in file "../Robot Files/sumovore.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  channel         1    wreg     unsigned char 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  channel         1   20[COMRAM] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  2   18[COMRAM] unsigned int 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;Total ram usage:        3 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    2
  5374 ;; This function calls:
  5375 ;;		_ConvertADC
  5376 ;;		_ReadADC
  5377 ;;		_SetChanADC
  5378 ;; This function is called by:
  5379 ;;		_check_sensors
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text43
  5384  00221E                     __ptext43:
  5385                           	opt stack 0
  5386  00221E                     _adc:
  5387                           	opt stack 27
  5388                           
  5389                           ;incstack = 0
  5390                           ;adc@channel stored from wreg
  5391  00221E  6E15               	movwf	adc@channel,c
  5392                           
  5393                           ;sumovore.c: 232: SetChanADC( channel );
  5394  002220  5015               	movf	adc@channel,w,c
  5395  002222  EC34  F011         	call	_SetChanADC
  5396                           
  5397                           ;sumovore.c: 233: ConvertADC();
  5398  002226  EC87  F011         	call	_ConvertADC	;wreg free
  5399                           
  5400                           ;sumovore.c: 236: return ReadADC();
  5401  00222A  EC63  F011         	call	_ReadADC	;wreg free
  5402  00222E  C00F  F013         	movff	?_ReadADC,?_adc
  5403  002232  C010  F014         	movff	?_ReadADC+1,?_adc+1
  5404  002236  D000               	goto	l312
  5405  002238                     l312:
  5406  002238  0012               	return		;funcret
  5407  00223A                     __end_of_adc:
  5408                           	opt stack 0
  5409                           stkptr	equ	0xFFC
  5410                           tblptru	equ	0xFF8
  5411                           tblptrh	equ	0xFF7
  5412                           tblptrl	equ	0xFF6
  5413                           tablat	equ	0xFF5
  5414                           intcon	equ	0xFF2
  5415                           postinc0	equ	0xFEE
  5416                           wreg	equ	0xFE8
  5417                           indf1	equ	0xFE7
  5418                           postinc1	equ	0xFE6
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           plusw2	equ	0xFDB
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           
  5428 ;; *************** function _SetChanADC *****************
  5429 ;; Defined at:
  5430 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  channel         1    wreg     unsigned char 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  channel         1   15[COMRAM] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;		None               void
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;Total ram usage:        2 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_adc
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text44
  5459  002268                     __ptext44:
  5460                           	opt stack 0
  5461  002268                     _SetChanADC:
  5462                           	opt stack 27
  5463                           
  5464                           ;incstack = 0
  5465                           ;SetChanADC@channel stored from wreg
  5466  002268  6E10               	movwf	SetChanADC@channel,c
  5467  00226A  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  5468  00226E  0EC3               	movlw	195
  5469  002270  160F               	andwf	??_SetChanADC,f,c
  5470  002272  90D8               	bcf	status,0,c
  5471  002274  3010               	rrcf	SetChanADC@channel,w,c
  5472  002276  0B3C               	andlw	60
  5473  002278  100F               	iorwf	??_SetChanADC,w,c
  5474  00227A  6EC2               	movwf	4034,c	;volatile
  5475  00227C  0012               	return		;funcret
  5476  00227E                     __end_of_SetChanADC:
  5477                           	opt stack 0
  5478                           stkptr	equ	0xFFC
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           intcon	equ	0xFF2
  5484                           postinc0	equ	0xFEE
  5485                           wreg	equ	0xFE8
  5486                           indf1	equ	0xFE7
  5487                           postinc1	equ	0xFE6
  5488                           fsr1h	equ	0xFE2
  5489                           fsr1l	equ	0xFE1
  5490                           indf2	equ	0xFDF
  5491                           postinc2	equ	0xFDE
  5492                           plusw2	equ	0xFDB
  5493                           fsr2h	equ	0xFDA
  5494                           fsr2l	equ	0xFD9
  5495                           status	equ	0xFD8
  5496                           
  5497 ;; *************** function _ReadADC *****************
  5498 ;; Defined at:
  5499 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;		None
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2   14[COMRAM] int 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;Total ram usage:        4 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_adc
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text45
  5528  0022C6                     __ptext45:
  5529                           	opt stack 0
  5530  0022C6                     _ReadADC:
  5531                           	opt stack 27
  5532                           
  5533                           ;incstack = 0
  5534  0022C6  50C4               	movf	4036,w,c	;volatile
  5535  0022C8  6E11               	movwf	??_ReadADC& (0+255),c
  5536  0022CA  50C3               	movf	4035,w,c	;volatile
  5537  0022CC  6E0F               	movwf	?_ReadADC,c
  5538  0022CE  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  5539  0022D2  D000               	goto	l458
  5540  0022D4                     l458:
  5541  0022D4  0012               	return		;funcret
  5542  0022D6                     __end_of_ReadADC:
  5543                           	opt stack 0
  5544                           stkptr	equ	0xFFC
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           intcon	equ	0xFF2
  5550                           postinc0	equ	0xFEE
  5551                           wreg	equ	0xFE8
  5552                           indf1	equ	0xFE7
  5553                           postinc1	equ	0xFE6
  5554                           fsr1h	equ	0xFE2
  5555                           fsr1l	equ	0xFE1
  5556                           indf2	equ	0xFDF
  5557                           postinc2	equ	0xFDE
  5558                           plusw2	equ	0xFDB
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function _ConvertADC *****************
  5564 ;; Defined at:
  5565 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;		None               void
  5572 ;; Registers used:
  5573 ;;		None
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_adc
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text46
  5594  00230E                     __ptext46:
  5595                           	opt stack 0
  5596  00230E                     _ConvertADC:
  5597                           	opt stack 27
  5598                           
  5599                           ;incstack = 0
  5600  00230E  82C2               	bsf	4034,1,c	;volatile
  5601  002310  0012               	return		;funcret
  5602  002312                     __end_of_ConvertADC:
  5603                           	opt stack 0
  5604                           stkptr	equ	0xFFC
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           intcon	equ	0xFF2
  5610                           postinc0	equ	0xFEE
  5611                           wreg	equ	0xFE8
  5612                           indf1	equ	0xFE7
  5613                           postinc1	equ	0xFE6
  5614                           fsr1h	equ	0xFE2
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           plusw2	equ	0xFDB
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _WriteTimer0 *****************
  5624 ;; Defined at:
  5625 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  timer0          2   14[COMRAM] unsigned int 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  timer           2   16[COMRAM] struct Timers
  5630 ;; Return value:  Size  Location     Type
  5631 ;;		None               void
  5632 ;; Registers used:
  5633 ;;		None
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        4 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;;		_GetBackonTrack
  5651 ;;		_AllSensorsTriggered
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text47
  5656  0022B4                     __ptext47:
  5657                           	opt stack 0
  5658  0022B4                     _WriteTimer0:
  5659                           	opt stack 29
  5660                           
  5661                           ;incstack = 0
  5662  0022B4  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5663  0022B8  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5664  0022BC  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5665  0022C0  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5666  0022C4  0012               	return		;funcret
  5667  0022C6                     __end_of_WriteTimer0:
  5668                           	opt stack 0
  5669                           stkptr	equ	0xFFC
  5670                           tblptru	equ	0xFF8
  5671                           tblptrh	equ	0xFF7
  5672                           tblptrl	equ	0xFF6
  5673                           tablat	equ	0xFF5
  5674                           intcon	equ	0xFF2
  5675                           postinc0	equ	0xFEE
  5676                           wreg	equ	0xFE8
  5677                           indf1	equ	0xFE7
  5678                           postinc1	equ	0xFE6
  5679                           fsr1h	equ	0xFE2
  5680                           fsr1l	equ	0xFE1
  5681                           indf2	equ	0xFDF
  5682                           postinc2	equ	0xFDE
  5683                           plusw2	equ	0xFDB
  5684                           fsr2h	equ	0xFDA
  5685                           fsr2l	equ	0xFD9
  5686                           status	equ	0xFD8
  5687                           
  5688 ;; *************** function _MotorControl *****************
  5689 ;; Defined at:
  5690 ;;		line 161 in file "../Robot Files/main.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  delta_veloci    2   42[COMRAM] int 
  5693 ;;  speed_divide    1   44[COMRAM] unsigned char 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  right_duty_c    2   50[COMRAM] int 
  5696 ;;  left_duty_cy    2   48[COMRAM] int 
  5697 ;;  right_dir_mo    1   47[COMRAM] enum E4173
  5698 ;;  left_dir_mod    1   46[COMRAM] enum E4173
  5699 ;; Return value:  Size  Location     Type
  5700 ;;		None               void
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:       10 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    2
  5715 ;; This function calls:
  5716 ;;		_SetDCPWM1
  5717 ;;		_SetDCPWM2
  5718 ;;		___awdiv
  5719 ;;		___wmul
  5720 ;; This function is called by:
  5721 ;;		_PID_LineFollowing
  5722 ;;		_GetBackonTrack
  5723 ;;		_SharpTurn
  5724 ;;		_AllSensorsTriggered
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text48
  5729  001384                     __ptext48:
  5730                           	opt stack 0
  5731  001384                     _MotorControl:
  5732                           	opt stack 27
  5733                           
  5734                           ;main.c: 163: int left_duty_cycle = 700, right_duty_cycle = 700;
  5735                           
  5736                           ;incstack = 0
  5737  001384  0E02               	movlw	2
  5738  001386  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5739  001388  0EBC               	movlw	188
  5740  00138A  6E31               	movwf	MotorControl@left_duty_cycle,c
  5741  00138C  0E02               	movlw	2
  5742  00138E  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5743  001390  0EBC               	movlw	188
  5744  001392  6E33               	movwf	MotorControl@right_duty_cycle,c
  5745                           
  5746                           ;main.c: 164: enum e_direction left_dir_modifier= forward, right_dir_modifier= forward;
  5747  001394  0E01               	movlw	1
  5748  001396  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5749  001398  0E01               	movlw	1
  5750  00139A  6E30               	movwf	MotorControl@right_dir_modifier,c
  5751                           
  5752                           ;main.c: 167: if ( delta_velocity < 0 )
  5753  00139C  AE2C               	btfss	MotorControl@delta_velocity+1,7,c
  5754  00139E  D023               	goto	l2224
  5755                           
  5756                           ;main.c: 168: {
  5757                           ;main.c: 169: left_duty_cycle += delta_velocity*15/16;
  5758  0013A0  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5759  0013A4  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5760  0013A8  0E00               	movlw	0
  5761  0013AA  6E20               	movwf	___wmul@multiplicand+1,c
  5762  0013AC  0E0F               	movlw	15
  5763  0013AE  6E1F               	movwf	___wmul@multiplicand,c
  5764  0013B0  EC4B  F010         	call	___wmul	;wreg free
  5765  0013B4  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5766  0013B8  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5767  0013BC  0E00               	movlw	0
  5768  0013BE  6E26               	movwf	___awdiv@divisor+1,c
  5769  0013C0  0E10               	movlw	16
  5770  0013C2  6E25               	movwf	___awdiv@divisor,c
  5771  0013C4  EC78  F00D         	call	___awdiv	;wreg free
  5772  0013C8  5023               	movf	?___awdiv,w,c
  5773  0013CA  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5774  0013CC  5024               	movf	?___awdiv+1,w,c
  5775  0013CE  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5776                           
  5777                           ;main.c: 170: right_duty_cycle -= delta_velocity/16;
  5778  0013D0  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5779  0013D4  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5780  0013D8  0E00               	movlw	0
  5781  0013DA  6E26               	movwf	___awdiv@divisor+1,c
  5782  0013DC  0E10               	movlw	16
  5783  0013DE  6E25               	movwf	___awdiv@divisor,c
  5784  0013E0  EC78  F00D         	call	___awdiv	;wreg free
  5785  0013E4  D022               	goto	L8
  5786  0013E6                     l2224:
  5787                           
  5788                           ;main.c: 173: else
  5789                           ;main.c: 174: {
  5790                           ;main.c: 175: left_duty_cycle += delta_velocity/16;
  5791  0013E6  C02B  F023         	movff	MotorControl@delta_velocity,___awdiv@dividend
  5792  0013EA  C02C  F024         	movff	MotorControl@delta_velocity+1,___awdiv@dividend+1
  5793  0013EE  0E00               	movlw	0
  5794  0013F0  6E26               	movwf	___awdiv@divisor+1,c
  5795  0013F2  0E10               	movlw	16
  5796  0013F4  6E25               	movwf	___awdiv@divisor,c
  5797  0013F6  EC78  F00D         	call	___awdiv	;wreg free
  5798  0013FA  5023               	movf	?___awdiv,w,c
  5799  0013FC  2631               	addwf	MotorControl@left_duty_cycle,f,c
  5800  0013FE  5024               	movf	?___awdiv+1,w,c
  5801  001400  2232               	addwfc	MotorControl@left_duty_cycle+1,f,c
  5802                           
  5803                           ;main.c: 176: right_duty_cycle -= delta_velocity*15/16;
  5804  001402  C02B  F01D         	movff	MotorControl@delta_velocity,___wmul@multiplier
  5805  001406  C02C  F01E         	movff	MotorControl@delta_velocity+1,___wmul@multiplier+1
  5806  00140A  0E00               	movlw	0
  5807  00140C  6E20               	movwf	___wmul@multiplicand+1,c
  5808  00140E  0E0F               	movlw	15
  5809  001410  6E1F               	movwf	___wmul@multiplicand,c
  5810  001412  EC4B  F010         	call	___wmul	;wreg free
  5811  001416  C01D  F023         	movff	?___wmul,___awdiv@dividend
  5812  00141A  C01E  F024         	movff	?___wmul+1,___awdiv@dividend+1
  5813  00141E  0E00               	movlw	0
  5814  001420  6E26               	movwf	___awdiv@divisor+1,c
  5815  001422  0E10               	movlw	16
  5816  001424  6E25               	movwf	___awdiv@divisor,c
  5817  001426  EC78  F00D         	call	___awdiv	;wreg free
  5818  00142A                     L8:
  5819  00142A  5023               	movf	?___awdiv,w,c
  5820  00142C  5E33               	subwf	MotorControl@right_duty_cycle,f,c
  5821  00142E  5024               	movf	?___awdiv+1,w,c
  5822  001430  5A34               	subwfb	MotorControl@right_duty_cycle+1,f,c
  5823  001432  D000               	goto	l2228
  5824  001434                     l2228:
  5825                           
  5826                           ;main.c: 177: }
  5827                           ;main.c: 183: if (speed_divider)
  5828  001434  502D               	movf	MotorControl@speed_divider,w,c
  5829  001436  B4D8               	btfsc	status,2,c
  5830  001438  D01B               	goto	l2232
  5831                           
  5832                           ;main.c: 184: {
  5833                           ;main.c: 185: left_duty_cycle /= speed_divider;
  5834  00143A  C031  F023         	movff	MotorControl@left_duty_cycle,___awdiv@dividend
  5835  00143E  C032  F024         	movff	MotorControl@left_duty_cycle+1,___awdiv@dividend+1
  5836  001442  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5837  001446  6A26               	clrf	___awdiv@divisor+1,c
  5838  001448  EC78  F00D         	call	___awdiv	;wreg free
  5839  00144C  C023  F031         	movff	?___awdiv,MotorControl@left_duty_cycle
  5840  001450  C024  F032         	movff	?___awdiv+1,MotorControl@left_duty_cycle+1
  5841                           
  5842                           ;main.c: 186: right_duty_cycle /= speed_divider;
  5843  001454  C033  F023         	movff	MotorControl@right_duty_cycle,___awdiv@dividend
  5844  001458  C034  F024         	movff	MotorControl@right_duty_cycle+1,___awdiv@dividend+1
  5845  00145C  C02D  F025         	movff	MotorControl@speed_divider,___awdiv@divisor
  5846  001460  6A26               	clrf	___awdiv@divisor+1,c
  5847  001462  EC78  F00D         	call	___awdiv	;wreg free
  5848  001466  C023  F033         	movff	?___awdiv,MotorControl@right_duty_cycle
  5849  00146A  C024  F034         	movff	?___awdiv+1,MotorControl@right_duty_cycle+1
  5850  00146E  D000               	goto	l2232
  5851  001470                     l2232:
  5852                           
  5853                           ;main.c: 187: }
  5854                           ;main.c: 190: if ( left_duty_cycle < 0 )
  5855  001470  AE32               	btfss	MotorControl@left_duty_cycle+1,7,c
  5856  001472  D010               	goto	l2238
  5857                           
  5858                           ;main.c: 191: {
  5859                           ;main.c: 192: left_dir_modifier = reverse;
  5860  001474  0E00               	movlw	0
  5861  001476  6E2F               	movwf	MotorControl@left_dir_modifier,c
  5862                           
  5863                           ;main.c: 193: left_duty_cycle *= -1;
  5864  001478  C031  F01D         	movff	MotorControl@left_duty_cycle,___wmul@multiplier
  5865  00147C  C032  F01E         	movff	MotorControl@left_duty_cycle+1,___wmul@multiplier+1
  5866  001480  0EFF               	movlw	255
  5867  001482  6E20               	movwf	___wmul@multiplicand+1,c
  5868  001484  681F               	setf	___wmul@multiplicand,c
  5869  001486  EC4B  F010         	call	___wmul	;wreg free
  5870  00148A  C01D  F031         	movff	?___wmul,MotorControl@left_duty_cycle
  5871  00148E  C01E  F032         	movff	?___wmul+1,MotorControl@left_duty_cycle+1
  5872  001492  D000               	goto	l2238
  5873  001494                     l2238:
  5874                           
  5875                           ;main.c: 194: }
  5876                           ;main.c: 195: if ( left_duty_cycle > 800 ) left_duty_cycle = 800;
  5877  001494  BE32               	btfsc	MotorControl@left_duty_cycle+1,7,c
  5878  001496  D00B               	goto	l2242
  5879  001498  0E21               	movlw	33
  5880  00149A  5C31               	subwf	MotorControl@left_duty_cycle,w,c
  5881  00149C  0E03               	movlw	3
  5882  00149E  5832               	subwfb	MotorControl@left_duty_cycle+1,w,c
  5883  0014A0  A0D8               	btfss	status,0,c
  5884  0014A2  D005               	goto	l2242
  5885  0014A4  0E03               	movlw	3
  5886  0014A6  6E32               	movwf	MotorControl@left_duty_cycle+1,c
  5887  0014A8  0E20               	movlw	32
  5888  0014AA  6E31               	movwf	MotorControl@left_duty_cycle,c
  5889  0014AC  D000               	goto	l2242
  5890  0014AE                     l2242:
  5891                           
  5892                           ;main.c: 197: SetDCPWM2((unsigned int) left_duty_cycle );
  5893  0014AE  C031  F00F         	movff	MotorControl@left_duty_cycle,SetDCPWM2@dutycycle
  5894  0014B2  C032  F010         	movff	MotorControl@left_duty_cycle+1,SetDCPWM2@dutycycle+1
  5895  0014B6  ECC8  F00F         	call	_SetDCPWM2	;wreg free
  5896                           
  5897                           ;main.c: 198: if ( left_dir_modifier == reverse ) PORTCbits.RC0 = 0b0;
  5898  0014BA  502F               	movf	MotorControl@left_dir_modifier,w,c
  5899  0014BC  A4D8               	btfss	status,2,c
  5900  0014BE  D002               	goto	l123
  5901  0014C0  9082               	bcf	3970,0,c	;volatile
  5902  0014C2  D002               	goto	l2248
  5903  0014C4                     l123:
  5904                           
  5905                           ;main.c: 199: else PORTCbits.RC0 = 0b1;
  5906  0014C4  8082               	bsf	3970,0,c	;volatile
  5907  0014C6  D000               	goto	l2248
  5908  0014C8                     l2248:
  5909                           
  5910                           ;main.c: 200: PORTEbits.RE1 = !PORTCbits.RC0;
  5911  0014C8  B082               	btfsc	3970,0,c	;volatile
  5912  0014CA  D003               	goto	u1710
  5913  0014CC  6A2E               	clrf	??_MotorControl& (0+255),c
  5914  0014CE  2A2E               	incf	??_MotorControl& (0+255),f,c
  5915  0014D0  D001               	goto	u1728
  5916  0014D2                     u1710:
  5917  0014D2  6A2E               	clrf	??_MotorControl& (0+255),c
  5918  0014D4                     u1728:
  5919  0014D4  462E               	rlncf	??_MotorControl,f,c
  5920  0014D6  5084               	movf	3972,w,c	;volatile
  5921  0014D8  182E               	xorwf	??_MotorControl,w,c
  5922  0014DA  0BFD               	andlw	-3
  5923  0014DC  182E               	xorwf	??_MotorControl,w,c
  5924  0014DE  6E84               	movwf	3972,c	;volatile
  5925                           
  5926                           ;main.c: 203: if ( right_duty_cycle < 0 )
  5927  0014E0  AE34               	btfss	MotorControl@right_duty_cycle+1,7,c
  5928  0014E2  D010               	goto	l2254
  5929                           
  5930                           ;main.c: 204: {
  5931                           ;main.c: 205: right_dir_modifier = reverse;
  5932  0014E4  0E00               	movlw	0
  5933  0014E6  6E30               	movwf	MotorControl@right_dir_modifier,c
  5934                           
  5935                           ;main.c: 206: right_duty_cycle *= -1;
  5936  0014E8  C033  F01D         	movff	MotorControl@right_duty_cycle,___wmul@multiplier
  5937  0014EC  C034  F01E         	movff	MotorControl@right_duty_cycle+1,___wmul@multiplier+1
  5938  0014F0  0EFF               	movlw	255
  5939  0014F2  6E20               	movwf	___wmul@multiplicand+1,c
  5940  0014F4  681F               	setf	___wmul@multiplicand,c
  5941  0014F6  EC4B  F010         	call	___wmul	;wreg free
  5942  0014FA  C01D  F033         	movff	?___wmul,MotorControl@right_duty_cycle
  5943  0014FE  C01E  F034         	movff	?___wmul+1,MotorControl@right_duty_cycle+1
  5944  001502  D000               	goto	l2254
  5945  001504                     l2254:
  5946                           
  5947                           ;main.c: 207: }
  5948                           ;main.c: 208: if ( right_duty_cycle > 800 ) right_duty_cycle = 800;
  5949  001504  BE34               	btfsc	MotorControl@right_duty_cycle+1,7,c
  5950  001506  D00B               	goto	l2258
  5951  001508  0E21               	movlw	33
  5952  00150A  5C33               	subwf	MotorControl@right_duty_cycle,w,c
  5953  00150C  0E03               	movlw	3
  5954  00150E  5834               	subwfb	MotorControl@right_duty_cycle+1,w,c
  5955  001510  A0D8               	btfss	status,0,c
  5956  001512  D005               	goto	l2258
  5957  001514  0E03               	movlw	3
  5958  001516  6E34               	movwf	MotorControl@right_duty_cycle+1,c
  5959  001518  0E20               	movlw	32
  5960  00151A  6E33               	movwf	MotorControl@right_duty_cycle,c
  5961  00151C  D000               	goto	l2258
  5962  00151E                     l2258:
  5963                           
  5964                           ;main.c: 210: SetDCPWM1((unsigned int) right_duty_cycle );
  5965  00151E  C033  F00F         	movff	MotorControl@right_duty_cycle,SetDCPWM1@dutycycle
  5966  001522  C034  F010         	movff	MotorControl@right_duty_cycle+1,SetDCPWM1@dutycycle+1
  5967  001526  ECE5  F00F         	call	_SetDCPWM1	;wreg free
  5968                           
  5969                           ;main.c: 211: if ( right_dir_modifier == reverse ) PORTCbits.RC5 = 0b0;
  5970  00152A  5030               	movf	MotorControl@right_dir_modifier,w,c
  5971  00152C  A4D8               	btfss	status,2,c
  5972  00152E  D002               	goto	l127
  5973  001530  9A82               	bcf	3970,5,c	;volatile
  5974  001532  D002               	goto	l2264
  5975  001534                     l127:
  5976                           
  5977                           ;main.c: 212: else PORTCbits.RC5 = 0b1;
  5978  001534  8A82               	bsf	3970,5,c	;volatile
  5979  001536  D000               	goto	l2264
  5980  001538                     l2264:
  5981                           
  5982                           ;main.c: 213: PORTEbits.RE0 = !PORTCbits.RC5;
  5983  001538  BA82               	btfsc	3970,5,c	;volatile
  5984  00153A  D003               	goto	u1760
  5985  00153C  6A2E               	clrf	??_MotorControl& (0+255),c
  5986  00153E  2A2E               	incf	??_MotorControl& (0+255),f,c
  5987  001540  D001               	goto	u1778
  5988  001542                     u1760:
  5989  001542  6A2E               	clrf	??_MotorControl& (0+255),c
  5990  001544                     u1778:
  5991  001544  5084               	movf	3972,w,c	;volatile
  5992  001546  182E               	xorwf	??_MotorControl,w,c
  5993  001548  0BFE               	andlw	-2
  5994  00154A  182E               	xorwf	??_MotorControl,w,c
  5995  00154C  6E84               	movwf	3972,c	;volatile
  5996  00154E  0012               	return		;funcret
  5997  001550                     __end_of_MotorControl:
  5998                           	opt stack 0
  5999                           stkptr	equ	0xFFC
  6000                           tblptru	equ	0xFF8
  6001                           tblptrh	equ	0xFF7
  6002                           tblptrl	equ	0xFF6
  6003                           tablat	equ	0xFF5
  6004                           intcon	equ	0xFF2
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           indf1	equ	0xFE7
  6008                           postinc1	equ	0xFE6
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           plusw2	equ	0xFDB
  6014                           fsr2h	equ	0xFDA
  6015                           fsr2l	equ	0xFD9
  6016                           status	equ	0xFD8
  6017                           
  6018 ;; *************** function ___wmul *****************
  6019 ;; Defined at:
  6020 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  multiplier      2   28[COMRAM] unsigned int 
  6023 ;;  multiplicand    2   30[COMRAM] unsigned int 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  product         2   32[COMRAM] unsigned int 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  2   28[COMRAM] unsigned int 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0, prodl, prodh
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;Total ram usage:        6 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    1
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_PID_LineFollowing
  6046 ;;		_MotorControl
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text49
  6051  002096                     __ptext49:
  6052                           	opt stack 0
  6053  002096                     ___wmul:
  6054                           	opt stack 28
  6055                           
  6056                           ;incstack = 0
  6057  002096  501D               	movf	___wmul@multiplier,w,c
  6058  002098  021F               	mulwf	___wmul@multiplicand,c
  6059  00209A  CFF3 F021          	movff	prodl,___wmul@product
  6060  00209E  CFF4 F022          	movff	prodh,___wmul@product+1
  6061  0020A2  501D               	movf	___wmul@multiplier,w,c
  6062  0020A4  0220               	mulwf	___wmul@multiplicand+1,c
  6063  0020A6  50F3               	movf	prodl,w,c
  6064  0020A8  2622               	addwf	___wmul@product+1,f,c
  6065  0020AA  501E               	movf	___wmul@multiplier+1,w,c
  6066  0020AC  021F               	mulwf	___wmul@multiplicand,c
  6067  0020AE  50F3               	movf	prodl,w,c
  6068  0020B0  2622               	addwf	___wmul@product+1,f,c
  6069  0020B2  C021  F01D         	movff	___wmul@product,?___wmul
  6070  0020B6  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6071  0020BA  D000               	goto	l618
  6072  0020BC                     l618:
  6073  0020BC  0012               	return		;funcret
  6074  0020BE                     __end_of___wmul:
  6075                           	opt stack 0
  6076                           stkptr	equ	0xFFC
  6077                           tblptru	equ	0xFF8
  6078                           tblptrh	equ	0xFF7
  6079                           tblptrl	equ	0xFF6
  6080                           tablat	equ	0xFF5
  6081                           prodh	equ	0xFF4
  6082                           prodl	equ	0xFF3
  6083                           intcon	equ	0xFF2
  6084                           postinc0	equ	0xFEE
  6085                           wreg	equ	0xFE8
  6086                           indf1	equ	0xFE7
  6087                           postinc1	equ	0xFE6
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           plusw2	equ	0xFDB
  6093                           fsr2h	equ	0xFDA
  6094                           fsr2l	equ	0xFD9
  6095                           status	equ	0xFD8
  6096                           
  6097 ;; *************** function ___awdiv *****************
  6098 ;; Defined at:
  6099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  dividend        2   34[COMRAM] int 
  6102 ;;  divisor         2   36[COMRAM] int 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  quotient        2   40[COMRAM] int 
  6105 ;;  sign            1   39[COMRAM] unsigned char 
  6106 ;;  counter         1   38[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  2   34[COMRAM] int 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        8 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_MotorControl
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text50
  6131  001AF0                     __ptext50:
  6132                           	opt stack 0
  6133  001AF0                     ___awdiv:
  6134                           	opt stack 27
  6135                           
  6136                           ;incstack = 0
  6137  001AF0  0E00               	movlw	0
  6138  001AF2  6E28               	movwf	___awdiv@sign,c
  6139  001AF4  AE26               	btfss	___awdiv@divisor+1,7,c
  6140  001AF6  D007               	goto	l2178
  6141  001AF8  6C25               	negf	___awdiv@divisor,c
  6142  001AFA  1E26               	comf	___awdiv@divisor+1,f,c
  6143  001AFC  B0D8               	btfsc	status,0,c
  6144  001AFE  2A26               	incf	___awdiv@divisor+1,f,c
  6145  001B00  0E01               	movlw	1
  6146  001B02  6E28               	movwf	___awdiv@sign,c
  6147  001B04  D000               	goto	l2178
  6148  001B06                     l2178:
  6149  001B06  AE24               	btfss	___awdiv@dividend+1,7,c
  6150  001B08  D007               	goto	l2184
  6151  001B0A  6C23               	negf	___awdiv@dividend,c
  6152  001B0C  1E24               	comf	___awdiv@dividend+1,f,c
  6153  001B0E  B0D8               	btfsc	status,0,c
  6154  001B10  2A24               	incf	___awdiv@dividend+1,f,c
  6155  001B12  0E01               	movlw	1
  6156  001B14  1A28               	xorwf	___awdiv@sign,f,c
  6157  001B16  D000               	goto	l2184
  6158  001B18                     l2184:
  6159  001B18  0E00               	movlw	0
  6160  001B1A  6E2A               	movwf	___awdiv@quotient+1,c
  6161  001B1C  0E00               	movlw	0
  6162  001B1E  6E29               	movwf	___awdiv@quotient,c
  6163  001B20  5025               	movf	___awdiv@divisor,w,c
  6164  001B22  1026               	iorwf	___awdiv@divisor+1,w,c
  6165  001B24  B4D8               	btfsc	status,2,c
  6166  001B26  D021               	goto	l2206
  6167  001B28  0E01               	movlw	1
  6168  001B2A  6E27               	movwf	___awdiv@counter,c
  6169  001B2C  D005               	goto	l2192
  6170  001B2E                     l2190:
  6171  001B2E  90D8               	bcf	status,0,c
  6172  001B30  3625               	rlcf	___awdiv@divisor,f,c
  6173  001B32  3626               	rlcf	___awdiv@divisor+1,f,c
  6174  001B34  2A27               	incf	___awdiv@counter,f,c
  6175  001B36  D000               	goto	l2192
  6176  001B38                     l2192:
  6177  001B38  BE26               	btfsc	___awdiv@divisor+1,7,c
  6178  001B3A  D002               	goto	l2194
  6179  001B3C  D7F8               	goto	l2190
  6180  001B3E  D000               	goto	l2194
  6181  001B40                     l2194:
  6182  001B40  90D8               	bcf	status,0,c
  6183  001B42  3629               	rlcf	___awdiv@quotient,f,c
  6184  001B44  362A               	rlcf	___awdiv@quotient+1,f,c
  6185  001B46  5025               	movf	___awdiv@divisor,w,c
  6186  001B48  5C23               	subwf	___awdiv@dividend,w,c
  6187  001B4A  5026               	movf	___awdiv@divisor+1,w,c
  6188  001B4C  5824               	subwfb	___awdiv@dividend+1,w,c
  6189  001B4E  A0D8               	btfss	status,0,c
  6190  001B50  D006               	goto	l2202
  6191  001B52  5025               	movf	___awdiv@divisor,w,c
  6192  001B54  5E23               	subwf	___awdiv@dividend,f,c
  6193  001B56  5026               	movf	___awdiv@divisor+1,w,c
  6194  001B58  5A24               	subwfb	___awdiv@dividend+1,f,c
  6195  001B5A  8029               	bsf	___awdiv@quotient,0,c
  6196  001B5C  D000               	goto	l2202
  6197  001B5E                     l2202:
  6198  001B5E  90D8               	bcf	status,0,c
  6199  001B60  3226               	rrcf	___awdiv@divisor+1,f,c
  6200  001B62  3225               	rrcf	___awdiv@divisor,f,c
  6201  001B64  2E27               	decfsz	___awdiv@counter,f,c
  6202  001B66  D7EC               	goto	l2194
  6203  001B68  D000               	goto	l2206
  6204  001B6A                     l2206:
  6205  001B6A  5028               	movf	___awdiv@sign,w,c
  6206  001B6C  B4D8               	btfsc	status,2,c
  6207  001B6E  D005               	goto	l2210
  6208  001B70  6C29               	negf	___awdiv@quotient,c
  6209  001B72  1E2A               	comf	___awdiv@quotient+1,f,c
  6210  001B74  B0D8               	btfsc	status,0,c
  6211  001B76  2A2A               	incf	___awdiv@quotient+1,f,c
  6212  001B78  D000               	goto	l2210
  6213  001B7A                     l2210:
  6214  001B7A  C029  F023         	movff	___awdiv@quotient,?___awdiv
  6215  001B7E  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  6216  001B82  D000               	goto	l811
  6217  001B84                     l811:
  6218  001B84  0012               	return		;funcret
  6219  001B86                     __end_of___awdiv:
  6220                           	opt stack 0
  6221                           stkptr	equ	0xFFC
  6222                           tblptru	equ	0xFF8
  6223                           tblptrh	equ	0xFF7
  6224                           tblptrl	equ	0xFF6
  6225                           tablat	equ	0xFF5
  6226                           prodh	equ	0xFF4
  6227                           prodl	equ	0xFF3
  6228                           intcon	equ	0xFF2
  6229                           postinc0	equ	0xFEE
  6230                           wreg	equ	0xFE8
  6231                           indf1	equ	0xFE7
  6232                           postinc1	equ	0xFE6
  6233                           fsr1h	equ	0xFE2
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           plusw2	equ	0xFDB
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _SetDCPWM2 *****************
  6243 ;; Defined at:
  6244 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw2setdc.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        6 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_MotorControl
  6269 ;;		_initialization
  6270 ;;		_motors_brake_all
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text51
  6275  001F90                     __ptext51:
  6276                           	opt stack 0
  6277  001F90                     _SetDCPWM2:
  6278                           	opt stack 28
  6279                           
  6280                           ;incstack = 0
  6281  001F90  C00F  F011         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  6282  001F94  C010  F012         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  6283  001F98  0E06               	movlw	6
  6284  001F9A                     u1485:
  6285  001F9A  90D8               	bcf	status,0,c
  6286  001F9C  3611               	rlcf	??_SetDCPWM2,f,c
  6287  001F9E  3612               	rlcf	??_SetDCPWM2+1,f,c
  6288  001FA0  2EE8               	decfsz	wreg,f,c
  6289  001FA2  D7FB               	goto	u1485
  6290  001FA4  C011  F013         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  6291  001FA8  C012  F014         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  6292  001FAC  C014  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  6293  001FB0  C013  F011         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  6294  001FB4  90D8               	bcf	status,0,c
  6295  001FB6  3211               	rrcf	??_SetDCPWM2,f,c
  6296  001FB8  90D8               	bcf	status,0,c
  6297  001FBA  3211               	rrcf	??_SetDCPWM2,f,c
  6298  001FBC  0E30               	movlw	48
  6299  001FBE  1611               	andwf	??_SetDCPWM2,f,c
  6300  001FC0  50BA               	movf	4026,w,c	;volatile
  6301  001FC2  0BCF               	andlw	207
  6302  001FC4  1011               	iorwf	??_SetDCPWM2,w,c
  6303  001FC6  6EBA               	movwf	4026,c	;volatile
  6304  001FC8  0012               	return		;funcret
  6305  001FCA                     __end_of_SetDCPWM2:
  6306                           	opt stack 0
  6307                           stkptr	equ	0xFFC
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           postinc0	equ	0xFEE
  6316                           wreg	equ	0xFE8
  6317                           indf1	equ	0xFE7
  6318                           postinc1	equ	0xFE6
  6319                           fsr1h	equ	0xFE2
  6320                           fsr1l	equ	0xFE1
  6321                           indf2	equ	0xFDF
  6322                           postinc2	equ	0xFDE
  6323                           plusw2	equ	0xFDB
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _SetDCPWM1 *****************
  6329 ;; Defined at:
  6330 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw1setdc.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  dutycycle       2   14[COMRAM] unsigned int 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  DCycle          2   18[COMRAM] struct PWMDC
  6335 ;; Return value:  Size  Location     Type
  6336 ;;		None               void
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;Total ram usage:        6 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    1
  6351 ;; This function calls:
  6352 ;;		Nothing
  6353 ;; This function is called by:
  6354 ;;		_MotorControl
  6355 ;;		_initialization
  6356 ;;		_motors_brake_all
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text52
  6361  001FCA                     __ptext52:
  6362                           	opt stack 0
  6363  001FCA                     _SetDCPWM1:
  6364                           	opt stack 28
  6365                           
  6366                           ;incstack = 0
  6367  001FCA  C00F  F011         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6368  001FCE  C010  F012         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6369  001FD2  0E06               	movlw	6
  6370  001FD4                     u1495:
  6371  001FD4  90D8               	bcf	status,0,c
  6372  001FD6  3611               	rlcf	??_SetDCPWM1,f,c
  6373  001FD8  3612               	rlcf	??_SetDCPWM1+1,f,c
  6374  001FDA  2EE8               	decfsz	wreg,f,c
  6375  001FDC  D7FB               	goto	u1495
  6376  001FDE  C011  F013         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6377  001FE2  C012  F014         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6378  001FE6  C014  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6379  001FEA  C013  F011         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6380  001FEE  90D8               	bcf	status,0,c
  6381  001FF0  3211               	rrcf	??_SetDCPWM1,f,c
  6382  001FF2  90D8               	bcf	status,0,c
  6383  001FF4  3211               	rrcf	??_SetDCPWM1,f,c
  6384  001FF6  0E30               	movlw	48
  6385  001FF8  1611               	andwf	??_SetDCPWM1,f,c
  6386  001FFA  50BD               	movf	4029,w,c	;volatile
  6387  001FFC  0BCF               	andlw	207
  6388  001FFE  1011               	iorwf	??_SetDCPWM1,w,c
  6389  002000  6EBD               	movwf	4029,c	;volatile
  6390  002002  0012               	return		;funcret
  6391  002004                     __end_of_SetDCPWM1:
  6392                           	opt stack 0
  6393                           stkptr	equ	0xFFC
  6394                           tblptru	equ	0xFF8
  6395                           tblptrh	equ	0xFF7
  6396                           tblptrl	equ	0xFF6
  6397                           tablat	equ	0xFF5
  6398                           prodh	equ	0xFF4
  6399                           prodl	equ	0xFF3
  6400                           intcon	equ	0xFF2
  6401                           postinc0	equ	0xFEE
  6402                           wreg	equ	0xFE8
  6403                           indf1	equ	0xFE7
  6404                           postinc1	equ	0xFE6
  6405                           fsr1h	equ	0xFE2
  6406                           fsr1l	equ	0xFE1
  6407                           indf2	equ	0xFDF
  6408                           postinc2	equ	0xFDE
  6409                           plusw2	equ	0xFDB
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8
  6413                           
  6414 ;; *************** function _high_isr *****************
  6415 ;; Defined at:
  6416 ;;		line 24 in file "../Robot Files/interrupts.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;		None               void
  6423 ;; Registers used:
  6424 ;;		wreg, status,2
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;Total ram usage:       14 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		Interrupt level 2
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	intcode
  6444  000008                     __pintcode:
  6445                           	opt stack 0
  6446  000008                     _high_isr:
  6447                           	opt stack 25
  6448                           
  6449                           ;incstack = 0
  6450  000008  CFFA F001          	movff	pclath,??_high_isr
  6451  00000C  CFFB F002          	movff	pclatu,??_high_isr+1
  6452  000010  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6453  000014  ED4A  F00E         	call	int_func,f	;refresh shadow registers
  6454                           stkptr	equ	0xFFC
  6455                           pclatu	equ	0xFFB
  6456                           pclath	equ	0xFFA
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           prodh	equ	0xFF4
  6462                           prodl	equ	0xFF3
  6463                           intcon	equ	0xFF2
  6464                           postinc0	equ	0xFEE
  6465                           fsr0l	equ	0xFE9
  6466                           wreg	equ	0xFE8
  6467                           indf1	equ	0xFE7
  6468                           postinc1	equ	0xFE6
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           plusw2	equ	0xFDB
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478                           	psect	intcode_body
  6479  001C94                     __pintcode_body:
  6480                           	opt stack 25
  6481  001C94                     int_func:
  6482                           	opt stack 25
  6483  001C94  0006               	pop		; remove dummy address from shadow register refresh
  6484  001C96  CFEA F004          	movff	fsr0h,??_high_isr+3
  6485  001C9A  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6486  001C9E  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6487  001CA2  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6488  001CA6  CFDA F008          	movff	fsr2h,??_high_isr+7
  6489  001CAA  CFF3 F009          	movff	prodl,??_high_isr+8
  6490  001CAE  CFF4 F00A          	movff	prodh,??_high_isr+9
  6491  001CB2  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6492  001CB6  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6493  001CBA  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6494  001CBE  CFF5 F00E          	movff	tablat,??_high_isr+13
  6495                           
  6496                           ;interrupts.c: 26: PIR2bits.HLVDIF = 0;
  6497  001CC2  94A1               	bcf	4001,2,c	;volatile
  6498                           
  6499                           ;interrupts.c: 27: TRISA = 0xff;
  6500  001CC4  6892               	setf	3986,c	;volatile
  6501                           
  6502                           ;interrupts.c: 28: TRISB = 0xff;
  6503  001CC6  6893               	setf	3987,c	;volatile
  6504                           
  6505                           ;interrupts.c: 29: TRISC = 0xff;
  6506  001CC8  6894               	setf	3988,c	;volatile
  6507                           
  6508                           ;interrupts.c: 30: TRISD = 0xff;
  6509  001CCA  6895               	setf	3989,c	;volatile
  6510                           
  6511                           ;interrupts.c: 31: TRISE = 0x03;
  6512  001CCC  0E03               	movlw	3
  6513  001CCE  6E96               	movwf	3990,c	;volatile
  6514                           
  6515                           ;interrupts.c: 32: lvd_flag =1;
  6516  001CD0  0E01               	movlw	1
  6517  001CD2  6E4F               	movwf	_lvd_flag,c
  6518                           
  6519                           ;interrupts.c: 36: PIE2bits.HLVDIE = 0;
  6520  001CD4  94A0               	bcf	4000,2,c	;volatile
  6521                           
  6522                           ;interrupts.c: 40: HLVDCONbits.HLVDEN = 0;
  6523  001CD6  98D2               	bcf	4050,4,c	;volatile
  6524  001CD8  C00E  FFF5         	movff	??_high_isr+13,tablat
  6525  001CDC  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6526  001CE0  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6527  001CE4  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6528  001CE8  C00A  FFF4         	movff	??_high_isr+9,prodh
  6529  001CEC  C009  FFF3         	movff	??_high_isr+8,prodl
  6530  001CF0  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6531  001CF4  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6532  001CF8  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6533  001CFC  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6534  001D00  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6535  001D04  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6536  001D08  C002  FFFB         	movff	??_high_isr+1,pclatu
  6537  001D0C  C001  FFFA         	movff	??_high_isr,pclath
  6538  001D10  0011               	retfie		f
  6539  001D12                     __end_of_high_isr:
  6540                           	opt stack 0
  6541                           stkptr	equ	0xFFC
  6542                           pclatu	equ	0xFFB
  6543                           pclath	equ	0xFFA
  6544                           tblptru	equ	0xFF8
  6545                           tblptrh	equ	0xFF7
  6546                           tblptrl	equ	0xFF6
  6547                           tablat	equ	0xFF5
  6548                           prodh	equ	0xFF4
  6549                           prodl	equ	0xFF3
  6550                           intcon	equ	0xFF2
  6551                           postinc0	equ	0xFEE
  6552                           fsr0h	equ	0xFEA
  6553                           fsr0l	equ	0xFE9
  6554                           wreg	equ	0xFE8
  6555                           indf1	equ	0xFE7
  6556                           postinc1	equ	0xFE6
  6557                           fsr1h	equ	0xFE2
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           stkptr	equ	0xFFC
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           postinc0	equ	0xFEE
  6576                           fsr0h	equ	0xFEA
  6577                           fsr0l	equ	0xFE9
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           postinc1	equ	0xFE6
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           plusw2	equ	0xFDB
  6586                           fsr2h	equ	0xFDA
  6587                           fsr2l	equ	0xFD9
  6588                           status	equ	0xFD8
  6589                           
  6590                           	psect	rparam
  6591  0000                     stkptr	equ	0xFFC
  6592                           pclatu	equ	0xFFB
  6593                           pclath	equ	0xFFA
  6594                           tblptru	equ	0xFF8
  6595                           tblptrh	equ	0xFF7
  6596                           tblptrl	equ	0xFF6
  6597                           tablat	equ	0xFF5
  6598                           prodh	equ	0xFF4
  6599                           prodl	equ	0xFF3
  6600                           intcon	equ	0xFF2
  6601                           postinc0	equ	0xFEE
  6602                           fsr0h	equ	0xFEA
  6603                           fsr0l	equ	0xFE9
  6604                           wreg	equ	0xFE8
  6605                           indf1	equ	0xFE7
  6606                           postinc1	equ	0xFE6
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           indf2	equ	0xFDF
  6610                           postinc2	equ	0xFDE
  6611                           plusw2	equ	0xFDB
  6612                           fsr2h	equ	0xFDA
  6613                           fsr2l	equ	0xFD9
  6614                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    9
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    GetBackonTrack@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 

    PID_LineFollowing@error	PTR char  size(2) Largest target is 3
		 -> main@error(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_GetBackonTrack
    _reset_codes->_PORtask
    _WDTtask->_printf
    _STKFULtask->_printf
    _RESETtask->_printf
    _PORtask->_printf
    _BORtask->_printf
    _PID_LineFollowing->_MotorControl
    ___lwmod->_ReadTimer0
    ___lwdiv->_ReadTimer0
    _LVtrap->_printf
    _GetBackonTrack->_SharpTurn
    _SharpTurn->_MotorControl
    _AllSensorsTriggered->_MotorControl
    _motors_brake_all->_SetDCPWM1
    _motors_brake_all->_SetDCPWM2
    _check_sensors->_adc
    _adc->_ReadADC
    _MotorControl->___awdiv
    ___wmul->___aldiv
    ___awdiv->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   27011
                                             61 COMRAM     3     3      0
                _AllSensorsTriggered
                  _FilterNearbyTrack
                     _GetBackonTrack
                             _LVtrap
                         _OpenTimer0
                  _PID_LineFollowing
                        _WriteTimer0
                      _check_sensors
                     _initialization
                       _lvd_flag_set
                             _printf
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _lvd_flag_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    3852
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
                          _OpenUSART
                          _SetDCPWM1
                          _SetDCPWM2
                            _openLVD
                          _openPORTA
                          _openPORTB
                    _openPORTCforPWM
                  _openPORTCforUSART
                          _openPORTD
                          _openPORTE
                        _reset_codes
                      _set_osc_32MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_32MHz                                        2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _reset_codes                                          0     0      0    2661
                            _BORtask
                            _PORtask
                          _RESETtask
                         _STKFULtask
                            _WDTtask
                              _isBOR
                              _isPOR
                            _isWDTTO
 ---------------------------------------------------------------------------------
 (3) _isWDTTO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isPOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isBOR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WDTtask                                              0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _STKFULtask                                           0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _RESETtask                                            0     0      0     524
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (3) _PORtask                                              8     8      0     565
                                             19 COMRAM     8     8      0
                        _StatusReset
                             _printf
 ---------------------------------------------------------------------------------
 (3) _BORtask                                              0     0      0     524
                        _StatusReset
                              _gtrap
                             _printf
 ---------------------------------------------------------------------------------
 (4) _StatusReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforUSART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTCforPWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTA                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _openLVD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             3     3      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PID_LineFollowing                                    7     5      2    6606
                                             52 COMRAM     7     5      2
                       _MotorControl
                         _ReadTimer0
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             18 COMRAM     5     1      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             18 COMRAM     7     3      4
                         _ReadTimer0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LVtrap                                               0     0      0     524
                              _gtrap
                          _openPORTD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     494
                                             14 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _openPORTD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _gtrap                                                4     4      0      30
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _GetBackonTrack                                       5     3      2    9851
                                             56 COMRAM     5     3      2
                       _MotorControl
                         _ReadTimer0
                          _SharpTurn
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _SharpTurn                                            4     4      0    4666
                                             52 COMRAM     4     4      0
                       _MotorControl
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0                                           4     2      2      47
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _FilterNearbyTrack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AllSensorsTriggered                                  0     0      0    4940
                       _MotorControl
                        _WriteTimer0
                      _check_sensors
                   _motors_brake_all
                           _set_leds
 ---------------------------------------------------------------------------------
 (1) _set_leds                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motors_brake_all                                     0     0      0     520
                          _SetDCPWM1
                          _SetDCPWM2
 ---------------------------------------------------------------------------------
 (1) _check_sensors                                        1     1      0      37
                                             21 COMRAM     1     1      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  3     1      2      37
                                             18 COMRAM     3     1      2
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     388
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MotorControl                                        10     7      3    3995
                                             42 COMRAM    10     7      3
                          _SetDCPWM1
                          _SetDCPWM2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1055
                                             28 COMRAM     6     2      4
                         _ReadTimer0 (ARG)
                            ___aldiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                             34 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     260
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AllSensorsTriggered
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _WriteTimer0
     _check_sensors
       _adc
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _FilterNearbyTrack
   _GetBackonTrack
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     _SharpTurn
       _MotorControl
         _SetDCPWM1
         _SetDCPWM2
         ___awdiv
           ___wmul (ARG)
             _ReadTimer0 (ARG)
             ___aldiv (ARG)
             ___lwdiv (ARG)
               _ReadTimer0 (ARG)
         ___wmul
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       _check_sensors
         _adc
           _ConvertADC
           _ReadADC
           _SetChanADC
       _motors_brake_all
         _SetDCPWM1
         _SetDCPWM2
       _set_leds
     _WriteTimer0
     _check_sensors
       _adc
         _ConvertADC
         _ReadADC
         _SetChanADC
     _motors_brake_all
       _SetDCPWM1
       _SetDCPWM2
     _set_leds
   _LVtrap
     _gtrap
     _openPORTD
     _printf
       _putch
   _OpenTimer0
   _PID_LineFollowing
     _MotorControl
       _SetDCPWM1
       _SetDCPWM2
       ___awdiv
         ___wmul (ARG)
           _ReadTimer0 (ARG)
           ___aldiv (ARG)
           ___lwdiv (ARG)
             _ReadTimer0 (ARG)
       ___wmul
         _ReadTimer0 (ARG)
         ___aldiv (ARG)
         ___lwdiv (ARG)
           _ReadTimer0 (ARG)
     _ReadTimer0
     ___aldiv
     ___lwdiv
       _ReadTimer0 (ARG)
     ___lwmod
       _ReadTimer0 (ARG)
     ___wmul
       _ReadTimer0 (ARG)
       ___aldiv (ARG)
       ___lwdiv (ARG)
         _ReadTimer0 (ARG)
   _WriteTimer0
   _check_sensors
     _adc
       _ConvertADC
       _ReadADC
       _SetChanADC
   _initialization
     _OpenADC
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
     _OpenUSART
     _SetDCPWM1
     _SetDCPWM2
     _openLVD
     _openPORTA
     _openPORTB
     _openPORTCforPWM
     _openPORTCforUSART
     _openPORTD
     _openPORTE
     _reset_codes
       _BORtask
         _StatusReset
         _gtrap
         _printf
           _putch
       _PORtask
         _StatusReset
         _printf
           _putch
       _RESETtask
         _gtrap
         _printf
           _putch
       _STKFULtask
         _gtrap
         _printf
           _putch
       _WDTtask
         _gtrap
         _printf
           _putch
       _isBOR
       _isPOR
       _isWDTTO
     _set_osc_32MHz
   _lvd_flag_set
   _printf
     _putch
   _set_leds

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      4F       1       62.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Apr 05 10:20:15 2020

                     _STKPTRbits 000FFC                                _I 0048  
                             l72 17C4                               l76 170C  
                   ___awdiv@sign 0028              ___wmul@multiplicand 001F  
                    __CFG_BORV$0 000000                              l114 132C  
                            l123 14C4                              l127 1534  
                            l151 16B4                              l312 2238  
                            l161 1AE6                              l180 1DE4  
                            l500 2032                              l332 1A30  
                            l333 19D6                              l325 1F7E  
                            l183 2198                              l521 2166  
                            l601 2108                              l329 1F8E  
                            l522 2168                              l450 1EA2  
                            l338 1A44                              l610 20E2  
                            l188 21A6                              l189 21AA  
                            l550 2218                              l359 1DF6  
                            l551 221A                              l618 20BC  
                            l458 22D4                              l811 1B84  
                            l580 1D58                              l581 1D5A  
                            l389 22E8                              l582 1D64  
                            l398 2094                              l583 1D66  
                            l576 1D3E                              l592 2266  
                            l585 1D80                              l498 2026  
                            l499 2030                              l687 18D4  
                            u300 1C84                              u220 1C20  
                            u240 1C36                              u260 1C4E  
                            u318 1C86                              u238 1C22  
                            _PR2 000FCB                              u280 1C68  
                            u258 1C38                              u278 1C50  
                            u298 1C6A             __size_of_WriteTimer0 0012  
                            _adc 221E                              wreg 000FE8  
                ReadTimer0@timer 0011                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_adc 0013  
                           l1136 1EF8                             l2210 1B7A  
                           l2202 1B5E                             l1146 1F44  
                           l1402 2104                             l2206 1B6A  
                           l1262 1E38                             l2302 1A0C  
                           l2232 1470                             l2224 13E6  
                           l2144 2046                             l2242 14AE  
                           l1258 1E20                             l2146 204E  
                           l2306 1A24                             l1450 2262  
                           l2228 1434                             l2404 1AD2  
                           l2420 1D2E                             l2190 1B2E  
                           l2254 1504                             l2238 1494  
                           l2510 1860                             l2502 1830  
                           l1446 225E                             l1390 20F8  
                           l2192 1B38                             l2184 1B18  
                           l2264 1538                             l2248 14C8  
                           l2408 1AE2                             l2520 189A  
                           l2512 1868                             l2424 1D36  
                           l2416 1D24                             l2194 1B40  
                           l2178 1B06                             l2258 151E  
                           l1714 2022                             l1394 20FC  
                           l1482 20D2                             l1490 20DA  
                           l2380 1A6C                             l2508 1852  
                           l2524 18AA                             l2540 1EC6  
                           l2436 1D50                             l2428 1D42  
                           l2630 15BC                             l2622 1582  
                           l2550 1EEC                             l2542 1ECE  
                           l2710 1136                             l2702 10F0  
                           l1398 2100                             l1486 20D6  
                           l1494 20DE                             l2392 1AA0  
                           l2640 15EE                             l2632 15C4  
                           l2624 158A                             l2528 18C2  
                           l2560 1F1A                             l2720 119C  
                           l2464 1F5E                             l1592 208E  
                           l2394 1AA6                             l2538 1EBC  
                           l2562 1F22                             l2714 1158  
                           l2706 1116                             l2474 1F88  
                           l2802 1750                             l2810 176A  
                           l2396 1AB0                             l2388 1A90  
                           l2660 1674                             l2636 15D4  
                           l2708 1126                             l2468 1F6E  
                           l1588 207A                             l2804 175E  
                           l2670 16A6                             l2646 1610  
                           l2566 1F38                             l2558 1F10  
                           l2718 117E                             l2814 17D2  
                           l2806 1764                             l2680 1DAC  
                           l2656 1654                             l2496 1816  
                           l2728 126C                             l2690 1DD6  
                           l2666 168C                             l2684 1DBC  
                           l2676 1D92                             l2780 1710  
                           l2772 16FC                             l2782 1714  
                           l2774 1700                             l2688 1DCC  
                           l2696 10BE                             l2784 1718  
                           l2776 1704                             l2768 16F2  
                           l2698 10CE                             l2794 1738  
                           l2786 171E                             l2778 1708  
                __end_of_BORtask 214C                             STR_1 100A  
                           STR_2 1073                             STR_3 106D  
                           STR_4 105D                             STR_5 1054  
                           STR_6 104A                             STR_7 1066  
                           u1600 193E                             u1620 1966  
                           u1710 14D2                             u1640 198C  
                           u1560 18EE                             u1618 1940  
                           u2507 167A                             u1580 1914  
                           u1485 1F9A                             u2517 1A52  
                           u1638 1968                             u1495 1FD4  
                           u1760 1542                             u1728 14D4  
                           u1658 198E                             u1578 18F0  
                           u1598 1916                             u2497 1624  
                           u1778 1544                  ?_GetBackonTrack 0039  
                           _TMR2 000FCC                     __CFG_WDTPS$8 000000  
               ??_initialization 001C                             _main 16B6  
          __end_of_check_sensors 199A                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             pclat 000FFA  
                  __CFG_BOREN$ON 000000                  __end_of_PORtask 1A46  
                           prodh 000FF4                             prodl 000FF3  
     MotorControl@delta_velocity 002B                             start 0018  
                __end_of_WDTtask 21E6                     ___param_bank 000010  
                __end_of_ReadADC 22D6                  __end_of_OpenADC 1EA6  
                          ??_adc 0015           PID_LineFollowing@error 0035  
                __end_of___aldiv 18D6                            ?_main 0001  
                __end_of___awdiv 1B86                            _T0CON 000FD5  
                ___awdiv@divisor 0025                            _T2CON 000FCA  
                __end_of___lwdiv 1F02                  __end_of___lwmod 1F4E  
                ___awdiv@counter 0027               __size_of_RESETtask 001C  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TXSTA 000FAC                  __end_of_isWDTTO 20E4  
        __end_of_openPORTCforPWM 22E4                            _isBOR 2252  
                          _isPOR 20E4                            _gtrap 1DE6  
                          _putch 2312                  __end_of_openLVD 2252  
                   _TURN_TIME_ms 1007                       _ConvertADC 230E  
                          tablat 000FF5       __size_of_openPORTCforUSART 0006  
                          plusw2 000FDB                            status 000FD8  
                    ?_STKFULtask 0001                   __CFG_MCLRE$OFF 000000  
                __initialization 227E                     __end_of_main 17F8  
                     _ReadTimer0 22A2                 __end_of_OpenPWM1 22A2  
               __end_of_OpenPWM2 203C                           ??_main 003E  
                  __activetblptr 000003                       _SetChanADC 2268  
                      ??_BORtask 0014        MotorControl@speed_divider 002D  
                         ?_isBOR 0001              GetBackonTrack@error 0039  
                         ?_isPOR 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_gtrap 0001                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                 ___awdiv@dividend 0023  
                         ?_putch 0001                        ??_PORtask 0014  
                      ??_WDTtask 0014                       _OpenTimer0 214C  
                     _OpenTimer2 2202                           _TMR0IF 007F92  
                         _SPBRGH 000FB0               __size_of_SetDCPWM1 003A  
             __size_of_SetDCPWM2 003A                        ??_ReadADC 0011  
                         _LVtrap 216C                __end_of_RESETtask 2202  
                      ??_OpenADC 0011                     ?_reset_codes 0001  
               __end_of_high_isr 1D12               __size_of_OpenUSART 0070  
                      ??___aldiv 0017                           ___wmul 2096  
                      ??___awdiv 0027                   __CFG_STVREN$ON 000000  
               OpenTimer0@config 000F                        ??___lwdiv 0017  
                      ??___lwmod 0017               __size_of_SharpTurn 00AA  
               OpenTimer2@config 000F                           clear_0 2284  
               ___awdiv@quotient 0029                        ??_isWDTTO 000F  
                         _printf 203C                 __end_of_set_leds 1C94  
                      ??_openLVD 000F              __size_of_STKFULtask 001E  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               ?_openPORTCforPWM 0001                ?_motors_brake_all 0001  
                         putch@c 0001               ??_motors_brake_all 0015  
                    ?_ConvertADC 0001                       __accesstop 0080  
        __end_of__initialization 228A                _FilterNearbyTrack 218C  
                     adc@channel 0015                    ___rparam_used 000001  
             ?_FilterNearbyTrack 0001            __end_of_set_osc_32MHz 2096  
                 __pcstackCOMRAM 0001                      ?_ReadTimer0 000F  
                  __end_of_isBOR 2268                    __end_of_isPOR 210A  
                  __end_of_gtrap 1E48              ??_FilterNearbyTrack 000F  
                  __end_of_putch 2314     __size_of_AllSensorsTriggered 0064  
              __end_of_SetDCPWM1 2004                __end_of_SetDCPWM2 1FCA  
                  ??_StatusReset 000F                      ?_SetChanADC 0001  
               ??_GetBackonTrack 003B                    ?_lvd_flag_set 0001  
                        ??_isBOR 000F                          ??_isPOR 000F  
              __end_of_OpenUSART 1D82                          ??_gtrap 000F  
                        ??_putch 000F        __end_of_FilterNearbyTrack 21AC  
                    ?_OpenTimer0 0001                      ?_OpenTimer2 0001  
              __end_of_SharpTurn 1AF0                        ?_OpenPWM1 0001  
                      ?_OpenPWM2 0001                          ?_LVtrap 0001  
                  ?_MotorControl 002B               __end_of_D_CONSTANT 1003  
             __size_of_openPORTA 0006               __size_of_openPORTB 0006  
             __size_of_openPORTD 0006               __size_of_openPORTE 0006  
                        ?___wmul 001D                          _CCP1CON 000FBD  
                        _CCP2CON 000FBA                 WriteTimer0@timer 0011  
                  ??_WriteTimer0 0011                _CCW_rotation_flag 004C  
            __size_of_ConvertADC 0004                          ?_printf 000F  
                        _BORtask 212C                   ??_lvd_flag_set 000F  
                      ?_high_isr 0001              __end_of_StatusReset 22F0  
            __size_of_ReadTimer0 0012                          _PORtask 199A  
             __end_of_I_CONSTANT 1005                          _WDTtask 21CA  
                        _ReadADC 22C6                       ??_OpenPWM1 000F  
                     ??_OpenPWM2 000F                     ??_STKFULtask 0014  
                        _SeeLine 004E                   ??_MotorControl 002E  
                        _OpenADC 1E48                  __size_of_LVtrap 0020  
                        __Hparam 0000              __size_of_SetChanADC 0016  
                        __Lparam 0000                        ?_set_leds 0001  
           __size_of_reset_codes 0042                          ___aldiv 17F8  
                        ___awdiv 1AF0                  __size_of___wmul 0028  
                        ___lwdiv 1EA6                          ___lwmod 1F02  
                   __psmallconst 1000                          __pcinit 227E  
                        _isWDTTO 20BE                          __ramtop 1000  
            __size_of_OpenTimer0 0020              __size_of_OpenTimer2 001C  
                        __ptext0 16B6                          __ptext1 22E4  
                        __ptext2 1B86                          __ptext3 206A  
                        __ptext4 1F4E                          __ptext5 20BE  
                        __ptext6 20E4                          __ptext7 2252  
                        __ptext8 21CA                          __ptext9 21AC  
                __size_of_printf 002E                        _T0CONbits 000FD5  
                   __size_of_adc 001C                        _T2CONbits 000FCA  
         __size_of_check_sensors 00C4                          _openLVD 223A  
               ___aldiv@dividend 000F              __end_of_WriteTimer0 22C6  
             __end_of_STKFULtask 21CA               __end_of_P_CONSTANT 1007  
              __end_of_openPORTA 2308                __end_of_openPORTB 2302  
              __end_of_openPORTD 230E                __end_of_openPORTE 22F6  
                 OpenADC@config2 000F                       ??_high_isr 0001  
                 __pintcode_body 1C94             end_of_initialization 228A  
     __size_of_FilterNearbyTrack 0020                          int_func 1C94  
                     ??_set_leds 000F                        _RCSTAbits 000FAB  
                        printf@c 0013                          printf@f 000F  
               ___aldiv@quotient 0019                        _RESETtask 21E6  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE          __size_of_initialization 0090  
                      _PORTCbits 000F82                        _PORTDbits 000F83  
                      _PORTEbits 000F84                   set_osc_32MHz@i 000F  
                    _StatusReset 22EA                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     ??_ConvertADC 000F  
    MotorControl@left_duty_cycle 0031                _PID_LineFollowing 107A  
  MotorControl@left_dir_modifier 002F              _AllSensorsTriggered 1D82  
             ?_PID_LineFollowing 0035                        _TXSTAbits 000FAC  
                  _check_sensors 18D6        __size_of_motors_brake_all 0022  
                 __end_of_LVtrap 218C             __end_of_lvd_flag_set 22EA  
 MotorControl@right_dir_modifier 0030              ??_PID_LineFollowing 0037  
                   ??_ReadTimer0 0011                       ?_RESETtask 0001  
                 __end_of___wmul 20BE                      _WriteTimer0 22B4  
           ?_AllSensorsTriggered 0001               __end_of_ConvertADC 2312  
                   ??_SetChanADC 000F                   __end_of_printf 206A  
            start_initialization 227E             __end_of_MotorControl 1550  
                      _SetDCPWM1 1FCA                        _SetDCPWM2 1F90  
                SetDCPWM1@DCycle 0013                      __end_of_adc 223A  
                SetDCPWM2@DCycle 0013        __end_of_PID_LineFollowing 1384  
                   ??_OpenTimer0 000F                     ??_OpenTimer2 000F  
             __end_of_ReadTimer0 22B4                        _OpenUSART 1D12  
       __size_of_openPORTCforPWM 000E                   ?_check_sensors 0001  
               __CFG_OSC$INTIO67 000000                         ??_LVtrap 0014  
                      _SharpTurn 1A46               __end_of_SetChanADC 227E  
              __size_of_OpenPWM1 0012                __size_of_OpenPWM2 0038  
                       ??___wmul 0021       __end_of_TURN_SPEED_DIVIDER 100A  
          ??_AllSensorsTriggered 0035                         ??_printf 0011  
                     gtrap@count 000F               __end_of_OpenTimer0 216C  
             __end_of_OpenTimer2 221E               SharpTurn@direction 0036  
                    __pbssCOMRAM 0041                         ?_BORtask 0001  
                     ?_SetDCPWM1 000F                       ?_SetDCPWM2 000F  
                  PORtask@count1 0014                    PORtask@count2 0018  
         __size_of_set_osc_32MHz 002C                         ?_PORtask 0001  
                       ?_WDTtask 0001                       ?_OpenUSART 000F  
              __size_of_high_isr 1D0A                         ?_ReadADC 000F  
                     ?_SharpTurn 0001                OpenADC@portconfig 0010  
                       ?_OpenADC 000F                 ___lwdiv@dividend 0013  
                      __pintcode 0008                      ??_RESETtask 0014  
                       ?___aldiv 000F                         ?___awdiv 0023  
                 _initialization 1B86                __size_of_set_leds 007E  
                       ?___lwdiv 0013                         ?___lwmod 0013  
                       ?_isWDTTO 0001                      __smallconst 1000  
              WriteTimer0@timer0 000F               PID_LineFollowing@D 0044  
                       ?_openLVD 0001          SharpTurn@delta_velocity 0037  
     __size_of_PID_LineFollowing 030A                   __size_of_isBOR 0016  
               ___lwdiv@quotient 0017                   __size_of_isPOR 0026  
                 __size_of_gtrap 0062                   __size_of_putch 0002  
                ??_check_sensors 0016                  ___aldiv@divisor 0013  
                      _openPORTA 2302                        _openPORTB 22FC  
                      _openPORTD 2308                        _openPORTE 22F0  
                ___aldiv@counter 0017                   ___wmul@product 0021  
                  OpenADC@config 0013            __size_of_lvd_flag_set 0006  
        __size_of_GetBackonTrack 0166                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                  ??_reset_codes 001C                 _motors_brake_all 210A  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
         __end_of_initialization 1C16                         _RCONbits 000FD0  
              ??_openPORTCforPWM 000F                    _set_osc_32MHz 206A  
                      main@F4195 0041                      _HLVDCONbits 000FD2  
                      _threshold 004A            __size_of_MotorControl 01CC  
                     _ADCON0bits 000FC2                ___wmul@multiplier 001D  
                   ?_StatusReset 0001                  GetBackonTrack@i 003C  
                      main@error 003E     MotorControl@right_duty_cycle 0033  
                    ??_SetDCPWM1 0011                      ??_SetDCPWM2 0011  
               __size_of_BORtask 0020                     _lvd_flag_set 22E4  
               __size_of_PORtask 00AC                      ??_OpenUSART 0011  
             SetDCPWM1@dutycycle 000F                       ?_openPORTA 0001  
                     ?_openPORTB 0001                       ?_openPORTD 0001  
                     ?_openPORTE 0001                 __size_of_WDTtask 001C  
                OpenUSART@config 0011                         _OpenPWM1 2290  
                       _OpenPWM2 2004  PID_LineFollowing@delta_velocity 0046  
                    ??_SharpTurn 0035                 __size_of_ReadADC 0010  
                       __Hrparam 0000                 __size_of_OpenADC 005E  
                   _MotorControl 1384                  ?_initialization 0001  
                       __Lrparam 0000               SetDCPWM2@dutycycle 000F  
                 ?_set_osc_32MHz 0001                 __size_of___aldiv 00DE  
            __end_of_reset_codes 1F90                 __size_of___awdiv 0096  
               __size_of___lwdiv 005C                 __size_of___lwmod 004C  
                   ?_WriteTimer0 000F                   OpenPWM2@ccp2mx 0010  
               __size_of_isWDTTO 0026                   OpenPWM1@period 000F  
                 OpenPWM2@period 000F                  ___lwdiv@divisor 0015  
               __size_of_openLVD 0018                  ___lwdiv@counter 0019  
                       __ptext10 21E6                         __ptext11 199A  
                       __ptext20 1D12                         __ptext12 212C  
                       __ptext21 2202                         __ptext13 22EA  
                       __ptext30 216C                         __ptext22 2004  
                       __ptext14 22F0                         __ptext31 203C  
                       __ptext23 2290                         __ptext15 22F6  
                       __ptext40 1C16                         __ptext32 2312  
                       __ptext24 1E48                         __ptext16 22D6  
                       __ptext41 210A                         __ptext33 2308  
                       __ptext25 107A                         __ptext17 22FC  
                       __ptext50 1AF0                         __ptext42 18D6  
                       __ptext34 1DE6                         __ptext26 1F02  
                       __ptext18 2302                         __ptext51 1F90  
                       __ptext43 221E                         __ptext35 1550  
                       __ptext27 1EA6                         __ptext19 223A  
                       __ptext52 1FCA                         __ptext44 2268  
                       __ptext36 1A46                         __ptext28 17F8  
                       __ptext45 22C6                         __ptext37 22A2  
                       __ptext29 214C                         __ptext46 230E  
                       __ptext38 218C                         __ptext47 22B4  
                       __ptext39 1D82                         __ptext48 1384  
                       __ptext49 2096                         _high_isr 0008  
               _CW_rotation_flag 004D                    __size_of_main 0142  
                       _lvd_flag 004F                         _set_leds 1C16  
           __end_of_TURN_TIME_ms 1009                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                       _D_CONSTANT 1001  
                 OpenUSART@spbrg 000F               _TURN_SPEED_DIVIDER 1009  
                       intlevel2 0000                      ??_openPORTA 000F  
                    ??_openPORTB 000F                      ??_openPORTD 000F  
                    ??_openPORTE 000F                 ___lwmod@dividend 0013  
                 _GetBackonTrack 1550                _openPORTCforUSART 22F6  
              SetChanADC@channel 0010                  ??_set_osc_32MHz 000F  
                    _reset_codes 1F4E                       _OSCCONbits 000FD3  
             ?_openPORTCforUSART 0001      __end_of_AllSensorsTriggered 1DE6  
                     _I_CONSTANT 1003                         printf@ap 0011  
            ??_openPORTCforUSART 000F                  ___lwmod@divisor 0015  
                ___lwmod@counter 0017         __end_of_motors_brake_all 212C  
                   ___aldiv@sign 0018             __size_of_StatusReset 0006  
         __end_of_GetBackonTrack 16B6                  _openPORTCforPWM 22D6  
      __end_of_openPORTCforUSART 22FC                       _STKFULtask 21AC  
                     _P_CONSTANT 1005  
